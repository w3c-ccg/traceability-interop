{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "beb2ae17-d6f3-42ac-84a6-8214ddf33e27",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3de762cb-7151-4a10-8965-e54667f30d07",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c7a5adc7-b715-41c2-a429-9b384a9cb3c3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fdbac987-0b28-453e-9216-828aeee64690"
                }
              }
            ]
          },
          {
            "id": "0d9aa8f8-43bb-4de3-9098-8d63768a431b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "60b29614-8d66-4fb7-9299-6bea7dfb9bc1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d10a8c79-5541-4d4f-86c2-372aa43b2781"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ab7a333d-9047-4bbf-80d1-63dfa0e87071",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e17272d4-2b52-4a0a-a007-e06c7f9024a3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ac22a683-c70c-48db-9a04-5a0dae7cb513",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0fa618f-cd55-4cc6-8cae-2ed4cd402c3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cf76917d-3e77-4179-a755-90a7281bbe2f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b236b7de-8983-4834-8710-ea710cebd33f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ec9401f0-ff7d-40d5-a251-84d8088c99d7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a7c40596-7d2f-450a-9dd7-54c01a44b78a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "db51fbee-ae04-468f-8905-994083d19e86"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ea7ae806-b698-4cfe-91b2-57fab8b5c004",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e3b1342b-3ff4-4ec2-ac90-883de3070c57"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0344947f-4502-4a40-a188-94fdf1677f8f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6bdfc895-5b88-4b3d-ac37-98d9e13abfdb"
            }
          }
        ]
      },
      {
        "id": "ddb35df3-4d30-4c8b-a807-4a0a8db7385b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "458da657-886d-4651-b026-8378bc372271",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a6ba0502-c7c7-4720-97ee-1dc547f44ef6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9118f71b-46cc-4d51-99e3-3416eac92e92",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62cd3ef-4e98-4d6a-b260-f0b0436df066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2f85c8a-e2fd-40f8-83d6-b2af212a33c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c1b386-286b-4c1d-b18a-d0db85ac3b6b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90892d3-ad55-4a85-8802-aa7415c3f96c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d9bf2a1a-23bb-4d03-9939-d39bfdb6a499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d973efd9-0851-42d6-a147-2f7459f8605d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5c75ee-013f-4d64-a5fa-d146b865391e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f1e2244f-e4c5-4885-bd3c-33f788de1088"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "388c1272-a23f-4615-b651-a25de1a2714c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "40c00660-d916-4395-b86f-521ac1560f65",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fbfbb1c-e64b-4c3d-8ad0-624ee96f9f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "37960a1c-909c-4eb4-abf3-b81aac727c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "097deaff-1256-4948-8210-9b395ab012af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c1e90b4-441d-40e8-bf9f-9f2ee063c654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9463f7a5-7088-42aa-bfca-90e49ace8cfa",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba22122e-374d-4df6-97a2-94de3c5f023a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9429eb28-a9bb-44f1-b6a2-1066a355e60c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0171a8-08fa-416b-94ca-24658a0b79b2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "46037aeb-e60e-45f3-8fe0-312b3380cbe7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b4f8edbf-80b5-43af-b50b-952b8c283d8b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "edd5d8b0-d4b2-40ac-bac3-77093d7316e6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1dddcea2-0eea-4589-b52d-2f05e90f9e97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d2096932-7f05-4211-b00b-540259d3f712"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c0847de-1532-4b28-a615-cd2c91211247",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "03af4300-5df8-470b-b4ad-fac1b5e4e58c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "031c2a1d-e5b9-43b6-9e67-f64a99f3c42a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd6500b2-879e-4946-a865-c816a7e21ee8"
            }
          }
        ]
      },
      {
        "id": "0e159a03-4a30-4bc4-aff1-c4656f0ed42a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c732485f-e52c-4819-8dd7-3a04416d299b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aa798419-3d2a-4a0d-830a-d7848b2158e3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4cd61d27-82ad-4a1b-9423-4806d0ca5a58",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68c4739-3550-4bf6-82f7-6c1b59c77cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b5eb08-db76-4df5-ac12-5b6f716a3681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7981434-5c80-46ea-b541-8e776f609e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "188204e2-1d77-4707-a8a5-53a34b11b810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125f0f0f-defb-46be-8258-6b36d8edf42b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8662f1d2-e3bf-4a8c-a728-9e83eec3c346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c0586ae-4d3a-471a-99e8-bd28474d8471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b2158e-fe8f-48d9-bd24-d28a2511fdb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fae8e90a-f105-48c0-8867-86af56404775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea7d86c-fa7d-401d-93cf-0e029f73eb0d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e06eb7-a04e-4188-8719-6f7359d33619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fde2255a-580d-4dff-95ae-92b1ca357a81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2cb2e5a-2da0-4508-b58b-5b11129c565c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0571c59f-7e63-45e4-8402-b97a9c060711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618da13a-3500-4b03-ae20-559940c0f28f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86c29ff-d415-40e9-98b6-a78c65b1992b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d390e1be-9d30-4350-b9a9-52402a4e75d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fede48a-0df6-46f6-862c-0a749319d3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7149b337-8a06-4ed9-90b7-95f8ab2f5a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c46534bc-587a-4f4a-a343-c4a8c1ade4bb",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6275d2-b273-476f-aebb-2b1bbefa851c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf58e121-4afb-47bd-8405-fe4b0719e3d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f59c23-6991-4023-a5b9-9740938abbc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68ed758a-8d95-406b-b02d-649a9b00be44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad717a4-3313-4f34-adbe-999be72f114e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05bb6ef5-04db-43ee-9d01-c507368f35e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e1f6168-a8e7-496c-aec5-fd8cd7a5d90d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8eb5a3-5353-41a2-a4db-283348f4e1e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b7bb7c7-7a6f-4d6b-8727-0ab353d311e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86082d9-ba60-4e29-9644-a0f2a82c013e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ad9480-7678-4f4e-a7b8-e3deb0f81cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "836157f6-98a7-47ee-b2d9-60fcf1c2cbde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd6a094-80aa-4655-acb1-ac002ca1666a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aaf32025-f0b3-42eb-9e85-56b8a6bf6d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d1028cf-7c05-464a-b65a-a65c4b0a4bf6",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27654552-e8c3-4773-848e-5e87fbdb0b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b521fb72-2804-4f4c-bdea-9aea0285e99f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ef0efc-670a-457f-bb13-e5704026c4d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9902507c-10ed-4e79-8bf8-0b04090ed50a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdaf6d3b-dcb0-43e0-ab8a-9f688110327a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee45bdd-c96c-4df9-bb0f-18ed51172c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87797034-ba52-4552-b58f-715aa29dab82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a741d4b2-0d82-4e84-b290-532c1693c4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da4a4d68-1ca9-43ad-976f-176802384d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e570b57-9971-4915-9c40-c0743f7c9e70",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "565cc8a7-f988-4d36-9061-c5a88c756ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19ce5054-25c6-4da4-8a2e-3523b86584a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98ee330-e59d-4abd-82c6-8ab23b5457ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bdb723d9-8fbb-42d0-a45d-048daa78a11b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb1259b-f6a7-47e9-aae8-58919e9883e1",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5807d1-e2d1-4c5d-9299-66a18255a5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4adfd383-2c79-47d5-acb9-6820f4f6942b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025d9259-483f-471d-9520-18392d6ba19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fa50924-f7d8-40c2-a839-2a3765c09e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e92858-7020-4495-afb4-aa422ecf6795",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d8a2c8-8b8f-43e0-8ba6-29d6e2097ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8162ac1-bbcc-41c7-bc85-4240fd16fdaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c9ed9d-bba5-485f-a953-57a95fc8e2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34903b70-f829-401e-b6f2-3dde60348b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85bf802-131b-4d60-9ba6-33bf9116d899",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "263b286e-f7ea-46f5-bc00-4ddfa86d08f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab17c7b9-6575-41b1-9803-ad12eed82c8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad5836d-7460-41bc-9b78-61f1b45446a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06961f61-f902-4bd8-9819-fe77860d220a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c109b432-d022-4401-867d-fe0cd254da3a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2bc230c-880a-4002-9a08-6b7dbf30c249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7028849b-9bc6-4ec4-83b0-8b776347a3c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7812284d-e38c-405b-932d-4f632fb35352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94d73899-aa04-4543-a5d1-ac7693ccb66b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde5cae6-796e-427c-a090-0f14d3850ea1",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7cd0e59-74ab-435b-abb5-8fc5aa352e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6af65f7-c525-420d-886d-00080994a448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d08976-e0e0-493c-ad29-1a534ba41c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af435b63-bcbc-41f1-b656-a2f45f0f596f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72719a86-642c-4387-8662-c70a80be7da8",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48143d3e-836c-48b7-b3e0-0b7234e11347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57f3ae02-084c-41f6-b7a0-db2534f57929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0392bc-af3b-4aab-9110-29af457d15f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3d60496-f10f-4b95-8409-3b0c171a6588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b201b52d-81d1-4262-bf3e-c378e27f9a00",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3259cb-8e32-4c0f-bca4-8bbe2e5b7b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aee0c32-26ac-41e7-9982-e1a720cf353c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c93e008-dcb8-45f6-955a-224032b76769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02c4404d-e7eb-4431-a8f8-02a8f1e84c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d195471e-6cb3-414d-b066-19d8f3287dfb",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1f414a-03c3-43e3-a4d7-2b3a908a2631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b781fb43-9dcd-4fba-ac82-f33dee14008b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc04dda-9f4d-42b3-a819-953c9f06a3ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "97981f5f-f7d2-4619-adcd-0860c36b5f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4ad186-ac81-45bb-8f16-e407dd29462e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e02aef5-6338-4029-9432-346788f4a85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98a4f112-4be2-43b4-9427-641cf0970211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa81667-cd1d-4b8b-9714-582bff8c2f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e713bc25-c17e-473a-ac3c-c9c2da1767c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71fbcc10-9629-4ee5-a8a0-01323d231007",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c438c887-900b-4c9b-9f26-d450f6086150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f634d81-a7a6-4ab5-99ea-c0a4f20a2c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0758c74c-1307-4165-92de-359777abea03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e2adcb-3e2d-4f20-8b82-4a3239f3a9f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa801a7b-1dca-4cd3-be0a-f1ca3b6aa0bc",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8add0e7e-2a87-4a0b-9998-2ab5bc5ee36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f18c4b7a-71f1-4026-a9a3-bd00081d51d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322038ab-ca8d-4224-85ce-089e363adb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd674c3f-02f3-409c-97db-e26bcaeb0b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13558ebb-53d1-4e85-a073-92946e3f403b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac23998-04f6-44bd-917a-f470c08207e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bbd7270-ec57-485c-8673-098634e08610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25c0aaa-0400-4ebd-8f87-f87bd9aefa79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce4fa92f-fc0c-42e6-aade-aa0a833d578d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877f5a94-0639-4ab6-b94b-5425dba75e66",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a686e7a-a2e5-4bf9-8b03-a78ad6b58c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aa47dac-8ce8-4ab5-950c-e3dad164a8eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc904ecf-27de-49a8-a8fb-8c0c41e3ad36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "92941261-3205-4e55-900b-c1dfdd0969da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80535d9b-83da-4f9b-91b3-b2564b111457",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7582b3e-47fa-452d-8d66-92084e852d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1482770-d4af-4ab9-8253-22e1d544a327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8895aa8-7bdc-4e45-8302-1883e897b5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9625a1df-68b0-437f-9cdf-58313bb15ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72528159-a55c-4f5f-9731-bc936c4f3fec",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0ba9ad-38ac-41d2-99a8-392a781b5947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64d1ccad-574b-4444-9dc2-6b79c9c94ea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc663e8-b123-4650-90a9-1b69c7c3232e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a37a5a23-73a7-4663-b08f-cfaa26c4de4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d06eabc-0931-4233-bfb0-95f8fdec28dd",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54b0a27-001a-4d96-bedb-b4ba6d1c49f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27ae8291-61a5-4551-9ccb-8e20647f2889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7f54a3-7249-430e-be9a-bc5469d1fae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f6e2944-9d10-4e94-aa71-1175dc506588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ad993c-7cda-403d-987b-6852423f3268",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e17db1a9-9cc1-4084-9763-137f6a93669d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55e1e863-cde8-4a24-9efa-19908d42d3af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beacbbde-be4e-49f5-86d0-b61c09394f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "58761072-727c-4e23-b1b5-5ae092a7d09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ddcbd77-5547-4ede-95d4-3e456750f413",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f039fa-5366-4ce6-ab56-f55dff9aced8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a9db1f4-5362-4b32-a626-4d8781a0ea7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1612efc9-e148-4223-9819-8b24bd4e9b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ffacb76-3705-40e8-93f9-2693c6d31519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85db560d-9635-4f6c-b591-9cf78f1c7e8d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f56a56d-8ded-4ff9-bbea-d95022afb5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42be8eb2-b599-4ad7-abfe-86bb4f3012ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d203f7b-8214-448e-a431-83307d016eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d09ebafc-6921-4d46-a43e-57fd89cee0b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88189f08-7e4e-4563-9348-576dcd19c2dd",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69d7e3a-506f-46f2-a0ee-d7fec8c3dfff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5001938-2fc5-4e4d-b053-0ae7b2a4fe4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715dc9bf-a240-4a0f-af93-84bce7ee1169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b18b80a-c770-47c4-8761-e44ace4f4f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6485f74-0645-4ae5-9448-9a9253ae4407",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f32c2b-8cd3-4c12-b270-08753388de55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71a0e81d-4fad-4c38-b7e2-363d4b84a284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b12664b-d60c-48b4-bd82-9b883fb94441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9b9e233-fa06-453f-8e50-11ad02804395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e4d8b3-788a-4ffd-b7a8-07df0ba0d8c2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b31c772-9956-481b-b6a6-46e8a219df3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66df34e1-f13a-40c7-8414-3fb7bc47bacf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e38acf2-c7d4-4f9e-80e2-aeb514c5afe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "162ad31d-c7d1-4ced-a80b-058f47e58741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e51666e-e3eb-418c-aab1-68a4b917792e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af64b41c-9650-4e87-8675-28662fc8f0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c878d71b-f152-473f-b9b2-bdf9e61c573f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01104af6-bfaa-45c8-814c-12e3854d4ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "96ac6e74-db69-4992-9a00-5a827a4d017c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e56e9d-c06c-4ef1-ad5f-ee0ec46a09f7",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d431c8ef-4038-479d-b8d7-8c53f80e7ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81dbe993-8add-4f0b-9260-62d320459100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc2de70-09a9-45fe-a474-f5fa0430bc2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0b8b9c3-62f3-4b18-a8f7-6843ed8dbe14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df5aeb4-8845-4254-a091-75a3725c0278",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ed0876-3712-4c01-9ace-ff7b87609adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a798b442-06d4-48dc-b85a-6885297ffd87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8518d69-afd3-4a56-a7e9-29126215d5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0a666b88-ab3c-46c2-9daf-e6548f6c2038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85349899-eee3-4fb7-ac97-b692b5a04103",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc60a65-5bd4-47a1-971d-34b3eb3bf53d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d51cd13-bf19-4ef1-8ed7-70edd95cd385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa625a0-8c34-43f4-ac88-aeb69196c769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f26d7a10-2c8e-45a2-9fab-08d1cf3ead1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6e7fa7-f45f-468c-8abe-530900ea69a4",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12c9764-677d-4e4e-a0ae-0aa7e744512f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51583f89-ffdb-431e-8e32-20cee94f5e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8fe7975-5534-458f-a448-8b55621bee8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b87ae6fb-fca7-4658-91b7-e62dfd39f5a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e781b48-7b63-4e71-9e5a-ad851aa28e6d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f4d47e-f3d1-4147-bc90-ec9b4405da73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e20fef1f-bc6c-4476-a67b-7c88683b63b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b261ad-98c6-4c91-b23f-9566a9606d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "94fdd968-aa14-4fc4-bd52-545e14fd76bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3fcc58-2304-401d-8c21-b69ed979570b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1fe885-0cf9-406d-800a-be93a8fa30eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7393aa9-befd-4abf-ba03-a948a4b8163a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447f2b81-b32f-4b21-b2c3-5533904ed8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd40bfa0-6bb4-4f43-a692-eeeabe3b5239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66beacd-3360-4946-9bed-e031518d1672",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0ca102-db98-4c0b-8a88-f475db84fb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7639046e-1ee7-4940-9821-00f4cf79d811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83206412-615a-41d3-a561-4f04bbfa636a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2fd4c805-ad83-418a-99bf-0733d0def62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e9c6445-8b36-4322-91e0-41bb301c5d04",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d727d1ee-b770-4ce9-b4a4-8df40ac12f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e4ad8ed-c449-47e9-815c-d67e2fce787f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3170304e-a97b-4183-8280-84aa438892a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1071f360-de55-49cc-84ab-1d0f29a6c90d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a6b3ad-e224-40ba-b74f-7ebe60f5c1e6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01235118-ff6a-42fc-8182-d740be5cbf68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdff9462-a845-4291-b523-f09481858450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71c94fa-0984-4846-b48c-44acfa9c6bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "08567af9-c67b-44c5-9bf7-2133b191cf77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdeafba0-e577-47c1-b1dc-e00a8567ee7d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e28d7b-1686-42d7-8cb3-99235bbdeae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8ba62ef-792a-482b-9bdd-a9dd4d58b53f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375e4917-55ff-4d75-a8df-45f75cf96c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "993b8da3-2fe3-451a-be39-9110c98f33c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e319b3d-6177-4637-a988-eb37a3e83342",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f1aa7f-62ad-4dfa-a6b2-f6a2879249d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b57c448-7733-4bb9-87f3-d73401fe1a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397bf510-e7bf-445f-8673-9025efc104df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "79d3f0bd-ad44-4e7b-a55e-fc600b5bb107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36a2999-5555-4bff-8fb3-aeb44ee8f8f4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d64ba3e-3783-4ef0-ba45-ee61b45fccd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7a324bb-62e7-484b-9add-910ea78116f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8476f9-670b-4bcd-815c-29dc079c86cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2363e035-c8c7-46fe-9806-a1118c2a9c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcceb494-10b2-4443-92e2-160e6f30c0bb",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c2781c-8621-4099-9f95-7ad9cb172554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72c6c0de-6701-4b4b-b6d7-5a68e72a62d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8ae938-1284-4f23-b0b5-2cab57d4a76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "203655af-3814-4436-8402-e6e1f97fefe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c247c941-7f47-400c-a890-ccd87c34d0c1",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a95824-6997-4db7-8764-b53d1d76c3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ebad01a-4c33-4e61-88ca-04db0d10bd31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba79a793-90e2-46e0-bffe-fa8ff23645c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8be953dd-c4fb-42f9-b5db-d3c6e404a693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e64de0-c4f6-4eed-ae9f-2c4e16789477",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d487f6-9560-4618-b9b3-9905e597572a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c96fd084-8b72-434f-a72e-493cf966164b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd56902-6b23-4c96-a4b2-7226dc9540dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53c1ea11-4d52-4c1c-86ff-c017644402be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f53dea3-57ca-4537-b42a-b6a60902fb2f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e6e79c-1145-4a2e-acc3-2f1895d11d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "318d8fc0-0cb7-4c98-b2de-01aef6feb5f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03044536-ecce-44a2-9735-cca819802644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "884a6039-f9e3-4f0d-b4e0-bc52257cc977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb31183e-01c1-4317-ac96-e678f5778b95",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7502f033-77d2-4b87-8b74-abd718245687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f257f0c1-6964-48c9-9a1e-13e5ff9e8707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf339c8e-2871-428d-a505-ef1683c6f5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7c2e958a-7817-4cb0-8a0c-adfadb574637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd248a5d-172b-4ce4-88cb-bdcb790347e9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62f254a-8eaf-4332-94f4-c384eb8f18a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "970f6101-dc4f-46b7-81c6-c7e84012924d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960624de-a70d-409d-b2b4-8ede47a06260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b27062ff-5270-4219-a9c9-e87ca3e6bd08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810421c1-8833-4c23-8377-0cc964deb72c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8901a86-483f-484b-96d5-d6560e513da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "608328ff-efef-4129-9fa2-497d772205bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94fc9d69-1ef5-4c96-81cf-061552c88ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d375957f-8290-41ef-a5a8-811b3c75eef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82fcd3b3-0acf-4866-a710-45a7e42ab335",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66830759-1791-4689-a7ba-47c58c23621d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c380dc96-bb0b-4cf5-a0e0-e0d278cf61a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8bc42d4-1c39-443c-a702-2f6f5feb7314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ecea549-ab74-415f-96d8-d1ab3e40554f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787316a8-6807-42fa-9cb4-73e78c9c7689",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "529fa35f-3907-4f00-a218-c1f5f0d01622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "729034ae-ccca-4948-9aa1-fac3ea6e7ba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4fa1cc-102d-4e63-bbc0-7d62546b52bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f314a9f-2c39-4ccb-bfb2-cca2675ac2a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49132c84-163d-4429-8958-8097ae0e59ae",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71bb9e7e-cae1-46ae-8cc1-7dd81b61982e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7ca09fd-6f36-42aa-bc96-0419e6ff290d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6d5efd-3332-490e-a2c8-cebaf6805b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a87150b0-1be0-4f82-aed9-a19bc9a95294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66bd0f96-fac9-42b9-bb8d-8be8185c7e32",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c8f892-affb-4edf-aec5-10266a0a64a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "505588dd-01e5-4569-8a9b-c75ba3e27df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae570e0-7a08-4882-b930-6b7dd1d073b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "66861ee7-40a0-41f2-ad86-a3f702fce0f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ddc288c-0d3f-4a5f-b7c0-18f178cbe05e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd507e15-d7ec-4d79-8747-0c16a758653c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8abe28f-05ef-414c-a1ce-af9a2a615afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8afea1-2364-46e2-bba3-b0e17edbc4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "759b9ad6-390e-4b61-9331-1bfc5f4cfe87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93395356-93ca-4799-a5f2-264655ca187f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c472dff5-63dc-4663-bb28-e340e78cbac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "282ba03f-b7ec-40d7-a33c-f6582ec50b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa384ddb-32cd-42e1-87f1-873bdb5a031c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9046a787-a1c0-4b4d-b954-299a97832786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79515ed-3b52-4de8-ac09-8a9946617492",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bfc3d1b-901d-4813-af46-592152ab51c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4deca949-cdc9-4203-ba5c-73428d57993d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38471085-228d-49b4-a8ee-4057561284ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8751801d-949b-4ba6-8d7a-41e1771dadd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966dada9-09b1-4f4c-ae9f-e3d704ce8b0f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef10983c-b677-4e0a-8092-b64ff767ff48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "514f86a4-7cf2-4ee9-b7fd-48b0d1e30bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c81ea04-dc0c-4c31-a901-75e400b7f323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "aaebc6c0-3143-4c72-b82b-268c9c153993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b0f54f-a406-4800-b162-a8b2ac53f1a2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e1631d-66a6-43fa-aca7-28785cd5b4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48c29030-dbee-44e1-8d97-d17b590ff259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e930d44-35f1-434d-a4df-51f260940a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2297976e-036b-419b-ac6d-230b5cf64b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b90152-7efd-45ea-98c3-365e38d3bc2c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "706646ac-1ac2-4371-849a-2f162c955179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1267ac17-df8a-4e43-a677-8f4f3d5f3298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eedec6c-eacc-471f-9353-c1c496829d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b41a15c2-5821-4d1e-abd8-08ae0e55b3cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a07b3e-827a-4b3d-835a-18031a341421",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc30be5-7298-451b-bdcc-6ea2a31a6b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "602d17d2-c427-44c3-ae19-3e797262bc2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a363a4d5-3639-479f-9221-8bf6a7aeb149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "05889ee1-6c8d-4518-ba23-8b006abf9e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd35f886-7325-4908-83ab-e15abc6d09a3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e5e0a9-c93c-4d1b-8f25-ef78858b40fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "602f42a7-d05e-456c-88ff-8b38f66784de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374e7010-a9ba-4af5-9e7c-5c16bf4960e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7f757e4-69a3-454e-95a8-b499d38b798c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4757584-4af8-4be4-b264-d1a5a028e371",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0eb0d13-5f28-4a89-b080-c885aa774bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abf0a747-c8f7-404a-bead-7865501cfe00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00eefaef-b509-45e7-a0e0-59e1296c701f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a312e79e-8502-44a7-9031-1d06d7b972e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401a161b-a2a1-4e30-a968-141f0845dfa3",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eecabe93-1e87-4b93-9b11-cb0397b3aebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c6f3dfe-7e09-40ae-87ff-8ceb8384dae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f346533c-76b6-4de3-bd13-030c2b02f306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "81488ad8-40c2-4db0-985a-9964a706cf08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3f1289-b318-4187-8140-0f8e52da0051",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd5c80c7-1d0c-43d4-bdf3-f6f37e4332e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb7c2b93-40ae-4e56-af36-046fdd908723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810c878f-e88f-49eb-9ca0-5de1d68a7996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d20a89d0-b400-4fd6-872e-a58d93d9810b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e96e41-a597-4e82-8cf1-b6791a82cf40",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b8befc-7955-4f4e-b389-c8df66e15b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c3b35a-17bd-4191-9a5f-da1036233c90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39261021-834c-4641-96a0-165c82fc41cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb9b343e-b6da-4167-af09-bbb64f8439b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b54081-d553-4c78-84d0-7fb064bcd15f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0fc05d2-0494-4958-bca6-e86c17016daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cff32fe-7921-4a5b-8023-909bad651ced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1724f3-2870-41b1-96cd-773683e77230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "db42a995-2921-4d6f-be9e-4fc125368935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6336eb2a-377c-4137-b817-3ba1c7497b5e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a60c6643-4bcd-41cb-984b-c26785a6e43f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3c386e4-b40d-438e-8069-ce2365885481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4b8a27-136b-4843-963a-e75d7080e3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4451ecad-f519-4890-afc6-2522b5a8fd80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa1e848-5f57-4cce-8c13-2416bf05b4e7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "712586bf-ed0b-4b1d-ba14-1794a8a9a9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ad30fc-9487-4a4b-8336-fa31f7fa7099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee93ebdd-0825-42e0-bbd6-109478076691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28a6ede5-dbf1-4faf-9053-cb676a6c79dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e659034-31dc-41db-89ec-3800162e14a5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89516577-fbf5-4812-9493-5132df7793b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4956fd3-10ca-467b-aaeb-1a7b83f89ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eebbe7c-eb87-458c-b0cb-ecad7244429b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea0cf6b4-304e-4798-80fd-6990d0e93209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c088878b-15f4-44b7-9605-b52536365850",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb17aeb-aace-4f02-87e6-2094b388a1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "297b7e50-aadc-466f-9ef5-7cd0f7764d6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d224fa-0b6e-4216-8557-234c3327c21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c141221a-027a-4f21-9d40-2136fb1ae1a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec50af8-8d6d-4f85-b7b3-be65151e2ac4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30433133-e04b-46d3-8522-706c7a2f0c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a213e833-cd2b-4ecd-8a8b-e5bc4e10bc55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef247ca-14ef-4698-895b-1be2b2f7b9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c6d4e60e-cc6a-4224-9b63-1fb23626865a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f93e79-4c63-48e2-be63-9b773f6612f5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "433a97c5-141d-4f2e-b6cb-6f3e7e26865d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3759ae6-591a-4f77-8cc5-6c75758d69b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b7c15d-fbab-4fe7-a115-82a7a78953e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "755d43cd-c99a-4f67-a0f9-a5c55012f838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046b9756-c802-4395-889e-6df3a07646f5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8862589-56d6-424c-9eb0-1d9a10b8109b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d57ca3-2fff-47ec-8718-fc11338ae6c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abbb699f-5b4a-4a32-9a99-57e8977ac071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "305f012b-8633-4a36-a5ee-010e2d2101b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6af11c1-cb08-48c2-902a-3c5ae00de0ea",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5dda444-cb7d-4496-8088-94aed8143397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "641ddda3-7f43-4000-88e4-67ad31d03745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0e17a5-aefd-4336-a60d-27caf535f7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b84f5e4-fba7-484c-bfde-1c1426d0ad47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a03b9c-066c-4f9e-a8b4-953c65563e72",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8128904-6da2-4591-a398-44c348c37912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b7fc8c-b6d3-4f4f-887a-7ebb102b2912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd6decf-3b24-4c72-9232-fec19b456716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "16cbe149-5a2e-4d62-80a0-39a8929cdd7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4947a51-f431-4f3d-9558-40c823a237f1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f3e128-58ab-4314-9f49-1b79ed7e788d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73438c66-be4f-4f4c-a275-044735c51763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4e9c5c-aecf-4b14-8273-12aca23955f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3f470ce-c1c7-4db5-adc5-31dfcbf70ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9b25a8-b798-4b83-b1bb-5ba7a1ff0561",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84e4484-edfa-40e8-9b38-6b257e9e9d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "161fd4f8-b122-4783-b479-ea5e1aed2e5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ab8aa6-f78b-404d-b7c8-a5b5f5b4a6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "83b70c4e-86eb-4a30-af36-72670cbf2be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559a2bbe-c655-4726-8d11-5af730b265e7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "928361e6-5913-483c-9b55-c5412e368565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "191fa190-f8da-4d5d-b9e2-7e9f5208739d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12166db1-1643-44b1-8a8a-36d14999ea8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "09cc90e1-4dd1-4601-b2be-4468f0cd0cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "970fd0e1-3350-479a-8466-e3cefc3da9ad",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19fec84-9aed-4ca3-920a-2aebb39a0827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c528576-519d-449f-b1f2-c25fb0c85797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b97865d-68d2-45d8-88ec-08a6700344ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95cb1655-0192-459b-9098-722bfb219c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b78cf8b-405c-40db-872a-15a0ae19b27f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "439de704-6bb0-42fa-ac20-305c1b308c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "448b87cb-b11a-415a-927b-345537c6cbf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b10f7b6d-45fd-4872-9c74-571798f9ba7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "145d9a46-f042-4fea-ab71-7cb00da1aa88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3681aff3-232d-4106-8061-99f1fd967ea6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b87d491-3bd8-40e3-b5a1-498b63063693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06354363-8df4-4aac-a71c-4c24d3cc88c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e30b0c-1d53-48ba-88e4-2be6b2c6a7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e0717a2-0373-4b43-ac06-4402384221ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01bbe100-33e4-4c7d-92cd-e1d5b7b1e094",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2945791e-2bf7-47b6-9b9f-78139a3144eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f937bec-ebd8-466d-b395-a0b74ea1d7c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648425ba-c6b1-4a23-8f50-c6f2bda723cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "53a4e3e7-b480-4e64-b2e0-489cf3a87f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8240f2a0-cb21-408e-9af1-3d15b2527632",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fda9e31-aa3f-466d-b649-6b00cd58c7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc0f38eb-29d8-4c86-8cd4-f3e49e74e015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862fda9f-e8c6-47c1-99eb-096180aa2574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "48cfabed-ee96-418a-bb24-412dda9042bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aebad436-b0d4-4f87-83ac-a46c42465e8c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73c0978-20c2-4b38-b88a-dc3c9f1eadb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56469772-0319-4d3d-85dd-5a67dc6f256b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb90291-63f8-4cc5-917a-3ecb9ecaf776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f715bf94-3ec1-4aa3-a2ba-3cefd73289ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7db406-d007-417e-b29b-c9fa59c49012",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c96cb8-09b5-46f7-b9ef-c08e4e7b54bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51648544-e301-403e-86fe-8b8bdf71ceae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8cb95b-77a3-4d47-99a7-a5fdc2065459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "17cd8b14-7cec-4fdc-889b-76692a3fc851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6866237-a170-4238-8ba1-454feff77092",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56e6597-ca3c-4830-8228-898cba56f191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76855c87-ecb2-4f09-b047-476a5516e6a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b10378c-6701-4272-b920-025df98c7278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "84ef8b82-3633-4881-9279-9bd398f68ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44da1d40-723d-4190-8b60-236fcbcf85f0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98378b3e-2e43-493e-96ef-8f0cfb866731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d3267cc-60c0-46d1-ab23-5ff0ab1c39b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18092d62-177b-43f3-95c7-a4080f40a47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b6e4a2f-7054-4010-90dd-9f81b702dd73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711a0222-bdcb-426d-937c-df3447a0d4b1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ebd662-ce25-453b-9a3a-668a480099b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44d6295b-8711-494d-bb8b-24e4eac4258c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e3e102-6707-48d5-908d-136fb3ef5502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b31119e7-5c4e-4656-8c9b-7b3be3292542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844ecaf7-26e1-42fd-bd69-01a94adfe794",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa78c51-a4eb-4d03-a611-24ac6613ded6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "301ff3cc-1ee5-45ac-9fd1-17a1adca5a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c8627f-c874-48cf-938c-0ce6867ed3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "368377ae-36e4-4b2e-987b-821a8c7cd0fa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e9f6d7bf-fc77-49fe-8c7f-74d35d552d3e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f422ca71-505c-4f65-aa5e-c9d32ae486fa",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1fe17a-bc0c-4482-b42e-d635ff8bac4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ace2e523-e2b4-4d8e-94a5-d4ccca3f20b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a65dc416-7aa0-4b04-ac6a-a014891848f1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48fdea18-3f42-4d09-986b-f7f1eade81d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ffa63ff-31eb-4813-a816-c0065b139ec5",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "722ee0e6-220f-4f26-97c6-bbd2cb8f258e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8a5155f-4019-40e4-af55-7a2bcfe827d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872966d4-65a3-47ee-947f-a0bbb2312185",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32c8e6d3-a9a6-4590-b628-6b7b4b4129c5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8893bbae-e178-4621-a8cd-df0e05cbde15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bcc0fc96-9de9-4031-a341-0a2023cb5b66"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3efc311e-4623-4b76-a232-e1b417689e89",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58a1cc66-7e27-41ff-a30a-21e41d9e13cc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "66792483-a380-45e6-a0d7-bb432c9f5bf8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "15c64551-11b8-4842-86d2-06f043c9cd83"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5fc8b3e5-cc55-4ecb-adcc-df3ddd661b94",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "168786a2-5a36-476f-9e99-2b15fa0daa54"
                }
              }
            ]
          },
          {
            "id": "7cb14d42-84bd-4def-9dfe-beaa7101c46a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "392e945a-2616-46b5-908a-621fb50c9a02",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c976603-cdea-428a-aed0-ad66f220e4e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c91c21c0-65c9-4615-9917-3241c39e5bbe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24d3b9ea-a616-4f5c-908c-ac292f344013",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e3ab3260-13d0-41e3-909d-86e5f7a0c6ab"
                    }
                  }
                ]
              },
              {
                "id": "5ac0a3d7-cf27-4548-9ea6-1f5318ee75d1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "18086033-5540-4a0e-9255-84b19043d303",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "69e30203-d1b3-4d85-bafa-67e86cb8a35e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fec51da7-e3b2-40e1-b921-488348fa5eac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f18d0f28-99b6-4064-be2d-fa0047ff543b"
                    }
                  }
                ]
              },
              {
                "id": "b49b755c-ba33-4e6e-aca4-b3ac89ab6230",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e135a428-4926-4953-a17a-7bf3aba89690",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "07223df5-191f-4133-9d6e-904b8919d5f5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe3f67fe-4eb9-42b9-93d0-d9bdce700dc1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "804c174e-1291-4803-8487-28aaf21e4c71"
                    }
                  }
                ]
              },
              {
                "id": "3a52a34e-46b2-44fb-9e15-0e15a3143d78",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8772ebc2-e451-431d-97ed-1aa822e9d332",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "15c49a7a-baa0-4417-ba18-a7a2a2babd03"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c9644be-9e9d-48b3-9c18-d849a4082554",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7179f612-fb7b-41d9-a44c-ae3131cfcdcd"
                    }
                  }
                ]
              },
              {
                "id": "f2ebf588-90cf-45c9-a65d-8b36c3d3cc86",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "76da3bd9-7471-4483-af09-2e1d0cf2129d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc53a24b-7bcb-4de6-b04f-c0200107bc2e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e256a85-f0a9-4786-9e54-6b6855a473ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9919e037-0500-4378-aee2-b21ed5cac2fb"
                    }
                  }
                ]
              },
              {
                "id": "a6100667-8727-40a5-98f4-1c54ef5392c7",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b6d2758-7dd2-4c98-8dbc-193b38eab446",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "195e8c3a-6fd6-4b54-a39f-057de91ca506"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9702cebf-f23a-4075-845b-eb9b6ce1dd62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "657b6221-6f20-4d78-97b1-d24a4b96af08"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bb52a8ac-d6c9-4fa7-9f95-4ee60c322502",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "36a64a81-c656-474a-9e5d-b420f4759809"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c597d386-2395-4097-a5a1-512a8961ed2d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ee466402-76b1-42e3-ad1e-837f5e610e88"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50399619-dbe1-4048-b187-3cf9fab1e0bc",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "61c264e8-343a-4018-918b-e886cef90310"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "571bf60b-aa66-43eb-8a4f-f0a86e40263c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c9d38951-ee5a-4e50-86c9-480f94f71b44"
            }
          }
        ]
      },
      {
        "id": "bf2d8886-5520-45c7-a23b-b30c642eb11c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f588b250-8fbb-43f0-ad95-08a7b841d523",
            "name": "Negative Testing",
            "item": [
              {
                "id": "610c2905-9e4c-4759-b2ff-6c99363dee4a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5d52f7f2-860b-47c2-8bd2-6bf12306107a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19cb1b1-2276-445c-9dfd-bc409450d5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "004b4f49-b125-43b6-82ae-f7410558f0fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648f44f5-f170-4a14-b407-71cb14769efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "14a790be-f52a-4e48-8c9f-d249c14869b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04620b56-a556-4986-8cae-ddbe50e307e0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2bf13b9-68f1-4ce3-b89e-7a91784966eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b7b8c7-742e-4710-bc25-1b96b8a27259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2254413d-b3f6-41f0-876d-585a7787fdf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc418f05-5a26-48d9-8dd5-193cf2e86402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa50495-543b-40ff-b4bb-914bf9deceab",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "912ebdfe-1e7e-4805-a4b7-0960e9894f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa4e28a-b1f2-4f98-8aab-5f94d9508174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7413d744-7540-4843-b873-78992258fe7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "08b0d491-1eca-4b4e-9fec-01d3b13e3ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93746704-7ed4-4fd3-887d-a857471480d8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1dcb7ff-9e7f-4e59-a56b-287daf1c7888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9853251d-ee5a-4e74-bdc4-94204f7433fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b746a2-4862-4815-aae4-524d3b330ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a30edbf1-0d9c-4dd2-8632-3f57c1572845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be44d23-f6d2-448c-ae4f-7e1b16c60e4b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c2b748a-297b-4dad-8dee-bb93c0e4f037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd9c8d16-6766-449d-8aac-36502cc1bbb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b103e97a-5314-4147-bbdb-46ab0919a4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d82c5e2-d7f3-4a15-abce-69e63465f028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d45abe-5932-4ea6-886b-60ae5c55714b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6051d63e-1a3d-4d88-9750-c2de55f18285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c5381dd-1abd-4d9c-9b83-1fddddf1ccc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7864db3d-19ca-48b4-9cfd-4c262affe3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "489dfc5f-2932-40fb-b4cf-ffcd9d60d089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc62d53-edba-45b8-af26-dfcff4b538d3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81a2fcf-3fdf-478b-b995-e6bd2ce9db41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c704dbd-3c36-4a87-a008-5920ab15724d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba93f13-4976-4760-b01f-39e20ccbe1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f45c857-a9d9-4e3a-9ad1-72f71c74cd05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606899bb-52a7-40be-b9e5-217e32d9ca02",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3082c35-1328-410f-8148-ac7dbf36643e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3665264c-a23b-436a-92ce-5b64a29f1036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85dd246-68eb-4c59-ac10-fc0510c9ab04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32c26f94-48d1-431d-b160-b608852a96a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c2642b-4ab2-4b90-9bc2-0aef82dafa38",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f19599-03c5-4402-85b2-5c5406806ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c072eb-e100-4d43-a29a-502f3073fda7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9512e2e3-9b28-4da7-aefc-5f945b7a466f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "274134b3-0adc-43cf-b379-df2556ed265d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b986dc60-ab86-4fef-993f-e516a64987a0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67df899a-2090-4125-b214-5ae79e759f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d618325-1805-427b-94b0-f074ba6d9077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2cae94a-da47-47b3-9a91-0eba5de22dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee1b33da-dbc1-4965-98d0-c66fe6cb6b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b596ac1d-5cbb-48c1-a28a-b970cf352e9a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0c50f9-acaf-4bc1-9eb9-d8a1f89ecd7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a24faf2d-0f51-4952-bd00-52641aa8a423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637e8fcc-c96c-47f7-82b8-807c04eed4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d20916bc-1852-43e0-b299-359f33f9db2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec0ee61-7552-42c4-aff0-80c46c22dd61",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335d413b-2de0-4877-a686-b7389a1d831c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35279d25-03dd-481e-95a9-4d944ba63a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9920c8a-607e-44bf-877e-33fda802ff5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "80f0c3d4-428b-433c-896c-420520dc1203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad422290-17dd-40e2-a744-d88c50b287d1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cec8c72-b49e-448a-95dc-038d36b90939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f63a2f53-39ba-4fca-b21d-81b01b3bfcdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7feb1c91-2dc0-462a-b6a3-1b952e34373f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "91725bb1-ebf8-4144-9b77-871c9c738991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f01b0b89-6010-4437-9f43-dc40910770f0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d91ab9-bcc3-415a-b595-ea7997930a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe19da32-0a23-4d57-9370-9700dbdeb3d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55639108-3b39-42d4-9236-ac91c563f50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d908616-2f70-4159-a644-2b4fcf0df2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6fa8121-5cad-46f8-83f8-6a45ff32f1eb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd76eb99-d5c8-419d-bd5c-baa267e50473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "150d7569-6227-49c9-b1e8-2201ef662565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd38ebec-d4a3-454c-a4d7-0603ccc38940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "27e1fb71-6ed5-424d-abb0-56e5c7295616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85124bf7-1d5a-41fd-b215-0d449ecfcee9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed56d12-60d2-4d74-ac35-efe67becfe55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d4a3c8d-3b3c-48e2-9885-94383dc34bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9742db-23d0-4516-922b-bbafa2657c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6000f12-80a9-4e45-b600-1f62d625d5da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248500f8-cdd0-432c-b35d-4b610fe22fe3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87480415-f6bb-4323-92b2-1dd400288579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7febdf3a-beab-46a6-8375-6508af346b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7fc99c-a91f-489c-ae1d-c6716429da6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d774421f-b34a-4a28-bad2-5958e9e7674d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72695b70-6368-4c80-824c-87c4613a0660",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77347e84-aa12-4f97-81f1-ee5eb1ec381b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58472a49-b4ef-492d-afa1-8eec2f432dec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc03a3df-85a3-4f6e-bb65-6a5cbbbf2769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "48400260-e2ea-4c22-a53e-d12798198451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89de405f-74e6-43c5-9727-f7ba4296a0b6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "967ca78b-1a56-4ea5-9bfb-25bcbe53ee43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d44a14-9b2c-4305-a948-334738fe32ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eaa45d0-e01c-4944-92bd-06ca7f7bf457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16649ff6-e1a6-4e8b-af40-69235d250fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b109bb69-2339-4520-9123-9ffd98ae055d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20613e7f-e89f-4f99-a391-abe2ce8cf838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aad87534-e612-4a12-bf34-2440fb48cb60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c953838f-5c28-42c8-8266-d2712b850e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0ac974a-85a8-4cb1-a0fa-353bdd534b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9a706e-dd5d-489c-b8b1-ffa06d66538a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c716d9a-0d7b-438e-96ab-1a5d46d02b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec4fcb85-9b9d-4a0b-8e43-a61ad173f8bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47976b8a-cd6f-4056-8dbd-bd2f81eee24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e6753b5-1f53-4a94-8052-007da8883b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a22662ac-7257-426e-8680-7cf6eb073def",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896055a4-1ce4-4e01-b274-a11a4248325b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "269b9c4e-9a1a-4734-b40f-ea86e385159a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174c1542-cb4d-4283-ab43-24716fc316aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b99496ba-ae62-441e-8a37-ab1dfb1678cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147bdf26-a185-444d-8694-51360910ed4c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946f3221-7f92-480a-a25a-5cee07323127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e1e5b49-6223-4faa-aa05-9d155aa78fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6e7182-89c7-4933-8a1f-4b5c0c308fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89fd2b72-fd1a-430c-b774-204c662a3022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bec3c3d-cb5e-41b2-a33b-194cb48e3a17",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63332617-429c-478a-8c2c-47f9f2549e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9abf69f1-b008-44d6-a906-d8c5611e2e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621ee999-cf28-49d8-9147-01b8650de9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb39bbd3-4a4c-42fa-9f33-3cf9eca1638e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d0c4b7-1c43-4c82-8e64-ce3a3c585b40",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75382a74-6056-42f9-8f3a-ccc5eb6dae3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97212287-0cff-4574-bee8-48b51184c3e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f3ed3e-2e30-4848-961a-10e5eacf6c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dba94e3a-9b55-4f8c-a376-ef1545843289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ddcc3e-3d41-40fe-8dac-e17808a541be",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4fd1af-d716-4083-a714-d04bbf4aa058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6cabe0b-ae77-456a-903b-c1585b09f2e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c8071d-9093-4cd8-9db6-def4d5777637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5fa3963-de28-4673-8589-a7a4babe475a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59f9d06-850c-4259-9129-f68c554b4e25",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd6a015-881e-4e2b-8ef5-f22a4e9f3db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c72dbdeb-ffc4-4031-b734-952d9db703b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf95efa-cc81-4a30-bc45-c14332141313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61d642ff-9847-466d-82c5-8ba2c4e88c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af645d3b-109a-4fc4-96c1-a409f735308d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdefb61e-e8c4-4319-a30f-e0043b85485c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cebde576-00b3-40a4-b58c-ceef9b2ec8ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0033e832-3d16-4353-8652-8e7deaddeb99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ea200aa-e5ed-4171-b82e-fb05aeef3a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "939dbabf-daf4-4ef6-bf13-758d72162d73",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "774cf8d6-dfed-4b42-b3e8-ce7bc8cc58d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac24e6ae-6421-4434-9012-349d76c5e5a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5d2d10-a344-4da1-9e2e-b3d420ac87a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92868c06-f83e-46d7-8a4f-ccda8f7e97ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83c08ce-7a90-4d0f-8330-d941e606b5e2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e1e960-c417-4470-b536-ffaa61831c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56ff3421-f806-4a09-9b5f-4c35201d4f94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24823855-8ff8-4d39-b50c-1af3271b3fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26f3b11c-0d63-4dfd-8fe7-6f14a0ea34e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c0a4f14-b136-4bb3-a0b7-045c1b7216e0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a33e5b-8d64-4c53-8f22-be08602b210b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f760f8a6-c904-4a5c-99ee-8bda06a01466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7770c4-90b2-47df-8e71-b6f10c102a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "761d31a9-67f2-4c68-998a-34f4c1939bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f71838-979f-4782-8e2a-2817a868c4c5",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec6e512-a8f2-4897-b54c-05870d3265f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5514bd1a-d0fe-44d6-9e57-e42778d684c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4a293a-8f2a-494b-88a7-0cda2fc4490d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ddbef86-4066-4ff2-88f2-b70ef3209144"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "430d6232-ac2b-4395-8fca-976c2d2b4482",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9fe620ce-118a-4530-8c2c-ec935b81ae2e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cacd36d-7255-4a2e-9352-5139f9a9cb1f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "27d6c61b-d63f-4e0e-b7ff-4ead34ae73d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded50d17-4ef6-4341-97bb-2f3a3deef5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f0f634e-6ad3-4e76-a507-b116fb307e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f659a34d-52e2-4fb4-8764-1856fc1662b9",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80278d9-3228-4d35-ad48-390ac2cba7e4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8b9a3232-c31b-4661-b948-4df6c3b9ead7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04922006-0823-41aa-a900-6d8e85afe004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b85a8175-06a9-4a8a-bff0-2eb51fc45c86"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8cea70a-46af-4b83-852f-efb669b2d6f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "517e3b5a-a84f-4bc4-9c3c-a0739a70f072"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0c4e5a7-8701-461c-825f-b28ec6ce9633",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2acbee13-96a0-4a3e-b2ea-408f862b7551"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f1c1620b-e97c-457a-8d42-2b337eb69ebd",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b2908693-3885-4591-b648-ec9a162aa46a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2f57473f-226e-430a-ae59-05bdeac14b8f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "45aceea6-6179-4a20-a3ee-2a9875cbd025"
            }
          }
        ]
      },
      {
        "id": "2f33eb84-ad8d-43ea-85bf-47f15e6c8c64",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4ee8cf57-5070-4999-b9d8-e23b98e47c49",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e39c5666-d99e-430e-97be-76ef9f18647c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c7bd8e52-940f-4f7d-a334-d8d2ab1b8152",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150d57e2-b443-4091-89f6-b634852a8a01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e71370e-db69-4006-87aa-7155927bc7f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0996d1c1-9b62-47c2-a355-941fa9fc6308",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac741b6d-be14-40e0-a2d9-757ebb6ec1d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de39b4c0-5d99-41a5-8b1f-5c764debcb65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5436f948-ecdc-4532-88b0-fa5e35dbca82",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff42575-a061-4640-af3a-d70b5a4323e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2845da0-ea79-4b3f-919f-b8daf2099353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de1afb40-3fea-487f-b029-96630d4b7a52",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eebb21b-1171-4e9c-b7bf-fa7d9a92bdbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7258f7fd-9da9-4555-a422-92b467778850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26f258d-87d8-4939-8206-42987e7b318d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "632d57a0-eeea-48cd-b86d-897f7968b6a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d00a0ac4-03c5-45d7-a76d-170ab154a542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1682bfa-d6e9-43d3-9b05-6b9648839840",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9529fc8a-915c-43eb-bc97-eec546bba6c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdbb4b12-f6a0-4045-87b7-ac4fba9ad6ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d49439-0844-4166-b681-84d8fd4bf76e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0a741e-4be4-42c7-afc7-4e3d1018df78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ac5370b-0385-4a47-aad4-eee4547e7a18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b718dfc-b4f5-49c8-a19c-ac5996bb1ad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e9c6a19-1561-4640-b700-db28c3ceb551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396ad328-d2ea-4d9e-9fa4-daf9f7d2836a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57cab4e8-7ef6-4c7b-a33d-26451739b885",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b814925-004e-4131-84aa-e8a47b9a8ae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec8a3e9-67a7-4afd-8034-b2922a7cf95b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e657aef1-041a-4f63-814a-05d804dc538f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c90b855-52bd-48d6-8cbe-7e83b46095af",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74b2bef-bd67-4572-93ee-538b445f9f1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca3aeb41-3330-4c1e-8a1b-00c9e2866a59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf838c50-ff77-41ca-94d9-ef478a4717fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88053e03-f99c-40bf-ba8c-03519e81277e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225ee86f-aa7c-4561-a78d-0b6d024b27ba",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14d1a33-f860-4e5f-9910-3b9ca2883145",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cdad7d6-6a07-4be8-a0f6-fce4b141d9dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e34b920-3aca-46c6-b7d4-11240d2e40d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "955af94b-b7a5-425e-8cf5-39eaa258458d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23741b1b-fee6-4ef2-93cf-f32966fb95da",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4efdf70-81ac-437f-9cef-f64e37dafcf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e80020-b7ed-406e-8ff3-0e9d6057dfda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "725bf4eb-6fd2-4606-8d51-3655f7982b72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f852547-9531-4976-9ffc-d141a4466126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f055cb-1382-472f-adeb-28dc68de9b13",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1db2d5-c8b2-445f-a8e9-2ff581dfa614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a9afe50-5864-4608-97bf-81a0e01c8a85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2899e3-e3fe-4981-960b-0adb4340fa13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f223e085-5049-4b09-ac2f-94c07cdc486a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d46a1ab-1ce1-45f2-85c8-1e1d4ef5c056",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e950ad5b-0771-4fdf-8ad7-e149761efa26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f372c49f-888a-4d4a-bf00-7ceed3f0af10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6f566b-97cd-496a-9926-f709bd5ac401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47ea1898-999e-4897-883f-b444bc435c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e28cd9-74da-484d-828c-4e7c2128d609",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bbd16e-159a-4bff-8011-0650e4c4a412",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37a066a1-c264-4268-bd6b-5ee439a8b92d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "979d5bc6-f9bc-4ba9-88c6-580da423cce8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc2e164b-42e4-4ba1-929e-83f74ea775db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ca9abd-7681-4dd5-bfcc-3beb8ad73f70",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4cd457d-ca58-4a55-a457-3795755ba83f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cbbf367-e966-48b3-b8ce-58df6906f4ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c722ec-c682-4bfa-b7e3-eca944a1ad3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da6b7539-cf57-4124-aa71-a1bca2364eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021008b4-0fdb-4c0f-917a-9394698d958c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb31728-7f27-466e-8562-1180c47397b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1aec53c-afaf-43ce-996e-1a028c3ffb04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d05c760-991e-4a45-8b70-705b272c2d7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25dc6b6c-ef3c-44ee-8020-75009518ca9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8182f75-7a4a-4f38-88ef-62721b4b8a5f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea24478-f857-4717-a333-7c3d90173289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93309008-4e18-40e5-939e-29634ad24bc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d6f157-d4ee-4abb-8fd8-4b1bfc918758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bbefb26-0a2f-45ed-a304-d13e85e00de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fddef12-17d8-4099-a493-865c092d2d9c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9d6160-d45a-475d-94d9-55ba137e95e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e23917eb-5657-4e15-bd1e-f2b73704ed08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd365012-5b91-4e1b-8996-9af4b465c906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7c9943b-aacb-478b-8944-c38b1003bf9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71e48ca-a17b-4fa3-919c-e059cfe93c10",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9054df-5bba-4e34-a626-12453caec131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9c4462f-112d-4a8e-8abb-68e7e7dea2ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0e2cc4-72ef-4a50-90c3-d3e8e1755c33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6181c446-4c2c-4415-af3d-77638d85e25e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebc7a80-b0ab-4712-ae17-667f34f0ea63",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab61cab-f9b0-4bd9-a3e7-14ac1770b84c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9ea5fbb-64d2-4381-bf2a-e92d845ba3e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8398fb23-959c-4566-8b7e-24b94ffb3739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "457eff97-0dba-4308-8845-8ec2fc9af670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a6c287-20f1-4516-bba3-36987545eafa",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c80c61-0a19-44bc-9a33-4e02059ffc3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77f5af00-ed92-4617-9605-d0fb4571a62a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea8bc3f-cef9-45f1-a8c5-6df7b52e6633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bf683ef-ffd8-4fb9-b473-d4ec17d55a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "714c649a-aea9-482e-b13a-db3734105d45",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619532c8-4c39-4869-ad59-6bff46200f0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0cc4b39-ccfa-4451-b9a2-a5ea30fa96de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8e400b-585d-4c69-bedf-3e63a01184cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "705e58dc-f38d-4435-baf5-4bc3076d6f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ae030e-2646-40d4-a6ad-421c6621d767",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdbe5af3-1c88-4956-87f3-8492fc89c7f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cd53160-ac74-4660-b4a6-afd2f6f6ba1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd560d0-073a-448c-b242-1e61fa804fe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8593216c-6926-4784-b699-d9c371cb4e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6757e004-5743-4b70-a620-2a6107a23997",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22e0cf3-de84-4a6b-9485-a514427a94e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a920f2db-49cb-4b38-b0d7-3a07449a8ea4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eea8fa9-9bfb-431e-8911-fa88378833d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60581141-155b-4180-bc0f-72a7e3707b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2edec6d7-93ab-4980-8ba9-b9d186672148",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0136861-e93f-43c9-baaf-09ff5f44c22b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b06c8c90-4372-4cb8-ae8f-505cf80e7f5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff59bd5-afeb-4def-bd03-21aa0785ce99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd03e348-8b4d-41d3-bf6a-d1f621144588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37e1450-7a12-4a89-9d23-a50ab9225019",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a077bfd5-6caa-4003-9783-f0c3e8ac241f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6718096-6f61-4a0b-ae13-4be9ea4d59b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f3aec2-56fa-4661-a7f0-cee2e5c89829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72310517-a3bc-43e8-bb28-3256d86e7ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d11557c-01e9-4a6e-854f-9104103f4d8a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b10fa12e-c6cd-45a0-ae1b-f038bae8a639",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6933208-473b-4494-bd51-3dd34be3ab01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a466f27-9564-4508-b9c2-8621a1f747d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eda739e0-4558-4feb-b3f4-f8aa2f053dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e2f5b5-3216-4959-aa1f-94ce1fe255d6",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8da2c0e-7437-485b-b281-9f5028a4ac7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad07b978-71ef-41b0-855e-0fa7a1cc437e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb3346d-847a-42d3-839c-cb10ae485c16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0884b853-2b81-4b8a-9b3d-63c45238804e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb33e5fa-d382-45c7-acc0-f537d32f6e1f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3135fc58-1a74-4c21-aa32-70679254bb70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edb427c1-736c-4a2e-b8e6-743c76c0f9a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5608ca7f-9df0-46a4-974f-b9f49d402cbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f547663-7393-4a4c-b413-8746c435564d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d6f7f1-78f9-4adf-ae7c-f38ea69991d4",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326373a1-6e45-4c02-9fe1-6c521e6bdb6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "625c49c6-a630-4ae1-bc33-99c69b7fedd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0febae-bd21-4109-b9cc-20b9f70a5438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc568472-0121-4c85-9de9-ee154f519b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab9588e-ba86-497c-8187-c96e1492de60",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4ecdb3-0655-45b1-a34f-8e4140d7a771",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "524c1be0-030e-45ac-91b5-c05eb738c98b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7f37f4-76e0-48d8-be7e-5ad17ec014e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "666bff38-0cb8-48dc-bac5-a652028ef3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4659e2ef-a8d1-4018-92fe-5b2104deaf2d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab5660d-2d87-462d-9ed0-b2660c125aa8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfb7c9de-f3b5-4cc3-8547-b55919cff8ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3497d0-1b83-41bc-8a58-58c0d56db842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "200d176d-5da8-4f81-ac63-92a15570be98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df60dd2d-be14-45d3-ae61-75c73b87bcd0",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d6a0ca-d080-4207-b4f3-4a36ef4661e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9122e3a-4a5d-4cb4-b461-65dedda89338"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf49be0f-dcf3-4cf7-bd5a-f24f209e575a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b21bb668-6192-4d51-b0b8-6205f39ae14b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0f0f6e-a495-4c3f-be6f-3fafb19f0ef3",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97cb65b6-60db-4a8b-9153-8313402682cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3bcfcab-90a4-4f0c-949b-b5a6b522518a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "783d01c4-6ea7-42d7-90ed-f0164221cc1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80376d26-0579-468a-b66c-889e057a2e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4cde13-691e-4d23-b08a-f0bf5ea12807",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce23149-1f0b-4e0c-868b-bff1c576524a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cd7e2b5-9925-4a90-8147-18de5515cd4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09dffe88-2bc8-40a1-8bd8-991ea7248cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da4f010e-4583-4ac6-bef6-bb6542df0c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137720fb-6f74-4fbd-9fc1-ff1514d077cf",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ad6d11-8523-4d54-99ee-7427850cbbc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22c0d01e-c099-4fcb-8c6a-1e02a810316a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bbe8a8a-61ae-49e3-a901-c1f6ecc25a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acb25106-e630-4fb0-8292-c1509793d7ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "107471e6-bc5d-490a-882b-6ef303c423bd",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ede83c-b958-415e-a95b-69aca8c29d7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e570a51-14e1-48f9-93e7-429bc5a88184"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d785f0-4ade-4e71-b5b6-eab3f45f57b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58425857-a987-43f2-8398-4e86bf2f723d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fca2607-ac16-4b75-ba09-7a6fd51c9535",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23d5d9a-a954-4e01-a6bc-1740393c5575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b923ca7-607f-41f9-8faa-247c84a23725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33d586e-a059-4fb1-89a2-1d8c5c6a5653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e416013-8348-41d8-a5f3-0295ff90f79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51bf16b-9f39-41bd-859c-0fe63f16d7d2",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6769f5-ae99-44cb-b497-25b02bd97a03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8343213-8a63-44be-ba4a-7bf13f8534f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d71af5-3e79-446c-856b-0b39030dc934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38be9d30-d2ee-42be-bb1f-d32e24dec5a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a07919c-12bc-4090-8abe-fcf26ea9cffa",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a67c6b0-05f8-40a0-b075-f6587ebfd545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a03a5c7-388f-46d7-9926-c5810aa73eb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c2638d-8515-4088-b78c-6fb759b5b1c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35a9cd28-3160-4c24-9ed7-274875b67080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16d4ebd-6945-41e7-9d21-ff12ec31b8b4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80f7fa2-69f9-4c50-b218-66e9ee45c557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceab9cf8-722e-4a8a-981c-859f7640e975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "493e5193-8c8b-4ff1-8e77-3379b79aaa30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f52b05c5-3ec0-4770-993a-1e9acc49ee1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba932576-8021-4f39-a99b-f281ef6b99ad",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a806b6-b78d-4f1d-8184-5c0178f0e83c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77d9eba1-73d1-4e0c-80ea-139c5babece6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42f882b-a60a-4184-b34b-24f1bdbd078e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2741adb4-60b9-4173-9058-967af48accee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d074a19-8e98-4495-9ce4-4f68a8742401",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8cf734-e858-4d0e-acfc-c297cc72053e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13986260-fcf2-4736-b3a1-9cf1e79e72f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08998516-235a-455f-a693-90d3f074e8e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c3b6aff-a2e9-4024-b879-b0af38598fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3abae5a-ea07-4e68-8c59-f5e92791a6bf",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9786e6b9-a7b3-4275-aaac-c89bf67dc1ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8f43703-5c25-4067-be62-c31a539a1ab2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "435bd926-3e21-4850-afae-4ef214eb03ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78b6b7e1-60a3-4591-9de2-08dd40ac98a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51eb6f77-fc11-4ca7-9830-77026ef88ecd",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261801f5-4ce1-485e-b5ff-f7c554025387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd2c4fa4-7510-4812-b781-cded90ba7142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55850c24-bb79-488d-b461-9ccfa3e55405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac1dfba2-c44f-4951-9087-e8b6b0d8b8e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf782e3-a2ea-4405-8f2b-988ae9716ef3",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15cb2a48-1594-4966-8697-51c2a875e8e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a89698d-fede-414a-af4d-2af9d5800cac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a547cd8e-fb34-4da5-8f60-521d723fdf63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68f9629f-b660-42f7-9b5f-23ee62996bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64be1c31-9ad5-4983-8019-85e66a4a9826",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da2cb02-b537-426e-a67f-facf0457451b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9bdc542-4742-497b-b269-d65bb567850b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2480dc0f-0004-4307-9aad-07ef30964c86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf82091c-ac71-498e-910f-87e050922f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ebdc54-893c-419f-a938-0ff7e39f15d6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce3385f-df05-47c7-8e3d-8e7d13020962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ee533b1-a633-47ce-8232-56c9d1f22012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26359adf-408e-447c-90cf-39dc4a646eed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df7714a9-f5a1-4123-a72c-32de1b68626e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35e26bb-67a5-4f53-b345-26999c575252",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a75c5d5-eaad-4182-a709-ada400527df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b7be3d0-eb19-407e-b2ba-d0d5af3d9d55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4805b9a-a786-428b-bcbd-245d171ac3dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27e84d20-f8b8-4a6d-bbb6-9419f52f8c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72e01f4-32ce-4d98-8129-4fcba717d3c5",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5445af85-a400-4be6-91d2-5c9bcd6a8ac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66504d6a-4966-4089-8950-3558ef55d0a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4430cf24-0fe9-43ca-b5df-3c133c6529ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "756ef9ab-8e0b-4f51-b7b2-5291395a0a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3680483b-d3be-4b5e-ae01-eb966d500052",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa03b321-1c26-46a6-badd-ef3932f3d04f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2945c240-a8d4-43c2-8983-a2fe56c76f90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a1fd9b-8cc2-42cc-a013-54e059f1799e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "117205a4-6596-42d7-adc2-a059e6fe4758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d0fc94-bbdf-474e-ba13-a3ff44344ba2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06139e52-be1e-4a71-b7a3-968a56dc8482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b03da5bc-de40-48d3-8fc2-3770dfa2daa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54351a57-f2c4-40c3-ae27-218343d0ba43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1605023c-6dab-4a20-a575-7ba46547de68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50714902-492b-48a6-b6a5-fa3650100a7c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673b9d5f-b6c4-467d-87ca-6cbb8c250060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d53b6ac-1ae9-427b-b3b3-20f452db9743"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b771aed-dc48-4212-a66e-48b70f720334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbf88ca1-dc06-497c-88cb-3920d40f5169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5963a5d-32af-487e-856e-4605bc9e80b0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a2d693-0b28-45ca-b82e-a3adca73fb73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "770bcc7e-1c73-466c-9279-45a053a5f332"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "131f978d-589d-421f-8180-b462a42a8337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a192eba-4daf-4299-aa7f-a45179150438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb77144d-0311-4199-b344-6db8f11561f6",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf1d6d5-0cc7-43ce-905d-c394cd0a4a14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bb36c08-208c-48ff-b096-09ffd1bfc32c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd92220-3299-480b-a5c2-bf2b065a4ddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea381c75-b60a-4934-86f4-19b50b95364d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3175bff-677d-461a-b47b-5579bfacbee8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49af2d9b-9796-40f7-be3e-75c5b33beb5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c9c5e2b-2f4e-400e-9519-23a7c4c80841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7431f9-63a8-4f4c-9cab-fcfde6068f73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e1b4a82-5ac8-4220-82dd-8950de492ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4948981-2c65-452a-a851-168cd7f1de3e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f59c6a43-b86f-455b-81f7-c1f94ba2a3ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae8124ee-d753-490f-a53f-b9d4884f585c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24aee72b-ebc6-4311-b546-0a404cb9c5c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f98393db-d16b-442f-9fc0-94ea1fa56cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874fd2da-cc19-4d4f-a13f-18c6a15ff9c4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea2ce07-9f7a-4c89-a6e7-63716b97e0d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5bdeb98-87cd-422e-98a7-42a6af2072c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f168180-83fb-4183-b1cb-65bfcbcbea65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "802a9291-4183-4787-9eea-1f1791f4b3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bee4102-208a-405d-b764-9dfee0218bc4",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4408630b-ea73-48ed-8d7d-c7aea503ee49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2fd875e-8590-4b33-8f56-cb2bdc04d47a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7925027c-119d-4b78-a6e7-e1872a60613c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "939dc6b0-1ed5-42ce-989c-58e1a52f43f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1e3d67-e2b4-439c-a1d9-b0687e634362",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23bbd8dc-641f-45f3-a881-9ff9d48f549a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5777a56e-fbbb-4404-9da2-001885d0564f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4273560f-ec47-4a92-8304-59c27adf95dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a33e1c7-3255-4622-897a-5d782488df81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc9c041-c134-44ac-9311-c00e1237cb1a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228baff2-793f-4808-8f64-e9e631ddeb8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f8b3102-be64-4d29-8211-a153314b1c80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a498692-69bf-4692-89f8-0bca84b99323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15657738-d638-45df-b370-3ca59efefdaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8439580-f278-413b-84de-90c6280914aa",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba90ac73-45e7-4f73-9dc4-4e574ca40fb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da68cc5e-a2c6-48c1-9ebb-e4d314b60143"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "095a27e2-24e8-4299-9ed6-9bb912c3ca8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a8ea3e4-8bcd-46ea-8bcd-3ffb822352f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d210ab5-73be-477f-8b98-323104d61ca5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c17aa96-446f-4443-92e3-a7f581d9c299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ff655c5-7b81-46d2-ada3-538365d9f16f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5894965a-2670-4f9c-bc3d-5781b5a3b4b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcfcd361-dcb5-4e4e-b2b3-23ad1ad546f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef4987a-fbe7-4b5f-ba8a-d8cac1ccc5ce",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc77d41-2c21-4a52-af1a-39a3d3d1026d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca5f3d1c-ec98-4556-ae5d-a39106cde5ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7d4762-db50-486b-822f-a8cf66964e9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07cde6ab-a0b1-4c2d-bf1d-471d753b6abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "901591fc-f0bc-4c32-b39c-38a253df043d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940f45d4-b931-42c0-8cde-e9067e273b95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b357b9c-46c7-4b57-8527-a1ad9b13b1ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ce051d-02a7-40a0-949d-7f73389e4e7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a43270d-1574-40ed-b504-ee1927402202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9d59ce-4729-4833-bf36-674096f69051",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b74b718-ee29-45dc-898a-352dc4528441",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45b3e03c-5884-4215-b83b-e5b938af70b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a9c9957-e5fa-4920-8d7a-1d4fc11f068f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a3d1b42-5541-4e52-a251-bb779805fe4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa92f88-073e-4cb2-8671-1546b114b946",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "300df447-401b-484a-849a-e01989c611a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91d41f94-8e6e-4220-b52e-73b103c2c69b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae021d2-a253-4955-86dc-c7571f4bc467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b297032b-6b05-458b-b97f-14c589a1431d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac22d8f-0a16-4908-9488-77b7e4667c45",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4126efb6-d428-45e2-9650-212151b17f4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70ca8591-f53b-4e33-8896-6593da664b94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc23003-64d7-451e-9dc5-430233055bfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1803b28-c4dd-49ff-b393-6f60e9a7e976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32f0fce-5842-41ac-849f-a4eb1a261fea",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2064754-b7d4-4218-9870-73c37d808387",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba6b8876-5863-435a-a2a6-a93255fbec50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf78407e-96db-43b3-babc-1d0e6f1bb22d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b038169-c273-4c01-b53b-2f44cace3182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307826d5-7d0f-4142-96c0-a6a9d45319b4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "459a29e4-f2a3-42ba-9e4e-c69a0283f1e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f629a232-81ce-4662-a69b-2d1286e0a277"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eaea34b-1b79-492f-95d8-91a539edce50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e33e5097-45b2-417a-a6a4-3c70b3fa2e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb4be78-12d4-48ce-99f6-7844b7d5eacf",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a8c55d-4189-4dfc-87f5-a41824f674ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dbfb824-31a8-4fc6-b20b-150ce51806b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c709b68c-beaf-42a5-adc3-cd8d78fed694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85c84a5a-581a-4f7c-86cc-debd417ef60e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97dc4377-5494-4511-ae66-e3597fcc6186",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15563a55-4899-4c46-92c6-c75acf343cba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab9d08e1-d6ee-48d9-baed-123667c839c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec32c62-82c5-4960-81fd-3d738aa7a4d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69db3b3d-d40f-40df-b204-1f2867a9a9b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956c528a-d4a4-499c-a141-b0301d2d0641",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784510e9-5ea1-4746-aa01-2645abdcb45d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62712bbe-4ba4-49fa-ad8a-8bf0ef1dcfbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4058143f-fdb2-459f-8d7e-7f6dcddb7836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d993f4c0-fe9c-4a28-b211-ac5f06690eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14430d7d-65cc-4a80-a42c-926530a72cd2",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc048f3-f2f6-4455-a1d6-27391603bd81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ec42eea-7126-4a3e-9b85-84c505d1691f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1baec7-5320-43df-a324-88ab714d80ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11775568-3667-4b7a-956a-682b7574c513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2814950a-ce1c-4f89-8f34-b8ec353f5e98",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c561231d-8299-4dda-aa18-c4c54cb6bcb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50f884be-e2b2-42a3-90cd-c16503774465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7404e2b7-c5ba-47e2-b357-71c73049abf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6ee226e-fed8-44e8-a428-0d8e4c84c1a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ccbef4-9cc7-430a-a534-4b31f90a8815",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93095bae-9248-47f9-bb3a-6f7d5aa42bc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e086143a-2156-4eb4-ab6d-fea07ace83ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6fe6569-c089-453d-940d-23f0eba96e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c0ff22d-2265-4869-bbc8-43f4149a3738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd58cf8-a0ea-4b89-8042-b5cd7a8d8c0a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ba8aa7-b692-4758-afcd-b16b7427c11a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a485692c-1f90-4826-a743-9a63c6e89c7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "778b07e4-5130-4063-8ed0-6779928686d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5743b51e-30cb-4d4a-b391-4dd1fae6060a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42676cf9-c013-4075-a3d6-56514a14b196",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69022142-23ec-43c4-86e5-580cdb804216",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f2b1d31-e9c4-4af9-8e4e-6c6d18ac195d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2442a950-261d-4b4d-9a0f-ad03d8db1af6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "059b975c-a228-4e93-b3d0-2c0416e2c803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a9edaa-a794-4ad1-b401-f1f18cb52ef3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0023be78-95f3-4aa4-b35a-86ddecb6b5f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5f44f95-69bf-4533-8dcc-425216803e56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3424d0-7186-4108-82ea-71451b9c9725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "543898d0-b4b9-4717-b3e8-10bff3c1e646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e450cd4c-27cd-47b9-b5ac-2a7a3b88929d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c174ea1d-c55e-4106-8776-1ea436b9dba8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca813cda-976d-461b-9c2a-fcea03aae62b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb6cf961-8340-432c-9984-e2f2f83280b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61fa98a2-9402-4972-ac0a-01115acbe532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb4ad79-760c-4e13-a7af-4378844d6158",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ddf0fd1-a824-44e8-a001-40bf2c8bc940",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5ef1f9b-bcaa-49a8-815c-61802956bce2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada4daf8-0a26-4d9d-bd5f-8931223dec8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bccf3fde-cb7f-4950-8c4c-4b9d4a231cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f4e32f-59ff-478b-b2f1-d3cba4bffadf",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3076b884-de99-4e0a-bbfa-c60bf7e8d3b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6be3c010-3c7a-4383-95d8-fb427caeb2fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66035309-7608-4a4d-8f33-b517d62564bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "445937bf-cafe-4334-bb4c-77a23f1971a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d9027d-0e51-49f1-8e07-e5c3efab1e45",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0687bed7-adaf-4551-a7e7-8a4b879236a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f99d0c7d-6adb-4f29-8787-9b734e7990df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81485f45-a934-45fd-91df-46c1dcaa7f74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c1a2bab-bdba-45a0-bab6-f41f0e4bb898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aebe4c45-ef99-4ec9-adc8-c65188f0fbd2",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a29ad7-f2b2-452c-bb03-688c990ad6f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41bb6c71-50bf-4cf9-91cc-c5fabfdc2d03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c926a39-1fb1-4ba0-b58d-0075a92f1493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "453370d8-7bcd-4643-a707-511214f97694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deea573e-b9f7-4ef1-9c01-09c4de4f5edc",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63058dbf-b6c3-403d-9299-cd8ffd83a092",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65407580-0845-4d94-8c70-a87f00e165d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "661fd497-213f-44d5-9c88-4c9173061ff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9eb5b29-322e-40aa-858e-d7e21da83c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7767950-aaf7-4f1e-a124-a5feab97273d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5f2c9f-871f-44e6-92f6-9bbc18258b62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e77e9fb1-2293-43ad-a58b-cf7fead2e963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84c13fc-5f48-4371-b746-3126d1f4590f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4e1a0b3-ec6a-4edb-8fb8-3f2f5878af86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e727cf7b-553c-4a74-b2db-a94787020557",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782d5209-3113-4217-9beb-6eb0747c750e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f720a73-d7e5-4175-ab32-88c0b68821da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "742d9d94-8fb2-4cea-9034-bdd2d6d3169c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b585e28d-3a4e-4361-8e39-85846a2ae080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949d13b2-652a-4dcb-9f7e-5332d3fe5224",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2e09c8-40df-48e6-b65a-17e295f5bb91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e57e97f-9259-48c1-9aee-a073d4024fb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "061056c5-4046-46ee-af11-10d5a8d3a321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9832c79-1919-403e-8d14-ce7769df698a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614cf844-37fe-4dea-86ff-d119d66225c7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dcb7bef-3169-49ac-b42a-0ec1fa26a2fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a022998d-4d55-4d24-84df-a0e8768129c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adef64bf-db97-446d-a24b-61e5792e361d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4859275b-e483-4a01-b22d-476e4c146317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe069c2-9815-478c-ab93-3c303d2afd38",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d35457-068c-4f96-998e-e12d9e9090e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80ad9190-63ce-4068-9794-919628235800"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "376484a4-1ff2-47ee-8d32-7045008de2a5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e481125-d427-49b2-82af-b671dca1ade1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42ec6fb-0c26-428e-b44d-d95515381181",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d84728-5908-4208-b5a6-a6f5269737e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0050bf73-0bfc-4bed-81c7-6d223ef4ceb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d83ed45-6a2e-4b27-9255-aec6a43c9eb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3df517c-0943-47f5-9a0f-b874b0d193e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e5912a2-52a6-4127-aeb3-55d19123a983",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95febb9b-4d6d-462c-ae42-e36221bdd900",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0f1972d-465a-453a-9bff-df3034227446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e69ed6f-fd80-411c-976b-68e4ff7304cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2fff3ca-ee67-42dc-9795-9b6c3bfd85b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fcd1499-eff8-4aea-acc0-dc6674e318fa",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f54939-2566-4a31-b273-e7ec5070554b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77372476-daeb-4f6c-9334-65b3bc18cb01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4a2efb-329f-4979-9337-0ca803ecca22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf05c71d-893d-4594-a008-adfff6eb0d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0e0f24-8cd6-425f-b536-d3fb3007a656",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dbfadc5-0f02-4fad-b38e-43d1ad8f5dff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e490fcf-c780-40a8-b9c6-14922b55fb97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c549901-cb32-4d3c-885b-bb585fad9510",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d9d883a-0480-4fcd-afda-e1ab849169da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606138ca-7ab7-448b-82ca-58a73892d884",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104b0d81-d917-47fd-8199-25c3badb0294",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fad7949f-09b0-4f89-b206-ada9cfb10d9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4ec9ed-f57f-46b0-b865-567532aa907a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f26ec975-4372-4d14-a4d7-1b65d23dbd23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39b8daa-1a1f-4c9b-8fd7-f1ec39d2eae3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74919046-0d51-459b-97ef-9bb4a3ab66c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dcf4a92-a6fd-430d-8465-68da3852885e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a067f0d3-cd61-4982-8621-99da55796022",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1c4e1f6-02da-43b4-990b-d759a3138eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ed4a67-a7df-4872-b563-8701b1b92aac",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea5baf6-63e3-492d-a770-12d395a96378",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99a0f337-f7a7-4879-b8c1-aedd32bed18d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0983c080-e844-4560-830c-ef9075403f52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32774640-f8d1-473f-bf48-8043a7b23a95"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa110586-5620-4bf0-a1a6-d6e0120cfbbf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73860f52-9b31-4023-bc6e-8074bac6f24a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "261d44d6-da20-485d-88b5-b3c98cc423c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "63be1a0a-b785-4c27-9d70-2389070bf7d9"
                    }
                  }
                ]
              },
              {
                "id": "3199d19a-ff27-48d0-9c0a-2cc8c164e8d1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8145cddc-59ba-4b3d-99ff-706bc715934c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ba153f-3159-481b-bee2-b92a379d31da",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "daa6d3f1-e68d-4d18-aab6-fef5aa194858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d2b6bc-30f7-4a31-a43e-cf7d933df1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1bd55c7c-9be7-4ce9-8ee0-d7caa25f06d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf53bf9-87b1-45bc-92fe-c1fe2de47c4a",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12447005-b91d-4dbe-be65-4e7277dea729",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c4b8bff6-9280-44f5-8b07-f1491bbce68b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a019bf50-526b-47a8-a07f-b81512f806ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "efe904d2-ed24-40a3-a7c7-5200b8d85502"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f5db152-4664-4528-bb61-c5a19f9bbca5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05c008ba-c1fe-4a2b-98a8-916ce3286d3c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "50af042c-c576-4279-8cb5-302815c12cde",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7a3c967-2a3e-4e6a-b4a5-b65088a84f94"
                    }
                  }
                ]
              },
              {
                "id": "f163411e-1228-403f-9153-9b2ffc86faff",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4abf8d81-57f2-425f-926c-8be1084b136c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be8a6d05-e935-496e-a24f-fc33d6537aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e955bbbe-36b5-4c2c-bb40-9bd0720f0b1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2664b7d3-b6ee-4ddd-9ddc-3c7f5046c785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f78f513-f86c-4543-b8b5-6eed1edf3c6a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "559a600a-d4b5-4c2a-ad88-74371c8b7f4b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cf0acb29-ebe2-4c87-a895-3752ca95f57b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2ec6a6d-9560-44f8-a449-36421e28d3c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ec976059-9fda-4edf-af78-e47ceb79f9cd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4fedb4c6-5ede-4088-b5b1-56304e1dd49c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f3aa91a-8074-4380-b30c-e42bbe2f375f"
                    }
                  }
                ]
              },
              {
                "id": "223d26a7-0ed7-4e47-8ddd-d73e555ed629",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5b17831-775c-4f54-a638-50a7f07b7166",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0420ad55-445a-40fd-b2a8-341ddd67d794"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7cb9c9e6-1d77-4d00-b884-8616ae9eeb24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29340590-7b6a-41df-894f-a1c2e5472fb0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "288d5f8e-df77-4bc9-8237-adf288c733a7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2309043d-a17b-446d-93e4-5043e88d870a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce5b8b37-35ae-49f6-b54d-547bfbd8a2f4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5229d6ba-3196-4a81-89a4-46fde32ca967"
            }
          }
        ]
      },
      {
        "id": "7fa77475-1341-4953-9d28-c39bc8c3ffba",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7510545b-61cf-41ae-9810-ef088ecf2230",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5937097c-5346-41e2-802c-93a155c1e784",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a183619d-9bc0-46a3-82f8-31abf9a633b1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ea29b7-3ff5-4a83-a8c4-3a64c1ccd09a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ac86aef2-4c0d-4be2-9383-0cc7ebeb14ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9677fd7a-a1ec-4c58-8013-630c1ac709e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "583b39d9-9cf4-49d8-a1f2-2c4e1f607fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708eab17-f075-47a3-bfdb-cbd0e94e187f",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1a73b2-9553-46c3-846b-0fee1d7003e8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5516c7d2-9f53-41ee-a950-0b8031f4de24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "539e80f0-119f-42a7-9fb8-8287be7976b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3be5fa3e-c9ce-48a5-a30b-f38f01e7e665"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed16b470-45e1-4dad-88ea-2d59408d5f31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd46476c-c8a3-4ab3-8bc0-98e058240ee8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "851fe946-62ea-499c-ab43-164baac97ddf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09162d2a-e4a8-4b1e-9b52-60cc7d6e3c24"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8c139f9-2d16-4647-b2ca-044c9bf8b8a1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b6b87175-ef2f-4eeb-bcdc-1a1b9a8096ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c6fc3d4c-423e-4721-942c-2226536b49b2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a8c638c1-c15a-4cd7-beed-e8bc2e04e9b8"
            }
          }
        ]
      },
      {
        "id": "7384ac2b-0838-46e1-bf39-2e61ca4ac240",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "dcb219c2-45d2-43a9-9f53-8c8467dcac64",
            "name": "Negative Testing",
            "item": [
              {
                "id": "729ed6b9-1d34-471c-9a6d-eae3fd0505bf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6c95970c-fb0d-4b29-b481-f493edf21dea",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a19c10-47dc-4f59-839e-057d5c7f4f63",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59cb0f35-516a-4fad-b207-5e23b057116f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5bfb2d-d77c-4d4a-93a6-509170165b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34121a87-0508-4990-bd21-d14230052f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb72f882-69bf-4dde-a413-98f669e93ef5",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea433ca-e520-42c2-8924-4073e57bbc8f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b10b74ca-233f-4ed3-975d-51e37239ed23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "305dec44-c739-4842-876a-80e2bb2e5aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c84641ea-9074-4dae-affe-ef386058d111"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a4335d7-ec78-400a-9720-9323774c294a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03ca0491-9cfa-4c74-94ef-fda85e59f906"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7469abf5-fc05-4d3c-adef-b76f95c7c734",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8bec2f74-8930-410f-a84e-698881eb900d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7fdf4023-4f07-48f6-9286-493dba7edf5c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "057c7915-9d61-4ac4-a64c-78dfe9b1a977"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4453b23f-64d1-49b4-84ed-5a258041a7bf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c46381da-1910-4542-b987-da8477bbb945"
            }
          }
        ]
      },
      {
        "id": "4f3fd9ca-e327-4fd7-97ab-90ba1d79c84c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "aa4429b8-1c22-48e9-a893-7ad4dbd4c2cf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "633bab03-c167-41a1-8d8d-1a5a21b62d1e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8724e397-631e-4f9d-ba70-21a7e66f336c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b464a868-51de-4283-bfe2-c59fda8c166d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d11c7286-77c3-455c-9034-8507307caf69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f6b5b8-ab4c-4f37-91ee-370a655c17ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3e736c8-e6c2-4400-bacd-a850901ed2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3973c65-afa3-4ae2-8f94-668b9d6e6f9b",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b32e49ad-3268-4701-8e06-e5ee7c06bb25",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "599440a4-52f1-471e-b1b0-9163830c65c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3564af18-a733-49fe-87f6-031a72cb1c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3e67bc4-371b-48a7-9fbc-49fc10dc342d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe28188e-4d3b-40dd-9d32-757a3a95c2b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de9d3be7-5930-42d9-85b7-baaa0abc6791"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "90682c5d-792f-4de1-9ead-c0f5fb2da6b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c1618a7-87b5-49a2-a688-002f895205e9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2bcee32a-14cd-4a2b-9c38-b804424f7f97",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d247e96a-e9e7-4012-89be-8196384becca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df339a5a-8871-490f-a3c5-8b659dedf537",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2bddd957-b646-4974-9bad-7b5e5117eeab"
            }
          }
        ]
      },
      {
        "id": "35f3bcfa-b436-401b-b2e0-ee9d186f69dc",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "75657926-8ff9-4ac6-8cf4-0f0944f270bc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df6e7b8a-66f7-477f-9514-93081de11a58",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f563d532-9d88-4d03-a262-65bad6ab09d2",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82312fcf-7409-4eb2-98c6-67b83b6d2adb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c07fe8f9-75fe-4132-a7f3-923ab029910a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 42.511538461538464,
      "responseMin": 13,
      "responseMax": 416,
      "responseSd": 43.634979148905785,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1681691876157,
      "completed": 1681691898324
    },
    "executions": [
      {
        "id": "3de762cb-7151-4a10-8965-e54667f30d07",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "91095723-feb9-43cc-885c-ae249807548f",
          "httpRequestId": "11d82983-9fdf-4c26-befc-7e4386829173"
        },
        "item": {
          "id": "3de762cb-7151-4a10-8965-e54667f30d07",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f9113ad5-aca7-45da-b2b9-84dd40106f2e",
          "status": "OK",
          "code": 200,
          "responseTime": 92,
          "responseSize": 0
        }
      },
      {
        "id": "0d9aa8f8-43bb-4de3-9098-8d63768a431b",
        "cursor": {
          "ref": "4a7019df-0435-44a5-a8f6-45a8e1b5e96e",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "99c641e0-2fc3-491f-835a-c7e8dd6a75f2"
        },
        "item": {
          "id": "0d9aa8f8-43bb-4de3-9098-8d63768a431b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6a70f28b-b025-497c-927e-f2fe2e824cd5",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 0
        }
      },
      {
        "id": "ac22a683-c70c-48db-9a04-5a0dae7cb513",
        "cursor": {
          "ref": "ac6415ba-5dce-4b83-8f42-f276a81612a7",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "03466b3c-68cb-49cb-b56f-59fb3b98a2a7"
        },
        "item": {
          "id": "ac22a683-c70c-48db-9a04-5a0dae7cb513",
          "name": "did_json"
        },
        "response": {
          "id": "6cc004aa-7b12-4631-b5d6-379f33e3ea53",
          "status": "OK",
          "code": 200,
          "responseTime": 416,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9118f71b-46cc-4d51-99e3-3416eac92e92",
        "cursor": {
          "ref": "bddba054-d7e7-4fa2-ad51-3e5600696e47",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6659b284-cb5f-44b4-ab39-28ca61c839dc"
        },
        "item": {
          "id": "9118f71b-46cc-4d51-99e3-3416eac92e92",
          "name": "did:invalid"
        },
        "response": {
          "id": "16c37e3c-4f92-4a36-a6e4-e39649bc3bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9118f71b-46cc-4d51-99e3-3416eac92e92",
        "cursor": {
          "ref": "bddba054-d7e7-4fa2-ad51-3e5600696e47",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6659b284-cb5f-44b4-ab39-28ca61c839dc"
        },
        "item": {
          "id": "9118f71b-46cc-4d51-99e3-3416eac92e92",
          "name": "did:invalid"
        },
        "response": {
          "id": "16c37e3c-4f92-4a36-a6e4-e39649bc3bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c1b386-286b-4c1d-b18a-d0db85ac3b6b",
        "cursor": {
          "ref": "740a154b-7414-42b8-9baf-b26db5662078",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "61b43f90-d862-442a-a7a5-7e34befbd2a6"
        },
        "item": {
          "id": "e5c1b386-286b-4c1d-b18a-d0db85ac3b6b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e6e721b0-6881-40c3-83be-85aa9f29ec7a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 140,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d973efd9-0851-42d6-a147-2f7459f8605d",
        "cursor": {
          "ref": "8c751e60-a651-40fb-941e-76f7a33b786c",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "15be5976-a697-4bee-97ee-e5c51c027b47"
        },
        "item": {
          "id": "d973efd9-0851-42d6-a147-2f7459f8605d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4bef87ec-6163-4249-9463-9d8666369723",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c00660-d916-4395-b86f-521ac1560f65",
        "cursor": {
          "ref": "d7a39329-731b-4cae-92c8-7e1eea9847b9",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4fe3bc22-d6e6-420f-bb7f-a62059d9c590"
        },
        "item": {
          "id": "40c00660-d916-4395-b86f-521ac1560f65",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c9130551-bdcd-448e-943a-63a757abdda2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9463f7a5-7088-42aa-bfca-90e49ace8cfa",
        "cursor": {
          "ref": "4808ea84-ce03-4ab6-9610-158380318f53",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "285e7624-e6f1-420a-b8cc-be81898a4cb5"
        },
        "item": {
          "id": "9463f7a5-7088-42aa-bfca-90e49ace8cfa",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "64581e33-8cca-46c6-b4d1-f416029a45ce",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9463f7a5-7088-42aa-bfca-90e49ace8cfa",
        "cursor": {
          "ref": "4808ea84-ce03-4ab6-9610-158380318f53",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "285e7624-e6f1-420a-b8cc-be81898a4cb5"
        },
        "item": {
          "id": "9463f7a5-7088-42aa-bfca-90e49ace8cfa",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "64581e33-8cca-46c6-b4d1-f416029a45ce",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd5d8b0-d4b2-40ac-bac3-77093d7316e6",
        "cursor": {
          "ref": "abb6bfee-6428-42a6-b2e0-acbe6f7049d9",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b4adeafc-d54f-4d33-9aec-61f174c7bc45"
        },
        "item": {
          "id": "edd5d8b0-d4b2-40ac-bac3-77093d7316e6",
          "name": "identifiers"
        },
        "response": {
          "id": "8b10651a-d243-454f-94b2-ff5b7984afda",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd61d27-82ad-4a1b-9423-4806d0ca5a58",
        "cursor": {
          "ref": "85f12a28-05c7-4309-a986-d1778298f456",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e3e6ca0e-83a5-4ad1-b3ac-f9ba42524f24"
        },
        "item": {
          "id": "4cd61d27-82ad-4a1b-9423-4806d0ca5a58",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c883c7ec-c5b7-4474-8920-0518e789bad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd61d27-82ad-4a1b-9423-4806d0ca5a58",
        "cursor": {
          "ref": "85f12a28-05c7-4309-a986-d1778298f456",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e3e6ca0e-83a5-4ad1-b3ac-f9ba42524f24"
        },
        "item": {
          "id": "4cd61d27-82ad-4a1b-9423-4806d0ca5a58",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c883c7ec-c5b7-4474-8920-0518e789bad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125f0f0f-defb-46be-8258-6b36d8edf42b",
        "cursor": {
          "ref": "925306e9-d8db-4bc6-8adc-cf8642431905",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "361cd2e5-69e6-420a-93fe-1423134c42b0"
        },
        "item": {
          "id": "125f0f0f-defb-46be-8258-6b36d8edf42b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "88be0395-d6ac-4013-b9eb-20ee09720c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea7d86c-fa7d-401d-93cf-0e029f73eb0d",
        "cursor": {
          "ref": "684bf1de-82cf-418a-b4ec-2c48bce4b590",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "374fe89b-444f-41c2-9986-eca1d8100967"
        },
        "item": {
          "id": "8ea7d86c-fa7d-401d-93cf-0e029f73eb0d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "520c7ca2-4a45-4ffa-a27b-bcc92fdb3121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618da13a-3500-4b03-ae20-559940c0f28f",
        "cursor": {
          "ref": "10d3d4c5-6016-409e-92f0-12f819263838",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3cf0b13f-cc02-43d5-967c-c716f170913d"
        },
        "item": {
          "id": "618da13a-3500-4b03-ae20-559940c0f28f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "38010da6-a2fb-4546-96b5-29f1de455850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c46534bc-587a-4f4a-a343-c4a8c1ade4bb",
        "cursor": {
          "ref": "7e8219b9-6c14-4dc8-b216-deef0455dde9",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "10bfdbe9-b3e5-4e3b-a771-b73d82440d6e"
        },
        "item": {
          "id": "c46534bc-587a-4f4a-a343-c4a8c1ade4bb",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5836fe93-cddb-4df7-9a78-bd1946c6b199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad717a4-3313-4f34-adbe-999be72f114e",
        "cursor": {
          "ref": "26e31331-9400-4fed-8523-e093085f5680",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a2e72fc8-cbc9-49de-bec4-0fba1b555f12"
        },
        "item": {
          "id": "2ad717a4-3313-4f34-adbe-999be72f114e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "18f84af1-8921-469a-be01-4fab068e44f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86082d9-ba60-4e29-9644-a0f2a82c013e",
        "cursor": {
          "ref": "d4646c82-0f58-4fab-939f-c9659dbb9069",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "12de99c3-e3af-41b9-83c0-36397edf429f"
        },
        "item": {
          "id": "d86082d9-ba60-4e29-9644-a0f2a82c013e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "05012b37-9f25-4095-bd7c-f4fc7ec1c420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1028cf-7c05-464a-b65a-a65c4b0a4bf6",
        "cursor": {
          "ref": "770a71b2-51c2-4db3-943f-bf9e17e5052b",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0c86e65b-24b6-4961-9a14-206828c31838"
        },
        "item": {
          "id": "0d1028cf-7c05-464a-b65a-a65c4b0a4bf6",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3d29d7cb-c524-4d88-a9a4-0d9e33f6e428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdaf6d3b-dcb0-43e0-ab8a-9f688110327a",
        "cursor": {
          "ref": "a451e85b-f5cb-437e-a0b6-dd6229dcd78d",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d71871dd-7554-4655-9ed0-90fb399bd078"
        },
        "item": {
          "id": "fdaf6d3b-dcb0-43e0-ab8a-9f688110327a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6392fd55-75f6-4e13-8cab-1995e6f02b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e570b57-9971-4915-9c40-c0743f7c9e70",
        "cursor": {
          "ref": "e2a02385-d7fc-4773-8b73-0ce3c646bba2",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "7c698810-8625-403a-a0df-3aeadeec2eb2"
        },
        "item": {
          "id": "9e570b57-9971-4915-9c40-c0743f7c9e70",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "170a81d7-e685-4a30-9a41-5eaf07fed9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb1259b-f6a7-47e9-aae8-58919e9883e1",
        "cursor": {
          "ref": "4e192630-f24a-4968-9669-7d797a40b843",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1a8e784a-19e4-4a1d-b2c5-2adae126bee2"
        },
        "item": {
          "id": "5fb1259b-f6a7-47e9-aae8-58919e9883e1",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "8b1e69ca-d8e6-4e0b-b56a-f91c0d4867de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e92858-7020-4495-afb4-aa422ecf6795",
        "cursor": {
          "ref": "e875a106-05a5-46e6-a75a-464d538f8096",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5bf3c59a-e75c-4b4b-a7e9-a2e3d4b649f2"
        },
        "item": {
          "id": "64e92858-7020-4495-afb4-aa422ecf6795",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6f765f97-e1e0-40ef-afc8-b4e132e4d033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85bf802-131b-4d60-9ba6-33bf9116d899",
        "cursor": {
          "ref": "26dcbc51-ee38-480e-af61-aa7c017671b0",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a8cc9589-b4e9-40f2-bdb5-cdac656c0cfd"
        },
        "item": {
          "id": "a85bf802-131b-4d60-9ba6-33bf9116d899",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "42a20c37-33db-4cb7-8bec-5cf80fc5edde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c109b432-d022-4401-867d-fe0cd254da3a",
        "cursor": {
          "ref": "158f6a0f-15fb-4ca4-b639-da4b88171057",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "34238adf-cc38-4aa7-91bf-19efd8275132"
        },
        "item": {
          "id": "c109b432-d022-4401-867d-fe0cd254da3a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f4428ba8-a535-4e1b-a5c4-ca56f53fc82c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde5cae6-796e-427c-a090-0f14d3850ea1",
        "cursor": {
          "ref": "419c016a-13e1-4f61-8888-474968b14671",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5c6e86a8-4197-4e58-a5dc-7aa8d2e7d11b"
        },
        "item": {
          "id": "fde5cae6-796e-427c-a090-0f14d3850ea1",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e2e1af4e-623b-421d-aa59-fe47dee7015f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72719a86-642c-4387-8662-c70a80be7da8",
        "cursor": {
          "ref": "9fd5c837-98ec-4dce-bd8f-86f07b231f69",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "897e02a0-1371-4ff9-904f-c67dcbcb70af"
        },
        "item": {
          "id": "72719a86-642c-4387-8662-c70a80be7da8",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9aadfe4e-de27-4753-832a-fd636f884c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b201b52d-81d1-4262-bf3e-c378e27f9a00",
        "cursor": {
          "ref": "115b5c66-e119-4339-853a-6aab9e2f0e3e",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8c084372-cdb4-452a-83e0-31ac9ca9cfb2"
        },
        "item": {
          "id": "b201b52d-81d1-4262-bf3e-c378e27f9a00",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "177be60d-99b7-4b97-a08d-3016cc317767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d195471e-6cb3-414d-b066-19d8f3287dfb",
        "cursor": {
          "ref": "d4426888-b12b-4c35-b802-105e5033d500",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d3edbb9f-1d04-4eae-9686-1d883c26963e"
        },
        "item": {
          "id": "d195471e-6cb3-414d-b066-19d8f3287dfb",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "fd46b493-3ab9-4a66-9d69-0472d392c095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4ad186-ac81-45bb-8f16-e407dd29462e",
        "cursor": {
          "ref": "5215c7ec-c92d-4149-8421-137febf2910a",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d115b4a3-ed13-4260-b26b-fd660e4a12e4"
        },
        "item": {
          "id": "2d4ad186-ac81-45bb-8f16-e407dd29462e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "500b2a07-30cc-4470-8d7d-91d867b6a79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71fbcc10-9629-4ee5-a8a0-01323d231007",
        "cursor": {
          "ref": "e67d576a-0b97-46e2-a5de-fe7c319ca351",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f6dd7cd7-a16b-4619-b233-d9df7d8fd7a6"
        },
        "item": {
          "id": "71fbcc10-9629-4ee5-a8a0-01323d231007",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f97114e7-e410-4dd9-8a08-22e914b68690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa801a7b-1dca-4cd3-be0a-f1ca3b6aa0bc",
        "cursor": {
          "ref": "8562371c-2613-40ec-9f48-29e6df29714a",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4a625de3-ab6c-4f26-9ab5-8fc81fd7c46e"
        },
        "item": {
          "id": "aa801a7b-1dca-4cd3-be0a-f1ca3b6aa0bc",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "10d79443-59bb-4135-8a6e-58ccfb5fe39b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13558ebb-53d1-4e85-a073-92946e3f403b",
        "cursor": {
          "ref": "d14b77bf-3f87-4bc1-941e-3876e1a482ff",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a54be630-b063-4c3d-a7a3-a32b1c26d275"
        },
        "item": {
          "id": "13558ebb-53d1-4e85-a073-92946e3f403b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3f4b722b-e9b7-40e6-b542-b5462a0051af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877f5a94-0639-4ab6-b94b-5425dba75e66",
        "cursor": {
          "ref": "e6dbbd77-875d-49dd-8bdf-a75e873b2a85",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "fc0f2884-835a-4d02-96b7-d5c17dc0c1f9"
        },
        "item": {
          "id": "877f5a94-0639-4ab6-b94b-5425dba75e66",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "00917dbb-a977-42a1-a04b-3c6bc9e636c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80535d9b-83da-4f9b-91b3-b2564b111457",
        "cursor": {
          "ref": "bef66898-3646-4b4c-b3c0-eac418b1b8b4",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a52c3c8c-dc75-437a-b202-07f31575e4de"
        },
        "item": {
          "id": "80535d9b-83da-4f9b-91b3-b2564b111457",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "72ae1fd2-7827-44d5-9ee2-af401fab97fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72528159-a55c-4f5f-9731-bc936c4f3fec",
        "cursor": {
          "ref": "fccca5c3-5308-4f2b-810e-6eeb84572399",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d1a72dca-66a9-4eb4-87bf-00e504a09929"
        },
        "item": {
          "id": "72528159-a55c-4f5f-9731-bc936c4f3fec",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9d0726c0-dab7-400f-b1f5-70df29a73a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d06eabc-0931-4233-bfb0-95f8fdec28dd",
        "cursor": {
          "ref": "27ed62af-dad7-4040-a043-ffb6bcf66e57",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ce1adaed-b2bf-4d0e-a989-67ce4076bad7"
        },
        "item": {
          "id": "2d06eabc-0931-4233-bfb0-95f8fdec28dd",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "3a0ffed9-faff-41cc-a9c6-c1e0dd83ab44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ad993c-7cda-403d-987b-6852423f3268",
        "cursor": {
          "ref": "c39d65d5-ddc9-4824-8ed4-9206682bfe6d",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "00f87bef-2385-4c7c-9b39-bd738a39b61d"
        },
        "item": {
          "id": "44ad993c-7cda-403d-987b-6852423f3268",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "bb8005a6-7544-4b11-8d82-db5e45b5811b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ddcbd77-5547-4ede-95d4-3e456750f413",
        "cursor": {
          "ref": "9b8e87f3-a399-44ec-b764-a2aca2fc3081",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7a7d5295-cf8b-47c4-af6a-e2e8cb7ad27b"
        },
        "item": {
          "id": "8ddcbd77-5547-4ede-95d4-3e456750f413",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "2a2e0c5e-e34b-4a6b-a5c8-9b1beb967cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85db560d-9635-4f6c-b591-9cf78f1c7e8d",
        "cursor": {
          "ref": "c4ab8011-cc19-4ada-bf7a-32bc24b51ded",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1d530324-001d-440c-a5e8-307398641dd2"
        },
        "item": {
          "id": "85db560d-9635-4f6c-b591-9cf78f1c7e8d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8013b196-a15b-4e1f-bf42-2968e5580c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88189f08-7e4e-4563-9348-576dcd19c2dd",
        "cursor": {
          "ref": "1621c1b2-512a-47ef-8f4b-f50abcce142c",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "48e58250-e7b8-405e-9ead-8d470d474fa2"
        },
        "item": {
          "id": "88189f08-7e4e-4563-9348-576dcd19c2dd",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "994c9aaa-9d70-4b3b-8311-05dd94572f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6485f74-0645-4ae5-9448-9a9253ae4407",
        "cursor": {
          "ref": "78d2259d-ad40-4b47-a85d-6b735c2030c3",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9b2c8004-d634-475c-b4bb-17047e54bbf4"
        },
        "item": {
          "id": "d6485f74-0645-4ae5-9448-9a9253ae4407",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "70891e04-c4a4-48b6-9c82-b390fda28518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e4d8b3-788a-4ffd-b7a8-07df0ba0d8c2",
        "cursor": {
          "ref": "0da4367c-6db3-4b59-ba8f-e2898b56b622",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d1c3cdd7-48f4-4831-8974-92b9d57ed4c8"
        },
        "item": {
          "id": "a5e4d8b3-788a-4ffd-b7a8-07df0ba0d8c2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "bf84e8c5-fd03-4bfc-a79a-28820e86f82f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e51666e-e3eb-418c-aab1-68a4b917792e",
        "cursor": {
          "ref": "e23441ca-6b0b-460f-9622-7c28c3345402",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "038fcb6f-60b6-4c36-b512-5c3ec3a45efa"
        },
        "item": {
          "id": "9e51666e-e3eb-418c-aab1-68a4b917792e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "89d22496-868e-448a-a391-785bebe6131b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e56e9d-c06c-4ef1-ad5f-ee0ec46a09f7",
        "cursor": {
          "ref": "e49fd595-695d-4550-a4be-0e840a806db6",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "73d4f409-1e7d-4ca6-85c2-de4885630537"
        },
        "item": {
          "id": "84e56e9d-c06c-4ef1-ad5f-ee0ec46a09f7",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0aaee75f-d258-4887-959c-722a488f1384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df5aeb4-8845-4254-a091-75a3725c0278",
        "cursor": {
          "ref": "22e8217e-bc3f-4beb-bbb2-18c03748bcaf",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c39bb1a3-c04f-4149-83ff-1f51cb1aea08"
        },
        "item": {
          "id": "3df5aeb4-8845-4254-a091-75a3725c0278",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4be55aaf-534c-4d51-875d-f72bcbf97ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85349899-eee3-4fb7-ac97-b692b5a04103",
        "cursor": {
          "ref": "62bc8bc1-ae75-4879-b9f8-6936eb868fb1",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e31abfe6-2f7a-40b4-bd04-ff5fd0e69bed"
        },
        "item": {
          "id": "85349899-eee3-4fb7-ac97-b692b5a04103",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "81e24499-6793-4f5c-8235-6e7da70c74b8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 40,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6e7fa7-f45f-468c-8abe-530900ea69a4",
        "cursor": {
          "ref": "9bf956d3-0e10-4436-a03b-a45010bfbf4b",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9cbebc4d-a5d3-436d-ac82-8d7f8d7715d2"
        },
        "item": {
          "id": "ae6e7fa7-f45f-468c-8abe-530900ea69a4",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2e0df2c3-5727-4812-8f94-676db54b19d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e781b48-7b63-4e71-9e5a-ad851aa28e6d",
        "cursor": {
          "ref": "0908f6f5-ed6c-49ea-98e8-6fb5f02a9b0b",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "68c77e30-7a8d-480c-b2a5-2cb4319d4315"
        },
        "item": {
          "id": "3e781b48-7b63-4e71-9e5a-ad851aa28e6d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "80a321ab-a785-4ccf-9e4e-ae6bb83e70a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3fcc58-2304-401d-8c21-b69ed979570b",
        "cursor": {
          "ref": "62820e9c-a549-408e-a254-7faf343df70a",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0d7b05ad-9164-4423-beaa-e360172d53a0"
        },
        "item": {
          "id": "0f3fcc58-2304-401d-8c21-b69ed979570b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "162c23c9-e3bb-40ce-bcbb-fe420d0e4868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66beacd-3360-4946-9bed-e031518d1672",
        "cursor": {
          "ref": "fc35068a-e023-404b-b2da-7304e4200e34",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "60aa74d6-12b8-4595-a7d3-c54092f1b686"
        },
        "item": {
          "id": "d66beacd-3360-4946-9bed-e031518d1672",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "438540ec-be21-4c99-bfaf-0e399e0941c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9c6445-8b36-4322-91e0-41bb301c5d04",
        "cursor": {
          "ref": "96998075-2440-4fc7-a2d9-02e422a142a0",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "44f0b5a6-53b3-4bd9-a307-8b51172f81fb"
        },
        "item": {
          "id": "3e9c6445-8b36-4322-91e0-41bb301c5d04",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "281428c1-1e35-4085-8767-a78b42e40206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a6b3ad-e224-40ba-b74f-7ebe60f5c1e6",
        "cursor": {
          "ref": "051abc67-f7f5-4a7d-9716-cdb64fbd2442",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "dcfeb3cf-d995-42ec-a10f-ef245e1a3f46"
        },
        "item": {
          "id": "a6a6b3ad-e224-40ba-b74f-7ebe60f5c1e6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d315aab5-aef8-4bcd-955a-7cb1059908ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdeafba0-e577-47c1-b1dc-e00a8567ee7d",
        "cursor": {
          "ref": "9352acb6-3d22-45bd-b474-ae96aeb87851",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "939ee627-07a2-43a3-9578-3a1a323cd89c"
        },
        "item": {
          "id": "bdeafba0-e577-47c1-b1dc-e00a8567ee7d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8b1cf511-38bb-4ad4-be49-07aaca999b05",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 40,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e319b3d-6177-4637-a988-eb37a3e83342",
        "cursor": {
          "ref": "0d44d87f-3a6b-4036-8950-0b012a1276d4",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "33b61775-8186-4b1d-95c7-3f71ad8e5c34"
        },
        "item": {
          "id": "4e319b3d-6177-4637-a988-eb37a3e83342",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a376d910-67da-4678-a22c-a75e511a1088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36a2999-5555-4bff-8fb3-aeb44ee8f8f4",
        "cursor": {
          "ref": "8a4ad227-94d6-4c9a-b547-201d2dd45e09",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c2592812-da13-4c3d-941d-dee58da63b83"
        },
        "item": {
          "id": "e36a2999-5555-4bff-8fb3-aeb44ee8f8f4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d1680ac1-f1d3-4122-ba64-52bf9cb58ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcceb494-10b2-4443-92e2-160e6f30c0bb",
        "cursor": {
          "ref": "1ab712f0-d9d4-4027-b4ff-7d8f9c46738a",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3e514254-9708-4add-a4ff-addf19fb3e31"
        },
        "item": {
          "id": "bcceb494-10b2-4443-92e2-160e6f30c0bb",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c901a467-60aa-43f0-84ef-4b5b79380376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c247c941-7f47-400c-a890-ccd87c34d0c1",
        "cursor": {
          "ref": "76569723-f234-477e-ab13-50561861183c",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "db40e86e-f68b-4e72-b2da-f8abe94b84cf"
        },
        "item": {
          "id": "c247c941-7f47-400c-a890-ccd87c34d0c1",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "cafebe87-35bb-4c7f-ba18-0732ef0a294a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e64de0-c4f6-4eed-ae9f-2c4e16789477",
        "cursor": {
          "ref": "7db61bf1-e2ec-4d87-a53c-c044ad01a6f9",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "eb5b9aa3-8165-4a93-bbe0-8eee6e5cc4ee"
        },
        "item": {
          "id": "77e64de0-c4f6-4eed-ae9f-2c4e16789477",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "684781c3-ad23-4551-a30f-a35c57e8aa0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f53dea3-57ca-4537-b42a-b6a60902fb2f",
        "cursor": {
          "ref": "0c12006e-cd0b-4a97-ba23-1bbe59b5a76e",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8bdf6fc2-f148-4fb8-ac24-79a03528a7d7"
        },
        "item": {
          "id": "8f53dea3-57ca-4537-b42a-b6a60902fb2f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1cb76d1a-58f0-44e6-ba9f-f429fcc83ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb31183e-01c1-4317-ac96-e678f5778b95",
        "cursor": {
          "ref": "6fb3f312-ce0b-44bc-bc95-5d2762f699aa",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f27ed0d5-b77f-46c2-9818-d0dc329fea06"
        },
        "item": {
          "id": "eb31183e-01c1-4317-ac96-e678f5778b95",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "bb61674e-d283-46e7-a500-39539ff1ba82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd248a5d-172b-4ce4-88cb-bdcb790347e9",
        "cursor": {
          "ref": "e3182d62-b430-46fc-ac5e-51de44841a8e",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c266b07d-5b1f-40f5-b641-e1e29679fa0b"
        },
        "item": {
          "id": "bd248a5d-172b-4ce4-88cb-bdcb790347e9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "328b69ca-22b9-44ec-8532-efda917348ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810421c1-8833-4c23-8377-0cc964deb72c",
        "cursor": {
          "ref": "efd1dd02-ab11-4a07-b2bd-09b03a36cefb",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "40250483-36bf-4aab-8197-53cabc575e2c"
        },
        "item": {
          "id": "810421c1-8833-4c23-8377-0cc964deb72c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "0f9fbc04-e210-44dc-ac7d-7e9ee869d9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82fcd3b3-0acf-4866-a710-45a7e42ab335",
        "cursor": {
          "ref": "da840b5f-c3ad-43e3-8e5a-43a4bf5cee59",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "75fc3754-ba78-480f-89ac-65fc7fcd22d8"
        },
        "item": {
          "id": "82fcd3b3-0acf-4866-a710-45a7e42ab335",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9ca51e14-c557-4e40-8869-942b162e5084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787316a8-6807-42fa-9cb4-73e78c9c7689",
        "cursor": {
          "ref": "34efaf97-e215-4c9e-bf9f-0921e00d7509",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9ddc4be7-9779-4a5e-b9fa-f155afa4cac7"
        },
        "item": {
          "id": "787316a8-6807-42fa-9cb4-73e78c9c7689",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "53aada59-0ba5-4765-b41a-849766b3c730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49132c84-163d-4429-8958-8097ae0e59ae",
        "cursor": {
          "ref": "11d912b7-d916-4dc3-a213-d32319282ff2",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b1e4edc4-acb1-4f87-b56e-b39d436d2c0e"
        },
        "item": {
          "id": "49132c84-163d-4429-8958-8097ae0e59ae",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "41f218a0-41b0-4546-a804-03956127497a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66bd0f96-fac9-42b9-bb8d-8be8185c7e32",
        "cursor": {
          "ref": "c62a01b8-5849-49cb-9c3d-c6e8a1ee0afc",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "fcd29703-d639-42dc-ba7c-17c095167504"
        },
        "item": {
          "id": "66bd0f96-fac9-42b9-bb8d-8be8185c7e32",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0dd4d9e9-25bb-4959-9269-aa00bceacfe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ddc288c-0d3f-4a5f-b7c0-18f178cbe05e",
        "cursor": {
          "ref": "f886d433-0609-403e-836b-0c2511277ab4",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "0cc31355-f762-470d-9338-68b0e4b8bc97"
        },
        "item": {
          "id": "6ddc288c-0d3f-4a5f-b7c0-18f178cbe05e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0ebc907d-65d7-4e38-8562-38befc570131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93395356-93ca-4799-a5f2-264655ca187f",
        "cursor": {
          "ref": "0c598a17-af1b-462b-885d-3e5acce83991",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "389f704e-867c-458c-ab3a-bd8c0c9b0fab"
        },
        "item": {
          "id": "93395356-93ca-4799-a5f2-264655ca187f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0daf1382-a6e8-4edb-a0ea-42445480b3c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79515ed-3b52-4de8-ac09-8a9946617492",
        "cursor": {
          "ref": "22f719fc-05c7-465a-9e57-4c48c996f9ad",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1f657976-5ab3-42be-843c-ce978727dde5"
        },
        "item": {
          "id": "d79515ed-3b52-4de8-ac09-8a9946617492",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6e525ab6-8f22-4164-8430-a67371471b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966dada9-09b1-4f4c-ae9f-e3d704ce8b0f",
        "cursor": {
          "ref": "eee37a91-7b45-4333-bf26-2a6ce9e9c461",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "fc3f2357-3af4-405d-b387-364f981fc691"
        },
        "item": {
          "id": "966dada9-09b1-4f4c-ae9f-e3d704ce8b0f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "63476585-7719-40dd-819a-2e2eae05dda5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b0f54f-a406-4800-b162-a8b2ac53f1a2",
        "cursor": {
          "ref": "e7b5b361-1706-4190-8ccd-bb5d0c71b13a",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4a1e32f4-337a-45c9-ba2a-3f189d044814"
        },
        "item": {
          "id": "53b0f54f-a406-4800-b162-a8b2ac53f1a2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a9a3078c-2302-4b86-8cde-03afaa71d89f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b90152-7efd-45ea-98c3-365e38d3bc2c",
        "cursor": {
          "ref": "3dc2f3dd-bb8f-4771-b800-a9737eef86af",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5d6c6405-aedf-4081-8f16-c2adab007013"
        },
        "item": {
          "id": "e4b90152-7efd-45ea-98c3-365e38d3bc2c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3539663d-0d1e-4883-8de9-4cb2a3c7320a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a07b3e-827a-4b3d-835a-18031a341421",
        "cursor": {
          "ref": "84b3e785-6acc-4a55-ab72-ffa9045ace17",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c7306a47-ea30-4bea-8c29-4626bbd0ce95"
        },
        "item": {
          "id": "c1a07b3e-827a-4b3d-835a-18031a341421",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "78c46f59-e59d-445a-a6b6-1152d949163f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd35f886-7325-4908-83ab-e15abc6d09a3",
        "cursor": {
          "ref": "83f07ec7-a48b-4b0f-a4a2-dd4f6c2719ee",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9cc878ae-3a4a-4e9a-aba1-2f4f3d74e99b"
        },
        "item": {
          "id": "fd35f886-7325-4908-83ab-e15abc6d09a3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "20d112e2-3cc9-45d0-88b1-0e1ed327401b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4757584-4af8-4be4-b264-d1a5a028e371",
        "cursor": {
          "ref": "e2490cd0-a565-4e5b-92bd-3ba3e87ac4a7",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7d59f8aa-7ab9-4679-b908-28eb3976d141"
        },
        "item": {
          "id": "d4757584-4af8-4be4-b264-d1a5a028e371",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "75e3fab8-e170-4cbd-8e99-97ff950ae507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401a161b-a2a1-4e30-a968-141f0845dfa3",
        "cursor": {
          "ref": "1eb8076e-b8ca-44ba-bd5d-5101b9e50411",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "507b0d20-3bc0-4449-8c8d-be6941ed6e4b"
        },
        "item": {
          "id": "401a161b-a2a1-4e30-a968-141f0845dfa3",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1d57b1d8-f6cc-4f76-ac95-c8dcb1ec7f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3f1289-b318-4187-8140-0f8e52da0051",
        "cursor": {
          "ref": "c587481c-df28-4ee3-a080-37f83666e2dd",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2f355564-a0ec-488e-a489-c43a1e322089"
        },
        "item": {
          "id": "ec3f1289-b318-4187-8140-0f8e52da0051",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6a607791-906b-40f7-b5a9-0e4eae7be2ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e96e41-a597-4e82-8cf1-b6791a82cf40",
        "cursor": {
          "ref": "6ea01724-d8b9-408c-b2bc-d743e67796b4",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f4fff7cc-6ff6-4cde-a95c-ce0fb1061e03"
        },
        "item": {
          "id": "70e96e41-a597-4e82-8cf1-b6791a82cf40",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f1175657-c0ab-4ed0-b59c-80223eea662e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b54081-d553-4c78-84d0-7fb064bcd15f",
        "cursor": {
          "ref": "5e104a71-c2be-4987-b473-7cd73b13b7e9",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9dd62f18-1b51-4a73-808b-9538b05630cc"
        },
        "item": {
          "id": "c5b54081-d553-4c78-84d0-7fb064bcd15f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c9fd4059-8005-4fee-85f1-ae02fce97ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6336eb2a-377c-4137-b817-3ba1c7497b5e",
        "cursor": {
          "ref": "89fe638b-a2fd-4067-ada5-0a16e40ace92",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b48f7caa-6be9-4d8a-a7ab-1f9c871f588f"
        },
        "item": {
          "id": "6336eb2a-377c-4137-b817-3ba1c7497b5e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6e6574b7-8cb7-4826-b01c-504914a34078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa1e848-5f57-4cce-8c13-2416bf05b4e7",
        "cursor": {
          "ref": "0b36f1f4-ecb0-46a9-9e8f-ca5425f458c8",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5d439037-bd76-44cf-8ef1-2a6480adcf9d"
        },
        "item": {
          "id": "3aa1e848-5f57-4cce-8c13-2416bf05b4e7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9f861f96-0238-4168-805c-0a2850b2688c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e659034-31dc-41db-89ec-3800162e14a5",
        "cursor": {
          "ref": "ab4d94d0-eb98-4e0c-ba18-309b08223ce7",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7df36916-1482-45d8-bb4e-4976ff2762a6"
        },
        "item": {
          "id": "5e659034-31dc-41db-89ec-3800162e14a5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7bd0ac04-4eca-4d7b-8572-c5aa19500ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c088878b-15f4-44b7-9605-b52536365850",
        "cursor": {
          "ref": "48b415d1-4798-4a1f-8a87-eb540f0f74d8",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2f44e8e5-b04b-4460-95cc-48716afa24c1"
        },
        "item": {
          "id": "c088878b-15f4-44b7-9605-b52536365850",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e5c1fcf7-8f2e-41c1-8bf8-dc19a482ba4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec50af8-8d6d-4f85-b7b3-be65151e2ac4",
        "cursor": {
          "ref": "219ec7a2-bf34-4337-8e52-52f479f01fb2",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6dfde27a-ed58-4627-bb8f-36ae67121b5f"
        },
        "item": {
          "id": "9ec50af8-8d6d-4f85-b7b3-be65151e2ac4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1248fcc9-f137-4fae-9b5f-b7a03efacdf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f93e79-4c63-48e2-be63-9b773f6612f5",
        "cursor": {
          "ref": "acf5f6b5-6db0-4b8d-9c04-7f1766a9e2be",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d69dea7d-fd70-4766-a444-7d26912e2313"
        },
        "item": {
          "id": "89f93e79-4c63-48e2-be63-9b773f6612f5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "437d3af0-8362-44aa-a394-1cbb70113a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046b9756-c802-4395-889e-6df3a07646f5",
        "cursor": {
          "ref": "af130393-ca28-45e7-a408-c78567e42ee1",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f8c04bf2-8950-4482-abe8-66b0f7b666f5"
        },
        "item": {
          "id": "046b9756-c802-4395-889e-6df3a07646f5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "efd57a3a-9c91-4d35-953c-1072fc153196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6af11c1-cb08-48c2-902a-3c5ae00de0ea",
        "cursor": {
          "ref": "7a7738fb-e982-4f9a-a3aa-90558601a009",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0aecccc3-5d09-4659-88b9-e6dbd4d39ec6"
        },
        "item": {
          "id": "a6af11c1-cb08-48c2-902a-3c5ae00de0ea",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6cd79576-3b77-4a68-996f-edcb21ac6500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a03b9c-066c-4f9e-a8b4-953c65563e72",
        "cursor": {
          "ref": "de769963-ad8e-4f3c-9f06-c2d09668ef58",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4b46cec5-bfa6-465b-8d0b-8810e9eb0ac2"
        },
        "item": {
          "id": "00a03b9c-066c-4f9e-a8b4-953c65563e72",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a5500fda-b7d7-44d9-9513-bf4bc3ab8bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4947a51-f431-4f3d-9558-40c823a237f1",
        "cursor": {
          "ref": "a2d73423-fb87-46cb-b5c4-2c14181e075b",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f678e3bc-88da-4402-91c9-84e2cae03d81"
        },
        "item": {
          "id": "a4947a51-f431-4f3d-9558-40c823a237f1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b0e8bbe6-3c51-4970-947d-a7448e817693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9b25a8-b798-4b83-b1bb-5ba7a1ff0561",
        "cursor": {
          "ref": "6067ec3b-d2ba-4872-996c-e4079adbb1a1",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "71bfab61-8f77-483a-9e45-60f5d99c6273"
        },
        "item": {
          "id": "4d9b25a8-b798-4b83-b1bb-5ba7a1ff0561",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a2c93fa2-e416-4e72-b189-01381f5664e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559a2bbe-c655-4726-8d11-5af730b265e7",
        "cursor": {
          "ref": "8dbc7622-bbc7-45ce-823c-7a581481db63",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "63e2695c-2c5e-4deb-b53d-793d7fc479b5"
        },
        "item": {
          "id": "559a2bbe-c655-4726-8d11-5af730b265e7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3a6d7d4b-0b39-47dc-92e6-aebc780c3e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "970fd0e1-3350-479a-8466-e3cefc3da9ad",
        "cursor": {
          "ref": "415ef4f5-c143-4e3f-be75-d2cd143f2de9",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "dc68dbe5-3387-4104-a0bd-fbbb3800e001"
        },
        "item": {
          "id": "970fd0e1-3350-479a-8466-e3cefc3da9ad",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "76c37de5-a632-433d-883b-349d8815a55f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b78cf8b-405c-40db-872a-15a0ae19b27f",
        "cursor": {
          "ref": "72bf9393-088e-4766-a7d6-7195fc2c093e",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1fcf5a8f-ed51-44a6-b504-735356c56404"
        },
        "item": {
          "id": "7b78cf8b-405c-40db-872a-15a0ae19b27f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6f0c80c4-c2c3-499b-a63d-796518c28e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3681aff3-232d-4106-8061-99f1fd967ea6",
        "cursor": {
          "ref": "cf2003b4-aa03-4114-b05b-f41d3be50849",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "590d47e9-bc45-45bc-b796-783a6cc1c325"
        },
        "item": {
          "id": "3681aff3-232d-4106-8061-99f1fd967ea6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "20b4fb3e-611e-4c48-b252-4b44af03e2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01bbe100-33e4-4c7d-92cd-e1d5b7b1e094",
        "cursor": {
          "ref": "f45204c1-d4c9-41ff-8760-1e7fb2479898",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "85a0f3fd-a2e4-40b4-a0bf-39552d645616"
        },
        "item": {
          "id": "01bbe100-33e4-4c7d-92cd-e1d5b7b1e094",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3ff41601-3cb3-4bba-aab0-b6994ad5d127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8240f2a0-cb21-408e-9af1-3d15b2527632",
        "cursor": {
          "ref": "34c6b5d3-c3d4-4c84-a2e8-694c6524d529",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "037fa4a8-bd24-412b-8e3f-f429faca71db"
        },
        "item": {
          "id": "8240f2a0-cb21-408e-9af1-3d15b2527632",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "dc524c7e-da0a-4c34-82cd-65684489e276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebad436-b0d4-4f87-83ac-a46c42465e8c",
        "cursor": {
          "ref": "065e6b20-fbd2-4032-8f7f-5a2c7e331a3e",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "50c4094e-04b0-41d3-9e37-af0f7488c09b"
        },
        "item": {
          "id": "aebad436-b0d4-4f87-83ac-a46c42465e8c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8deefb05-a620-4a3a-9b15-a2659b03365d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7db406-d007-417e-b29b-c9fa59c49012",
        "cursor": {
          "ref": "41ad2746-56db-454d-a34d-83191e915e4b",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "91348884-114f-4e59-ae9c-17a3d20bc679"
        },
        "item": {
          "id": "7a7db406-d007-417e-b29b-c9fa59c49012",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3e7e4c00-d15e-4816-98ed-e8595c45517f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6866237-a170-4238-8ba1-454feff77092",
        "cursor": {
          "ref": "034f9d21-5c84-452d-9bb1-b37b9f3acf1e",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3959bc0a-ef29-4bbd-b7fa-17bf56ea0096"
        },
        "item": {
          "id": "a6866237-a170-4238-8ba1-454feff77092",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "109dd31d-38c3-4357-bd7b-2f449c0549d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44da1d40-723d-4190-8b60-236fcbcf85f0",
        "cursor": {
          "ref": "5f4189b0-9f7f-49db-8b14-ddf2d61d8674",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "716e7518-8883-4943-84a0-dd1ce7a94c64"
        },
        "item": {
          "id": "44da1d40-723d-4190-8b60-236fcbcf85f0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "58b2f581-f61e-4d62-ad58-c82dad38b722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711a0222-bdcb-426d-937c-df3447a0d4b1",
        "cursor": {
          "ref": "dd50ca9c-233b-406f-8b36-c6cd48d5f460",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2616cc2a-4ef5-40ee-96ed-4b33f71c9c48"
        },
        "item": {
          "id": "711a0222-bdcb-426d-937c-df3447a0d4b1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9efa57ea-4332-4ca3-a966-726044cfa665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844ecaf7-26e1-42fd-bd69-01a94adfe794",
        "cursor": {
          "ref": "3542acc8-3365-4ae2-9eef-36690dd41c22",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8605ac65-4ccd-4be4-9528-3edbd3abae6c"
        },
        "item": {
          "id": "844ecaf7-26e1-42fd-bd69-01a94adfe794",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "95d89e4f-981f-4e2c-b789-2b5ed66be226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f422ca71-505c-4f65-aa5e-c9d32ae486fa",
        "cursor": {
          "ref": "db66d7ad-bd72-4720-b4ea-e356570082d2",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "fe93814e-5bf1-4680-b6c3-f4b77c0a6354"
        },
        "item": {
          "id": "f422ca71-505c-4f65-aa5e-c9d32ae486fa",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "12af1bec-e838-4399-bbf0-c46c1fb27050",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ffa63ff-31eb-4813-a816-c0065b139ec5",
        "cursor": {
          "ref": "c1be3a25-baf7-4323-a345-2421ee2cee07",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "314da3d4-9f4f-457b-afaa-95b4bea345fd"
        },
        "item": {
          "id": "8ffa63ff-31eb-4813-a816-c0065b139ec5",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "d41624ca-d5ca-4f42-bd58-51247362b09c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 106,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "392e945a-2616-46b5-908a-621fb50c9a02",
        "cursor": {
          "ref": "9ba41e8f-22a1-45f5-8259-9f0263e751f5",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "94152823-a3ea-447f-8460-81808581eac5"
        },
        "item": {
          "id": "392e945a-2616-46b5-908a-621fb50c9a02",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6c7f19cc-3c4a-4e80-a6d0-16fa3175c48f",
          "status": "Created",
          "code": 201,
          "responseTime": 229,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac0a3d7-cf27-4548-9ea6-1f5318ee75d1",
        "cursor": {
          "ref": "8f368960-3a1b-4317-9f84-efb2ea924383",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f9706a50-12ff-49cb-bbda-54cea560dbcc"
        },
        "item": {
          "id": "5ac0a3d7-cf27-4548-9ea6-1f5318ee75d1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "137a2ee8-5ffc-4c66-b9b6-d2f68cd4650c",
          "status": "Created",
          "code": 201,
          "responseTime": 52,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49b755c-ba33-4e6e-aca4-b3ac89ab6230",
        "cursor": {
          "ref": "92c233fe-d20e-4647-b04b-20545a01aab4",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7da9482a-46c0-4bec-b793-89b161c657e4"
        },
        "item": {
          "id": "b49b755c-ba33-4e6e-aca4-b3ac89ab6230",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0b74fbab-b048-4cdf-aaab-bb9d83dfe42f",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a52a34e-46b2-44fb-9e15-0e15a3143d78",
        "cursor": {
          "ref": "276941e0-9c13-458d-b0e7-02eb1da9f7ae",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ed279923-6fe0-4697-b27f-1530ab7c979a"
        },
        "item": {
          "id": "3a52a34e-46b2-44fb-9e15-0e15a3143d78",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a43dc12b-9149-4d2e-9d6d-ad8923aae63a",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ebf588-90cf-45c9-a65d-8b36c3d3cc86",
        "cursor": {
          "ref": "e71af5aa-7c9e-4f84-a626-ddcb75ef106f",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f0add5b3-6589-4b6c-ae40-8941886ddad7"
        },
        "item": {
          "id": "f2ebf588-90cf-45c9-a65d-8b36c3d3cc86",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3a70fa15-70be-4e73-aef8-13c51d6d8161",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6100667-8727-40a5-98f4-1c54ef5392c7",
        "cursor": {
          "ref": "eb55beb6-dcd7-4e17-ad86-a3856a872e3d",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "8dc43c0f-263b-4569-a25e-88e67125dc8b"
        },
        "item": {
          "id": "a6100667-8727-40a5-98f4-1c54ef5392c7",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b505a437-ecb0-4dc8-88aa-54f7472cc5f9",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d52f7f2-860b-47c2-8bd2-6bf12306107a",
        "cursor": {
          "ref": "604315ca-2caa-4881-a7d8-6a3dc8aa9c42",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b11542bc-a327-4f98-8101-c540fa235310"
        },
        "item": {
          "id": "5d52f7f2-860b-47c2-8bd2-6bf12306107a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6ba54e62-9f01-4441-8f7b-5c7673b5a8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d52f7f2-860b-47c2-8bd2-6bf12306107a",
        "cursor": {
          "ref": "604315ca-2caa-4881-a7d8-6a3dc8aa9c42",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b11542bc-a327-4f98-8101-c540fa235310"
        },
        "item": {
          "id": "5d52f7f2-860b-47c2-8bd2-6bf12306107a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6ba54e62-9f01-4441-8f7b-5c7673b5a8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04620b56-a556-4986-8cae-ddbe50e307e0",
        "cursor": {
          "ref": "0bee397f-1e44-4ddc-9ac0-1952b2df1aac",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "003c6e67-9fba-4bf4-a324-8cb3969d2b03"
        },
        "item": {
          "id": "04620b56-a556-4986-8cae-ddbe50e307e0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2dab7b5c-c839-423f-bb2a-369e214a21cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa50495-543b-40ff-b4bb-914bf9deceab",
        "cursor": {
          "ref": "da31f4b8-7c1c-436d-be75-31209891ef5e",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "805bb63f-6c6d-4946-b680-6f872eedb8e3"
        },
        "item": {
          "id": "cfa50495-543b-40ff-b4bb-914bf9deceab",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "404c0a58-6745-419c-807d-b4146fe9c42e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93746704-7ed4-4fd3-887d-a857471480d8",
        "cursor": {
          "ref": "34d22465-91a8-4c1a-98d9-755a2a21fa36",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "37691b8f-c3d4-453b-b3fb-a123322904cd"
        },
        "item": {
          "id": "93746704-7ed4-4fd3-887d-a857471480d8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3eddeec8-24f9-4d6b-addf-46dcf5c59631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be44d23-f6d2-448c-ae4f-7e1b16c60e4b",
        "cursor": {
          "ref": "cf6c31fa-9a7c-4497-ac69-2030315176ff",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2755ae08-82e4-4651-a79d-cbbbf4cfc1ad"
        },
        "item": {
          "id": "9be44d23-f6d2-448c-ae4f-7e1b16c60e4b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5b00e6d8-302f-4c1c-9662-9bde20aa11f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d45abe-5932-4ea6-886b-60ae5c55714b",
        "cursor": {
          "ref": "ce60fbe9-a761-4c8c-bb99-51774037c893",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "7d9ffc35-0cec-4909-bb54-dcd2b768683c"
        },
        "item": {
          "id": "89d45abe-5932-4ea6-886b-60ae5c55714b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0f741f22-55ad-4eb5-bd2d-3e810b483c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc62d53-edba-45b8-af26-dfcff4b538d3",
        "cursor": {
          "ref": "b909ae97-ca4d-4da4-b32f-858490363e43",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "fae259ec-f76b-4202-9800-b29a0dde6aa6"
        },
        "item": {
          "id": "fbc62d53-edba-45b8-af26-dfcff4b538d3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "eeb2f348-0613-44d6-afed-cf1d1e08127a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606899bb-52a7-40be-b9e5-217e32d9ca02",
        "cursor": {
          "ref": "256bfea4-8d0b-4280-b6e7-19663c40d435",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b953df76-0fe6-4e0d-a4e9-243b40cd930a"
        },
        "item": {
          "id": "606899bb-52a7-40be-b9e5-217e32d9ca02",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6c862db2-972b-4c68-8c6f-7d0bbc637be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c2642b-4ab2-4b90-9bc2-0aef82dafa38",
        "cursor": {
          "ref": "db6738bb-396f-4125-9687-6dad47306190",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "774e58d0-31bf-4969-b26c-52fa697e1ddc"
        },
        "item": {
          "id": "a7c2642b-4ab2-4b90-9bc2-0aef82dafa38",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9ca7de60-2ce5-4839-a632-23fc15d55251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b986dc60-ab86-4fef-993f-e516a64987a0",
        "cursor": {
          "ref": "47c10268-2fd3-4188-9abd-7dd823f3f568",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e00835fc-d564-44ed-bd55-5a34c00c52b4"
        },
        "item": {
          "id": "b986dc60-ab86-4fef-993f-e516a64987a0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f39bdee5-a8b2-49f9-a4ff-a0ed7dbb9574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b596ac1d-5cbb-48c1-a28a-b970cf352e9a",
        "cursor": {
          "ref": "9801f2fb-a5db-4613-84f6-408b2fe66918",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b56d6ea9-cbf3-407a-a6e5-88765ab02ffb"
        },
        "item": {
          "id": "b596ac1d-5cbb-48c1-a28a-b970cf352e9a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "68c35b0e-e474-42c4-8cdf-14c296c31bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec0ee61-7552-42c4-aff0-80c46c22dd61",
        "cursor": {
          "ref": "c253e796-252d-4ad6-9b67-edd7e464970f",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "10175570-469d-434b-b7a2-0121b279e99c"
        },
        "item": {
          "id": "8ec0ee61-7552-42c4-aff0-80c46c22dd61",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c0fc1ae4-95b5-407e-8afa-f859c57dcca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad422290-17dd-40e2-a744-d88c50b287d1",
        "cursor": {
          "ref": "a9cbdcf6-5f0a-433d-9a5e-4b96411ddadd",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d8cd270d-74dc-49fe-b4d4-a6ec47b1fbdd"
        },
        "item": {
          "id": "ad422290-17dd-40e2-a744-d88c50b287d1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "484e2d1f-a286-4b9a-a2ce-468d89d66c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01b0b89-6010-4437-9f43-dc40910770f0",
        "cursor": {
          "ref": "ccf5baf4-5a83-422d-94c0-586bddf00988",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e5ab098c-8bb7-42e9-903d-f79a0616bd90"
        },
        "item": {
          "id": "f01b0b89-6010-4437-9f43-dc40910770f0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ea56f3db-6d70-4f4f-827f-05c915c95627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6fa8121-5cad-46f8-83f8-6a45ff32f1eb",
        "cursor": {
          "ref": "7d54c5c0-706e-41b9-8f8a-42b56db643ad",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2c3c111f-da0f-4c46-a81d-7fd7d8b16d16"
        },
        "item": {
          "id": "c6fa8121-5cad-46f8-83f8-6a45ff32f1eb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "55e0bae2-4b4a-4447-8f9d-88617fdffde1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85124bf7-1d5a-41fd-b215-0d449ecfcee9",
        "cursor": {
          "ref": "bed971f4-09b0-46dd-85b6-cb9891f42f60",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "39ec963c-ea61-4ed2-b808-073a313e715f"
        },
        "item": {
          "id": "85124bf7-1d5a-41fd-b215-0d449ecfcee9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4461a3e4-5939-48a3-8fa6-b252ee76e257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248500f8-cdd0-432c-b35d-4b610fe22fe3",
        "cursor": {
          "ref": "4934c2ef-e6f4-43b9-a694-feccfe0591b5",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "fd737801-8f06-4147-b1c2-c88dfe9b58b0"
        },
        "item": {
          "id": "248500f8-cdd0-432c-b35d-4b610fe22fe3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f2604ba0-df93-429e-8d03-9f55ee54a5cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72695b70-6368-4c80-824c-87c4613a0660",
        "cursor": {
          "ref": "21da6ab3-1727-42ce-9fd8-68994fc17c97",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3ee9953c-9551-4961-a845-8972bf30e091"
        },
        "item": {
          "id": "72695b70-6368-4c80-824c-87c4613a0660",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "70970fd6-d7a3-4812-9dfc-2936c936b401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89de405f-74e6-43c5-9727-f7ba4296a0b6",
        "cursor": {
          "ref": "5045e943-657b-428c-8036-d078df826ac2",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8b2bfe29-a147-47dc-aab2-dfabcc63aabf"
        },
        "item": {
          "id": "89de405f-74e6-43c5-9727-f7ba4296a0b6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d1b4e191-a908-4527-9662-f81011d95aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b109bb69-2339-4520-9123-9ffd98ae055d",
        "cursor": {
          "ref": "5608c4e3-4a00-49b1-b47c-883b5d3dc0ed",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7a78eefa-3a8e-4407-a9ea-7f6eaf76793d"
        },
        "item": {
          "id": "b109bb69-2339-4520-9123-9ffd98ae055d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cc4da0cc-52b5-4320-b6ed-2602e005ba94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9a706e-dd5d-489c-b8b1-ffa06d66538a",
        "cursor": {
          "ref": "90e57e46-aff4-402b-9917-dc24573a02f4",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e427bf96-8af2-45d5-832a-23ab84346c71"
        },
        "item": {
          "id": "df9a706e-dd5d-489c-b8b1-ffa06d66538a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d6dd677c-8efc-4b34-bc16-9a1e64975292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22662ac-7257-426e-8680-7cf6eb073def",
        "cursor": {
          "ref": "295c40a8-b7e3-4905-b9ae-959b7cfd413c",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2012ee1b-418e-4e26-8278-1124f2b15287"
        },
        "item": {
          "id": "a22662ac-7257-426e-8680-7cf6eb073def",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5966e34c-f29f-4acc-9cdb-423812e05383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147bdf26-a185-444d-8694-51360910ed4c",
        "cursor": {
          "ref": "7f93c35e-87e7-45d1-87cc-2eae5de1d38d",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "bc3ce7b7-3a56-44aa-b42d-5f4fdf4d8a74"
        },
        "item": {
          "id": "147bdf26-a185-444d-8694-51360910ed4c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f16e6b37-156f-4b63-8459-68b97f3aa866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bec3c3d-cb5e-41b2-a33b-194cb48e3a17",
        "cursor": {
          "ref": "7c401161-1af0-4eef-8f11-650f0991f45f",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e071972a-024b-4c4e-ae71-a6aecb845f8e"
        },
        "item": {
          "id": "3bec3c3d-cb5e-41b2-a33b-194cb48e3a17",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1af9135c-3f01-464c-af5d-2d22e01c2390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d0c4b7-1c43-4c82-8e64-ce3a3c585b40",
        "cursor": {
          "ref": "24e385e1-7730-4c44-adab-cfe452f6c6d9",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "bd6f1759-7019-46fb-a99e-118c7dee352d"
        },
        "item": {
          "id": "13d0c4b7-1c43-4c82-8e64-ce3a3c585b40",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0c935cf3-38a5-4075-b81f-3362713e305f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ddcc3e-3d41-40fe-8dac-e17808a541be",
        "cursor": {
          "ref": "ada87dca-581c-40d9-b1d7-4db84e88e0b8",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "98742bbc-77ce-4405-9a16-78195550b62a"
        },
        "item": {
          "id": "e6ddcc3e-3d41-40fe-8dac-e17808a541be",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "12404d5d-c023-48ae-87ac-9accc9819e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59f9d06-850c-4259-9129-f68c554b4e25",
        "cursor": {
          "ref": "b47c48ab-19fe-4c98-8231-0fbfdec5c137",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "84bc6405-cbe8-443b-936f-8805b70bcac1"
        },
        "item": {
          "id": "e59f9d06-850c-4259-9129-f68c554b4e25",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cfb45362-894c-4645-b933-5dfe4e10d44b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af645d3b-109a-4fc4-96c1-a409f735308d",
        "cursor": {
          "ref": "963c7c47-6f0f-4252-b02c-0ed43885ccb3",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8a2c5eaa-5b8b-4e4d-b68d-c4499fbc2e9a"
        },
        "item": {
          "id": "af645d3b-109a-4fc4-96c1-a409f735308d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d5d209fe-1581-41e9-ae62-8a65a755b1c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "939dbabf-daf4-4ef6-bf13-758d72162d73",
        "cursor": {
          "ref": "bca86321-d05d-4c2c-ac69-1a366282aa9d",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "843aca8c-bfd9-43cd-b87e-b611283193e6"
        },
        "item": {
          "id": "939dbabf-daf4-4ef6-bf13-758d72162d73",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "218a1e72-54e6-41df-9433-6fa82f34e37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83c08ce-7a90-4d0f-8330-d941e606b5e2",
        "cursor": {
          "ref": "8f59fda2-873a-4bd3-bbbe-511a9748ca7c",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e42c1bc8-bbad-498f-86c6-15ef88bd6f13"
        },
        "item": {
          "id": "b83c08ce-7a90-4d0f-8330-d941e606b5e2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f64afb38-4275-48f2-8848-6f779b4afddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c0a4f14-b136-4bb3-a0b7-045c1b7216e0",
        "cursor": {
          "ref": "1603bbe5-8cad-4dd1-89c9-51733e3591c1",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3401a109-3f11-46a8-9800-2b0f8f774d1e"
        },
        "item": {
          "id": "2c0a4f14-b136-4bb3-a0b7-045c1b7216e0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6b26c325-de31-4618-9cfd-c4d3fb41803a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f71838-979f-4782-8e2a-2817a868c4c5",
        "cursor": {
          "ref": "8e7d6d8e-0f5d-4e7b-a641-bc7ba8234f6a",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "657d31c2-f3c5-453e-9e19-fb66159a0c2d"
        },
        "item": {
          "id": "a7f71838-979f-4782-8e2a-2817a868c4c5",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "77c1c682-aaf6-46ca-97d4-8804918f6c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe620ce-118a-4530-8c2c-ec935b81ae2e",
        "cursor": {
          "ref": "dbf78554-8334-4ae3-8948-0ec1f6033659",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "85ebdf9d-9f6a-4222-b889-118502a1653e"
        },
        "item": {
          "id": "9fe620ce-118a-4530-8c2c-ec935b81ae2e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1c586478-cc9e-46ba-919b-9b0392cac2a8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f659a34d-52e2-4fb4-8764-1856fc1662b9",
        "cursor": {
          "ref": "fe8b3e18-c95e-482c-b669-b8b021dafa25",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d87e37c8-c4b2-4cf6-b621-33771501258c"
        },
        "item": {
          "id": "f659a34d-52e2-4fb4-8764-1856fc1662b9",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "802f5be0-5e0d-4dcc-a648-08c3ee1a5203",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7bd8e52-940f-4f7d-a334-d8d2ab1b8152",
        "cursor": {
          "ref": "00c2a96d-c61d-4e9a-a209-d79b86198b02",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1d4fac1a-8d54-4962-a418-9089217d8c47"
        },
        "item": {
          "id": "c7bd8e52-940f-4f7d-a334-d8d2ab1b8152",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "83c419ff-157a-432f-9ee6-85de1a2bfbba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7bd8e52-940f-4f7d-a334-d8d2ab1b8152",
        "cursor": {
          "ref": "00c2a96d-c61d-4e9a-a209-d79b86198b02",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1d4fac1a-8d54-4962-a418-9089217d8c47"
        },
        "item": {
          "id": "c7bd8e52-940f-4f7d-a334-d8d2ab1b8152",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "83c419ff-157a-432f-9ee6-85de1a2bfbba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0996d1c1-9b62-47c2-a355-941fa9fc6308",
        "cursor": {
          "ref": "30da1021-1278-40d3-ae14-3567268b84f9",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9d24598b-1e8c-4f90-9d01-f4d4fd52107d"
        },
        "item": {
          "id": "0996d1c1-9b62-47c2-a355-941fa9fc6308",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d1314937-2c2c-4e66-8d71-34fbe33dbc04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5436f948-ecdc-4532-88b0-fa5e35dbca82",
        "cursor": {
          "ref": "5782aaf2-22b9-4dac-9ac3-f8c27704ca81",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "aa28632e-9208-41b0-9560-6366721e05cb"
        },
        "item": {
          "id": "5436f948-ecdc-4532-88b0-fa5e35dbca82",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "19006414-f42f-4b03-93a5-d14eebb5561c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de1afb40-3fea-487f-b029-96630d4b7a52",
        "cursor": {
          "ref": "7535a7ee-b49f-481c-a57d-7713c0d57998",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d4cccea9-80fd-4a11-bbdf-6814dd9fc159"
        },
        "item": {
          "id": "de1afb40-3fea-487f-b029-96630d4b7a52",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8adcf571-9ef5-49fa-85d4-500808729e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26f258d-87d8-4939-8206-42987e7b318d",
        "cursor": {
          "ref": "a09f1d5a-c2ce-4d08-a6b2-6a8118abd614",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8fd0daeb-5297-437f-bd73-aa645b7cd462"
        },
        "item": {
          "id": "c26f258d-87d8-4939-8206-42987e7b318d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "58948671-47d6-4b19-8ec2-bb9f354352ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1682bfa-d6e9-43d3-9b05-6b9648839840",
        "cursor": {
          "ref": "0f84407c-8b03-406e-b6d0-bb48114a795d",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "7090a53a-60d1-4720-bff8-3796c8a0c929"
        },
        "item": {
          "id": "f1682bfa-d6e9-43d3-9b05-6b9648839840",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f858f450-a569-45fc-9fa8-941ee8020a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d49439-0844-4166-b681-84d8fd4bf76e",
        "cursor": {
          "ref": "1d0e018f-49e3-426d-a321-7d520b4aee79",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8b4c731f-b9e9-4182-b980-26615b49acf6"
        },
        "item": {
          "id": "10d49439-0844-4166-b681-84d8fd4bf76e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "48b6d8cc-6d3f-4579-bafc-712763130a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396ad328-d2ea-4d9e-9fa4-daf9f7d2836a",
        "cursor": {
          "ref": "820fb50c-9451-48e9-8383-a00ce058488e",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2a2268d7-aae4-469f-b9b7-c332b42fb9ae"
        },
        "item": {
          "id": "396ad328-d2ea-4d9e-9fa4-daf9f7d2836a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d3e44d04-4f75-45b1-9d1e-16fd5b3428f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c90b855-52bd-48d6-8cbe-7e83b46095af",
        "cursor": {
          "ref": "140efdfb-6c69-44ca-9c11-3163b95b41ba",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f849f8d7-2a84-403b-a975-06ac66ce483a"
        },
        "item": {
          "id": "1c90b855-52bd-48d6-8cbe-7e83b46095af",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5edb1272-24a7-45a5-812a-7f3c5197f6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225ee86f-aa7c-4561-a78d-0b6d024b27ba",
        "cursor": {
          "ref": "d6474610-ccb1-40b9-8569-9677cf3ad05c",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0f6ca7ea-5bd8-4377-914d-3fdb41ff6506"
        },
        "item": {
          "id": "225ee86f-aa7c-4561-a78d-0b6d024b27ba",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "92aa6f48-6300-4e11-a4c1-28f8a85270d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23741b1b-fee6-4ef2-93cf-f32966fb95da",
        "cursor": {
          "ref": "ef20e264-d49d-41cb-a784-84c39d40e4d4",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "009f0953-695c-4cae-972f-c69231252f79"
        },
        "item": {
          "id": "23741b1b-fee6-4ef2-93cf-f32966fb95da",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c8c1096f-78fa-4eaf-b5f4-a33981281855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f055cb-1382-472f-adeb-28dc68de9b13",
        "cursor": {
          "ref": "eb9c6a41-5568-4fbc-a3b0-8283350627dd",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7bfa97c2-135c-4bd1-ac4b-352d8e89ac32"
        },
        "item": {
          "id": "13f055cb-1382-472f-adeb-28dc68de9b13",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f472ebef-9e56-41b8-8506-561e1e20197f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d46a1ab-1ce1-45f2-85c8-1e1d4ef5c056",
        "cursor": {
          "ref": "0ad394d4-ccde-4b57-8f0a-1e09b9f6b825",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1ee2cae8-9b8c-47c6-bea8-c44e8c2c129a"
        },
        "item": {
          "id": "7d46a1ab-1ce1-45f2-85c8-1e1d4ef5c056",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "bb7cc464-2c9c-4136-bfc7-1305649223b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e28cd9-74da-484d-828c-4e7c2128d609",
        "cursor": {
          "ref": "33f5abde-fadd-4f09-a46f-a7f864e31b5f",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ce59e715-0ddb-4204-8a04-7ddefe140fb5"
        },
        "item": {
          "id": "73e28cd9-74da-484d-828c-4e7c2128d609",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1b0079b0-0f90-4ed2-bca7-df4acf515b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ca9abd-7681-4dd5-bfcc-3beb8ad73f70",
        "cursor": {
          "ref": "290b97eb-f977-437f-ba84-af9659a277b2",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "cee33c57-29d7-48b2-a337-2aabe97eca71"
        },
        "item": {
          "id": "b3ca9abd-7681-4dd5-bfcc-3beb8ad73f70",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a7a4da83-4891-4ef5-bf8a-25fdb1266827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021008b4-0fdb-4c0f-917a-9394698d958c",
        "cursor": {
          "ref": "7f9d47f8-d326-430d-a58c-6cfb7d712297",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ee720223-8588-4008-8068-26b4139108fe"
        },
        "item": {
          "id": "021008b4-0fdb-4c0f-917a-9394698d958c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "85dbe2d9-1da0-4de1-8d03-71fff29c8e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8182f75-7a4a-4f38-88ef-62721b4b8a5f",
        "cursor": {
          "ref": "c571abe3-434a-4057-96c5-3bb5184d81e8",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9a281279-f747-45a1-b17f-1a72a15709bf"
        },
        "item": {
          "id": "e8182f75-7a4a-4f38-88ef-62721b4b8a5f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "84423903-33cf-4337-87c2-eafac3cb7020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fddef12-17d8-4099-a493-865c092d2d9c",
        "cursor": {
          "ref": "7ee311ca-9b73-4fcb-9a56-ea8d44b5a8ef",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8e7d31d9-5932-4c59-8af1-17cd205ef17d"
        },
        "item": {
          "id": "5fddef12-17d8-4099-a493-865c092d2d9c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c2ec1e0b-9930-4ac8-9eb2-9b959fa89e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71e48ca-a17b-4fa3-919c-e059cfe93c10",
        "cursor": {
          "ref": "b42dd71f-7e6d-4299-a59a-632514228a43",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b98df3e5-ad67-4213-b6b7-a7c37950aa25"
        },
        "item": {
          "id": "c71e48ca-a17b-4fa3-919c-e059cfe93c10",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "494cd655-2aac-4ac0-be35-c98870118ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebc7a80-b0ab-4712-ae17-667f34f0ea63",
        "cursor": {
          "ref": "7d50373b-2640-4b15-9997-791ad4838c42",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8560e69e-5645-4bed-9b7d-db5226f59561"
        },
        "item": {
          "id": "cebc7a80-b0ab-4712-ae17-667f34f0ea63",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d92cfb04-0e12-48bc-b957-dd864737898d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a6c287-20f1-4516-bba3-36987545eafa",
        "cursor": {
          "ref": "6a137628-66ba-4e37-b7fd-703cc5a05803",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "546caa98-f055-4d86-9e24-6196501108bf"
        },
        "item": {
          "id": "35a6c287-20f1-4516-bba3-36987545eafa",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "71fc226f-c462-4366-8a28-31e5a1069463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "714c649a-aea9-482e-b13a-db3734105d45",
        "cursor": {
          "ref": "34440067-0f1e-476a-a856-b13295148d91",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "df67079b-2a5b-4736-b936-87250ba91818"
        },
        "item": {
          "id": "714c649a-aea9-482e-b13a-db3734105d45",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c4411364-3768-4b18-95f1-63af018c69f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ae030e-2646-40d4-a6ad-421c6621d767",
        "cursor": {
          "ref": "4d79be84-abb6-4a03-b7ed-76e235f99ebb",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "bb69221b-7147-462e-bb16-c8a056998933"
        },
        "item": {
          "id": "55ae030e-2646-40d4-a6ad-421c6621d767",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "736771c8-288c-451f-aadd-0865271059aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6757e004-5743-4b70-a620-2a6107a23997",
        "cursor": {
          "ref": "7b9c5b23-dc1e-48ee-a2b7-2be03acc8323",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c0259046-3ba9-4a3b-a3a3-f367e47e0e78"
        },
        "item": {
          "id": "6757e004-5743-4b70-a620-2a6107a23997",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1db8d392-f58c-4419-89e1-16c2c2c5cd39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2edec6d7-93ab-4980-8ba9-b9d186672148",
        "cursor": {
          "ref": "ec9d9162-ccb7-4086-9bbb-8470c61aca94",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "664528f5-6090-47e9-afda-b1abc06bd9f2"
        },
        "item": {
          "id": "2edec6d7-93ab-4980-8ba9-b9d186672148",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "11072a57-c2a3-4ec1-89cc-67b9c2e06eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37e1450-7a12-4a89-9d23-a50ab9225019",
        "cursor": {
          "ref": "bf88a365-3e5d-4040-86b4-3e4eb8483e7f",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "bc9ac6b3-8f9d-4c7e-bf93-484e8dda6dfe"
        },
        "item": {
          "id": "b37e1450-7a12-4a89-9d23-a50ab9225019",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "44a8d503-939a-441d-8093-690d00d9c682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d11557c-01e9-4a6e-854f-9104103f4d8a",
        "cursor": {
          "ref": "889f53dd-b247-4b35-8820-63da551c4ac2",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "becc588d-3bbd-4c3e-8bbb-ccb20ffa3eef"
        },
        "item": {
          "id": "8d11557c-01e9-4a6e-854f-9104103f4d8a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0ed109a5-7ccb-42c1-958c-34900c490093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e2f5b5-3216-4959-aa1f-94ce1fe255d6",
        "cursor": {
          "ref": "4d33bb80-052a-4a24-9ba1-cca9d7088b1d",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "df11cbd5-7652-4a1d-b20d-b582aeef6376"
        },
        "item": {
          "id": "35e2f5b5-3216-4959-aa1f-94ce1fe255d6",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4c1982d2-7ac7-4fa6-9524-afdb8eecff94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb33e5fa-d382-45c7-acc0-f537d32f6e1f",
        "cursor": {
          "ref": "558dc903-ec76-4bb6-a4cc-7f77e4656b67",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ece9b9d4-215f-4738-8a0d-3fffc1a8130a"
        },
        "item": {
          "id": "fb33e5fa-d382-45c7-acc0-f537d32f6e1f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "dd07bff2-0725-402c-8ae2-c6fc49881ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d6f7f1-78f9-4adf-ae7c-f38ea69991d4",
        "cursor": {
          "ref": "3630da96-ff64-40ff-b985-106fb845e742",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "bbd14d20-05ab-46e3-987f-6eaa39b836ae"
        },
        "item": {
          "id": "a6d6f7f1-78f9-4adf-ae7c-f38ea69991d4",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ebee9d57-39d6-455c-91df-c521f856f542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab9588e-ba86-497c-8187-c96e1492de60",
        "cursor": {
          "ref": "c9a07425-a1c9-4d6d-bb1d-ae01c7a3ab47",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ab149d8b-2ca0-4263-a03d-abeb00f66630"
        },
        "item": {
          "id": "aab9588e-ba86-497c-8187-c96e1492de60",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "443249d5-65c3-4aa8-a9c3-c4ea5ee8946b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4659e2ef-a8d1-4018-92fe-5b2104deaf2d",
        "cursor": {
          "ref": "19d627de-1fd5-4a78-80fe-11d44603f55c",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "1c2042b6-eb1e-43b1-a8da-d892389b494d"
        },
        "item": {
          "id": "4659e2ef-a8d1-4018-92fe-5b2104deaf2d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "71ace6cc-b865-46ee-9119-0a0c861e126f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df60dd2d-be14-45d3-ae61-75c73b87bcd0",
        "cursor": {
          "ref": "3b618f4b-dc79-4d6b-8355-26ac93dee215",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "db99e79c-6c62-4c29-8a40-25cf89f4f8a4"
        },
        "item": {
          "id": "df60dd2d-be14-45d3-ae61-75c73b87bcd0",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b1c6c624-e9a9-4c8a-94c0-f3558e45c7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0f0f6e-a495-4c3f-be6f-3fafb19f0ef3",
        "cursor": {
          "ref": "6d6ae2a7-3fc5-431c-b353-25929e40e562",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "00fb418c-3150-4eca-b28b-e5d255977a5a"
        },
        "item": {
          "id": "de0f0f6e-a495-4c3f-be6f-3fafb19f0ef3",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cfb5b4b0-444b-461e-a4c1-b5125fb0ae83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4cde13-691e-4d23-b08a-f0bf5ea12807",
        "cursor": {
          "ref": "8802689e-7cba-4854-9247-fa6764952956",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "aa5cc6f4-063b-49ad-a4ea-9dec30fe98ab"
        },
        "item": {
          "id": "6e4cde13-691e-4d23-b08a-f0bf5ea12807",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a7666821-83ef-47b0-89c5-238dc1582a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137720fb-6f74-4fbd-9fc1-ff1514d077cf",
        "cursor": {
          "ref": "54bef644-71bf-4755-bf5d-ee4f8d3988a8",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a13da6e8-f395-4b77-9803-c60b87d20c2e"
        },
        "item": {
          "id": "137720fb-6f74-4fbd-9fc1-ff1514d077cf",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f92bad12-7637-4328-aea9-76d9ccc0aedd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "107471e6-bc5d-490a-882b-6ef303c423bd",
        "cursor": {
          "ref": "741b4bea-dc7f-4346-a966-a4f7e4022449",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "3553a238-4410-446a-8e06-237aec7b4dc0"
        },
        "item": {
          "id": "107471e6-bc5d-490a-882b-6ef303c423bd",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e5f262f9-2573-41d7-9d09-1ad799e79ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fca2607-ac16-4b75-ba09-7a6fd51c9535",
        "cursor": {
          "ref": "fd87ce0c-a9a5-4509-af49-e6cf9ef46a64",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0bf7750f-071c-4d8e-9a0e-942046a9efc2"
        },
        "item": {
          "id": "4fca2607-ac16-4b75-ba09-7a6fd51c9535",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8d6ff936-2034-4b10-a2c5-d543b2703d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51bf16b-9f39-41bd-859c-0fe63f16d7d2",
        "cursor": {
          "ref": "3a7e1257-f8a6-40d3-b28b-196101c97fb2",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b84aee24-d508-4eb0-84f2-5be536a45c83"
        },
        "item": {
          "id": "f51bf16b-9f39-41bd-859c-0fe63f16d7d2",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "88830a9f-ebf4-4f40-84d3-c02b225b8f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a07919c-12bc-4090-8abe-fcf26ea9cffa",
        "cursor": {
          "ref": "2569b983-86ee-423b-a53d-ab192b021fca",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "02fa4d05-ff1b-41c9-8cee-e04c17c0acb1"
        },
        "item": {
          "id": "3a07919c-12bc-4090-8abe-fcf26ea9cffa",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1f547f4c-35b3-45e2-9630-22f109971d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16d4ebd-6945-41e7-9d21-ff12ec31b8b4",
        "cursor": {
          "ref": "32842e8b-b53c-440e-b9ac-4bed17c843ef",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1b75116f-1a30-4d40-8074-46d2489f7a99"
        },
        "item": {
          "id": "c16d4ebd-6945-41e7-9d21-ff12ec31b8b4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "3d0157df-5442-4449-b7a4-e913d2ae0929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba932576-8021-4f39-a99b-f281ef6b99ad",
        "cursor": {
          "ref": "c01ecd3a-25eb-4bfa-a371-5637d2681c82",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b38b0931-10a2-47e7-b82d-f5bf6e8dc328"
        },
        "item": {
          "id": "ba932576-8021-4f39-a99b-f281ef6b99ad",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3d0681f6-fb99-4ba1-94fb-25005286982f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d074a19-8e98-4495-9ce4-4f68a8742401",
        "cursor": {
          "ref": "f6525eb6-7886-4175-920e-ac5788845df4",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "cf3127d4-37f4-4e37-b6f9-34f981650b53"
        },
        "item": {
          "id": "1d074a19-8e98-4495-9ce4-4f68a8742401",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d5228abf-50b3-4d2c-b257-0c69bffa18b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3abae5a-ea07-4e68-8c59-f5e92791a6bf",
        "cursor": {
          "ref": "7b7bf773-af8a-4942-a65a-7aa54f039ad9",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0ade362b-6906-4356-b005-0bb2a09853c5"
        },
        "item": {
          "id": "f3abae5a-ea07-4e68-8c59-f5e92791a6bf",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e8096b4a-ca72-4444-be03-07caf6a68058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51eb6f77-fc11-4ca7-9830-77026ef88ecd",
        "cursor": {
          "ref": "a932fd51-1499-4769-b3b6-ce2459201cf9",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7e2db828-4703-40a2-a2ae-88481c0d0f34"
        },
        "item": {
          "id": "51eb6f77-fc11-4ca7-9830-77026ef88ecd",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7c5c9312-256d-46a0-97f8-7b786461077f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf782e3-a2ea-4405-8f2b-988ae9716ef3",
        "cursor": {
          "ref": "e9e43d3a-ce7b-455b-9329-57b1382b8f6d",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "cd3877e1-1fce-4ad3-9120-4c7b9a2deb8a"
        },
        "item": {
          "id": "adf782e3-a2ea-4405-8f2b-988ae9716ef3",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4ba157ba-1bd0-4282-affc-95912a6eb05e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64be1c31-9ad5-4983-8019-85e66a4a9826",
        "cursor": {
          "ref": "b8287834-9f9c-4345-8321-155699037158",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "934736e1-15a2-4db3-8a7a-6601f62f1d7c"
        },
        "item": {
          "id": "64be1c31-9ad5-4983-8019-85e66a4a9826",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "738d3d84-5663-45ce-bee3-f3e6291de079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ebdc54-893c-419f-a938-0ff7e39f15d6",
        "cursor": {
          "ref": "fe8f0f78-f1a7-44fd-9707-c72b500b858d",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "dc98f50f-4c1d-4392-bbb0-b350ec9b74aa"
        },
        "item": {
          "id": "c0ebdc54-893c-419f-a938-0ff7e39f15d6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8b2ec71b-a9da-49b2-a145-298432e10e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35e26bb-67a5-4f53-b345-26999c575252",
        "cursor": {
          "ref": "07707ee2-d885-4286-b6be-857b00a6648c",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "39c4d323-1b7d-4e61-919a-2fbcee07d6c4"
        },
        "item": {
          "id": "e35e26bb-67a5-4f53-b345-26999c575252",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "446fb01b-2462-4f9f-96dc-ae91575cb677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72e01f4-32ce-4d98-8129-4fcba717d3c5",
        "cursor": {
          "ref": "0b5c93cf-cfde-4350-b612-d5365198dbbf",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ff5296af-df71-4158-9063-bef2b7f0d6b0"
        },
        "item": {
          "id": "d72e01f4-32ce-4d98-8129-4fcba717d3c5",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "22bfd82b-a161-407c-a6a5-c232d8a902ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3680483b-d3be-4b5e-ae01-eb966d500052",
        "cursor": {
          "ref": "30b34edc-7184-44f3-b2aa-e80fe92a6e1e",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3ac90e04-6a09-482c-b3a8-a816c50b9ddd"
        },
        "item": {
          "id": "3680483b-d3be-4b5e-ae01-eb966d500052",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "44cd05e4-9d01-421f-a40b-fd62f1c83702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d0fc94-bbdf-474e-ba13-a3ff44344ba2",
        "cursor": {
          "ref": "45d2db6c-9bb3-42fe-a03d-49fac2f50087",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f3b52a07-f8c8-486d-ab5d-2452615fe140"
        },
        "item": {
          "id": "c7d0fc94-bbdf-474e-ba13-a3ff44344ba2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c17ed625-3e54-4118-b4f4-94f0d3d0192f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50714902-492b-48a6-b6a5-fa3650100a7c",
        "cursor": {
          "ref": "2198aca3-8630-4669-b513-4de63dc7aafe",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8f701abb-3cac-45fe-9d7c-b09289c0ac37"
        },
        "item": {
          "id": "50714902-492b-48a6-b6a5-fa3650100a7c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "cb9731bb-b260-49d4-adfc-d252ccd81f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5963a5d-32af-487e-856e-4605bc9e80b0",
        "cursor": {
          "ref": "b8456af3-4702-408e-b1f8-d69c09e6c896",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0e75a363-32e6-4966-b757-2efe50afdeca"
        },
        "item": {
          "id": "f5963a5d-32af-487e-856e-4605bc9e80b0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "00bf72d6-bcbc-4797-8e5c-ae28fc61fcfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb77144d-0311-4199-b344-6db8f11561f6",
        "cursor": {
          "ref": "37d301f8-a8f7-4432-a055-23cf7bfe0ac0",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e3844c01-a68f-4818-876a-e2eacc22b346"
        },
        "item": {
          "id": "bb77144d-0311-4199-b344-6db8f11561f6",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "75e24c7d-0fe4-4222-80a1-6b97634ef147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3175bff-677d-461a-b47b-5579bfacbee8",
        "cursor": {
          "ref": "10ab8c8e-6fae-4f12-8fb5-fe6ed6555e37",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0fc7aaf0-c6ac-4a66-a52f-7518368a16f5"
        },
        "item": {
          "id": "d3175bff-677d-461a-b47b-5579bfacbee8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "fe6ad11d-3667-4852-b2af-ba5876d87bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4948981-2c65-452a-a851-168cd7f1de3e",
        "cursor": {
          "ref": "30400492-c874-485d-a1a9-18921c50a47e",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "84a43e6d-d647-4e32-8d06-b7db97e22e26"
        },
        "item": {
          "id": "a4948981-2c65-452a-a851-168cd7f1de3e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4925792b-70a6-4d89-815f-a55df35620f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874fd2da-cc19-4d4f-a13f-18c6a15ff9c4",
        "cursor": {
          "ref": "1b8ebd62-4e6d-40da-86df-ca58e8b30a55",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "eb0e8e15-4c73-4c7b-ab8f-a4f8399167b3"
        },
        "item": {
          "id": "874fd2da-cc19-4d4f-a13f-18c6a15ff9c4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7913fbc7-eb83-4b77-b87a-b737a069f0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bee4102-208a-405d-b764-9dfee0218bc4",
        "cursor": {
          "ref": "c84cfad7-b353-41b7-9dac-40348436f9ec",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9f789d6e-34ca-4904-a56f-3408cf0da441"
        },
        "item": {
          "id": "5bee4102-208a-405d-b764-9dfee0218bc4",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ac1d77c4-1065-41ef-b4e2-2f20177a318f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1e3d67-e2b4-439c-a1d9-b0687e634362",
        "cursor": {
          "ref": "f5c2f0fa-63cd-4a6c-a234-7f56e346d0a3",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "26e2da1a-e7eb-4a43-9757-7f681369328f"
        },
        "item": {
          "id": "8d1e3d67-e2b4-439c-a1d9-b0687e634362",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "cfe8d8b7-50dc-482c-9918-02552ed1e1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc9c041-c134-44ac-9311-c00e1237cb1a",
        "cursor": {
          "ref": "895a96a4-ce5b-4b0b-a510-15aeda8c555e",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b98276b0-9fc5-4266-bfc0-f239a2be58d2"
        },
        "item": {
          "id": "dbc9c041-c134-44ac-9311-c00e1237cb1a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4895b6b0-9139-43cb-8bc7-d31a00c51669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8439580-f278-413b-84de-90c6280914aa",
        "cursor": {
          "ref": "7a7e8b39-ac9f-4c72-842a-1dcd9c241820",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d4115048-0fc8-42ba-a540-cf81e7fa7e56"
        },
        "item": {
          "id": "b8439580-f278-413b-84de-90c6280914aa",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7cd25a2b-9bcd-4218-a067-92e26e089c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d210ab5-73be-477f-8b98-323104d61ca5",
        "cursor": {
          "ref": "4f4cb97b-a53f-48fc-a077-f7efeb5c9b79",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "605b1a35-32fd-4ed3-993b-90cc3a476aa8"
        },
        "item": {
          "id": "0d210ab5-73be-477f-8b98-323104d61ca5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "cbe64cfe-b886-4f84-a467-e3d90b66da38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef4987a-fbe7-4b5f-ba8a-d8cac1ccc5ce",
        "cursor": {
          "ref": "ab086256-c05e-4117-879d-97c656f8adf7",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "00c10692-f9d4-4a1f-bb43-c5e21416090f"
        },
        "item": {
          "id": "5ef4987a-fbe7-4b5f-ba8a-d8cac1ccc5ce",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "057d4f9f-d8d7-477e-8bd1-9462509b05ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "901591fc-f0bc-4c32-b39c-38a253df043d",
        "cursor": {
          "ref": "5efc7559-9297-4f80-8bea-9adeb1d87749",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "cd772c95-09f4-49db-aff3-fe877035cba2"
        },
        "item": {
          "id": "901591fc-f0bc-4c32-b39c-38a253df043d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4a56f6b1-c98d-41ef-b03c-2ea2b020c617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9d59ce-4729-4833-bf36-674096f69051",
        "cursor": {
          "ref": "8d8d1730-d770-4bb9-9a68-8f5e62e39750",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c2370a90-6ebb-4127-aa85-2fc6edc5f639"
        },
        "item": {
          "id": "2b9d59ce-4729-4833-bf36-674096f69051",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1b5b64a8-6a03-43c3-995c-b7df71537c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa92f88-073e-4cb2-8671-1546b114b946",
        "cursor": {
          "ref": "06646db2-7fc3-4e6c-a01f-2c41fdf0690c",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7af38f30-9ac4-46ba-aa2d-ef3ac35d35f4"
        },
        "item": {
          "id": "2aa92f88-073e-4cb2-8671-1546b114b946",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c58d65db-99d6-49cb-bacb-dae1f1e48c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac22d8f-0a16-4908-9488-77b7e4667c45",
        "cursor": {
          "ref": "3427607e-affb-4fec-b9a5-373b1f42cf8d",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ef61117a-62ff-401e-b6fa-fd5c81a54228"
        },
        "item": {
          "id": "cac22d8f-0a16-4908-9488-77b7e4667c45",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "5db90fd9-340a-4821-b901-297355786da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32f0fce-5842-41ac-849f-a4eb1a261fea",
        "cursor": {
          "ref": "87afe21c-6477-482e-b3a7-f8af7f64cea7",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8172b224-df57-40f4-9b7a-7aa9960ac679"
        },
        "item": {
          "id": "e32f0fce-5842-41ac-849f-a4eb1a261fea",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2941349e-02ce-4432-b276-13ea52d3c1fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307826d5-7d0f-4142-96c0-a6a9d45319b4",
        "cursor": {
          "ref": "ab60c244-c9a0-4db8-bba1-d4d1ce300dbe",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "9391771b-a7ea-458d-ae91-e3e3b50e2469"
        },
        "item": {
          "id": "307826d5-7d0f-4142-96c0-a6a9d45319b4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "27beeee7-af4c-4265-83f6-da8dd0c28b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb4be78-12d4-48ce-99f6-7844b7d5eacf",
        "cursor": {
          "ref": "c6d12ad7-1648-45d6-a260-b8fcd7df48f6",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "30ffa259-1b41-46e5-9b64-2aa94966745b"
        },
        "item": {
          "id": "eeb4be78-12d4-48ce-99f6-7844b7d5eacf",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6212e60d-b7bb-428a-b49b-cf00d10328a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97dc4377-5494-4511-ae66-e3597fcc6186",
        "cursor": {
          "ref": "3acc9d42-8b9e-408f-a4ca-7e73b9c24731",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5fdb4f6d-1d2b-40d4-98fc-81227ca712b5"
        },
        "item": {
          "id": "97dc4377-5494-4511-ae66-e3597fcc6186",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b83746f7-3ae9-4356-8139-a44df3451813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956c528a-d4a4-499c-a141-b0301d2d0641",
        "cursor": {
          "ref": "7856a173-bc6d-40f8-8991-e1035ce5b907",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b21f1a98-1cc8-4512-a9be-6a5ca521c3eb"
        },
        "item": {
          "id": "956c528a-d4a4-499c-a141-b0301d2d0641",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "717a4fb0-4c0f-4937-b5cb-5dd94b5f5bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14430d7d-65cc-4a80-a42c-926530a72cd2",
        "cursor": {
          "ref": "e247484d-0f43-4252-a0a6-2c4692d3faae",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8c8ea033-39f4-439e-b908-4647202c7cd6"
        },
        "item": {
          "id": "14430d7d-65cc-4a80-a42c-926530a72cd2",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "95f4cce1-e277-417e-8de8-115d1e4f4353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2814950a-ce1c-4f89-8f34-b8ec353f5e98",
        "cursor": {
          "ref": "4d68698c-d580-4b4c-9f84-2484153824ee",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "aa6b72de-c75f-4b6b-93f2-e612bd870c6e"
        },
        "item": {
          "id": "2814950a-ce1c-4f89-8f34-b8ec353f5e98",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4eb11b8a-aca2-4d7b-acd5-e2d5240861f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ccbef4-9cc7-430a-a534-4b31f90a8815",
        "cursor": {
          "ref": "f7c8d69f-9937-4d02-af48-4bb0acfb1749",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a2303065-3b75-44bb-9619-f7e71aef7407"
        },
        "item": {
          "id": "c7ccbef4-9cc7-430a-a534-4b31f90a8815",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a2fc5110-8c94-452a-8ebc-be9fe371c89b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd58cf8-a0ea-4b89-8042-b5cd7a8d8c0a",
        "cursor": {
          "ref": "88ffa30d-53e0-437f-9e70-78b4a08c1368",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1a7a1d5f-c2ef-4e2e-9b18-53665617d933"
        },
        "item": {
          "id": "fbd58cf8-a0ea-4b89-8042-b5cd7a8d8c0a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "50e042da-921f-4c70-89ba-427a4dbbe5c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42676cf9-c013-4075-a3d6-56514a14b196",
        "cursor": {
          "ref": "73c5842c-c0f4-4e0f-b847-a521ac23b691",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "bb42f346-54cd-4ef7-b725-574c82eb3059"
        },
        "item": {
          "id": "42676cf9-c013-4075-a3d6-56514a14b196",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6d815d17-2f7a-4668-bcea-de57cea3de19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a9edaa-a794-4ad1-b401-f1f18cb52ef3",
        "cursor": {
          "ref": "bddab65b-fcfe-4099-bde3-23e2686a70c1",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2a7e4e3c-2336-4034-b4c6-9e0c586afe15"
        },
        "item": {
          "id": "b9a9edaa-a794-4ad1-b401-f1f18cb52ef3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1dd1af78-8bf6-4f07-81d4-37340239a3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e450cd4c-27cd-47b9-b5ac-2a7a3b88929d",
        "cursor": {
          "ref": "268a1c2d-4944-4c5f-8d9b-27699fb596eb",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f7154311-9171-4da1-a11e-ca933384cc6f"
        },
        "item": {
          "id": "e450cd4c-27cd-47b9-b5ac-2a7a3b88929d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2044b014-a41e-44dd-b3fc-ffe65c031159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb4ad79-760c-4e13-a7af-4378844d6158",
        "cursor": {
          "ref": "a725ea10-b9ce-448f-8bcd-0e539ca0ea3c",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7d027c36-843e-4fd1-b622-f398b97fe9e5"
        },
        "item": {
          "id": "cbb4ad79-760c-4e13-a7af-4378844d6158",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6f9317d7-e6dd-4e85-9ea0-2909586b5046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f4e32f-59ff-478b-b2f1-d3cba4bffadf",
        "cursor": {
          "ref": "648916fc-9d62-4b3d-baad-7fea5596b1d5",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d3a762f8-3b2d-450b-a83a-d54067ce971e"
        },
        "item": {
          "id": "b7f4e32f-59ff-478b-b2f1-d3cba4bffadf",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "026369ca-5535-4580-b73c-71eb0acc0ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d9027d-0e51-49f1-8e07-e5c3efab1e45",
        "cursor": {
          "ref": "fdd0e1aa-4a1c-44a3-bbd1-4541deaecfdc",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e7987d45-8ae7-4e2b-84eb-332777f5d44f"
        },
        "item": {
          "id": "83d9027d-0e51-49f1-8e07-e5c3efab1e45",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a58b3122-2147-4e2d-b92d-46790df33e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebe4c45-ef99-4ec9-adc8-c65188f0fbd2",
        "cursor": {
          "ref": "90ec8bf5-659b-49bb-b8fc-3648c65ab7c8",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "189955f7-922e-4573-8f90-26080f384141"
        },
        "item": {
          "id": "aebe4c45-ef99-4ec9-adc8-c65188f0fbd2",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2e62eb79-9f46-4ea8-a4ca-9d0935030098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deea573e-b9f7-4ef1-9c01-09c4de4f5edc",
        "cursor": {
          "ref": "f0ff27c2-e995-46df-8cd8-4a86a7d39040",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "27b2749b-ec3e-4caf-8eff-810b7c168e0c"
        },
        "item": {
          "id": "deea573e-b9f7-4ef1-9c01-09c4de4f5edc",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0b4ca470-712b-4efb-93b1-0dfd9ce80976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7767950-aaf7-4f1e-a124-a5feab97273d",
        "cursor": {
          "ref": "ee3b729b-4e36-41f2-8045-6d45e520337a",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f7aa44f3-fbf2-40cc-8816-05cba53bff9f"
        },
        "item": {
          "id": "d7767950-aaf7-4f1e-a124-a5feab97273d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "26fa09f1-a970-456c-bc21-8b7f3bbec533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e727cf7b-553c-4a74-b2db-a94787020557",
        "cursor": {
          "ref": "3e14233f-0200-47d5-9afd-bdd98304ba9c",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e2d75479-161b-4097-a893-372f2360ba7c"
        },
        "item": {
          "id": "e727cf7b-553c-4a74-b2db-a94787020557",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "329155ec-6b9b-4710-bdb7-d07401ecb613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949d13b2-652a-4dcb-9f7e-5332d3fe5224",
        "cursor": {
          "ref": "4090d6a9-734c-474d-9c2c-985928fa907a",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6a857187-38cc-4ba5-a360-c6bafa1f048a"
        },
        "item": {
          "id": "949d13b2-652a-4dcb-9f7e-5332d3fe5224",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9a802dea-d605-4cce-a527-28ffd66f57a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614cf844-37fe-4dea-86ff-d119d66225c7",
        "cursor": {
          "ref": "13223384-52a3-4b9f-b772-0c407076869e",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6f29c028-8c3c-43a2-a317-3298351ac187"
        },
        "item": {
          "id": "614cf844-37fe-4dea-86ff-d119d66225c7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1d2c56d6-cad7-4595-92c7-b7ca2abbbde3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe069c2-9815-478c-ab93-3c303d2afd38",
        "cursor": {
          "ref": "547ade58-f104-49e5-970f-db89a5b37fb0",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "858ad369-1f40-4004-8c0b-e2c357a07f18"
        },
        "item": {
          "id": "4fe069c2-9815-478c-ab93-3c303d2afd38",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "85279cbc-b023-4261-a40c-a12ba0d34674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42ec6fb-0c26-428e-b44d-d95515381181",
        "cursor": {
          "ref": "19010966-4634-4e5e-86df-6280d13c15e6",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "94c1b139-6c9f-4c40-9155-1b0355797d22"
        },
        "item": {
          "id": "d42ec6fb-0c26-428e-b44d-d95515381181",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "441d631e-7c51-480a-b605-f1d199f550f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5912a2-52a6-4127-aeb3-55d19123a983",
        "cursor": {
          "ref": "d278045c-5cef-42e5-a919-c51ee45c9a4e",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "db9e5bb3-1846-4a12-8569-020841dcf4c7"
        },
        "item": {
          "id": "3e5912a2-52a6-4127-aeb3-55d19123a983",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f07a6eca-d8c6-40a0-9474-8387918f0a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fcd1499-eff8-4aea-acc0-dc6674e318fa",
        "cursor": {
          "ref": "843d3d31-ed51-47d8-8128-506a61948a20",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "02784a2a-b9f2-4629-8c77-3699483abf73"
        },
        "item": {
          "id": "1fcd1499-eff8-4aea-acc0-dc6674e318fa",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "cdf4cb0a-5166-42ba-8415-85201f58ef68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0e0f24-8cd6-425f-b536-d3fb3007a656",
        "cursor": {
          "ref": "a60041e9-f099-422f-a3b2-48fcc29ade9a",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1c62b34c-c5fb-46d3-83df-addab5134040"
        },
        "item": {
          "id": "0c0e0f24-8cd6-425f-b536-d3fb3007a656",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d3657d42-efbc-4c23-b990-bd49a40ba697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606138ca-7ab7-448b-82ca-58a73892d884",
        "cursor": {
          "ref": "9639e0fe-79c3-478a-8568-f7d0b3462b73",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "cb232031-afe5-423c-ac4a-2cd3f53feb3d"
        },
        "item": {
          "id": "606138ca-7ab7-448b-82ca-58a73892d884",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3d78cf22-7fd2-4910-8aa4-2cd9f429d10a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39b8daa-1a1f-4c9b-8fd7-f1ec39d2eae3",
        "cursor": {
          "ref": "361797b3-8ee5-4004-aefb-959b9f13c03d",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "18a10214-5974-4bc9-b73a-0e273c169d5b"
        },
        "item": {
          "id": "c39b8daa-1a1f-4c9b-8fd7-f1ec39d2eae3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7bc08bfb-e61a-49a7-8d96-a69cabb41c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ed4a67-a7df-4872-b563-8701b1b92aac",
        "cursor": {
          "ref": "e0d38833-3f35-4ff2-ac25-72916242dd01",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7f95cd33-c2a2-4545-ac75-2e7157dc8008"
        },
        "item": {
          "id": "60ed4a67-a7df-4872-b563-8701b1b92aac",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b578de1c-7bd9-4154-8b96-c8522aa070b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8145cddc-59ba-4b3d-99ff-706bc715934c",
        "cursor": {
          "ref": "8d729e9a-ecaf-4396-a535-c9f7c8fced65",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4cf541e9-ac93-45d3-8213-1eb300547ee8"
        },
        "item": {
          "id": "8145cddc-59ba-4b3d-99ff-706bc715934c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1746560d-681c-4479-a43b-4acfd503c3e3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf53bf9-87b1-45bc-92fe-c1fe2de47c4a",
        "cursor": {
          "ref": "d56d6f00-d199-4bf0-baa4-ee2af7e1b525",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d238798b-89af-4621-ad10-f94f5ed5a669"
        },
        "item": {
          "id": "3bf53bf9-87b1-45bc-92fe-c1fe2de47c4a",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "adb81c66-f7b0-41bd-a704-a3222f54e8c9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abf8d81-57f2-425f-926c-8be1084b136c",
        "cursor": {
          "ref": "f33e38db-ec79-4ac0-bb3e-7a2c94543b59",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "01c1f101-6868-48e1-af50-244cc23c314a"
        },
        "item": {
          "id": "4abf8d81-57f2-425f-926c-8be1084b136c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "280f8650-6cc4-41d4-9e6e-fca88991a88b",
          "status": "OK",
          "code": 200,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0acb29-ebe2-4c87-a895-3752ca95f57b",
        "cursor": {
          "ref": "e8f174c0-b564-4089-895a-c20ac7c5c5c5",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ae893e31-94c0-4117-8418-18d02e90e8da"
        },
        "item": {
          "id": "cf0acb29-ebe2-4c87-a895-3752ca95f57b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c9bbe46a-e076-4390-a8e2-4790f383df74",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "223d26a7-0ed7-4e47-8ddd-d73e555ed629",
        "cursor": {
          "ref": "4f2b45aa-4608-49bb-9f99-3605a88087af",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "643208bd-639c-49ff-ab37-00c996d1f26f"
        },
        "item": {
          "id": "223d26a7-0ed7-4e47-8ddd-d73e555ed629",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e4c644a0-122a-4333-b3d3-95e556d48e80",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a183619d-9bc0-46a3-82f8-31abf9a633b1",
        "cursor": {
          "ref": "9a783dbd-ae49-4b5d-bc86-43fd1d57dff8",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "28e0a42f-1e89-4084-8f4b-9c23f824b7e6"
        },
        "item": {
          "id": "a183619d-9bc0-46a3-82f8-31abf9a633b1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9399e454-649c-4fe5-8fe9-874d88bba2f8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a183619d-9bc0-46a3-82f8-31abf9a633b1",
        "cursor": {
          "ref": "9a783dbd-ae49-4b5d-bc86-43fd1d57dff8",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "28e0a42f-1e89-4084-8f4b-9c23f824b7e6"
        },
        "item": {
          "id": "a183619d-9bc0-46a3-82f8-31abf9a633b1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9399e454-649c-4fe5-8fe9-874d88bba2f8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a183619d-9bc0-46a3-82f8-31abf9a633b1",
        "cursor": {
          "ref": "9a783dbd-ae49-4b5d-bc86-43fd1d57dff8",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "28e0a42f-1e89-4084-8f4b-9c23f824b7e6"
        },
        "item": {
          "id": "a183619d-9bc0-46a3-82f8-31abf9a633b1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9399e454-649c-4fe5-8fe9-874d88bba2f8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708eab17-f075-47a3-bfdb-cbd0e94e187f",
        "cursor": {
          "ref": "7cc41151-305c-4933-a5b0-381f4eec3348",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "cd5710d9-16a0-4260-9416-2ee44741e0c7"
        },
        "item": {
          "id": "708eab17-f075-47a3-bfdb-cbd0e94e187f",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "3325a6ce-cbf3-4611-a513-0b39576220e1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c95970c-fb0d-4b29-b481-f493edf21dea",
        "cursor": {
          "ref": "0900f16f-02fa-4aa0-9c0d-9a46bf64c276",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6eb4cbc9-d579-4819-81ae-89fb423ea11a"
        },
        "item": {
          "id": "6c95970c-fb0d-4b29-b481-f493edf21dea",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7112ef4f-fcf4-4730-afcf-b7166865e675",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c95970c-fb0d-4b29-b481-f493edf21dea",
        "cursor": {
          "ref": "0900f16f-02fa-4aa0-9c0d-9a46bf64c276",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6eb4cbc9-d579-4819-81ae-89fb423ea11a"
        },
        "item": {
          "id": "6c95970c-fb0d-4b29-b481-f493edf21dea",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7112ef4f-fcf4-4730-afcf-b7166865e675",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb72f882-69bf-4dde-a413-98f669e93ef5",
        "cursor": {
          "ref": "724f3c54-1c1c-4107-9206-66063b943d2e",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ec167960-ab60-44df-a065-3740d8eacb83"
        },
        "item": {
          "id": "bb72f882-69bf-4dde-a413-98f669e93ef5",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "de0ef3c2-956c-4d01-b3e7-657784018192",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8724e397-631e-4f9d-ba70-21a7e66f336c",
        "cursor": {
          "ref": "1b793667-e1f7-4169-a531-47df46debd3a",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5a91e74d-d284-4ac2-980e-5c386063b6a5"
        },
        "item": {
          "id": "8724e397-631e-4f9d-ba70-21a7e66f336c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "412c0e8d-b425-4a7a-a918-94f6defb5f16",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8724e397-631e-4f9d-ba70-21a7e66f336c",
        "cursor": {
          "ref": "1b793667-e1f7-4169-a531-47df46debd3a",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5a91e74d-d284-4ac2-980e-5c386063b6a5"
        },
        "item": {
          "id": "8724e397-631e-4f9d-ba70-21a7e66f336c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "412c0e8d-b425-4a7a-a918-94f6defb5f16",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3973c65-afa3-4ae2-8f94-668b9d6e6f9b",
        "cursor": {
          "ref": "54026dd6-b557-4864-8afe-34c32998a183",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f8ebc558-dd63-4b95-a974-d11e0d37300f"
        },
        "item": {
          "id": "a3973c65-afa3-4ae2-8f94-668b9d6e6f9b",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "9ef66d3b-09b2-4b94-9327-14a816c93221",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}