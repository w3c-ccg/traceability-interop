{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "64b2eb4b-3dd2-414e-ad47-ffd499d86d52",
        "name": "Clear Cache",
        "item": [
          {
            "id": "97537088-7f32-48ca-9d5f-62e73ea671b0",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cd53e659-743f-4fee-a3ac-1a89ed08b19f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "90ac3ab3-8e60-4dbc-afc4-58bcb9a2cea4"
                }
              }
            ]
          },
          {
            "id": "b8d57153-8b33-40a5-8c44-4512be4ea4ff",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "70e963ea-539d-442a-ac29-7c2c32576099",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f8208b45-2fd7-45b5-9e53-d19883857d35"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a9444ed1-e485-456b-a0ef-41ffa6d1b995",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "16b56a3e-c43a-436e-ae47-7cad0dd1a24f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2fd9d1a4-67a8-41dd-967a-d1c3af1eb7b0",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80c9a5b7-faff-4ec8-9c3f-dbf3215807fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "259c7d5c-bdfe-4a18-b5ec-66cf617d2b73"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d212616f-009f-41e2-9eee-9e134e9e9797",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ca439a03-5007-4bfc-b530-2243d766b71e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1fae6097-2c86-4b3a-b39f-11457a83c58b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "10d1469d-1b8b-4f09-9916-b3ae86bfab80"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "25a2cbd0-a484-4cdd-8b38-d7d2537bd21e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a2546543-757d-43a9-9aa2-971deff77d32"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d4b2eb5d-52de-44e4-94ce-ecbbe1e9e534",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2a4802a3-692d-4375-9a8c-725f3da57391"
            }
          }
        ]
      },
      {
        "id": "26789581-3547-4b36-b429-6e752f448654",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c3d6c1a2-1345-4122-9efa-7a8ec118e2d5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "df2cfc71-a13d-40c8-b983-25ca5cbced52",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d5612300-8ad4-4410-a962-a1f68ea2806a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85bfa776-3699-4001-bcc2-256de5761626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1547cc8-d40f-4532-b1ea-f9acd37932af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffcd2458-7fb1-4c0a-9e51-41f00527c817",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf3debe-2d27-47e5-bcee-a4fd32ed4480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "464733e5-8c8d-48d8-9341-dcdd79b59b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd91b0b7-e358-4565-a3d1-33d8f4a113bd",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b085a78e-2815-4e83-909e-25992bdd1fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ca269c9-c584-4b3e-9ce9-0fa49d1b9746"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3f1a6907-73af-4cc8-8384-ab92f7787b7f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "484c94d1-5e1c-43d7-9954-e4b14d69dab9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "757b5c89-cc21-476f-bf9e-bc6658bf2b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "803caff6-53b6-4628-944a-ced038ab3340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "282db11c-ac22-4c77-bc02-05c5bb8ce2e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87194665-26eb-49bc-b390-6566a91ab0a2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cd02f33a-813c-491c-88cf-0f8e0bd0b166",
            "name": "Positive Testing",
            "item": [
              {
                "id": "df998fc8-b7c5-418c-a87f-dba7c26e3c9d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "207fb5d5-ea6b-4840-9b56-72c64b74bee9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "26134d65-b6c8-40cf-88a9-41362f9d9e87"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ddd653f-77fa-4d53-975d-8e4501c90284",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4baaef27-65a0-4443-8c52-9c2f9217196c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c608ac6c-620e-4c43-ab67-654a4dbae799",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3cfe1f89-ab94-4923-a0f5-afe92de4677c"
            }
          }
        ]
      },
      {
        "id": "85ab08b8-18a3-4f33-a134-a49d41ef876f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9a586301-9d52-40f7-b0a8-97b28ad7446a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "51901f3c-6747-4748-a3c3-0b8a2d500b57",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "bbd987cd-1afa-477e-998e-a04e6bb6a332",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac41dc74-ce4d-440f-b188-1d01d90673e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78bef61e-eca5-4865-b262-66b2f2fef693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "746eb2b6-0ada-4756-a9b4-e4d2c7602429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "795d6ca3-05ed-4532-b1eb-e9c1551f55ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59788622-2584-4cb9-bc87-a2dca46ca0fe",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c54d593-6a2f-40d6-9a9f-bd023b20c515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7c53b5d-117d-4d99-be86-03a350096321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071cf4aa-b048-43d5-b17d-bb8a28e1d003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bce767a9-bc62-4c89-8a81-d5db1a736c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33d8f9a-a211-4d0d-a721-55a93c1f4dc1",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced7c08a-fedf-4167-b94d-54a773818cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16d0744b-de09-4af2-bacb-4ddfdf501e0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8926198-ef96-4776-b35f-dbcfc2b86559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "143ce6c1-ce69-410f-8ef3-be757b51839b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc5adcb-1767-4353-b101-1b133fe456a1",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba62ea6-d461-4139-b0f3-9f5e9705d6a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b94b41b8-118d-4856-b901-9e316b97453a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450e5302-2bd8-4499-aba6-0354f666b506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33452e90-3f75-4f1e-90bc-ade1a789f165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b4dc9a-2d74-453c-8220-bf037e17909a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcfa0ee6-6229-4428-82f9-3d6c5acfce11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e05e46d-0bd4-42d7-bc9e-68c47a57e5bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce226ffa-39c9-464c-9887-e64977b6a26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7bf05fab-6731-450f-a556-b367e9e9d415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3f84ee-5b5c-4e91-b06c-0ea3d1c29f1c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5791839-1371-441f-ac3a-f34812bdf895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2748d375-779d-4b7f-975d-e6f1eb8e4f09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1bb87e4-7c1b-4db1-9b54-142051131465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4126e4de-90d3-44d5-b462-e95ce513d6a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe0cd472-697a-4d6e-834a-983f2a2621a1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e387548-5b00-4ead-b79b-6a94d7b1d2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b5c39fa-90e7-4c68-bcbf-571cecd1693d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a13af09-db97-4ab7-8312-4ef476086f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "845b5ccc-f34a-42e8-bef0-039f3a4cbed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fbb8ffb-8b82-4e6b-9f31-1a820d8f75e1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e339dcdd-b54c-4603-a4c5-c5b0959faeab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2657b639-a8c6-4ba7-974b-21b84123cb81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0f7789-42e4-428d-a268-322edab1e380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9fe36c7e-14d9-4379-966b-b4f3c42c2a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43df33bc-7ec7-469d-bec0-8dc6ac45042a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f5f6a2-9065-40cc-a16f-e65d456c5398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ade055c-b06b-44d5-8a7e-7950d5cef299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6351b5bd-6db0-45e3-acac-24227267fe8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9cb3aee4-8799-43dc-9556-b1df09fcf866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ddf235d-5455-4cef-b9f1-610f57ed717f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c9af6d-eaf0-4531-b1d2-4096d2539afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e06f53c6-bd88-4ff5-b44a-b6671e2d809b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2782304a-736c-4c61-a3c9-ce803b2390df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3f49876-429f-43e4-b8fb-0defd1b9201b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b0c421-5f1b-4f4f-b755-a5e22f2ad7e7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee32b4c-f21e-4e60-a24c-1f4357a48d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f23d7b8b-b73a-46ae-971a-db868153c300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b251101-b1d7-4d86-956a-ff28ba902f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32f80dc4-3169-4fb2-9cd9-6de2f644d9ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6d6fad-890c-4953-92fc-ad91cefa95ea",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17b195f-91be-4554-852e-a49fd2f06bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4935b2af-4803-4b57-9f95-151e728947da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae146e2-f791-4058-94df-1756c05d7081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5688be2d-5ef9-4106-b531-0dfc836aed09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8852e207-01d8-4153-b4aa-16bf19e72072",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86e5aff-4f80-4959-a0b2-171ea5562d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51369ce8-bd9e-439f-9bac-0abd7ad5ff2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940bf2ba-34b8-4d6a-b0ea-59d5fc645e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24072e77-df39-47db-81b1-b85cd796c64c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7238dd-76fe-40b4-81a1-1b0fdadaacfa",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c9816f-fd5b-48b8-bae6-b08e3d02255b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c81b4e0-4196-416c-992a-039ffcc838d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68dc965f-ee1c-448a-b14b-44641c1fb8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "728cc98e-ea1f-4542-8870-22ae8fd5d569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7e4a6a-e09a-47b3-95df-115688774cfa",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10478c53-7e6b-4c2d-8795-db0c2e938b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e0ce597-b871-4664-a1a4-b86032369e57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e82a1c7c-3b8e-43c2-8408-5735f6c0953a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f83158e3-5727-43de-b321-b3b83720ee10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5bc6fb8-ed15-46be-b6cf-3f792f8f8947",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "250187a1-030e-4a22-a08c-fc26ca7ad3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bddb07f-31fe-430c-9526-ae9f110b6e98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7b0d8d-4e82-421d-9cf0-bec3743c80ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ffb22b8-bc8e-4972-b822-f7f20ae97d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6395e12-43bf-4390-97c5-a37db332b6cb",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21f601a-b8e7-4383-be49-d079b88bb079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "145761dc-b7c8-4010-9810-982c4a4015ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf7afa7-b881-4b77-ba3e-a15b6442be2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ef49b4d-f166-4e5d-bdc2-77266e98247d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4ee528-f617-486d-aa83-8d0918a0b52f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1a3e6c-6332-4c9c-b545-4b2d76f6bbeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdcb5e79-24a1-4972-ba13-6871ea50d281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190ea898-1544-4ca2-90c0-401404ad5935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "80c9b9b1-c998-4cd8-8949-10b728fa2ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8014ef7c-93ac-4d69-b930-c0c42652e456",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e847ec7b-6602-446c-a7e9-85b359d5e20b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d45ccdce-d456-4ced-8628-9d6544ef0a44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a615c1cb-9fcc-4ec6-ba85-4520d6951147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0574f3b8-e594-4fee-9953-e0ab760ad18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bcb6a3e-82d4-45ef-99c1-1b6a4f674317",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f430ccf-ce43-4755-a351-621303ea0b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52abae5b-ae3c-4c11-b229-0e166d39b792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef988aad-17d4-453e-8b0a-06198ec759ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53e57794-596e-44e4-912a-80473c0758cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313029fd-afd1-4813-af6f-04429ae6764e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb23b1c-d0ce-459d-acf3-4523bf57d113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "411728da-e260-44d1-b98e-d0117ab7483c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e783c8-4093-41ca-acfe-943ea6c1a3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5df96d62-6f2a-45b6-8613-2bc746c46519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add68a19-c68f-4043-b6e1-7d0930d6d91d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb06ec16-b12f-4de7-a461-f3864627cc9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ff28b1-da45-4871-ae36-472e71dc6c17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6442027c-e635-4220-b85b-a37c169d580d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b413afa-12ea-4e99-b661-d82a8920abca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3530ee07-72ef-49c9-a7e1-f9c0c44785d0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0061dc27-40c7-453c-98b3-780eb91e370d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1a45f26-8566-4d20-9d50-5f60ff3ab391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfafd864-08e0-4ad2-8d11-e8edfad95789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f0d7033b-6047-418e-9e0b-8fff542ffcc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df6871dc-a74e-4e56-8b65-076d9c60e6c8",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da900678-75b1-4367-bd46-b6e6ecd10ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1d9a4ca-3dba-4261-b0ea-391604815546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2acff2cd-d2e2-438d-af96-93a340446928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "98bc79b4-b32f-4f24-a398-9f06e16cca53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50da141b-5c24-4315-8641-da884a19ca45",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15ff965-b8d7-4302-99ee-6c7de5383a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a8c384e-d6aa-410b-9e68-bc7146b75450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f7a62a-f980-4810-9064-7a203d421cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dbe369b-e2ba-4758-8428-0250c20c48df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143da1da-50be-4ddb-92f5-c9ce495ee0ff",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85e775d-d401-4329-af4a-240100b4bf85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17125b68-0e1b-4f58-b2b4-aaec4895da6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1269d2da-b586-4490-9e5f-d30789b48011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "105990af-9a65-4494-9dae-71644666b5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baed609c-f7a5-44d8-ba86-a4d043555fd8",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5608012-e702-4208-9ee0-2efa3a52e340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "727e85f0-2caf-48ba-b698-5df28949828b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73cf8941-b27e-40e3-a379-45ca364c4845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bbd2b3a-cf96-48d8-8b60-64195a3644d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1edd739-c3fd-4b1e-aeb1-71a6d0a6a65e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d758af-8663-425f-b96b-6b509084f1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54feb3c8-8757-4c12-8709-df7279de6de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aaca7c2-9f2e-44a1-bf7e-3a3c46810ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "15fc3ca3-c290-4a27-92e9-edfdd4bb5761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db291700-87bf-4965-accb-7645a8bfc6b8",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "842d8ed5-125f-483b-9ced-84672d5e11c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45b56392-eea4-4733-9f73-b42d661dd288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f93419f-e546-44bd-817e-3d62810e8bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dfeab04-30ed-4ce3-80ad-662b36932d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840ebafb-4ced-49c3-a375-c64d6867e97d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "391bdc2c-095e-4a59-97b3-7a1dcc1581b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9be5b37-e198-4081-993a-72b6d8367fb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc24edc5-0c85-4ee6-9473-0ec3590ca93e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "51b10df6-776c-4a77-9646-b16b53d60d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87f981b-3a5a-41a9-88f2-0626ac805947",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7dc9b8-4df8-4889-b8b8-c552bd93c5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0f69fe8-7f73-4eaa-a3e1-45fa444a9966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa3371e-1d9a-4b33-8b00-f57ecb8df39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5741021e-ad74-4cff-8ad1-ed6d72cfcdf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c482b1f-8942-4111-83cb-2e1054d31c6c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bfeb85e-6712-4fe9-86ad-f40952ddc4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ea616e-ed7c-4c0c-8153-4dd813807286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a0d81a-2ff2-40fa-ac3e-e556ce7d3930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "65b18f14-4968-481f-944f-fe9c5c71806d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7215acb4-5c77-4b67-a414-2d2fce305cc2",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4803f977-a0ea-4960-8b87-c924be97e04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe6363b6-cf7b-48da-9cd2-d609b86f7b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223ef52c-faca-4546-9e29-f3b529931247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1925262b-9cfa-4c50-8843-b25329e8de50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5cbc4d-9039-452b-b4a5-b1857861d040",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19b797c-a617-4a01-9470-0d08dc289597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa2b0da8-3316-4f2d-83a1-2a3d2995541a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a216bba-7eb8-4593-b50a-eadc58d8a2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d96c08b-153d-493d-803d-b8f3c1700328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a163c4-b549-481b-a6a3-193a9bb3d9a0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c38f38-4a75-4161-9d2a-21f091287459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d32e0e2-5e3f-42fc-af71-48ab2703056b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1741f998-ae78-4be8-b2ba-a967a969e35b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "52372e76-5a9f-409f-94fc-60273a2ae96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce65d3d-4825-4412-89bc-f6767b18738a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5a2073-2a29-4074-9cf0-4cc1ba57ba7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03c2ca3a-d73d-44ff-a6d3-408038bbb080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e18b1f-18d0-4cb2-8069-c54e236fce3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "050320fb-0ce9-4289-9369-5c499abfe739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cafde625-8c45-43f1-b5aa-792d91491baf",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b9671a2-90af-4e3e-aa74-dc86ae9db111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5249dcdb-b5d9-474e-946e-90213da189a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8f5f98-d144-485d-92f5-56042ed7c534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0dd33fca-f0cc-42c4-a189-afef9eef6745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa544b0-20c1-4f7a-9c07-23b3f9b7575d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae12451-60c0-4170-9a34-142037f79c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad905a24-e252-4219-8254-2f734446dc75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277e0960-caa2-4a22-9f80-b48855728688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8330ca3d-7a5a-4626-abf6-588e52edec27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4ee68e-a03f-49fb-806c-d81c6327c3a5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bbcf5e-c10d-4439-a22c-5e067c12a505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb95f61d-a3e1-4883-b855-c03241192cce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98411ba6-966c-4b28-bb48-27dcfd45f861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff9f1c55-d3a1-4c8c-b7a5-d9383304a1ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e45185-30f9-498f-82ac-c345044b19e3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43433e38-b2ae-4bcb-b3c0-00496e4d30e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "777c8aa6-a177-4a58-9751-7a00f8f4d145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63155a2e-73fe-4cb5-90ab-5e9a96b2be44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6859a83d-9440-4788-a836-e755d4dd5b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb96118-f960-4401-bf30-5a4db3d92889",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e3636b-8170-411c-9c79-09fde17a05ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efe4daf3-5442-45c0-b8ce-d06b269f3b64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c61574-77f4-49c5-adfc-222bf9b25b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb48be79-4f2d-403f-a136-a47996def962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c6ec18-a9bd-4b8d-a33b-e452dd6a27f9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4a7829-2107-4b47-bda7-e92fcb4da456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf606d3-ae5a-48d3-afec-abb05b2002ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c6c2cb-4db8-4f3f-9e32-82a23b610480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4de8ce5d-38ef-4107-bee2-911ec740de8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91801b5e-84da-4a8d-8f86-cd1ccf3124d9",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c52d6b24-819e-431f-9ce4-0b2eac5c18b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e63f4b1-beb6-44bd-a142-acf22b4b5785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a6be13-18da-4890-a092-ca7a7e93b439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba33188d-b6f9-4ecf-b55f-dfc843f1ad59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7b7541-0542-4346-8002-93bcd03a18e4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e317d574-0e7c-42a8-b6bb-c4aa1d6a75e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fac7e01-5647-409b-a630-8f58e5291cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2fed511-24da-4958-8f73-d2c26bdf1b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5aa2089b-a17b-43e7-84ad-1f095ddf50d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03cce76d-e805-474b-b9f7-ac43976a70a9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "172ec61e-02c1-42ec-b672-acc4304b4a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aee45cf-86d4-4b1c-b1b4-6591b2bf8f3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34ed183-bc17-4d2d-8c86-5384010d9e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8b69fb6-129e-4d84-9ef8-6dab689f537f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df7aed9-d8dd-4057-9427-466bca854cdb",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "764ccdda-dab8-459e-82ef-6c44da02a63d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffa98a2b-44a7-4711-80a9-6992e26287a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82039f5d-f3de-4943-9b33-d23f194200fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2683c41d-8d30-46f4-acce-1b42a0b2645e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748a1e55-cb44-4410-80fa-a7689e539827",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "898c4bb2-2d9a-45ea-b753-764e892ca4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95bbb896-cfac-4d6e-9d28-482c2e52ecbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b9f9f6-752e-4f8b-bfcf-da851a8b5453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95ba9447-9393-41a6-902e-34aef967d7e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1568494-9058-4240-af4c-81ef62d2bbce",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ef1cf1-ed48-4f51-b8e5-6b51f3a1de40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5a96f59-4605-4d68-bf9d-0af84abbaa7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71bab990-ce8d-4718-8b84-f701df27deed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab157acc-4ac1-4437-bf8e-5cf2feb4a5ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc992ff-8298-4655-8452-cebffdec30c2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ecfe734-6944-4429-99bb-3a7e0bbfe39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4be999dc-e734-4f0b-98c3-88b9f249052c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d94e649f-c93a-4162-8073-1f569cd7a1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "75c99343-4574-4917-bef2-c8db6c304290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be39728a-f4c2-4939-9a55-4d931876802c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ba793c-5ead-4b9f-8610-49fc4236e5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7b484a9-45cd-4baa-acdd-f31e73b57390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ae1a9e-e74d-4a90-b7f6-8740069688b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1f83edf6-8e0c-42dc-96c6-62c106af9f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60688cbd-1806-441f-adc7-e68b62745280",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a798af2d-02ee-459f-8441-3c85c60f242c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "536f1089-a801-40d5-a76e-b60be33cb0c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cec7f46-8eaf-4611-bc72-1b5095973561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e79d8a46-1ce5-4961-adda-729effb04874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327f770c-5879-494d-8d60-dee585b7b490",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff0fa55-0a5d-4a05-b9dd-a168f115914d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6d6bcd0-6a0e-4ca3-b4b0-b0dd771a6d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8901da-de39-4512-80bf-04ec715e913b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e180459-022f-4769-950d-e357ee44fb7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e832494-77a5-4bdd-aab7-b5e79b73e180",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a712567d-17f2-4dc2-b17e-13924d2c2b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ce45d6a-7f55-4222-a6eb-0327a3c90889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d967fee-2f46-4eb5-959f-fce722b1867e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd15bdf2-579b-453a-a4ae-7625fdaad94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "718c9663-f8de-4a6a-813b-97bb20ab035d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d432c15-463c-4157-bc94-42a729d74c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce527cbf-0b92-4339-8687-63ef63711208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbccb563-c80c-4505-8210-6390b7166e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b610621e-ba8e-4fb8-8d9e-51edc53b7055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d090b5-4393-4970-b316-1b1e8085d25d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8d3c40-3c04-4758-96ae-51c50219df26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f553c796-f69d-4b63-a866-1b26eb103876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab4a94d-6cf1-478b-900f-ee81cffaebf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f33eb33-31de-4c11-a2df-8cc173265a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd19d2a-0379-456a-8940-a1966740d853",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1c4065-7f12-4291-ba64-bf4ce7eeafaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0978a337-5456-45ac-9d34-242b75631d24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f98678b-0c7d-4151-b35f-4d9eabd7e1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4a5b2922-a59e-4d17-9aca-600731fe332e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00cb75b-70cb-4e63-82d2-4157b73abc65",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bef3a2-b4a0-4b81-9b73-774f792400e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2569999-61e5-460f-a3a0-8f35a73a7422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7825132-4c2f-430a-9768-a9b20952f9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3041fa6e-d1aa-41c2-b61d-481d2b628742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438b4513-f21a-4f10-b45b-f27ad9bea917",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "100619e7-4d94-48cc-96a5-6e77ce331e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e52e96cd-c15c-4cbf-b7d4-1e15e335a1ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39864352-6358-4dea-84ca-7f87670c4f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d30c30bd-fa1c-4261-ba3e-c118234d34aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f74d60c-82b7-4734-9288-b36c18390761",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e263bf8d-1cfa-4f09-b6d7-9c9641d54dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef30c6d7-11a7-489d-8be1-afd485a172ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3171424e-95ab-4c69-84ab-963ddc2c536a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "db225ae7-ec48-466b-9015-1ccb008a5b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6e96c1-856b-48fe-82cf-4b2a16696ac0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b47916e-c7df-4339-ae3f-ba4dd08f9dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "050e0447-c7aa-41d0-b3cf-6385f2aae26e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b380733-745a-4af7-969c-61be23a62bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "77902ebf-4d22-4f8e-b262-a3a7f7d11f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4250f32-9d65-4cc7-8c69-46cf018127f9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef586239-00e7-4dc4-9175-eb220c4f8191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ffdfeb0-4d30-47e6-9155-bef6a55b2dab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f101b4-f963-473f-a6a6-e3869159cc70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "db861fd3-d3cd-4a65-a83f-813253133268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e813ed9f-b7dc-4ee2-bd13-a8d7ef21f5bb",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b732cc-835a-4f1e-8e45-1f44fb3a4c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d762e8d4-7030-4812-a58a-3e61910a6465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ffe62e2-8b5b-4d17-902f-a82bcfb8a9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f3eac58-2182-4473-b32f-69c1e7ec6e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23846de-92f2-492d-be39-f43d79a8d882",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ca7979-2582-44d1-bc34-f0eabc3a7952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afe5f302-7090-45c5-8de6-b9d054ec3090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca809d55-c747-47c7-8910-6409c809aab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5d77f02-e995-4c19-900c-697b3e4c7639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "574547d3-440c-4ef5-a8db-24e43272a263",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a6c368-99e4-4547-8e23-d3170cc49a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04b729c4-5afa-4f09-a8b0-283cb97052f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0c9de0-42e3-4b1f-9608-2db733cd51cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fedd9a9e-a612-4f66-9219-50f125cac132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c309b242-3d9b-4c0f-ba12-1cc3044c2631",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd5acbb-9eb7-41f3-a170-899db7e03a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "290e1e57-4e18-4dbb-89a5-c88c25db33e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a988586c-5e3c-4fa6-84e0-d3efd11f3d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92c8d4f9-2538-48bb-bbd8-df140123cb07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c94d45-663a-48ca-bfb3-866f619ce2df",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b10b7f-3fa1-427f-af17-205131964e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f95773-b0fe-45e2-9af3-4d03be18c2d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c1e32cf-b993-4f7d-874a-2902e88a171f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13958c0f-bc47-47f6-84b0-3bf90e44dd4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0829f92-63ec-4279-a021-9d82e0cf8f51",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f725c232-e59f-4f6a-942b-7b3dc9581c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf90240-0d0a-468a-b433-9b299133165b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8cf3aa-446b-45ef-9921-a7c565eb309d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "71a28bc5-7f01-4cca-9fa9-0bc8a505ca8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673b9c1f-9483-4b2f-92b8-eeae42e2da52",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9904d6cc-520f-4ebe-894e-e750d09df589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d11d8cb-8537-4071-be9d-0f76678daa91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "931666f4-67d6-403d-b77e-c16a895f057b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "efca1288-66c7-4149-a8ca-377c70f35b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d4f4233-20ca-4d14-acbf-2ff49cfdbd4f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7309b5-be01-4563-8491-8a75e1287bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "297700ba-2db5-4de7-8e71-99cbffe36d31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c03e37-b41e-40cb-aa51-a1ed2bbbb0b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "717a0dc8-bea1-400b-b71c-93632af7e79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45ec664-6408-4da7-a45a-112a41a75d37",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd41178b-576e-40d7-b388-94d474b78135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0249ecd3-1842-406e-bc67-922d9961bce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8996f8c-7af7-49b5-8214-674f52d4b940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb0aed6-b087-4d6e-bce5-1b76706c0bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdfb8de9-53d4-42fe-be82-ca250af47896",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f886feb1-cfb6-490f-8f71-d7b9446b229f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00a35458-0b4d-430a-9e73-10595a120379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e70f9c-5fe6-4edc-b35b-71f6afd885e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e58bcb45-a979-4a3d-8d80-34a46fd35e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ab440e4-d22b-40df-b5ac-019b89631564",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa15c88-c17f-48ac-8f09-9066028a9ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f745356-2705-4c66-9f16-714b0863c71c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5540095-f43e-4aed-ab90-e11b1364f68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "388009ce-2dd5-4478-a23b-6fba8d20d314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb67c05-9652-403f-93ad-9175c272e6cc",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b2d129-adf1-4c46-96b8-12902204408a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa96a2de-b9ef-4ce6-b306-57deb4d29421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "292d7164-8068-4cea-a974-c044cfadafb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8195cdb-c0d8-43bb-9b19-13912a97fc76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41d2577-269a-47f2-b125-dfe5a482505d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "826c75d1-e872-48a2-92c1-8c37e1dbed78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36acd6e1-ab6a-4ea0-bd73-1936ff0442cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e952bacd-2fdd-4565-bb83-5f0dd2426c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9ed63ce7-1d54-4ba3-b334-9a628ca57c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c77080-c6fc-4c4d-b656-6ced18707736",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3c9980-f32d-4881-9a1f-b580abdc2267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84f9eef3-5b4c-494b-9b35-b3d068068f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e416536-29ec-4d37-ac35-185811328ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e51a8b0-1d73-45da-8e88-7004978fe1b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f50257-1c24-4fea-b5ce-ca4e50487dba",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80db514-be7e-4d7b-a82d-ace50cb9d5ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d8499e-24be-4026-a3f8-e15d2fec48b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e98ade-2e45-4029-9b07-a05018fcbb25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1148ac70-2a8f-4384-8e1b-8319177d1fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9be9f8-59ac-43b3-a520-639ad809e005",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a52a6f-1a37-42c0-842a-18d303688a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9af53d60-4ffb-424e-a64c-64174c8a8c61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eddebb3-9861-4d70-b1d0-2aff0b04dca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "284d4cf4-c31f-474c-9c5d-438b98754e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f576b04-5129-4a06-a9c7-f88bbaf56253",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "885ace78-4c16-4671-b599-33c32dd82d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "169766fa-955b-4a59-b1c8-36fe64c77df7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b558ca5-e78c-4a6f-8582-8aca1a653284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31e3ab95-adfc-44a8-9b93-8b0d7d4bcb0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "722e509f-e737-4bc0-b5d0-0b8de81fa489",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79517edb-a5f1-4e40-be54-094945ef86c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f0f708d-cff4-4ce1-9ed7-9084af4734e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c772d88f-c543-493a-b4b4-fbdd1685f7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8ca3787-5a6e-4885-add4-95a2b0b4f13c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49dcbbe-94cb-4607-bb88-03f9c8bece9f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3b82b3-0f15-44d4-8685-a7701bb517a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6c917cb-87f6-42da-8ae3-073f5bebdcac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fcb075b-a429-4d3d-9057-86c99f19420b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c1dd832d-8dfa-4763-8620-a3c261c7d7d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b1d1be-5285-40c0-98f9-f25bcaa5a6c6",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a161cc-d9e1-4b53-95e2-dbad1b424b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3a742cd-d2da-44ad-8b0a-d15b7da3fa3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9c0ca1-8748-44e2-b0a9-a942909fe2b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "31b0ec29-95ce-4391-9e5b-d1da7d8bd928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b49817d-822a-4eb3-b5f2-bfe75380a797",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1859dbff-b293-4aef-860f-321a97f022ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ecebe44-e690-4b39-8624-dfccec788e6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb64f0d-aafe-4cc6-9068-54af27d3bcf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "07efb5e1-bc5d-4b14-8756-d685f7285ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05f6f46-99b1-4a4d-895c-a1dfcc1d1b7b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92492acc-e6df-472f-9903-8200cb55bd0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba059ff-db04-4185-99e7-f37178bc2a42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5b883b-c140-4c63-8e86-8159ee5a44ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "588d0d73-fd95-4d06-988e-99ceeb66ce3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db07c23-27be-4abd-95ad-f31d9404fc6c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae48f63-79d7-4bea-87e5-81e3967062c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4edb2026-ad1d-4fd3-923d-105ca72dbe49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe38e1b-2607-4251-a397-16e960c8aec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9f2c625-30f0-442b-9894-6323067d203f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6b6a5c-b9cc-4317-9b3b-3311b595d318",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0e0110-5918-4a1e-a2b7-5b5c6a48b172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbef8540-4dda-4e78-86a4-c709e1eea1a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e38004e4-abba-4400-b2d7-dcf466bf78f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6325b23f-0ea7-4cb1-a10b-c7d4c4c897f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dfc4d64-89c7-434b-b9c6-ee7dd89c67f9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4db4cd9-07eb-4e30-882a-a1a799da3f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a6413a6-f3f4-4c0e-b427-2b3e5c5bf0a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cdf0572-5dd8-4738-9501-cad26841b470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "89598f52-dcbb-4662-bd97-cb5d153f71c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b4507c-f961-4707-abe1-247ba979083f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "771f4878-6eac-42c6-ba45-cae25fba1096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ee1825-e647-4cc7-9a62-b1cdda8da0d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71bad03a-ce2a-4eb5-b41a-2ebc51d23601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "53061d5f-2f33-436e-9795-4751c66edd2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c693c37-0e69-4ccd-a305-01a7ab5f68cf",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d6956f4-d11a-4ae3-a49b-01f3dcdeb511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76320765-b384-4ad5-9bb4-5e619a0ab453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602b54a1-821f-4902-bfea-7325cac25dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a21ca9a9-20a0-4d45-8ba7-cca014eab202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eacdab2-5807-4b8f-b318-00b317273deb",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8287995e-bdca-4ed4-a2bc-e2c9c4c6c740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad74eba6-e478-4218-a41e-6365e1dc5c4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf3f234-1b0d-42b9-a971-d13b91010727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fabc0c08-bf19-44bb-ae91-1feaf703a409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d91fdc-1e2e-4bb8-bfa7-cc41d61b425c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8efc07f2-f70b-46dc-a9ba-cdda79b29d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef56654a-70e9-44d1-9ced-1b282ee69e17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d62a6a-3d35-4d4c-9ba5-a3f04be84181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "92c1e344-7d87-4daa-966d-ef021dfd6946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5018ce6-3e6d-407a-8a10-cc123f344a60",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfdc031c-0180-4d9c-8e42-ef2527d9d626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd00239e-612d-4c71-99d9-6073ac349e7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf50c2c-86d2-4741-bf1d-4bc161d1ac4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "be36c930-46c6-45cf-8953-c8282c483720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c903a3b9-f05a-47c1-aebb-336d3e8770bf",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "872b91dd-0a8b-4313-827f-9e582c595358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "88687033-8031-4ca7-bd7d-96827fa7dd29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a944d3-b0a0-4a70-b147-c030e287765f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a5a09ae-d808-423d-a747-88d52667fcfd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4f8cc79e-78a2-4e03-9b33-b0b374a7cd32",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c3d41fa6-9135-4c7c-a8c9-89cd2ec7ef9d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da9fb33-be38-4fae-bf2e-00f5437e216a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72aa29a8-d6b6-4842-8ebc-fcb52b3f72a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874fe188-bfde-4f6b-a5a0-b9896b869948",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32ffb9b1-97c4-4de6-b3b9-222ec351d053"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c92a2578-ba34-4a23-a336-690dc3c4594b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8295e608-2d0e-4dc3-84f3-7a9e0ef56c63"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "284a8d1b-aba7-45ee-8544-fcacdb53d6d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4f3a54e-77f4-4290-b8ea-711ca84dc834"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ae42599b-51f1-44ba-96ea-dddf85500827",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3a409cab-1b6b-4554-b8dd-797c8caedbac"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5e04c483-6d4c-4f53-864a-398488998e59",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5482c812-fb55-432d-8569-98445009f5b7"
                }
              }
            ]
          },
          {
            "id": "7b76c129-97db-4123-97a5-7a1c16abb3cd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "98ce1ec5-252a-451c-87bd-e3614b9075f9",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "21d320db-d776-412d-a1b6-c1aa826b9a4b",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8b0a8e-1d8c-4ab8-8503-c4b0838ba596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "11783d97-7de3-4f5b-9ecb-11cb2a3b4c67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "961b34d5-2fad-44dd-bbdc-b876c68bd2a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2af845c9-e1bd-4a89-b319-dcc6dc39e4f6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d1b01c76-a1a5-4e94-b53a-6578c07a588f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "00ffcec6-f70a-46bf-ada7-403a6714b217",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cef88672-3365-42c7-81be-029760b6e38f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c01ffc4f-6cf5-4f6c-b8db-fdb4fe4f2bbc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0f5aed4c-8a35-4edc-bdf2-70990f9fd3aa"
                    }
                  }
                ]
              },
              {
                "id": "9e59d0c9-0038-4f67-a372-33d059347430",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f608555-5839-47f9-b337-e9735fca0b87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e32c2d6-4f4b-49c8-957f-9644fe28fafa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2353be5f-f201-4722-8f33-cb90c4bf9c1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e593dc5b-f3cc-483c-b46f-2b4142cfcdb1"
                    }
                  }
                ]
              },
              {
                "id": "877d45c2-b828-4fa4-a0c8-302c3130b905",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "72e399b3-e08f-4ef0-81e4-8e584cf62944",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f35af18e-6f55-4627-bfd3-3d17e7281dc8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63faaad2-5065-408c-a3fd-ba00da471714",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3c5f99e1-397d-4b4c-88e6-329ecae47a88"
                    }
                  }
                ]
              },
              {
                "id": "d492a90a-1a18-494c-ba72-108d4e79293c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec92e9da-35c6-4606-b336-6bc2be56390e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8957caf8-0475-4171-bf6f-422f358330c4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e481758-e6f8-4fdc-888d-daa8455a5208",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9be91fe6-4fd5-4242-b327-f4c99caae31e"
                    }
                  }
                ]
              },
              {
                "id": "cdad3715-af37-4496-8434-fa51417d7a7d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "64564336-7b60-4d77-8146-15749513a3cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5a4decef-5239-4334-8480-db5d0c5c9091"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96295738-98fe-4721-b0d5-7cf59d44d397",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e55884c7-436b-4f80-a6ce-e143b3599357"
                    }
                  }
                ]
              },
              {
                "id": "ba001480-9390-4698-8879-c3ffa46b015e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a93ab227-4510-4af2-a407-97c0568ca786",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f16b288c-f5a4-4412-8711-5b5b307e6e3f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "725e73f5-4143-44b2-8a05-13715f526d43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8a4f4e6e-7b01-4e37-8488-1611ac7a3a1c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "34840703-ea94-4e2a-a087-940f653182b0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7bf096fa-1434-41b4-a875-accaa12390b9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e804ace8-4e45-4d87-a5be-b6fdd3abea0d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3e124704-508c-4bda-a40a-308e55d0be9d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ba83589-59a2-4dce-b8d8-e172958c78c9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "4c03a935-dfb3-47b0-9943-863baf9f4b12"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "121d6f55-fec0-4f32-9731-b0a63925de23",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f0d69e03-93d0-4c93-ac14-e19ff67601af"
            }
          }
        ]
      },
      {
        "id": "6f4cea51-a608-47c5-a47a-481187da8aab",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9f2e88af-e866-4cd4-9949-07e4c9d24e6b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "74de5fcc-b7d3-422b-a303-30af6e85d12d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "66a3ccee-7a0d-4d2a-948d-44c315a87a02",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14446c84-1915-4492-8fc0-dec777d308da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd29f85d-a8f9-41c7-9234-20f5be02aa25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20decd4f-d0e7-469f-b253-d5ca30ec9d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "264d04d8-35a8-464c-bee5-a19cadbb235b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a43e0aa-7955-4ae8-aab6-acdc77ae4e91",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87c8ae9-02c6-4357-a533-5e04c5bd2fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13aed335-3290-49dd-b081-0c6c16e1e0e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4654ab-e6e8-4808-80f9-8d1fc8e7e5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1facd09f-06f4-4331-93ed-637664b15f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "065914e9-8b20-4fd7-9658-ef79a02580d1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a7764c-b190-4c86-8136-8c239f886397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "988e58ce-a1d7-4608-98ff-1e0057cfa18a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "625e9745-0832-42eb-83f3-f0ccc1509e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "47391120-8e3e-4f12-8d7d-ad87615f80e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "accdce19-2b5a-4d61-ad83-d13b02d368bb",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1b1ee0-eaf8-4d48-b9b2-359c8a670078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeecc79c-8f48-4fde-81ee-390c0cc8d114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472d6215-f163-4b19-8eb8-3f7aa18a7c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9996eafd-f860-4e62-bd01-0b8283e4061d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5edadb7-e628-4e5e-89d2-f3260dd1c4ec",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fbd4c46-089c-4838-8a79-7cbd5b0abc5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2933a97e-d1f4-4da6-8538-4c571f0c8622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d40fef-36ed-487c-9dc4-a72ae796fb48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "437f34d2-20a1-44ba-b63f-a61a1eadbefa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ddfcf65-b6f8-4bf3-9618-83939197dd63",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b88be3-5e6c-4022-84a9-4a838f096923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6750f5c-802e-4351-a36e-b088e6c73b7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0e5d7e-f3d1-4b9a-9c5e-041269b967b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb4640e5-7f61-4e40-8d3f-7769d95005b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86501a62-c7ad-4f69-9c4f-11e736dbbf52",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ae1d57-d53f-484e-b188-3f66d9bc4a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56662721-cfe3-4596-9ea7-3109fb617e50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c323f1-ddf6-4687-a5aa-66806e2a49d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a0846f5-4905-4de7-b737-95d4eb463184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd164bc-2424-4865-8e25-92e39bd8e0df",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7517050c-b1c3-453c-9f6f-3945b0b67fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e069a4e8-d6ed-4648-b773-aab03e3931d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77084e90-0be9-468f-b0c9-2a0cfe11162c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c44fb16-af97-44f8-b201-a54aedfcc4be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b44255-f40f-4070-b7f3-d608c830892c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4573ba2-9f7d-4e2c-a9f4-1eec39139578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcc76555-1748-4d37-9dfa-1c3b1f300400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bfa1bd2-a19f-41cb-9b44-2ca158047c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbc69eae-d60b-44ee-bb16-e6cad3052dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e28ff3-0d8a-47a8-b22c-efc0f89b727b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a49796-6a62-4aee-9609-2d974c91a663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2996a458-e90b-43d1-adc9-6eea5e005f4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e619d4-db2d-408a-b415-671b503d7146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04e85498-7bba-44be-90d3-d892d6408d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9398efb1-723e-4677-9bdc-d013edcb128f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df3c8f1-df42-4fd6-afd1-6a33ff78b755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8da6e23-ecc5-4ad6-a51e-e0af3a7fc57c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34687760-fd0c-4b74-9e53-c596357f3be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "abdb9c3b-dc2c-430d-979a-f1138e277ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5af740f-2e7b-4aec-a706-c74752defcbd",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2addb4c-5110-4c3f-8ee6-a153883d88b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abffe737-86b4-4874-89d9-8d0d63a56c32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f172bef8-ae5c-4c6c-8d63-b384a66d8733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d8e0432-1aba-410f-987b-9b7a77badd7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64946cf1-3783-4604-b2da-392c6205b332",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b5eff7-b13f-4dd4-9573-c05f2bfc2e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9619c889-0839-4bb1-8739-76612659a802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79c9fd4-22c2-495b-b0e8-e87f14aff4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ed1c4b3-916c-4a19-9f24-e4d6b359e91c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e21d55f-b9ff-4207-82bf-49ae93a9e716",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60bd8262-bc5a-4291-bf7e-766a4ea7ea44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0df37b7-4fcf-458f-9ad6-7198c397d89d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15d20f5-3ba5-4f8f-98b8-379f6bc73776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2891e003-9249-4f8c-bb07-ffcdf16c851c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f8aff0-128b-46eb-8b2d-ecb246e4114b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa560e2-514e-48f2-91a4-ca2719dffd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f917855e-e10d-47bb-8e03-3324a32a46f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc5c3d5-be18-4f44-9d7a-d26adf4062bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c66ebdc6-d281-427d-9e5c-3106af5d0353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb1933a-d5d8-435b-9011-0bfbb3ef6b1a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da9df679-0011-46a2-aa04-33cfc55f1e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "507e97ca-2161-405e-85e1-db4d885eae33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3f389b-b98b-455b-ba39-0b4aed7d5d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d9e144b-53a3-454d-89bb-1da3ac20752c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a681f9b-c1dd-4bf8-9cba-70a8f6dbe491",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62bcb3b-2834-442d-8c48-4161793320be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ff84d7-8f95-4d79-b658-a9f2c99bfbe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba862f17-3278-44ba-b185-fcbea05ee354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "009a957e-6fe0-4f50-985a-2e0328916794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3c023c-14ed-4f07-8398-63b622b023bd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "855ea3e6-d435-4e79-825a-ccf7a89c4c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c09373f-cc71-463c-ac3a-67c9a73b79d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e71c44f-5b9b-470d-86db-a0a33581f35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebf943b3-09b9-4a24-8365-633d84d68b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112938ef-8f61-4c6b-9320-8bfa875e8f66",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "732c704f-f851-4c4b-8055-11ebb4ad2090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69f5bc7f-5f23-4018-a0f9-846c2974619b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd95efe-739b-49eb-888c-17fba77a3c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e99f394-f5bf-43a0-ace0-5ac1e5ade2bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1194aa-dca3-4752-b318-232467706e97",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb033a0-3389-4c3f-9c97-defeaf4304bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89ca71e4-a6d5-48c0-8d27-aca69e3fb7d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d052244-14f2-44b4-811c-5c3d6875d5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd86de59-3991-4b31-98f1-3d6577328176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc04c78d-5119-4539-887f-a5b14e177fa9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7be373-4d5f-41e1-837f-f042a4219970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e6ebe2-4c5b-47a5-870e-f99cf8892dd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bfb8d85-d3c7-45f0-9148-bcf4925001d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40d20b5d-a057-4504-84c7-322caa4a37c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e7c00e-b49d-497b-93aa-e6648dc66b6d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88f1c53-7a75-48f1-b2c0-c0a411cf44ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71ebf321-1022-4143-a1ac-f03dca2d882f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8234c1c4-63e4-4c2b-bf7b-cacb35f86a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f116ede-6212-4e73-b1ae-5b589cf00feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cba2352-5ea9-425c-a406-c4729da1b593",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de456c25-684b-4b4c-a4f6-63c38ed5607d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "154b309f-f1bf-4628-8994-f2b2fc91fc9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbff10d6-ea13-4ede-b640-021bb1c16e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9666b36-d005-4190-b483-1bf2ef098173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b6780b-cff9-4827-aca2-ab6f84a6380a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e28b31d-32b7-4d2b-934d-ec949853d333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b77924-6ab9-48a6-8fcf-ae35f7a0ebe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4eb135c-5218-4884-9157-d5ac7e6f70ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59da435d-c96c-4012-997e-02f66683c878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b8d72f-e6a7-4e72-a385-22e3ccfba41e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc90b7ce-c3d5-48f3-87e6-a201155f267e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61176b19-c530-4665-a53c-4d3a1f060733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8462595-2896-4722-8eec-ad937da0957d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f3fed33-bd70-4c68-8878-4b314aa9da1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4054f668-2314-4006-be15-dcf06f9a8d99",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a60ec02-28d7-4319-93f8-17fede7486e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eb2aff3-785b-4e32-accc-9c6921fd4ee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e10663-666e-4fd0-91e6-b98fcad05781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0692ea9-3e2c-417d-b6b3-431863d2a61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fe9156-01de-4ec7-a22e-883335d23d08",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ac616b-2251-4478-ad31-cbc5c9dafc49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5067158-f29f-45d5-8cb7-e3b14e81a864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679ee4d6-c832-440d-bd4a-e16b046a16a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c184f5d7-381e-4aae-900b-53473fb9f379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66f18f9-3d44-4eb4-8a0a-9b88c563d832",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27457a54-5cb5-4fc4-9c57-61f2ddeb1356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "503f948f-3c41-4ec3-b4c4-2ff265a233b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21297963-e507-4fa9-9257-bcefecbf332f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f595ce8a-7ead-40f0-95b0-d8504442a90f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248c74f4-2cb1-47a7-a0fd-e71f6cd7e98b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f9318f4-3fbc-41f5-aa09-a5a3326b68e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa16cdc9-57c8-4d34-804a-e27cefaa6cae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f5cee0-36d0-467a-980e-f1fc32c2edad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16553c2d-a04d-415c-ac61-ea9b354a1c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4161a6d-2c6d-43d4-9254-33c371eeda61",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f264bb6a-d4ca-481f-a79b-58dc41670f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "640794ee-8e18-4ff9-b059-d540b17cba7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5bf2ef-67c8-471c-858f-698cc29330e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87971e79-61b3-42f3-a902-2dba3573f12a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3314e60b-6c69-44fe-bd72-7101f14c4296",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c36a97-115f-4b05-90f2-d34f5ef69742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2da470ca-1394-496d-8871-1800a7701308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a448008c-4861-471b-a639-c79b676c459a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75b1f260-98d5-4037-aba2-70afbc10373d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53dd3826-ec2e-4f16-bee7-1de3e0f06a3d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06083dda-f3c5-489e-86e3-f8448b1b163d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f710b887-076d-4acb-943e-fede06da2ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403d0d86-8c6a-454e-84c3-606e94e4ebf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7165308f-8e31-4f98-8c04-eee405089f90"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8fef184b-560c-44e0-be27-77553d42a9df",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a6f1a831-2784-40f1-bce1-a6c5198b7f1d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1db38f-613b-428f-82f3-25e2be709d04",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8613f043-e3d4-4e4f-b869-0026105c0a69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cee1212-4182-4fcf-8caa-af0a009c8979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c064cf3-8e9c-41cc-b3ef-7ebc0ac39b01"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9138ee0-7633-4bef-8bbb-a7b052fd7943",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2ae6283-8b83-4cdb-a40d-ecf1f9d40640"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "721ad2d2-2472-458a-a15e-1589ef1fbcb9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "791a52ef-049f-424f-84fc-075f37962adb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e2b32983-d3b2-405d-b12e-42a78dd299d4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d8be556b-0d84-4317-8c2e-d5559bd9c7ca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "399588e0-9087-4d27-ad27-92baeecd1b18",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c39a71a-ba41-4196-a709-57a30d809cb3"
            }
          }
        ]
      },
      {
        "id": "5793941c-2d81-49bb-b53b-c4b5217742e4",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "ce6bc800-9f24-4fda-be09-00fe4eecde06",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3253a5ff-f46a-4810-be45-7328fa0da67b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "be79f0a7-ddd9-4b10-8350-112b19a4c9ca",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "204200ad-e066-4da5-9f33-d22b30af5a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d72248dd-5160-41ec-82e4-10c5883e0e5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02b313b-7ae0-471f-b120-e7d6799de74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff76fd57-d2b0-4158-a296-96673b5cda5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6840281-5d77-47c6-9dcb-dd4266cc8907",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb9ee3a-b349-4657-a56d-fe37700151da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b8384bb-5c91-4bc4-8f48-f901879e7c51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84017048-0a12-4c5a-9241-ef87e7116b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb9edc2a-c744-43b6-bb9b-42b703de35c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fbac50-aef5-427f-9b20-acd01883fd05",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d2ef8a-c38a-4db3-a7de-43d622dc05b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c4a98f5-7896-4060-a70f-947068b3448e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4fafee-7733-4019-a8c0-aed52d955d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c846abeb-cc14-4744-a096-9bc3c452add3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f8cbf39-c265-4818-ad60-542292c75cf1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72d5be4-6abe-485b-b3bb-e9631752d51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73d6aec0-7dfd-48a4-b9c2-4fb9b7296a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4d74f7-01d2-434a-9638-0cc27bc86975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef1f0989-f307-475d-a323-45ce8e5ce330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764127a2-f165-4959-85bc-3b79f4a788d0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "958ed2a6-6155-4633-a36a-efad1cbefc62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fa3c72c-f50b-49cf-990e-44b8cd17e40a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7042d61e-e4ab-4bf5-b600-d07a37e2207a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "274d589f-75cf-410b-9499-2c1278d3aa63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fffd2c19-f9f8-4701-a1e6-239e05bdcfba",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ec3ad9-67d3-4411-831f-c2daea8d4fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02a58a3c-58d3-4029-99da-cd7f831b6df9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b8f155-a751-402a-9b55-b8da1f4c6f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "49343680-ddea-4def-8d31-5cf61666ddfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e33562-340d-45be-bb81-8f981d8a7fec",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d860497-76fb-4216-a6c7-a0bdde2d3263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63039927-ee5f-440b-9aab-a941574d8f46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dce5d12-2894-43f6-9a55-6c324916d24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cc37b28-b463-4e95-a7ff-2294d1018faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f1cc70-c978-4c01-8a40-929039bff1b8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08563d79-2137-4f5c-8105-5e33d7e827a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce9000fd-1db6-4fbd-a976-a30d98f4c5a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ee475b-6db9-4ff1-a549-d51416c3736e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "96aaf49f-e020-4a36-a190-b8050ec2b3ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9311a5-6a23-48e7-8359-8c4aec894f90",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc256222-cefd-480c-96ca-73caef977a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9135a0b9-76e0-4efc-8e90-99a70643b78d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74feb56d-1308-4ef2-9a05-29d7892e7c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f60d6ca-a1dc-45b8-b5df-031e593ac40e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6e414c-a363-472d-ba86-a58c41312519",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f7e609-049b-48d0-8699-ec6650a59018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76c2de80-2754-4c7c-a959-611c708d3403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849ae03a-e572-4260-a79b-540cdd0a77f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d0abb12-7b02-4e8b-a365-3b250a309738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff112e69-a1b9-41d4-9cd7-9825bde2a2d7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7661324c-db1a-49af-ba47-b33ac85b0bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "620f32a6-3df6-48c1-9319-fc72153970f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c428908-28bf-4383-ba0d-b01c7fa38546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c7cb06da-2b2c-4a85-9b74-46fbb5d6858a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ea7bb8-c4d7-4557-965c-3ac75793b38c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ba6ae5-2296-4eda-8108-b7adc9078f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5a409b0-6930-41cc-9115-e0738f2878d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0994f96b-e48f-4eb3-b4b6-afb1e1f9cbc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "80445903-7272-44e9-94a9-f1861726c735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eaa31da-bfaf-445c-b1fe-1be4a7379f9a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3594f64-818f-4173-9e0d-5e0190a6f40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a6ba7f-73b0-431f-80c1-e1d07ee0e082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96382ab1-46a9-4b78-8d66-fcbf5b873d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "feac66c5-990b-40b4-a6c4-2c34da2b0ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9c7619-801d-4a44-a3d3-5e04f0ca8750",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3dcf47-cafa-43d5-b361-fff1cc66e77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca1b84a9-f718-433b-9371-a92eb3a6e58c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d0dacfb-155f-45ab-ac8a-0b5a01fa3401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fb04f56-3bc1-441a-a062-de774182786a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e119dcb2-256f-44dc-9a41-9db167cfeb4c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a0c20e-e0ee-49d5-91fe-edea8e11b268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cbdcf63-e602-44c2-9ca0-4775fd0f423f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b0060e-2928-46c9-a402-0bf0a586b130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "09c718b2-0b27-448e-9e9b-b66078ab4f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5994e2d2-8887-48a5-bcd2-b8129f108ae4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce97b59f-b69b-45ca-b74e-2e23b09bd5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a9b6a9-1d29-4ef0-b959-e42c8e99d618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe79eaa-83dc-4546-be26-22352e902986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0377b032-1c7c-40c7-96b5-6a1b5205f712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb1c517-b332-498a-8b2f-44ebfd90382b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "315c72bb-55cf-4a79-9307-eb9728120c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdddc036-21bf-4872-a433-1c929746181a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e46699c-9aff-487a-ae82-0b8f26ebb83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d3ca30d-cab0-40b7-951d-e95af2658278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "515e91d0-e377-4bb8-9499-ca5a89a96536",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "617edc0d-1175-484c-bc90-71d66baf9b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e2385e9-56fe-42ea-a51d-ddce26e4142c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04dea798-727a-414f-b0ad-5cecfc28d75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "261aa060-3a91-44c0-96cf-21f953a6f384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dfd544d-003d-4f06-8079-f4e7fde29f2f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc2571d-64bb-49f8-9648-52eeb333a0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f846026-0945-46e9-afb4-e029f1ae61ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c3da0c-65a1-4c0c-bd92-e9c53da1b2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8abafc0-d00a-4f11-8b35-1c246a53a2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41843d82-ae96-4093-9593-e98ab801b85f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b25038c-c172-4762-9062-ba356a7d9f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "566cd737-18af-4069-885a-35058ded04f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f51fb49-0d60-4224-828d-55413b1ef0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca652d61-0151-4568-a39b-29dff69a635f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8649985-633c-479d-ad40-c52ec930f794",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad37843-8ee7-4a1f-9146-99059fe63800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95fbc9ae-d9a2-4b13-99bc-8deb4784c06e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8f35ff-da4c-41ee-afed-c887882bd7a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92cd1931-2651-48b7-8474-7da61e31e810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac823db-b0b5-4d51-bb98-2cce59d1eef7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb3abfb-9264-4a72-b265-2aa8f78153bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56262390-2a05-473c-93a3-c406c4791728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7db6c8f-4a02-405e-ac66-cb59117e8b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "805c479e-821a-4154-95c8-d64956bc0541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449eb50c-63a8-4724-ba7f-fa7f4ade5d88",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f240bf8-595b-4c32-a54f-7ba8b8022af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6a52acb-d501-4925-8034-ea1456e08a74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aad178e-7899-4715-893e-91a24dd9bb62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93b45d19-adb8-490c-8ad6-114006518e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0596aecd-1af4-4f94-90d0-163ad931c1b5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc42b1c6-cdd8-49e9-abde-d679e53d0f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b8c993-5e58-4a3d-9849-cfd2c98db656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4197335a-31cf-47c6-8ff7-ebaf145d1a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fab64a8b-d540-4ab1-82fb-ad1ba0e01f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac9d6a8a-d845-4653-a2f1-2b065f08053f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d6edf4d-128d-43cd-8126-ed0e99f7723f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5fc728c-df9e-41ed-aa76-52776431c58e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc165d4e-1451-4530-96c2-4d15461d4e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3572283-878f-4995-95f8-92b9f083e91f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12fe378-e9ce-4023-96ed-db4ae2fee7ae",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3791cc0-5d3f-492c-b9c1-361d3f76f1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b02fd07a-47c5-43a6-b25a-95f64c7726cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf855d7-2ffc-47be-ab9d-ef22758993a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d12878d1-0f26-4735-b99f-28ef3248a645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b00ae4f-b432-4470-bf17-3be10d31013b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "688f5d92-4c9e-48dd-bf8d-603fb5471978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef76d938-4c11-4aef-b2ff-6529ae47a0ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7692fe-7bde-4ae7-a716-ad45ea9caf6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "519650b2-b575-44ab-8800-21aeb902f0da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71d8890-04a4-4802-ad56-af8be26edc7e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a2c22a-2b6f-47aa-b0ae-51206070150c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73359a1b-88e6-489f-b62b-0968c20d832a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3584edc7-877e-40f3-97a6-ac6ba35fd6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65eb276a-63a7-4f32-bbac-d55db9a6e93c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282b5e4d-a49d-408e-8368-7e23032901cd",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47055ad-5ea5-4ebb-98c9-d8b932926467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "732f54ca-5bef-4570-8fe8-78dec6f4f0ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae77d460-95ec-4625-ad91-db1821a840fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98d8a2f7-f51e-447b-91c0-ced1de9ecfdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1811eda9-72e1-48aa-931f-52294858fae7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15a09cd-a879-48d8-bd11-ccc647fab8d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55f5888f-4132-4140-ac54-764a665fc1f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b85e84-0caa-45ca-9629-dbe70f14544e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15d24f8b-29be-409a-8965-fb3d44229729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53048414-ae01-474d-be13-8e126590780e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8cebe7-ad8d-45a0-83f3-3750501888c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "133a9f4c-db69-4ec3-a702-854fddf54969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385616bf-c3b0-4c48-9004-b6a22f12f3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d936169-6748-44f0-8ff9-b8eb6ca9ff67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f116dd58-9ef3-46e7-8190-cb05b646fea3",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf42027-4d47-4d82-a430-c8321393e446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1333a39-45c5-41de-bcf2-187fdf822d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4f42d3-1bf5-4a97-8479-934f736678df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1910faab-efda-46df-8389-978cb6a0c7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0656740-25b7-44fd-87b2-f78194d6a738",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53305c7a-724c-44c2-90ae-6955a3cede6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "804fb93e-cafe-4d30-893e-e4e8974c2a17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3363004d-7abd-4ec9-8360-d2566e05bee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d034443c-a651-40a6-bec2-995807008586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0699b45-a096-4060-9f5e-548c66eac66e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85d7ac4-f7e3-4c7f-b4a1-44756f56983a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d04517-84cd-4bb6-b64e-d7f4267dabe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7785fa-574d-485d-80b9-e78e647a9b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6cacaa8-1e1f-4fe0-a914-6e80e99940df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a7305a9-7643-4fd8-afd7-e467f4ab1649",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0fc0d7b-8b4b-4283-bd25-4efc95520781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4067432-78e9-4c23-bb49-2668e1798b2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4634e31c-8c88-46c1-b1cf-5fd348673231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1228e44a-8b41-4e48-bf7e-6abb4a46fd5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e383d6-aa14-4f74-87e5-1662365fc730",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae38253-0927-41d1-9f45-ce741d27c1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b36769a4-a26c-443a-816f-065441b705a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86483ba9-bbaf-4256-a74f-898c67796e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "061bad6f-4dcf-4992-96f2-a7656a35a789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b148bed-842b-43b0-9fdc-f45d11745352",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b684777c-9b17-488f-8794-032b09fdbdc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc267131-5396-4140-8415-256319181997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77643943-db51-47b4-879c-26715feb1b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b21231d9-6da9-4c94-ab06-d01e17270282"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "537c2e70-654c-4e41-b295-78d39c30b145",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a211ac6-72fc-4f8e-b6ac-9d83bb5e6629",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170b6baa-680d-44fe-a086-73c99922eadc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ae349de2-b05e-4e32-9e6c-04c872f88ebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ebe06d-7cbe-4032-a109-cc9f7e8d5d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db280da9-1e62-4a9b-8713-655d1dc80898"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07956412-ecc7-4e8b-a4f1-3fc7c3313034",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e6d090a-eda4-4851-95df-374464a22d91"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab491779-3425-4094-9038-8750417453d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9be7f9c-fbff-4d3b-9f22-19ffb2bca0fc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8cea7514-e3f4-429e-a90f-1d263cae74b3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "945f544d-d697-4ae8-bb77-7933c59a3344"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bfcf2e49-a01a-4871-9b97-4149a1fb59ea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "35969423-4b2b-4ac6-a3dc-cd7115e5fe4e"
            }
          }
        ]
      },
      {
        "id": "fc9ce628-df85-4e03-a062-7dcbd9551a06",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "908840be-eec0-4852-94ac-eab7a4b8e218",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e3d5d6bb-d685-4cf5-ba4f-4318e7d869d9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "85390709-7644-4ca0-9869-cf85b1063e18",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db831771-cfce-489b-81dd-fb74db8828a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b267f72-4ed8-40d1-bdcd-74b87aee95e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c97c9d9-edeb-4d8a-9b96-d1876dcdabc3",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8534ca63-7bc8-4c04-bb46-89ab9068a780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ad4f8d6-ee74-4bbd-a9c9-8640c30de6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b3b6e9c-4ff5-4b03-9e47-5fa509f18d5e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d37207-279c-4e00-b7bf-246067939f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c833ba07-a389-4bb5-9cff-12b09e634158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba84a90-199f-42d8-bdf8-709dcdc64bd5",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db6f6d6b-eb40-4298-bd72-51c2bf283b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35c7e52e-6884-46a4-b2f7-de45dab28918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7681050-f35d-40ec-8d0f-d4b2a18a8071",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc5b8a8-3307-49d1-adfb-7912aacd5df2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc4975d4-e9d1-4a9c-948b-87c143ea1ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1ed579-62cd-470b-9b0d-9655aef5de4e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa64bd8-43a8-46ea-b567-503440d27fb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fdb9fc2-acc4-4b03-8953-9aba83444dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af593ff4-802f-40a3-a018-faf084612fdb",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9271c53e-d3a7-4b28-b3e6-dbd46bfdf21f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83ea4bac-4cbf-446d-bdb5-088250d8114b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "210a93fe-52d2-47fb-9272-1cb61a32eb31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c18f0a67-5baf-45ab-8106-16fcc4ff5be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d110b5e-0466-4a01-b9ca-4f3776f4cef7",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26455a6a-5de3-40c7-a7f5-beea5c7ea021",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ec04ed1-af0b-42ed-8147-2dfb82dbcd4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f20daf46-bba8-4fd7-a369-dfc42c45621d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e87ba50-6dba-48e5-bf26-32d432f53feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cecf0fc-f35d-4572-a3a5-dd6b10e63a6b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e4a486-d14c-4c85-9e8f-84d4df216c9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "959ba615-e17c-4a7b-b4c1-232c93a825d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0ac744-4f06-471e-8f02-443d74bf9e80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c66ef3d9-07ce-4263-8e54-85fe6c35b068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9d032c-e829-4d38-bf4b-8d07045c3373",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5a81e8-2502-4fe0-b29e-619cca1161bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35c0faa3-06ad-447c-9c8c-cf6045f3d751"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf150798-cc10-4613-8ca4-6977305ff947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee757710-6a9c-4243-8e14-32719c725e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38cd2204-c69b-453b-9cee-222d1db542d4",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937e36cf-5015-4949-ae8a-0de74925ae02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1036032a-5dad-4186-befe-c5e0cffbc0c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4294c66-d4db-49bf-a198-2a891df5c545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac32168-370c-481e-b296-917f7a14312c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b2e157-0cbe-482c-812b-26023a3dc813",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d733971-d6cb-4f58-8556-986fc558609b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c136e69f-a4e9-4cfd-859b-9ff88c316197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83110120-6a7b-4a53-bb0b-136e0d62d6d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ab87bc0-d3f6-40f9-aec4-42bb81eeb1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9275f8d-6b3b-4681-a5ee-6ee57a283db7",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b910e3-9bd1-4728-b220-8d806b4f76fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67f23365-ba12-40e0-ab96-747598cfe121"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa90a9a-abca-44cd-a082-48595449cf70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d38f9f62-2d49-499d-ad24-27e9ad774a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf71ced-6b21-4664-9b1b-8c674974dece",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76e765d-312d-4280-ac6c-712706b0188e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b14ad0c-6f48-4ebd-ab63-25182b29065d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24026aca-8a32-4f6f-9dd8-2f8cbc1acfcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d41d4ead-01c1-45ca-a289-b5a5b8b885a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e270fd5b-d3e1-4ef2-bc3f-3e723dde0860",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3ed4d6-9cc8-4cad-9108-a8fe095c1bf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f029e8fc-01fe-42aa-ace6-c78dc31bf083"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "118330fd-6b82-4ed9-9753-2818161cd98c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e79a0e-e8f0-48af-8926-012dcc6d4a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3787406c-1e00-4098-9d3e-94e6da30538f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a75af2-83e4-434f-985f-d39fbd03d147",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f97df160-353a-475c-8097-d080f360303c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b46517c-93dd-467f-b960-5a761136c666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e73f5544-6063-4f2f-b301-1bcb20cd0848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583edb56-ac74-4ad2-8f0e-662f15207f75",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e45bc7-4c78-49a5-a4f0-2823784939f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b188b0d5-18f1-42b1-9fab-ed2485430554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8919cbf9-0f61-4c06-8147-945fa9307848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d5594bf-b360-4b99-9fd2-3dfa8651ff46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e0c911-eb89-4a28-994b-6ea3fcd398a1",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00353165-7d13-4961-b318-3ec9f8d73cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ca171e3-e450-4802-8696-74e0402e0f9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2ffa4c-60d5-4b73-aeac-954f863a382b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e31b857d-3348-4cd1-9e30-c55404a9a42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa88db5-d871-4d01-b52f-4b375030a792",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b16f3f-f3b2-4100-b389-a787334fcbf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a22b4f55-b021-408e-b3be-90c0589cc03f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d278f3-1f0d-4bce-812c-3ea8d4bb0ac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83b30d93-054f-47de-aa62-55afc8784749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0771359d-060b-435c-beed-3b74170e8efc",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfad4bd5-2d6f-4df1-9e3a-beecc8c92a6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6898989a-cec0-485b-83d1-f5a9dad9f923"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8739bb-27f5-4694-b5b1-168780de1839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f07bdfa2-6a8c-4009-812b-4001956a6b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0ec02e-a5c3-4f3e-882e-f1da28799e63",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93887863-6d1c-4093-aa54-358ceea7b3e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "facead92-77dd-451e-bb1c-ad6fb4568641"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc020b83-7748-47ab-b6c7-c00be82ab03d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44178be7-0e84-439b-864b-239749324baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a31a2b94-d1bf-4b51-8269-d45869f6feb6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4d76d5-7f11-4586-8c26-ec5e238ce09e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a9407b-b284-47aa-8cf1-f590dc091298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9d3eee-9402-474c-a5ad-0448460fb162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10fd8ca7-9dee-4604-a925-a7b2a0ec35cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbebc30-d727-48cf-baf6-73d33e5fba7e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c097ca24-396a-4a3b-a18e-0030a62bacf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71106d78-706e-4c0c-8cf2-5f013250430c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ad45fe-c133-463a-8dc1-83919273baff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34b66e0c-66a0-46b3-ad9c-8b66814ea91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8dfd60-fc23-47de-9e89-38f06aef11da",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54a4a0b-ff64-4e57-b1bb-95f0c42cbe57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36490406-d640-4a52-9849-edf4cc0113cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c78ecb3f-8b27-4c41-9843-c8e4bb3f1b60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da9bf3b7-0acc-4951-8fb7-44700643eeb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfd46df5-bc5d-4e86-bb1c-f80c4d299ee2",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2cc8323-cf9d-4afa-9eb1-fc242b06e08b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "990698fd-261f-4326-b407-f5acc568a199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ecfe77b-ec1d-4cfd-8a43-e91342ed9979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4980f497-5084-4fce-b787-3da520b0f638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c08083-8afd-40f5-9f06-822dd21eab2a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd47b68-300d-4bbd-aed9-3561cd9f9a5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4da712a-a855-42ce-adba-d7ab571d5531"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec39dec-857b-4d01-9016-19288749a0f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9766243a-f9be-4e4d-8cc5-a3ee602a0a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc9187e-c47e-4d50-a0b6-783b8ca96d67",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba96c64-006f-416f-8312-9736b85a246b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ba81e9f-0484-4dfc-8d63-6887008d7282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25630e3b-a5fe-40d4-b39b-bee9223db9ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e894547-e362-47d0-9bab-a2d010f511f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3ad339-3b85-4866-ad42-b26368324664",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4293f200-a4c5-4148-b780-0acae2c45ac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "814e9084-bc06-4ddf-bb22-5095f2e81917"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "320c256d-0e22-40c4-9122-ea6681e8c094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41f92f01-657f-41f2-99cf-690133eeb4c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4b9bdd-6ab0-40f6-9626-39ba1a1ce4ca",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c1f82f-311e-458b-8402-2339f4974342",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73b3aff1-91fd-4647-9e17-90b523666bb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8931d9-c43e-4169-8f6d-4f485817f96c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd70f464-9380-4693-8a7b-5a020e699876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047e8673-bd20-4daa-9fef-c85100ff7347",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7eb8b3f-312d-40c7-a56d-df46b0bcaabd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dd5e4e6-4e81-4358-97d9-f6e165be69e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16bee727-34f6-44c3-88c5-fadf45073ed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f42db6e9-a2a9-4c6d-9d6d-093de940831f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e319c4e5-8dbb-4d45-95f2-56e2ba937136",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe3f746-7617-465f-be15-32fc5f2f67dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7055f73d-8853-4489-9e4a-b0e964c92c92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a75db5-5e51-4dd2-af89-d68a9bf0061e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6e70ccb-4694-4f06-9ced-503dc06c784b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a118c957-d417-417f-836a-890452431b21",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0123ce6d-259a-47ef-805a-a91d9a50cec2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54914214-eeaa-48fd-97ce-e373c7865e5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b943b724-cacd-4d11-8f91-68e45a0ecbd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d99f2961-1322-418c-a19b-30a0d96b2cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48466423-e64b-4c0a-9eff-8a058191ebcf",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4dbdeb-7e4f-4930-a271-f723121cbb80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f50e79d6-d99d-44f7-9f1e-1bc2fdc84f8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30def0a3-520f-4585-ad4c-a5b53aa39ffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b7b5ce-10df-4014-81f6-766a70cc7572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2da1940-517f-4d5d-9375-5dce2573485f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae9e1f2-9b83-43a5-bca5-ac61912d054d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a1d5b75-833c-4347-883f-31e902c3b279"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "426adc9d-bd32-4916-a927-5f4c1bf49d5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "419cfb58-4a63-4235-9cbc-7906acfffaab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cceb972c-7895-4353-bbf7-d9ff98f94c55",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5517e9f5-882b-40ae-b806-31c2f1ea70c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2dbc1b6-a586-4e01-b564-1d41337d3bcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef5fc00-ab2a-4632-b024-6f63a5571afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32bf1557-9043-419f-a377-2177525944e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af8e757-8bf2-4556-9062-7b78e7d35370",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa2aaa99-ad89-4a90-85eb-59dde92314d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d091e67-25b5-436d-abe8-fb8cff052ff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb308a51-00ca-4ddc-acda-dda9b6c3aab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d40bc59-db02-4be6-a903-0901d5149413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac752118-bb4f-4352-bf12-d81897c5a5b6",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f575a8c-b1ec-4f8d-bc4f-1ee357fd6c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff33e87a-8874-4ddf-b561-11d63ca16d8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c60dd8e-fc6a-469e-9b83-6a591ef1f53a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a881a37f-cd7d-4eec-994a-b341b54c60f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f52d1a-8eac-4d2b-8d57-63192800da78",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f460cc82-12ee-4a76-a0c0-73fa3da3cf7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd4ce8ff-422e-4972-a77d-0eb135549bb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8edf5f-0222-4165-8f64-e36196b2225f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5034f77-cf6a-4ded-a061-f16e53c10df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "932d664c-e69d-4f75-aa8f-28fec2dcaaaf",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deef5ec0-fef6-4c6c-85f6-bbbf19c2de79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d00200b-c0f6-454d-9758-e7647e57a064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "844fd276-781b-47df-81b5-97e08328460e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28ce63bd-ae84-4687-8e39-74a6d4dd8d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7168109d-133f-4f2c-9046-d15535fc6909",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e774d67f-5443-4298-bd49-779342db392a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9d9315e-35a7-439a-a1d2-d260846a141b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c6747b-9003-469b-93f3-edd2887185ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1f7e7ac-5eaa-4286-832f-9c4810ebfa06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e6a1d1-018e-43ff-a42b-087031a3be5b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0730a78c-f72f-4cdf-9967-09c7ad230ae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b9515c-a0bc-4a1e-b03e-3b5521a43dff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d1d976-7711-4ed2-a5f8-0b194580ddbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ed316d-e843-4a77-9397-3396c29080ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36536df0-78c6-4f10-90f0-cdccfe58f9ba",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe93af9-4880-4f46-bb83-44bf3547b764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87b03441-9bb9-45a0-bb6a-e25b471b1022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d87a76-5666-4ad3-9c9a-7f4fc63187e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1718718-3f13-4ba9-8e3c-ec28ca23ce03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b955cda3-1621-4a12-af7f-67a462a8500b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b45834-4f8e-4fb8-9d4f-80245bf4af1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "515cff46-7538-40e8-860c-27401915dad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0033b9e3-2c34-40da-be24-c1b8f3d7aa5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b352d7d-deb8-4343-a27e-a85eb5ad7daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67fc7934-bd47-47f9-b30d-030b5b3a0877",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1d0518-f472-4ab7-b679-36b69fa987c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "759e3e93-8edc-478f-98a3-608739d2beda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2967dc1-de4a-4371-90bb-3f1fec4ff3eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cd15b73-0bf0-4dd2-8b0b-56281f9fc488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15d6a90-6b4d-4903-ae43-8ee264f77774",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e374b04-49ac-433f-8133-7db7357d2557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43f7e2e8-648f-45fa-b619-f504e829266f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb277649-514b-44ed-ae73-7a6444b63f10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d03f76c1-72ff-47b5-a3dd-978010073e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794e8308-04ca-4b14-8e26-6f72f8092751",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd58ba9b-0154-4ea4-aa16-d089554d4e67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0abdf92-b1c5-447e-851c-4f296906f09b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df69b73-7996-4786-a10c-c294f5c2e8bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f22758cb-beee-40cb-ad09-47dc28e8bd13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2886b3b1-5241-4b4c-b2a1-a3d3aad8ae14",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3277f7-5460-4dd7-b36a-9405e0e129b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6004c942-37e0-4427-a8ea-1ca19fb67543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c6dfe4-d41b-4361-994d-9c293b704bec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5963e84c-ad70-481e-81d4-3da54376d633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e31547-7d33-4d39-8095-cdb5cf187309",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d7ef45-41af-4d57-a9d7-cf08df2d6901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db2eef9b-f61b-4503-9b39-fea6f0d53980"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a3e53e-1bdf-4b98-b197-6aa395ddeb0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33cd2fb6-aa7f-4ecd-8df6-9bc0d48cf44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa062336-1644-4658-a64e-831f5235b478",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4150e5-5a3c-450c-9d90-7f2379d6179f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b57f9b92-cc38-4812-a3f0-624caec83e58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26afbb4-1289-4666-91de-2edb7982add2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eee9d3c2-0120-435f-8306-29e9b8a3d6a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f026ca54-92ba-441e-ae57-36024b22450d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e40a47-a299-48a3-b8fc-39466d14674c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81204916-7b0e-430a-907d-ba8157e261f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "057e549f-6fee-4ef1-8442-77b9d0a73825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7ce3685-6343-4241-a437-b1d1f9c9f614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff15e2aa-7c74-4a2d-a0a0-745c58e173b0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc462f7-0730-4f00-9a88-5c3b424d6318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e58dd464-f0d2-4705-939a-284d3f2cc559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd7e005-0b02-413a-9012-b9cb31ac8447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd10a8f-41aa-4eeb-b4a9-37df267c1067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61246fbf-53bb-4b56-86be-be8aa10c2d66",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845a76de-c435-4847-abb5-32b85f5e25ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aaa0ca2-f4af-42ef-ba23-2706a2178776"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b1988a-cf2d-4aca-a2dd-0f902c0dcb61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d588354d-57bb-4fea-be18-51249810d767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cfc5b9d-cde3-4240-ae62-bf3cf2cb27b6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5c5def-1478-47d0-b208-75d3086d39ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c4d6f74-11d5-422e-86f8-76c6378e5862"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c01b88-022b-4638-8e3f-1c4ef2d53277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29e1972b-9a57-40d3-8b56-fd23c58813eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7036f325-a038-4400-9ad1-74fd706654bd",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7b2658-cec8-49c3-b073-c6e1e6545048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba3e24e-cf00-412e-8e0c-3711ae21c821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59374704-07e3-4dfa-bde7-b8d08ea9a3e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de0b5091-a093-4251-b298-82eafc3c67c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4065566d-5952-4487-b247-fb5d6f8d53bd",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0515b07-b265-4efe-9738-ce1ffed2e2a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3e06450-ec71-496d-bbd0-7cbb60ae06cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b053e732-c067-4fa7-aa2f-a4df2fafc7e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a39a19-adef-4ea1-bd68-785af308fb7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc64cb3-2bc6-4f46-a421-c72bfc62e421",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccebcfa6-aedd-4045-bde1-7e1b277d9034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9bf4f55-0f00-4a17-a399-0c8dc17cd383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0107e87f-bfaa-4ab6-b371-c10d88582060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac212805-9b4d-4904-86d9-00f50c68b71a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87d9095-05f4-445b-8f69-3b951cd89339",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e8457e-1e65-47cf-97a4-b7249755a37d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc4783bb-9cb3-465c-9141-b10398a9a7fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b19d57b-c6d8-4130-bc89-5769bf8e03e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe07cd04-3f44-41f8-81be-2b3d93e89da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72706b59-6c08-4e7a-be36-7dbd6582609f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c85719-020e-49ff-8bc0-fa6169fff7fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06a560aa-a208-4435-b98f-6fed6fdcbfdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcdfd983-a15f-453d-af2b-55c9d3ffb75a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "763389c5-39fe-47d3-89d5-2699c4c8f7fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c24072e-2b55-4ebd-b0b7-af4972cdc422",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be1231b-daa2-4b66-8ca6-9be3545daafa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "500e3546-dcd1-401e-86dd-017a70c07988"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f1ed48-98a8-4b30-ad35-a953b17a5d86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a8d49e0-4200-46f8-b41c-81142aaf7de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88aea74-0d3d-4875-84d6-eaed93fbe06e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8fe569-1282-413f-a865-94bd606eb038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e7e0803-c441-4c46-a76a-4e1e42ae10f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44df9b2f-c3c2-451c-a103-da6712dec783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6df1f674-8648-466d-b07a-29e516c0b78c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541fb16d-f1a7-4469-8be1-349dacad027d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f852ce6-6f02-4d25-bacd-03de822303d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c443752f-b393-4f86-bb54-272319525d3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa137d1e-e20a-4538-a825-6419a5f85276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0880868a-8d3a-41e3-85c7-9f24fa75c7b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fefc6bac-4ff3-4257-9562-9caf80bd60ba",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13114b79-ceab-47a4-8724-a716ce7d0966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce3ed39b-b177-46bf-8219-82f775e059de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03b50f0-c99d-4281-99fa-98f143e61605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0667268-7a57-4a6f-a15b-2458024d3c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf8c689b-21e5-44c7-8354-9941794c38eb",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9ca4a4-48af-4c5f-823d-2d420d00cf4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75a68743-97f9-4e71-af11-d3198d806080"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf18c8e-153e-40a5-9269-4bed82cec3b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26b5894d-1283-4550-ac1c-8a315b5edb10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff182c9-8f6e-4a69-9f1c-50581be6d93a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381329a1-9395-49c7-a412-f2dc314acfac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25b1fbfd-e0ee-4953-828a-b3734750ebfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c54f54-44fb-4452-b75a-238966490785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfc3dc8d-4d9d-4b85-9e88-6b81115583e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46cbb63-cc48-4fcd-b4cf-c04d9a1c26c4",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b4c361-3379-454c-83a3-e32e86710b24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62298eca-82b2-4b8b-8682-a426d5dc3853"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f58ccc-5e18-40fd-8313-3b2ada14860f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "393af599-3f85-401b-baf3-962f3d0d4917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20d7199-a2ae-4c70-9a31-5cde38eb089d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9464f08a-8574-4fb8-837a-b1ba00f12841",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57abebe7-6c7a-4326-8d24-affa886b5d94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ca9632-643d-44d1-b589-85bcc2af086e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c2b38af-da9f-4814-951b-dfdf30a0926e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0d7c7e-ab67-4c69-bf1c-0a21d5f7a89e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49df796-ce5b-4487-a236-fddd81822d33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3085e02f-21d7-400a-9db5-b31fbb9f0059"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01969d90-cc17-4f74-b7a3-0f3e1bbe4a8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6123d1da-b318-4ef5-ae4d-4aed12eaf2af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b02f1606-83e6-47cc-bc36-fadfcc1a0836",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f89eb0-7de8-499e-b0ac-105796ef8f2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9ce4548-3ab8-4102-a9ed-27026a1e0be3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0dba7a6-0b07-4c96-8f9a-5e8b9a0df2a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e9bafee-f84f-428c-8dbc-2dbe1757a87e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6fab35-d72f-49c9-b6d3-b477bebf5da6",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0fe570e-7980-4e3d-bdaa-9bef571c3a52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5e391a1-d07b-4181-9b5b-3dc5ee73133c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f7a3ae-b12d-48a0-b41f-f91c4d959e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede63542-7611-4bce-8cbb-3a0db34f8d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e0a0f1-ed61-4bac-82e6-5c94f6bbc4f1",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a80c43a0-f37d-4e04-a5e6-9ec19e79da81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d4a2a6c-8469-4d52-83d6-5d1512650f40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "466414db-cf39-4e5e-a10a-1c4129571821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "526ea2c4-ab61-4e7d-912b-0021a733badd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3240f01c-af70-4b1a-a309-699b1930c319",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8213d98f-503d-4f05-89b8-d5f3ccc3acec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b895978-2c64-46e9-be4b-29d427a5dce7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a9febb-86a1-41b8-b4a6-eb1100097606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb503e3-1f6a-4a7a-9756-872c129c3714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4353e4c-7fd4-483b-9480-f6e3ed9583eb",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06d357e-9a3b-4ed5-a7ee-77c9ffbce0d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f645d906-a174-4490-9633-1c57c6fc65a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92bc346-5a83-41e5-a179-3ae7629926e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94a746dc-4b82-4edd-b28f-9bb94acc3701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2473de86-9457-4527-a8d7-027841a64f99",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dacb3b3-8da3-4cd9-ad2a-46b1e273c372",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d46a4260-6390-4bcf-b41a-1653acc72383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef38da0-0dfa-4640-8eed-afeec6bbdf63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "475e6801-bbe0-46f9-b316-5e860d578f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf22eeb-67e2-497a-a896-7917f1775bb7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e741df-4fdc-495f-adc0-68bf06ebcc0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3778e24-13ac-4a87-97a6-73a949fb7f78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41155bfd-42c4-4d8a-88f4-07960a4ff408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8ffd40c-89aa-4b6b-84a9-fb0e66c1acac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "242d7b84-76ad-4e56-9504-bf77e214a1b0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a280c4c7-2596-4d9f-a18a-8d2528a269e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0135003-1dfc-44b0-9e50-763c9c1ded14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f66f3478-1bd7-43df-92fd-0161e036160f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a7a6f52-fc67-4674-b722-131dd66bf7a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b27f1df-1b88-43a7-a1af-01de72cffa7f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ec3d2e-4bc9-41ed-99df-169574107d54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6266044a-531f-4ae4-81b4-d38bef921991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4d6e65-5a9e-4f61-8e18-f72d57060567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fe04f4a-46af-410b-98da-fa215d25d9cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7893f83f-0bfd-4611-b0a1-909b32614589",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a1e5756-6de1-4b74-a0a5-9589145a895f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3946e9c5-d6fa-43c3-8984-36bf045610c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3864d5-f45a-41b1-92bc-ea5b85412532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "370010df-3fe6-4e5f-8e43-5e39317054a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf2da12-d95f-4a04-8724-40f1ab15a509",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc23749c-4797-4649-b306-6367e5518ff6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2161cd7b-162e-4ec4-9dad-1c113157e3f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b2bd8f6-d6de-4719-b1ee-96ef747a7d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ef90909-6086-4653-a08e-178eedf3bab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a03fa6-fc23-46ca-9d3a-7d10d8b4d9ad",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7932fdb0-5274-4271-a958-5af6bbc2bc4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47e00b0b-9e5d-4177-bc82-01f219031b5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc0b205-5f9c-4b93-a863-385da5776fbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a83af658-e588-4217-81c1-af2ccadc522c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb6283c-ab1f-48a3-b1e1-2c4dd77ee458",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd0d635-3233-483a-a021-6331fdab4a7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b81bbe47-dd1f-4ae0-a085-b603fc6c2472"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d51481-19e3-402a-8581-93bc72f75299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e658d3e7-61ce-42f5-98a1-5e2834e87199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125b8076-6d99-4a4f-8193-d164027f9f1b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db100526-5003-443e-b667-81d80d2bede7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01d231a8-8bec-4a7f-9db6-3e72ca613719"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf133e6-cedb-492d-9c75-724b94f026c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8f8b591-e73b-414c-a5ed-151289e058ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f24c072-bd0f-4a1f-b9a3-e12e85e9e3ea",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c27b503-9801-4573-a7a4-9009902d9976",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e77b1a3-46e8-4a26-bdb6-afc97c0d4da3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3bf6581-7b75-4d0d-9d67-cd5996dd8703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f8f9947-430a-4402-8d4a-6d0250c5e7f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92f4ad1-f236-474d-b8d3-459e64cdc8de",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bccdb74-9b78-4405-b478-040c6b2b7742",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe3b90cd-bd8e-43bd-a1d4-7a681a036a1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba53dec-cd6f-4b23-9e53-74c68a384e63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d71e2fb6-2525-443a-b181-2991ff81abe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5648bbb9-c449-43c2-9c89-b88f42b6b774",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac6e7d7-4432-4547-8e51-41c4d7c83098",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be06414c-c008-478e-b07d-4a17ca3d2712"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8309cf-3174-4eb7-bdbe-41e7c311df70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e5ca341-e61f-4ce3-870e-ede18c22be94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55e5c0e-e88c-4b97-93f3-8b178757526e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c938bd60-5e5d-46d4-bb4f-2289f43df24b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d84e2579-854a-4df4-a821-ded92743ce2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f574d4ef-5c7d-4b6d-a681-7aaac9a599cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dacee14-cb29-45e5-8a65-95157d24c25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9fc95a-c422-4ba1-9a7e-1ffc1d734d72",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec814d8-881e-43da-b0ec-7627ae966fc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d848ce25-e8d9-47be-8f49-f89140ad3d00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "059ac959-f2bc-4671-94ec-ef0c7dea0e85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c8334cd-6b77-4bbc-8968-a3ab1f09a996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1b5bf8-606b-493f-b022-30eda11c6eed",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d4068f-87dd-48c4-84b3-43269cce9a25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "353925a6-4325-4939-99a4-2c5cc8470386"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7a8515-4562-4431-956e-69e2aded41a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbb3c2f7-09c0-404f-8f57-da8eaf6c4cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85124c2-9a46-45a9-b7cd-a70cba3b2cd5",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f6804d-f326-40fc-b533-e9bb0b2eae21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72108f04-958e-41c4-ba84-887e629f8742"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "072ac509-81db-4629-aa81-a873f3b00247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b5be413-c3f4-4fd4-a588-aa33ac02676c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00722f2-008a-43b6-9fbf-5d36b4173438",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7fe810c-d8b8-4092-8821-c5f032b3b020",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c053a5d6-8f3e-4dea-9427-7f1286224133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36cc3479-3752-4ab0-a307-a57491faf321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfe18a0b-7744-4464-a025-e1f32cb0ddd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac9471e-44eb-49e7-8ecf-bc7dc2c74cb6",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39fa234b-3820-4252-88d3-ea03b5f5f916",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70623218-e7e5-4b95-be34-b85bd300c8ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b30bfa-58ab-4632-b031-cf66bd030ec4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8f7f340-6a72-4421-812f-e2fb054cbfeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e13ea6a-34f9-48ae-af72-4f20ccf873e4",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea5b9ba-5b70-4cc2-8cb1-4cb366305a74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00831f38-c7bc-4fc8-8954-25149e15889f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36cfcd4b-b672-4614-98aa-e1425f8c5a06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c935fbe6-7578-4c23-807a-34040c5923ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a3c3ac4-91db-4226-acac-753d558c59c8",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8a3834-6a97-415e-97a8-c20fac9ec137",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca3a6b04-a49a-43d6-bb70-6ced0ab66bc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8add1ed-5daf-4781-becb-789c3dfce4f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7d0d4e7-bc4b-44dc-88e0-2c800a266e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a232e803-1032-44b2-a5bf-2bb9daa33ca5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b0ed85-76dd-48dd-95c7-ea7e85c9ffd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36c28a85-ba72-4f34-8657-bf4c20694d54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef6eac9-15db-4b2d-adc4-ec2b0cc8079f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9126c5cc-15db-42ca-b65c-1c6f32e9bb96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4039ce-b30b-42d3-9e07-705b88ee060e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393ca600-c7ec-46eb-ab3f-051bb8c32b5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea899a7c-b153-4618-86e4-d46816975cde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bfd8b5d-51f2-465d-92ec-79cc6d8f42ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6f6d68d-f939-4ce2-b1f2-28888554f9cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0f1745-e4cd-4ca2-9259-07bd068e54fe",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6d71f0-d7c3-4bd8-8b12-212502c1594d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a184ee2-865f-4290-9b0c-fbd980992c8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e92d0e4d-c877-4987-8ab1-8d9387e4c85f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ce928a-6159-40d8-a1d4-512b45b2ef15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f86b63-c950-4474-9633-a53179e42da0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a875c959-ae80-49d0-8a05-56fda9a7401b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58d3f7db-4861-41ec-ae3c-fa137bebfdde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb63d1ed-a3cf-4de1-a835-c8d6ca122071",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d16c95-c020-43be-9d90-d3a569f47ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce6ab42-6f4c-4559-81e4-48fa850a01eb",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e72c63-0690-4bbd-bcd6-97cc0f1a538f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b5787e4-847d-4677-9e78-cc4c40656116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9a9ab3-f4d0-48b7-83f5-94227df58cc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c691f2d-8652-4308-9855-b3478fb70e71"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b75dcf8-2f97-4a7b-b3f2-a2cf714c6728",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b65af983-a03f-410a-a9fe-257da1199c7b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7050d7b-a083-4f01-8d3d-6ae8427a6b9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4cc7ffdc-c48a-4b59-aaca-8095a26bc8b8"
                    }
                  }
                ]
              },
              {
                "id": "ab184a6e-32a7-44fc-a2e3-5219274906bc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5cef5b5e-ab1d-4186-9fb5-ae5f7982f9a8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3507f387-4eca-4c09-ba97-64c5bafe788c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b7415c11-1e2f-46e5-aa4e-7ae3e6d43592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d580a24-e9ef-46ef-895c-4961ddd2b701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fca0aa16-2beb-4516-b09a-7959e74c5bc3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1be50adf-bc18-4f73-8490-406bf2a7351f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74c928ee-0ae8-44f5-8e39-4915f942fac5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "16956b62-c772-4d1d-8422-dc14b22afaf7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c39f5c6-8db3-4393-a2cc-f01249204990"
                    }
                  }
                ]
              },
              {
                "id": "df6535a3-1809-4a99-bc88-ca2a49c1dac2",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b94609fc-826c-4ee7-a052-93d4c2aa54e8",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e95d4e-dc4c-488a-927f-3e947ec5f763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "dd95a5b8-86d1-4c91-a14b-336ff3ba0eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1841dae-7049-4ee3-a8d0-7e61fa623790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3784f9ca-7602-408e-b9c3-3c0f8a8107a3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "41ea2c79-f837-4999-8b8e-d89c0adff28e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8d8145fb-3505-4cca-aa17-94fe5eb6c21a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "96bdffb0-181f-4ca8-bab6-7526568f02da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b41bb85a-ccc0-4ae0-8a9e-b9b3f41bdd09"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "756f5bbb-e6ab-4b14-bde8-86f5cefc5930",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e03fc8ab-b792-4fff-be47-f39ce46ff7e8"
                    }
                  }
                ]
              },
              {
                "id": "1da39760-24f0-4955-b527-91d5195ed3af",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa9f24ac-81e2-47b2-9d82-0e1a370349a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9b3546e1-36b2-4da2-8e32-236db60914b5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9986f0e8-2732-40a6-9095-14a06d57ce60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14732b2d-1188-45a3-ba5c-2273aaab9469"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "326df725-924e-4ed3-ab4a-0f3c9a9a7b6a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d150e0c1-8a4a-4283-a0cc-17ca1bfcfb91"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "058a874d-584c-4172-b114-2c6c108d2f66",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fbb16333-cb29-410b-9b1a-3147bf6880b5"
            }
          }
        ]
      },
      {
        "id": "6d8f4d89-eb41-4ee2-b1aa-ba83a805fca6",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a404346d-cc01-4e8f-88d1-5af925ef9ea1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c1bf314e-e5ef-45fa-a5b6-6ea8f9d570f2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c23d8e57-58bd-4da4-af5a-19a0a78ece33",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95594608-6fa8-438f-91f7-a385223f8da8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f5a39c97-47ee-4160-b36f-5bd9b517215c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3c773b-0a26-4821-9431-a9da658d96e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f8108583-516f-4823-9950-b4e7176d9764"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61d04b5e-09f6-4bd1-965b-35cee75a42e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2ed3ef9-e1dd-4dd0-aeeb-547458ad4286"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "abcacdce-d82e-4ba8-9755-a7f4db41af58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ea0e2a2-fa47-486b-a291-7d7cf880742e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a8d654a6-9f2f-46e7-bb4e-2fcb1373c002",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b116c443-ac99-4531-915f-ba2e09107ad1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d6fb02e-3bb5-4d67-8e7f-6817b3bb19ce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ce0ed29-19cb-4414-a805-ae26feafca9c"
            }
          }
        ]
      },
      {
        "id": "2c7805c4-b9e6-4c31-8735-854d47837e9a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "74ca81a0-9adb-41cc-867a-e54b5b8a9451",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d4334e74-6d2c-4b75-b5a8-244e34127846",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "78760ade-5bed-484d-a848-c43e76f3707f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74949df0-85cf-4660-ab3d-0b2d53a1ea53",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e792945c-28d2-4b2c-a280-8a5e9f76f963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d931bf7-0ac7-4861-ba1d-ddfb52322e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "18a3457e-15c6-4347-b8f5-8039238ba774"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34641551-8070-46e7-8790-0909edcf97f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "974c2c3a-85d7-46e6-8615-930273e346fe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "442e0b5e-d7ae-4e4a-8489-4b307b96d140",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1fa39b1f-f231-4058-99c8-30be55340560"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec641b80-9d88-44fa-8216-de543335f08e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a63f52df-571b-4819-a880-fa5544ae06a6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a4988a87-b1f0-4be9-a137-dccde2490c36",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "490ffae6-ad10-414c-a749-b40fcdaef243"
            }
          }
        ]
      },
      {
        "id": "c6b7a1f2-4357-45dd-8e96-e783f15f664f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "91cb2856-11f0-4c5e-85ec-af53a99a2b0b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c756cd4d-e4b2-4c81-9212-2e6360530450",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "461068c7-f5d8-4f11-95e6-988da067e90b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f1274f-1fb3-4e71-ad63-d3682e6a17b6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0352e01-9cba-4da6-9c2f-c5e5323fe869"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2330d87b-00ec-4a03-977a-2ca787a4b1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e10ea58-5803-42a0-8066-56ad11543853"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ce25de8-2038-48e7-a44c-5ab8291212fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6e34447-b2e1-475e-9923-764691b3009a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a0d35b4-dbc8-454f-a00e-18721deb6f41",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0da0303-2a4d-4230-bc2a-a818adafeaa8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3e71f1c-d271-4068-ad9a-9ca8deffd786",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "51f94898-d9b3-451a-b64d-37e34a0bbb37"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2038d1b2-80ea-4e73-bac3-3ad874a3df1c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0fbd58e1-1c05-4696-abec-18fb93380f51"
            }
          }
        ]
      },
      {
        "id": "7b25f39b-e8a6-476c-b664-acc80c2d5d31",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe8536cb-581e-4c3a-af12-b20e31f767c0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "02b7110f-332d-4702-acea-822fbf8b8617",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ec1d03f7-ba29-4dd8-87a4-1c6e02e1bb32",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bbe63274-3827-4136-92f5-1484f9b933b6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a6bdbe88-bcec-4474-974f-6ae0cb7fb2fa",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 51.14035087719298,
      "responseMin": 20,
      "responseMax": 273,
      "responseSd": 24.24164793519056,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1704933401401,
      "completed": 1704933424865
    },
    "executions": [
      {
        "id": "97537088-7f32-48ca-9d5f-62e73ea671b0",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d79a421c-15e2-4a5d-933a-35b3946d132a",
          "httpRequestId": "5a13d4ad-a318-4d53-a038-5456df5ae099"
        },
        "item": {
          "id": "97537088-7f32-48ca-9d5f-62e73ea671b0",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7b7fb021-796b-4281-893e-d83d00a084d2",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 0
        }
      },
      {
        "id": "b8d57153-8b33-40a5-8c44-4512be4ea4ff",
        "cursor": {
          "ref": "587e0f89-6c77-451f-b8ff-d460ffe6ee0d",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1ddb61e2-f71e-4532-a477-63df5add173e"
        },
        "item": {
          "id": "b8d57153-8b33-40a5-8c44-4512be4ea4ff",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7e8086d2-c714-4fb4-ae91-ddb92bc1b891",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "2fd9d1a4-67a8-41dd-967a-d1c3af1eb7b0",
        "cursor": {
          "ref": "ebc3397b-80bd-4f49-b478-c1f36ed3a971",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fd7535e9-3c03-4f8a-8dd6-7f93a17bd91b"
        },
        "item": {
          "id": "2fd9d1a4-67a8-41dd-967a-d1c3af1eb7b0",
          "name": "did_json"
        },
        "response": {
          "id": "6d451475-0fa5-49b0-afbf-84341de4a245",
          "status": "OK",
          "code": 200,
          "responseTime": 273,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5612300-8ad4-4410-a962-a1f68ea2806a",
        "cursor": {
          "ref": "52a11540-841f-4376-bec7-58e25c010181",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "56e78535-f7cf-43be-8019-179cca8b5463"
        },
        "item": {
          "id": "d5612300-8ad4-4410-a962-a1f68ea2806a",
          "name": "did:invalid"
        },
        "response": {
          "id": "73c4a817-b2b2-41c6-bebc-049aeefd8c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5612300-8ad4-4410-a962-a1f68ea2806a",
        "cursor": {
          "ref": "52a11540-841f-4376-bec7-58e25c010181",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "56e78535-f7cf-43be-8019-179cca8b5463"
        },
        "item": {
          "id": "d5612300-8ad4-4410-a962-a1f68ea2806a",
          "name": "did:invalid"
        },
        "response": {
          "id": "73c4a817-b2b2-41c6-bebc-049aeefd8c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffcd2458-7fb1-4c0a-9e51-41f00527c817",
        "cursor": {
          "ref": "6695ddaa-5686-4a36-8431-1459f4b61f53",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a198eb75-90b0-4ae4-bcb3-d226ac6aad70"
        },
        "item": {
          "id": "ffcd2458-7fb1-4c0a-9e51-41f00527c817",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4aca51dc-d309-46b3-87ad-5a0be87e7aa3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 103,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd91b0b7-e358-4565-a3d1-33d8f4a113bd",
        "cursor": {
          "ref": "65316329-e877-465a-985b-71b92d110179",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8bc0e8d7-af95-4f69-8048-aa307bb6b466"
        },
        "item": {
          "id": "dd91b0b7-e358-4565-a3d1-33d8f4a113bd",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "86b07384-4596-4a99-b98c-055b493b255f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484c94d1-5e1c-43d7-9954-e4b14d69dab9",
        "cursor": {
          "ref": "bbc00fbd-0210-4601-9e7a-437e9bc6b252",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "78640559-fe71-4109-bb2e-9f4dcdbea10b"
        },
        "item": {
          "id": "484c94d1-5e1c-43d7-9954-e4b14d69dab9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c1b38c5d-011f-4f43-9cec-fd32f33ef2f1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df998fc8-b7c5-418c-a87f-dba7c26e3c9d",
        "cursor": {
          "ref": "b6593a9b-673f-4a49-b937-85da2f679899",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "79bb92cc-dc71-49c6-98df-bc71a5e91fad"
        },
        "item": {
          "id": "df998fc8-b7c5-418c-a87f-dba7c26e3c9d",
          "name": "identifiers"
        },
        "response": {
          "id": "d5087872-8d81-47c6-92ae-ff4292d06724",
          "status": "OK",
          "code": 200,
          "responseTime": 251,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd987cd-1afa-477e-998e-a04e6bb6a332",
        "cursor": {
          "ref": "6e8ddb95-5e7d-49d9-82be-2c26b7185b7b",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8153c44d-1a17-4ace-8685-184c02d0c395"
        },
        "item": {
          "id": "bbd987cd-1afa-477e-998e-a04e6bb6a332",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "17385b37-978f-4e1e-a196-c0917ecedf62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59788622-2584-4cb9-bc87-a2dca46ca0fe",
        "cursor": {
          "ref": "9479a2c6-c5f3-417e-be00-53f2223b7743",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fc3743a5-1495-4957-90b2-ec51f59f8b15"
        },
        "item": {
          "id": "59788622-2584-4cb9-bc87-a2dca46ca0fe",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a92f8d04-488e-4b98-a211-cc67170d9036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33d8f9a-a211-4d0d-a721-55a93c1f4dc1",
        "cursor": {
          "ref": "4fe106f0-2962-443d-9a45-4b7ca2f819eb",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "27135bb8-b879-46d1-b5c6-c581312e8eea"
        },
        "item": {
          "id": "a33d8f9a-a211-4d0d-a721-55a93c1f4dc1",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b1196ce6-f0c2-4014-beda-7275edb5b960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc5adcb-1767-4353-b101-1b133fe456a1",
        "cursor": {
          "ref": "9906612b-4e0f-493b-97fe-d3b38a4290f9",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9e947933-7e3a-41a1-946a-6a02f34d70ba"
        },
        "item": {
          "id": "cdc5adcb-1767-4353-b101-1b133fe456a1",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c381e044-b2c8-4864-a0c4-8be54d7e2521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b4dc9a-2d74-453c-8220-bf037e17909a",
        "cursor": {
          "ref": "7f0ec989-3aa1-484d-9d79-ec228e875c94",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "71af27fd-c442-46cf-b966-a3816cb4ce2f"
        },
        "item": {
          "id": "07b4dc9a-2d74-453c-8220-bf037e17909a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "21e1333e-5ff3-437d-9559-5fde72ad2eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3f84ee-5b5c-4e91-b06c-0ea3d1c29f1c",
        "cursor": {
          "ref": "b6903cad-e800-40d7-906c-d2201667d788",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "576c7813-23db-4ea0-8ef8-b3fddd76c33b"
        },
        "item": {
          "id": "4e3f84ee-5b5c-4e91-b06c-0ea3d1c29f1c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f8897dee-c0ba-42a9-b8dc-e09a82aee7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe0cd472-697a-4d6e-834a-983f2a2621a1",
        "cursor": {
          "ref": "bfededb4-e465-4f19-9edc-69388f0df0e3",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ab50297a-302a-4ac9-9886-41da92000496"
        },
        "item": {
          "id": "fe0cd472-697a-4d6e-834a-983f2a2621a1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "75d83069-dc0e-477d-99e6-2fccd0f209fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fbb8ffb-8b82-4e6b-9f31-1a820d8f75e1",
        "cursor": {
          "ref": "b3af078d-5165-449e-9fa6-91f172875aed",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "615928b1-ee67-4e94-966c-0809a60da562"
        },
        "item": {
          "id": "0fbb8ffb-8b82-4e6b-9f31-1a820d8f75e1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "26f51b2f-5475-4739-8229-11c5b7cb249a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43df33bc-7ec7-469d-bec0-8dc6ac45042a",
        "cursor": {
          "ref": "351ac7e4-dad5-4cd8-a59a-a8bfabafc387",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b3e5cc78-006d-47e9-b580-15e936a3a2f1"
        },
        "item": {
          "id": "43df33bc-7ec7-469d-bec0-8dc6ac45042a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "23513dc7-930d-4fba-aa63-22a127042bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ddf235d-5455-4cef-b9f1-610f57ed717f",
        "cursor": {
          "ref": "10ddd7ce-0471-4f7e-92c2-5f8b44d4ed1e",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a45f5939-6dc3-466d-b94d-6d3fad7ee2b8"
        },
        "item": {
          "id": "7ddf235d-5455-4cef-b9f1-610f57ed717f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8f8f597d-cf34-402a-a792-0118c8c80264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b0c421-5f1b-4f4f-b755-a5e22f2ad7e7",
        "cursor": {
          "ref": "2ca6c638-263c-4299-87f1-6ac83fff2cd3",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "30c6cb6a-975e-4fda-8a65-6916334d5599"
        },
        "item": {
          "id": "27b0c421-5f1b-4f4f-b755-a5e22f2ad7e7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "be691491-80d6-43f0-abb8-26a60c77c426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6d6fad-890c-4953-92fc-ad91cefa95ea",
        "cursor": {
          "ref": "7d1f12e2-8986-4743-b2ef-0031beff5854",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f020409c-7925-45fe-b6a0-efb7c39c44e5"
        },
        "item": {
          "id": "0a6d6fad-890c-4953-92fc-ad91cefa95ea",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "4b919e81-2c21-4c5b-9778-b6e8bb475a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8852e207-01d8-4153-b4aa-16bf19e72072",
        "cursor": {
          "ref": "31431a98-f136-440f-80e1-4324e144d63a",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b89d135c-d98d-45ce-b19e-ecc611b7fa0f"
        },
        "item": {
          "id": "8852e207-01d8-4153-b4aa-16bf19e72072",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "9c0bb70c-f615-4d6c-ac34-c2fac5c91151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7238dd-76fe-40b4-81a1-1b0fdadaacfa",
        "cursor": {
          "ref": "2f060522-ea15-4279-a78d-7c3f70beb994",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "140a5336-02f4-4d77-b86f-a8dfcdef2921"
        },
        "item": {
          "id": "fb7238dd-76fe-40b4-81a1-1b0fdadaacfa",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "511166d0-b522-44f9-a4a1-feb6a6da963e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7e4a6a-e09a-47b3-95df-115688774cfa",
        "cursor": {
          "ref": "68f40d46-cf6b-4f39-9e18-85117422c500",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9bbe9d5d-eefa-4ec3-b6d2-c1bda2085a32"
        },
        "item": {
          "id": "8f7e4a6a-e09a-47b3-95df-115688774cfa",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3fae725a-e526-4fbb-9487-c432aa25acc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5bc6fb8-ed15-46be-b6cf-3f792f8f8947",
        "cursor": {
          "ref": "19161413-73d0-4479-8542-fe817361a833",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9e4f4e03-58bb-49f5-94cf-2910fec13a9a"
        },
        "item": {
          "id": "c5bc6fb8-ed15-46be-b6cf-3f792f8f8947",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e4b88feb-222e-4aaa-9b3f-1dadca37831e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6395e12-43bf-4390-97c5-a37db332b6cb",
        "cursor": {
          "ref": "b577ee03-294a-4ff8-aa16-b62dda2c5bf1",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9aa52c4a-1dfa-4327-88ed-1a175e2a9acd"
        },
        "item": {
          "id": "a6395e12-43bf-4390-97c5-a37db332b6cb",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f8540ca8-2c2f-4bd8-957c-60a610afafcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4ee528-f617-486d-aa83-8d0918a0b52f",
        "cursor": {
          "ref": "37b7ec4d-5549-486c-b163-87696c60e85a",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "45024a9b-724b-4631-b61f-48731642ce27"
        },
        "item": {
          "id": "ab4ee528-f617-486d-aa83-8d0918a0b52f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4274588b-bb82-4703-bc35-3c0be961b8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8014ef7c-93ac-4d69-b930-c0c42652e456",
        "cursor": {
          "ref": "ad046867-ed0e-463b-a0f9-97ae0b06b2b6",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e5aecf03-a141-4ec6-b5e9-07c6eb9a4bc0"
        },
        "item": {
          "id": "8014ef7c-93ac-4d69-b930-c0c42652e456",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2fb1b1c4-66e8-4b69-b6f9-183547bf91ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bcb6a3e-82d4-45ef-99c1-1b6a4f674317",
        "cursor": {
          "ref": "1a2f6016-cd3d-4844-acee-68e68629bf9e",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "010051c6-bbbb-49c6-99f1-668ab75035a2"
        },
        "item": {
          "id": "1bcb6a3e-82d4-45ef-99c1-1b6a4f674317",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5965efc9-14ec-49f7-8924-7d33048b287d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313029fd-afd1-4813-af6f-04429ae6764e",
        "cursor": {
          "ref": "f4c303e4-5637-4d44-b736-88a1955bf896",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "94af853b-c58c-4876-80b4-438a2732c01b"
        },
        "item": {
          "id": "313029fd-afd1-4813-af6f-04429ae6764e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "115c25ca-acf6-4115-856a-ccb1cbb87ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add68a19-c68f-4043-b6e1-7d0930d6d91d",
        "cursor": {
          "ref": "d9196072-71c7-4e47-9397-4d38d24a72e3",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "dee99030-88cc-4c4b-8fa1-bc938a2ad90a"
        },
        "item": {
          "id": "add68a19-c68f-4043-b6e1-7d0930d6d91d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1fdf30a4-cc89-437d-9f54-a803f2f2dc46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3530ee07-72ef-49c9-a7e1-f9c0c44785d0",
        "cursor": {
          "ref": "a6e79d13-f853-4933-b47e-493d4ef80233",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "290e103c-9900-43e2-a156-266aeb210a0c"
        },
        "item": {
          "id": "3530ee07-72ef-49c9-a7e1-f9c0c44785d0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "26e6d56b-3c66-48b5-8659-43c2d9315da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6871dc-a74e-4e56-8b65-076d9c60e6c8",
        "cursor": {
          "ref": "2a73080e-187c-4352-bdcd-c5eae9653a9e",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "75f6caaa-d349-48fd-ba60-41f72f648977"
        },
        "item": {
          "id": "df6871dc-a74e-4e56-8b65-076d9c60e6c8",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "20670323-a438-44ae-b3f4-ec5115b4ae44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50da141b-5c24-4315-8641-da884a19ca45",
        "cursor": {
          "ref": "56d32401-0459-4c3b-9595-da1ca1e96bb3",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f449a12a-08a9-42de-a991-b3d70f07be90"
        },
        "item": {
          "id": "50da141b-5c24-4315-8641-da884a19ca45",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "92b848e1-4c4f-49f3-a9a8-1b758af7948e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143da1da-50be-4ddb-92f5-c9ce495ee0ff",
        "cursor": {
          "ref": "a7141a69-da0f-44c7-bc30-3c82b62e2a2a",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "12fe07c0-d0ac-4675-9938-9b5485af3669"
        },
        "item": {
          "id": "143da1da-50be-4ddb-92f5-c9ce495ee0ff",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "09c1ce22-fc8e-4f69-9fc4-b1198be58151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baed609c-f7a5-44d8-ba86-a4d043555fd8",
        "cursor": {
          "ref": "5890d77a-e2e8-48b1-b8ca-751d1107cc6f",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "168f371c-7ce4-4c1b-b649-82e97575719a"
        },
        "item": {
          "id": "baed609c-f7a5-44d8-ba86-a4d043555fd8",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "8992b031-d32c-42d4-b15b-17a862766b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1edd739-c3fd-4b1e-aeb1-71a6d0a6a65e",
        "cursor": {
          "ref": "848797cb-1c02-4ea5-ad1b-35075d804da9",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a59ef756-b9b5-418e-a548-45590bff6e80"
        },
        "item": {
          "id": "f1edd739-c3fd-4b1e-aeb1-71a6d0a6a65e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5f92bd0b-fbe3-4f6d-a505-08d694c0cb4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db291700-87bf-4965-accb-7645a8bfc6b8",
        "cursor": {
          "ref": "68188b30-0ad6-4e82-b54e-351272c274b0",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e99bfdfd-9ee7-4d0e-9818-82309df20a68"
        },
        "item": {
          "id": "db291700-87bf-4965-accb-7645a8bfc6b8",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0b369b20-0830-4584-8e68-01e571520aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840ebafb-4ced-49c3-a375-c64d6867e97d",
        "cursor": {
          "ref": "7ad1b084-0452-4f5a-9f7f-ea1caddbab54",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "32751f47-107c-46ba-b128-66301c5dcd5a"
        },
        "item": {
          "id": "840ebafb-4ced-49c3-a375-c64d6867e97d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1410921e-a9ab-41ad-84b4-22d0bb445f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87f981b-3a5a-41a9-88f2-0626ac805947",
        "cursor": {
          "ref": "ad72a2b9-0ad3-4bc5-92cc-26ec3700fd1a",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f79579a6-167d-4cea-94f7-c5e3366c393f"
        },
        "item": {
          "id": "e87f981b-3a5a-41a9-88f2-0626ac805947",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "28bcdefa-b712-470f-87f1-dfef154cb4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c482b1f-8942-4111-83cb-2e1054d31c6c",
        "cursor": {
          "ref": "b16a3152-2e7f-4c01-9364-f2bf5832b27f",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "41e805ff-0aa4-4e9b-90b6-9d5fa6c6608a"
        },
        "item": {
          "id": "3c482b1f-8942-4111-83cb-2e1054d31c6c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "9c9ffa59-7109-4f21-912b-58d61ee9f2c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7215acb4-5c77-4b67-a414-2d2fce305cc2",
        "cursor": {
          "ref": "285c7dd3-399e-4469-84ef-27e2fa1686cb",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "56196d1f-287e-417d-b602-011b92631c89"
        },
        "item": {
          "id": "7215acb4-5c77-4b67-a414-2d2fce305cc2",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3b683757-dae9-4632-9210-2f3f002de441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5cbc4d-9039-452b-b4a5-b1857861d040",
        "cursor": {
          "ref": "ca03f841-33da-413f-bc7d-a5ceba904a0b",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "843435c0-104a-4709-b603-a97eea684a9a"
        },
        "item": {
          "id": "ea5cbc4d-9039-452b-b4a5-b1857861d040",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "49a4e31c-3a56-4d68-9224-b9f5bae69591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a163c4-b549-481b-a6a3-193a9bb3d9a0",
        "cursor": {
          "ref": "d846af41-0c1e-432d-9747-cb1c6a92ff78",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8412438f-8c0e-4357-9c44-ce649ba5fe31"
        },
        "item": {
          "id": "86a163c4-b549-481b-a6a3-193a9bb3d9a0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "42318c6b-e677-4236-94fd-6024e6335a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce65d3d-4825-4412-89bc-f6767b18738a",
        "cursor": {
          "ref": "2e7fc0e7-b757-4880-aa12-b7bec12d7725",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e1e40b0b-6e89-4167-9221-fcf525da2343"
        },
        "item": {
          "id": "0ce65d3d-4825-4412-89bc-f6767b18738a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3c859285-061c-45ac-ad8c-dd02229c1748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cafde625-8c45-43f1-b5aa-792d91491baf",
        "cursor": {
          "ref": "c1a2809e-6cb1-4bae-bf20-5604064d91ea",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a49273d9-aa3c-4fab-ad0e-d4996dc3e465"
        },
        "item": {
          "id": "cafde625-8c45-43f1-b5aa-792d91491baf",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2d4b2667-da3a-4cc0-b70c-d28bd530e760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa544b0-20c1-4f7a-9c07-23b3f9b7575d",
        "cursor": {
          "ref": "b994c6a2-eb51-4b55-bd63-1022940d84eb",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4abe2307-7609-40a3-9bcd-b0cdf6f5ff14"
        },
        "item": {
          "id": "1aa544b0-20c1-4f7a-9c07-23b3f9b7575d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "45af6729-ede1-4cf2-a681-df3188263bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4ee68e-a03f-49fb-806c-d81c6327c3a5",
        "cursor": {
          "ref": "03cfe85c-cb9a-49ea-8a8f-dbf52897a167",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "84b544f6-0cb8-4300-b887-968b53d77e5b"
        },
        "item": {
          "id": "ad4ee68e-a03f-49fb-806c-d81c6327c3a5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b2c020c9-cdb2-4bef-a806-c3f0fa3cae74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e45185-30f9-498f-82ac-c345044b19e3",
        "cursor": {
          "ref": "d71eb96d-1a15-46f4-9728-c1e5690a6293",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "50b41972-2843-49ee-b0f7-468df4922299"
        },
        "item": {
          "id": "78e45185-30f9-498f-82ac-c345044b19e3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "27cbdc4e-943d-4337-a4cc-82d666e579dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb96118-f960-4401-bf30-5a4db3d92889",
        "cursor": {
          "ref": "5f3318a9-75aa-45d9-92c0-d2ba521bdb06",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "65d5dd12-c07a-4fbe-8d2a-94bfc986a542"
        },
        "item": {
          "id": "8cb96118-f960-4401-bf30-5a4db3d92889",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ed8c9d28-c758-43ce-a0ae-557b0f7c3433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c6ec18-a9bd-4b8d-a33b-e452dd6a27f9",
        "cursor": {
          "ref": "f97b3527-5fab-4161-be57-3120abb26ea4",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "51643abd-a201-48e8-906f-0e0ccb6ed27d"
        },
        "item": {
          "id": "a7c6ec18-a9bd-4b8d-a33b-e452dd6a27f9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8f1e4c38-6c8d-4f60-8d0b-0dadf80062ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91801b5e-84da-4a8d-8f86-cd1ccf3124d9",
        "cursor": {
          "ref": "1b93eed9-eccc-4ab3-92da-554106f5f5a5",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "4e1c4b7b-f62b-422b-8407-b9aa2f9799eb"
        },
        "item": {
          "id": "91801b5e-84da-4a8d-8f86-cd1ccf3124d9",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2ae2d1c7-c651-4916-bcf3-2cdaedbda852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7b7541-0542-4346-8002-93bcd03a18e4",
        "cursor": {
          "ref": "ae97a9d6-bdd0-4abf-a3ec-225b82c2ca49",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5e06a0c7-e9e8-4cf5-a104-a1a5bedd361c"
        },
        "item": {
          "id": "2b7b7541-0542-4346-8002-93bcd03a18e4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6ab2150a-980f-4c2c-b3a4-e7bc1d8d2d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03cce76d-e805-474b-b9f7-ac43976a70a9",
        "cursor": {
          "ref": "c34068cb-9d9e-4667-8055-87b9ae1bc54c",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3feb6742-30a9-4c93-8ab5-b3311a9517c7"
        },
        "item": {
          "id": "03cce76d-e805-474b-b9f7-ac43976a70a9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ddc1a4fc-cf77-4a45-a658-163347abf9d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df7aed9-d8dd-4057-9427-466bca854cdb",
        "cursor": {
          "ref": "3b80ac9a-e488-43e5-80ba-ffd178d63eb6",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "82eeb626-914c-4cde-8782-07bf1fcef816"
        },
        "item": {
          "id": "2df7aed9-d8dd-4057-9427-466bca854cdb",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1dbba6aa-cdf6-4fd0-8bb8-9b6104acda3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748a1e55-cb44-4410-80fa-a7689e539827",
        "cursor": {
          "ref": "6ccc5156-d6f1-44a1-80e0-69c7bde95976",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "da5ca9db-f9e8-4600-86a8-b0273865d795"
        },
        "item": {
          "id": "748a1e55-cb44-4410-80fa-a7689e539827",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "214b33d5-0951-4263-af56-0650825737c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1568494-9058-4240-af4c-81ef62d2bbce",
        "cursor": {
          "ref": "befa47f9-5ece-4af8-be1b-aa2bc1f1e64a",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c593aa02-0a1e-45f2-8577-5c46936402bd"
        },
        "item": {
          "id": "e1568494-9058-4240-af4c-81ef62d2bbce",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "73f694b2-267d-4f4d-b79d-06262988c259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc992ff-8298-4655-8452-cebffdec30c2",
        "cursor": {
          "ref": "2616cf50-cd4a-4ab0-821b-7dcd236345c5",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "835af36c-36a0-43da-89fe-c2f0605cd076"
        },
        "item": {
          "id": "4dc992ff-8298-4655-8452-cebffdec30c2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "07bf81a4-6210-492b-98f5-fde2b673d93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be39728a-f4c2-4939-9a55-4d931876802c",
        "cursor": {
          "ref": "7bbb0f61-7403-4fa1-ac2d-cbc86ec3ace8",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "47749096-01ff-4798-b724-c2fe3d7083a6"
        },
        "item": {
          "id": "be39728a-f4c2-4939-9a55-4d931876802c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "89d84a60-a73f-4a9f-ba57-965c1bd35902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60688cbd-1806-441f-adc7-e68b62745280",
        "cursor": {
          "ref": "dd7737f5-9164-4111-8d63-51709524952c",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8c3dec90-0931-4a15-9a39-0f91c6de2047"
        },
        "item": {
          "id": "60688cbd-1806-441f-adc7-e68b62745280",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9756ce2e-41ea-4102-babb-d183a82d0dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327f770c-5879-494d-8d60-dee585b7b490",
        "cursor": {
          "ref": "60c0490d-daa6-4fe6-b123-6e2db2720c31",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5421cb89-cbd8-441b-8953-f04f37a67569"
        },
        "item": {
          "id": "327f770c-5879-494d-8d60-dee585b7b490",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a284037d-622e-4820-832f-9a825b84e396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e832494-77a5-4bdd-aab7-b5e79b73e180",
        "cursor": {
          "ref": "0740ce17-304d-46ab-9b32-a44a085c8431",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9f5c4401-7430-4a5d-9174-a46f9f1965d7"
        },
        "item": {
          "id": "2e832494-77a5-4bdd-aab7-b5e79b73e180",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3eedfbd8-9985-44ce-aa5b-b32352c7d1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "718c9663-f8de-4a6a-813b-97bb20ab035d",
        "cursor": {
          "ref": "34d8d582-cb70-4c30-80bc-34c647c533c3",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0eb39432-248e-45e5-ac7a-66fb1203b21f"
        },
        "item": {
          "id": "718c9663-f8de-4a6a-813b-97bb20ab035d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ebafc212-873c-48c1-bf5a-62bae30e445d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d090b5-4393-4970-b316-1b1e8085d25d",
        "cursor": {
          "ref": "d5fb3ce7-bda1-4d0a-95d0-6c0086105b19",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e2b2220e-7612-4094-9757-3272ae0714b6"
        },
        "item": {
          "id": "48d090b5-4393-4970-b316-1b1e8085d25d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6c1c0bc4-a4c3-461e-b7f5-60703d52a6d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd19d2a-0379-456a-8940-a1966740d853",
        "cursor": {
          "ref": "7b92aa6c-e348-4e59-8f1b-f2f515d20863",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ce5b71b0-41f5-4916-b536-8c41781182f7"
        },
        "item": {
          "id": "5cd19d2a-0379-456a-8940-a1966740d853",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "99164213-6470-48bb-bec9-11d0f3948407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00cb75b-70cb-4e63-82d2-4157b73abc65",
        "cursor": {
          "ref": "80e36670-2160-473d-8e08-91aa560f4cfc",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8a66d804-4d94-4eb4-8666-15566c381cc2"
        },
        "item": {
          "id": "b00cb75b-70cb-4e63-82d2-4157b73abc65",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "68723b11-8b3e-4d35-896d-7f8797c3cfff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438b4513-f21a-4f10-b45b-f27ad9bea917",
        "cursor": {
          "ref": "f9e3d721-3075-41e3-917c-e9686f68bd22",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e7261be1-4cb2-4f65-a1e9-c0ccde491ffc"
        },
        "item": {
          "id": "438b4513-f21a-4f10-b45b-f27ad9bea917",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e4e2c107-48de-4488-8b16-0a2e165501fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f74d60c-82b7-4734-9288-b36c18390761",
        "cursor": {
          "ref": "b5b70137-6dc7-435f-b219-1458b224aab6",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "969cfe10-a3a6-4bfe-9872-f3c0d0b52929"
        },
        "item": {
          "id": "8f74d60c-82b7-4734-9288-b36c18390761",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "99007f8a-d184-45a1-ab46-79512e9304a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6e96c1-856b-48fe-82cf-4b2a16696ac0",
        "cursor": {
          "ref": "3ccfbde9-818e-4f82-bda0-8b7d9fe9484a",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "86337a3c-b48a-406b-9d71-31789c44f633"
        },
        "item": {
          "id": "0d6e96c1-856b-48fe-82cf-4b2a16696ac0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7aae3f5b-e586-46c7-80a1-e63263577f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4250f32-9d65-4cc7-8c69-46cf018127f9",
        "cursor": {
          "ref": "4e70c378-d077-450f-9507-38d7966c50bc",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2c1dc4ad-1879-47f3-9b7c-0bbaac1d4b5e"
        },
        "item": {
          "id": "f4250f32-9d65-4cc7-8c69-46cf018127f9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "905b6c32-5093-4e31-999d-0eb308d4e6dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e813ed9f-b7dc-4ee2-bd13-a8d7ef21f5bb",
        "cursor": {
          "ref": "072d4478-5647-490a-9c3e-44f9a3993881",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "43e375d7-ddcc-44d0-afa6-fb66fe7a8b64"
        },
        "item": {
          "id": "e813ed9f-b7dc-4ee2-bd13-a8d7ef21f5bb",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "854335ca-8369-4e34-bc33-979251711126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23846de-92f2-492d-be39-f43d79a8d882",
        "cursor": {
          "ref": "9a700f9a-3c1d-4e54-ada3-e73916a04749",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9fcba461-4e4c-481b-b265-f0a8f0e8c314"
        },
        "item": {
          "id": "c23846de-92f2-492d-be39-f43d79a8d882",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "eedd0070-9567-447a-b7d6-444b0b8741f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574547d3-440c-4ef5-a8db-24e43272a263",
        "cursor": {
          "ref": "a1688bbe-1129-4221-a6a4-165fd967f48f",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e09e5fc2-6026-4b90-9a7c-63dabe90ee4a"
        },
        "item": {
          "id": "574547d3-440c-4ef5-a8db-24e43272a263",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "89f1852d-e030-41d7-8ecf-e5e465b4c4c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c309b242-3d9b-4c0f-ba12-1cc3044c2631",
        "cursor": {
          "ref": "225211a3-5d5a-4439-a3da-9654c0b47c41",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "019f96e4-06bf-4e83-81aa-039831722247"
        },
        "item": {
          "id": "c309b242-3d9b-4c0f-ba12-1cc3044c2631",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6f2abf9a-a83c-4ee4-925e-bb323fa05aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c94d45-663a-48ca-bfb3-866f619ce2df",
        "cursor": {
          "ref": "483737a6-08d7-4a52-80ae-f88e5e72bd0f",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6302286e-04b1-4f74-a10c-785114c9748f"
        },
        "item": {
          "id": "75c94d45-663a-48ca-bfb3-866f619ce2df",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a4a79d82-9ca7-4b97-b6de-187a617aa5f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0829f92-63ec-4279-a021-9d82e0cf8f51",
        "cursor": {
          "ref": "8abb8fcc-ed44-40ab-934e-33aaa3533b35",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8cf45a61-825b-4c0c-87e5-d07a37b6006a"
        },
        "item": {
          "id": "c0829f92-63ec-4279-a021-9d82e0cf8f51",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "46606f6a-d336-4371-852a-e0e3bf990edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673b9c1f-9483-4b2f-92b8-eeae42e2da52",
        "cursor": {
          "ref": "14670aee-1eaf-49bf-91c4-e38449320247",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c892d5b2-eaf0-4b92-9fff-b1f0c4ebc5f8"
        },
        "item": {
          "id": "673b9c1f-9483-4b2f-92b8-eeae42e2da52",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e36e4bc2-6363-4102-b3a6-545c814cc197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4f4233-20ca-4d14-acbf-2ff49cfdbd4f",
        "cursor": {
          "ref": "3076c767-5496-492c-94c3-9cdbeaa3d3bb",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "759b2190-8b9c-4096-93bf-5392ee765249"
        },
        "item": {
          "id": "4d4f4233-20ca-4d14-acbf-2ff49cfdbd4f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5d70e9d2-0205-4a9c-ab5a-cc84a9eca05e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45ec664-6408-4da7-a45a-112a41a75d37",
        "cursor": {
          "ref": "06092caa-cae7-4004-970b-d2f96c1a77eb",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ea1d25c6-0ec2-4a0f-8f60-2215945e6344"
        },
        "item": {
          "id": "f45ec664-6408-4da7-a45a-112a41a75d37",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "70c70644-5877-48dd-9b2e-a18b331a65b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdfb8de9-53d4-42fe-be82-ca250af47896",
        "cursor": {
          "ref": "a9fef9fe-e532-4f0f-8959-e4b5221995f5",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ec92632d-15ac-4e30-9a6f-8ac747572365"
        },
        "item": {
          "id": "bdfb8de9-53d4-42fe-be82-ca250af47896",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "1a437d17-21a5-4cc7-9355-41c4a0ee0583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab440e4-d22b-40df-b5ac-019b89631564",
        "cursor": {
          "ref": "d1a1d399-8dbb-4ebf-a6e1-c5918909e44e",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "dfab8e1a-0f33-4ed4-822e-d6684b3cda59"
        },
        "item": {
          "id": "4ab440e4-d22b-40df-b5ac-019b89631564",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e18a2c4b-8479-4c9e-b889-c4740953c31c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb67c05-9652-403f-93ad-9175c272e6cc",
        "cursor": {
          "ref": "8ace8c2f-a7e4-4ca6-acbf-1fbcf74e334a",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "391f356d-d336-4432-ba2f-13d122292642"
        },
        "item": {
          "id": "5eb67c05-9652-403f-93ad-9175c272e6cc",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c082cd1e-eba5-4c11-84c5-112087737bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41d2577-269a-47f2-b125-dfe5a482505d",
        "cursor": {
          "ref": "80da16cb-5f75-40ee-afe1-60fa9ec02fd6",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "112b897e-d73b-4ab7-b3b4-5150c8f088f9"
        },
        "item": {
          "id": "a41d2577-269a-47f2-b125-dfe5a482505d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6d4e7a35-a237-4190-8cbd-4172fcf4c3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c77080-c6fc-4c4d-b656-6ced18707736",
        "cursor": {
          "ref": "450961bf-c2f8-4a0d-b4e3-653a3eb84c66",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0d7661c3-c9e6-4e1c-ba31-811c4a636cbd"
        },
        "item": {
          "id": "58c77080-c6fc-4c4d-b656-6ced18707736",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "33d44f9d-2142-4e94-be8c-069739a0f5dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f50257-1c24-4fea-b5ce-ca4e50487dba",
        "cursor": {
          "ref": "8b4b47ed-1df8-462d-aaa8-7d88f0e00371",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bc7daff7-822b-4a0e-a89a-125e423ca4ba"
        },
        "item": {
          "id": "42f50257-1c24-4fea-b5ce-ca4e50487dba",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ba60df10-5128-4adb-9584-5345ed1a8837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9be9f8-59ac-43b3-a520-639ad809e005",
        "cursor": {
          "ref": "85ae878b-3d0b-41d0-84d4-eca244e7b02a",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a3776dac-4133-4859-a1ea-ace543a5efbb"
        },
        "item": {
          "id": "0e9be9f8-59ac-43b3-a520-639ad809e005",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "eb4aac2d-931e-45e4-a6b4-c63f04afcc60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f576b04-5129-4a06-a9c7-f88bbaf56253",
        "cursor": {
          "ref": "abb90b68-8cff-4332-8b6f-b7f96628f288",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "62fd7245-d36c-47af-9904-65525d271b5a"
        },
        "item": {
          "id": "5f576b04-5129-4a06-a9c7-f88bbaf56253",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ad2db063-538d-4c0a-88b8-c1c732f304d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "722e509f-e737-4bc0-b5d0-0b8de81fa489",
        "cursor": {
          "ref": "ee0bd678-c52a-49f4-ac1f-97b089daf755",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8ec6bc96-24d8-4761-a368-1e7d8861ecc5"
        },
        "item": {
          "id": "722e509f-e737-4bc0-b5d0-0b8de81fa489",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9ea5becf-cbd0-4651-b748-fea92234463b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49dcbbe-94cb-4607-bb88-03f9c8bece9f",
        "cursor": {
          "ref": "c5578742-3a67-4463-a1c7-523cd97b0ee8",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ac6f1c1b-47cc-4f42-bbcb-d92745ede5df"
        },
        "item": {
          "id": "c49dcbbe-94cb-4607-bb88-03f9c8bece9f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "705af66d-410e-447c-b8e0-b424cf6c29c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b1d1be-5285-40c0-98f9-f25bcaa5a6c6",
        "cursor": {
          "ref": "3e2a023c-c6e4-488a-abd0-5f7642f26780",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e2dc9745-a315-4f85-930c-c1fab432ac7d"
        },
        "item": {
          "id": "31b1d1be-5285-40c0-98f9-f25bcaa5a6c6",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3311ac68-58ad-4043-98e7-b6e033b5ea38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b49817d-822a-4eb3-b5f2-bfe75380a797",
        "cursor": {
          "ref": "64f36f1e-dca8-4034-a335-4bb2d5974b5d",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6aa6cf5b-9db9-46b7-ba1c-e9afe467e536"
        },
        "item": {
          "id": "6b49817d-822a-4eb3-b5f2-bfe75380a797",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "aa169b51-d98c-40d3-a75e-91ea4d455bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05f6f46-99b1-4a4d-895c-a1dfcc1d1b7b",
        "cursor": {
          "ref": "d878a5a2-4bd3-450f-afe8-6e9966b0bc2e",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "22909a9f-689f-42f1-a7a2-cf7ca3f722aa"
        },
        "item": {
          "id": "e05f6f46-99b1-4a4d-895c-a1dfcc1d1b7b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "fed9b411-14da-4199-a8ee-8ef0f444725b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db07c23-27be-4abd-95ad-f31d9404fc6c",
        "cursor": {
          "ref": "a02e1a60-99b0-4e0c-847e-0f53fc5430c0",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "32771fe7-0e13-4847-9468-e69c0dd9010c"
        },
        "item": {
          "id": "5db07c23-27be-4abd-95ad-f31d9404fc6c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "dcad4d0b-8158-4e23-a224-4cbf0de6e132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6b6a5c-b9cc-4317-9b3b-3311b595d318",
        "cursor": {
          "ref": "8b9a5645-cad8-47ab-93e5-8a9859055639",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a5c346ee-d0a1-49f1-abab-2d031fa2eb44"
        },
        "item": {
          "id": "0a6b6a5c-b9cc-4317-9b3b-3311b595d318",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1490ec96-6906-439e-8c71-b40ecc89d062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dfc4d64-89c7-434b-b9c6-ee7dd89c67f9",
        "cursor": {
          "ref": "fb007232-872f-4cd8-9b7a-5d71e46dc185",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "585ee29e-5d71-4a4e-90a2-b1d9515ad406"
        },
        "item": {
          "id": "6dfc4d64-89c7-434b-b9c6-ee7dd89c67f9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "39566742-a70b-46c1-a763-458267504f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b4507c-f961-4707-abe1-247ba979083f",
        "cursor": {
          "ref": "bcd1b2fc-90f8-4163-b432-b15c5529941a",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0283de94-e450-402b-943a-8762fe437527"
        },
        "item": {
          "id": "62b4507c-f961-4707-abe1-247ba979083f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ee00ce7b-f588-4705-93ff-2d4be2fe5c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c693c37-0e69-4ccd-a305-01a7ab5f68cf",
        "cursor": {
          "ref": "37c5494a-dfe0-4bcd-ab4b-a5ed6df5307f",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9846ddd4-88bb-4bb7-9fac-1a2a291f612d"
        },
        "item": {
          "id": "8c693c37-0e69-4ccd-a305-01a7ab5f68cf",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9ee13dbb-542d-4c0a-bf0f-13da34f3004f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eacdab2-5807-4b8f-b318-00b317273deb",
        "cursor": {
          "ref": "e6e45a14-456e-4e55-8ab8-643c30cc15bc",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "04afdb61-3884-4e8f-a0d1-21597eee3116"
        },
        "item": {
          "id": "5eacdab2-5807-4b8f-b318-00b317273deb",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "20f5f53e-aef3-43ac-b4ad-3436b2214b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d91fdc-1e2e-4bb8-bfa7-cc41d61b425c",
        "cursor": {
          "ref": "7b0990e4-606e-4142-b6ad-3144d30616e8",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6ffc9187-14cc-4c50-b0c5-16c5d255c03d"
        },
        "item": {
          "id": "74d91fdc-1e2e-4bb8-bfa7-cc41d61b425c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "bc223e9e-0e1e-410a-b246-fdea210abb6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5018ce6-3e6d-407a-8a10-cc123f344a60",
        "cursor": {
          "ref": "0ad36758-1c25-4067-a669-5465f64d6756",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1b10006f-4ebb-4651-bc9c-14948d518fcf"
        },
        "item": {
          "id": "d5018ce6-3e6d-407a-8a10-cc123f344a60",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5af264b1-61aa-410d-8f51-24ff9c090bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c903a3b9-f05a-47c1-aebb-336d3e8770bf",
        "cursor": {
          "ref": "dd1a693a-fe21-47a3-8aab-7bdc8f31fb39",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "433c0750-e464-4a58-9bd0-4ae554a712f5"
        },
        "item": {
          "id": "c903a3b9-f05a-47c1-aebb-336d3e8770bf",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "74160aa8-fed1-4b0b-978b-85b4d85c4339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d41fa6-9135-4c7c-a8c9-89cd2ec7ef9d",
        "cursor": {
          "ref": "6321adf6-685a-4280-a4d2-25d8c7a8dddb",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5342fef4-5b3b-48cb-9b95-92c487c1c719"
        },
        "item": {
          "id": "c3d41fa6-9135-4c7c-a8c9-89cd2ec7ef9d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8daa5c50-356c-4348-9204-e028204aae9e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d320db-d776-412d-a1b6-c1aa826b9a4b",
        "cursor": {
          "ref": "63f192f9-4ba3-4f57-b5ef-808f27556931",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1acde418-447b-4ed6-a5c0-48949216c51c"
        },
        "item": {
          "id": "21d320db-d776-412d-a1b6-c1aa826b9a4b",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "4f0a1d6c-d0b7-4de2-b838-5e5d329d8181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "d1b01c76-a1a5-4e94-b53a-6578c07a588f",
        "cursor": {
          "ref": "a11f621b-81fc-4801-b597-1be3fd66111f",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "712fb1f3-566c-4bc6-b263-5b99d7a18126"
        },
        "item": {
          "id": "d1b01c76-a1a5-4e94-b53a-6578c07a588f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "15f34dac-b19d-4e3f-91dd-76fba92cbf86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 164,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "9e59d0c9-0038-4f67-a372-33d059347430",
        "cursor": {
          "ref": "ed9849f1-243e-4eca-9d16-e179ea9b92ea",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0961b76e-acf6-4714-a178-1cdc729c0430"
        },
        "item": {
          "id": "9e59d0c9-0038-4f67-a372-33d059347430",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7d17103a-b655-44c4-91a0-27f85f595523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "877d45c2-b828-4fa4-a0c8-302c3130b905",
        "cursor": {
          "ref": "5b230207-dbf6-4a86-a0b0-100a9183da5d",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "47dd74c9-a115-4534-84c6-becd207bc157"
        },
        "item": {
          "id": "877d45c2-b828-4fa4-a0c8-302c3130b905",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f1172a0d-cd20-45bc-b7c8-35e6150d4a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "d492a90a-1a18-494c-ba72-108d4e79293c",
        "cursor": {
          "ref": "70593508-811c-4372-b7c3-0f814fa9e1fd",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7ab12502-55c9-49e9-9107-06dc9987a112"
        },
        "item": {
          "id": "d492a90a-1a18-494c-ba72-108d4e79293c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "562497c4-1acd-40af-b8d9-259e9c6937b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "cdad3715-af37-4496-8434-fa51417d7a7d",
        "cursor": {
          "ref": "23adc054-9ae7-45bc-9b2e-8353d84ec845",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d9fb503a-0219-4798-8188-af4a975f18cb"
        },
        "item": {
          "id": "cdad3715-af37-4496-8434-fa51417d7a7d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9d021af2-8b74-40b4-b06b-fa792ca492a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "ba001480-9390-4698-8879-c3ffa46b015e",
        "cursor": {
          "ref": "95748fe1-5fcb-4b84-a480-01f7de590d1a",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "46193e8f-f467-474d-89d4-1552e8561fdf"
        },
        "item": {
          "id": "ba001480-9390-4698-8879-c3ffa46b015e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d2cc2f95-00f9-4b85-a49d-f1503538d49a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "66a3ccee-7a0d-4d2a-948d-44c315a87a02",
        "cursor": {
          "ref": "745be6c3-d0f2-4795-96fc-3c57cc2f5834",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0b0cd4e9-fafb-4288-b2e5-01b923012ca7"
        },
        "item": {
          "id": "66a3ccee-7a0d-4d2a-948d-44c315a87a02",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b6df590b-b9a3-4133-858b-ca216a9bc338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a43e0aa-7955-4ae8-aab6-acdc77ae4e91",
        "cursor": {
          "ref": "eaff5309-54e1-4d82-a72a-22c1a397a3ee",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7465d5d6-f8f6-4f32-ba05-23591295ca2b"
        },
        "item": {
          "id": "0a43e0aa-7955-4ae8-aab6-acdc77ae4e91",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d1cf7afb-f608-43c3-8fed-79f67ebab6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "065914e9-8b20-4fd7-9658-ef79a02580d1",
        "cursor": {
          "ref": "45a9d2f4-8ff5-4b0e-a0d1-0bdfa5aab4d2",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "406d5d96-0eef-4ee2-90b9-06fdff6a1634"
        },
        "item": {
          "id": "065914e9-8b20-4fd7-9658-ef79a02580d1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a0341654-d86a-4c13-8e09-2b542b899e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "accdce19-2b5a-4d61-ad83-d13b02d368bb",
        "cursor": {
          "ref": "4efeac66-7208-4538-88aa-787ad290b503",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "83a177fd-17a1-4c6d-9997-9afc7f81eae2"
        },
        "item": {
          "id": "accdce19-2b5a-4d61-ad83-d13b02d368bb",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5b73b1d5-c997-44fe-9973-984f73c3db99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5edadb7-e628-4e5e-89d2-f3260dd1c4ec",
        "cursor": {
          "ref": "a3977f4e-facf-46b3-a4e9-2ca89d39defc",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "bbd3791b-e47c-4585-b812-fc375329192d"
        },
        "item": {
          "id": "e5edadb7-e628-4e5e-89d2-f3260dd1c4ec",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b4f79541-c74e-4ddf-a8e9-3b8dbbf8aaa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ddfcf65-b6f8-4bf3-9618-83939197dd63",
        "cursor": {
          "ref": "efa49e70-8161-497f-a50b-b16c17fab9a0",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "48a37bfe-fb21-4936-9463-7f3b0ba9aca5"
        },
        "item": {
          "id": "1ddfcf65-b6f8-4bf3-9618-83939197dd63",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "793b5e38-d13b-4cfa-a06d-3bd0f1b4b8c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86501a62-c7ad-4f69-9c4f-11e736dbbf52",
        "cursor": {
          "ref": "26cdd0d4-122d-4d65-bb31-60defb3c6c52",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1abc237f-eee7-4511-b448-d33cb37008a2"
        },
        "item": {
          "id": "86501a62-c7ad-4f69-9c4f-11e736dbbf52",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "053e3f00-f77a-4c3e-80b1-34667dd2709a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd164bc-2424-4865-8e25-92e39bd8e0df",
        "cursor": {
          "ref": "3eb776fd-4777-40aa-8319-6a41f4612e52",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "715b35f9-a18e-449f-bddc-d43139db206c"
        },
        "item": {
          "id": "4cd164bc-2424-4865-8e25-92e39bd8e0df",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a5cdd69f-f77d-4b4d-b6b0-0f74531a6843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b44255-f40f-4070-b7f3-d608c830892c",
        "cursor": {
          "ref": "15cb1424-0523-4353-9244-c64d9338de37",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7acec14e-e3aa-448e-8c44-4c7206118a6e"
        },
        "item": {
          "id": "d3b44255-f40f-4070-b7f3-d608c830892c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "85256096-3852-428c-a00d-5118e939b8f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e28ff3-0d8a-47a8-b22c-efc0f89b727b",
        "cursor": {
          "ref": "4d99511a-6494-4c3c-98da-b2316097bfe1",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "69c950b2-adfe-4387-9a92-2d93eb3a1a17"
        },
        "item": {
          "id": "a2e28ff3-0d8a-47a8-b22c-efc0f89b727b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f18c439c-19d7-4717-a295-00ce3771a321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9398efb1-723e-4677-9bdc-d013edcb128f",
        "cursor": {
          "ref": "40899fe5-7f39-40c9-9ba2-b859cc3c5459",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "472dc133-a49d-4ee1-b6ca-8ee48e7edfd1"
        },
        "item": {
          "id": "9398efb1-723e-4677-9bdc-d013edcb128f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "438e87d7-2550-4ffd-9884-d5c73514d145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5af740f-2e7b-4aec-a706-c74752defcbd",
        "cursor": {
          "ref": "7aedab2c-45b4-4aa1-b4cb-78084760c8ae",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1b5c8180-fc4f-464a-80e9-2dc98ce2191a"
        },
        "item": {
          "id": "a5af740f-2e7b-4aec-a706-c74752defcbd",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "03f045aa-506a-47ff-8c2f-5fcfa8cd95da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64946cf1-3783-4604-b2da-392c6205b332",
        "cursor": {
          "ref": "fbbea262-df31-4f10-8a8b-d54401f72284",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9f443802-e121-4e14-a953-78d20782e3d7"
        },
        "item": {
          "id": "64946cf1-3783-4604-b2da-392c6205b332",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "870f80f4-5a04-4590-b950-eaecb032f4b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e21d55f-b9ff-4207-82bf-49ae93a9e716",
        "cursor": {
          "ref": "3f315d5d-6305-46f4-b91b-763f5dd62c02",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f9a48065-9c3a-4a74-8229-dcc7f36725a0"
        },
        "item": {
          "id": "8e21d55f-b9ff-4207-82bf-49ae93a9e716",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8014f8ee-4cb3-4c71-bb1c-76a235082735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f8aff0-128b-46eb-8b2d-ecb246e4114b",
        "cursor": {
          "ref": "1002f01a-7144-4ca3-b0f9-de68e3c3ce46",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "24b060bb-2263-451f-b084-3e6583bcb62f"
        },
        "item": {
          "id": "47f8aff0-128b-46eb-8b2d-ecb246e4114b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "010e7900-6591-457d-8948-6ae6c871f4f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb1933a-d5d8-435b-9011-0bfbb3ef6b1a",
        "cursor": {
          "ref": "adda6764-10dc-4971-990e-0514599b72f2",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f7d17811-7092-4136-a1fc-7d60461d2039"
        },
        "item": {
          "id": "0cb1933a-d5d8-435b-9011-0bfbb3ef6b1a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c6793685-90e5-4fd1-a288-faac3680287d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a681f9b-c1dd-4bf8-9cba-70a8f6dbe491",
        "cursor": {
          "ref": "4c3c893a-0e8b-46e2-9f76-028257f41efe",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2ad1e1df-64a0-4d8b-8ba0-c923d597ad42"
        },
        "item": {
          "id": "4a681f9b-c1dd-4bf8-9cba-70a8f6dbe491",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "dd055f62-e71b-45e7-8448-2b8d9995da7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3c023c-14ed-4f07-8398-63b622b023bd",
        "cursor": {
          "ref": "8a42581f-22f0-491d-8a6f-ec3a4f9d2399",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c714f58c-9984-4a2e-8dd4-a1bf17ed1ad0"
        },
        "item": {
          "id": "1e3c023c-14ed-4f07-8398-63b622b023bd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d7dd1c55-708b-4ecc-a60a-7ff508831add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112938ef-8f61-4c6b-9320-8bfa875e8f66",
        "cursor": {
          "ref": "a3b7b730-ec66-46c0-9b1d-1d9cec136061",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f7737875-bf8e-4535-a440-c5b0030b28fd"
        },
        "item": {
          "id": "112938ef-8f61-4c6b-9320-8bfa875e8f66",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1cd38765-1040-40f8-ba14-7cf52c7d7679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1194aa-dca3-4752-b318-232467706e97",
        "cursor": {
          "ref": "3f8cf738-00a5-426d-9a49-b48b89336fda",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0c69f1ed-798e-4cfd-b3d5-2ae9a7680452"
        },
        "item": {
          "id": "eb1194aa-dca3-4752-b318-232467706e97",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "563162de-bfe2-42a7-b60f-5f0030bc9062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc04c78d-5119-4539-887f-a5b14e177fa9",
        "cursor": {
          "ref": "5d5d3506-0616-4f41-a2f0-be2b75c5bb8a",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f532826c-7d60-4627-b5fb-eae2e1539489"
        },
        "item": {
          "id": "fc04c78d-5119-4539-887f-a5b14e177fa9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cbfe35ad-d1d5-4eb4-8fec-f7c92bd8bf3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e7c00e-b49d-497b-93aa-e6648dc66b6d",
        "cursor": {
          "ref": "0e26a235-2348-40c1-976d-f1aa35293b14",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "63fa26d7-421d-4f2d-9193-90b0e223b0ad"
        },
        "item": {
          "id": "68e7c00e-b49d-497b-93aa-e6648dc66b6d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ee17c622-ef0e-4cfc-9e11-49d3fab40244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cba2352-5ea9-425c-a406-c4729da1b593",
        "cursor": {
          "ref": "e00beac7-d933-4915-8ec4-d14971b86201",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7dce3b68-e0a4-496b-8a9d-828a835c45c5"
        },
        "item": {
          "id": "3cba2352-5ea9-425c-a406-c4729da1b593",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d4ab9243-0079-4909-920e-7230eb3403ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b6780b-cff9-4827-aca2-ab6f84a6380a",
        "cursor": {
          "ref": "06917a23-2ebb-4617-a5a0-86cde04e34cc",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4ae853a9-859f-4eb3-9b01-41c3b32160dd"
        },
        "item": {
          "id": "a7b6780b-cff9-4827-aca2-ab6f84a6380a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d0559bad-b5e0-4f44-8e1f-8e5e2278fe35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b8d72f-e6a7-4e72-a385-22e3ccfba41e",
        "cursor": {
          "ref": "0d2fa650-8ca7-4ce9-812c-554d3a5d7f89",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "83a6481e-20a1-4ca8-9c19-dc793bf460b3"
        },
        "item": {
          "id": "a2b8d72f-e6a7-4e72-a385-22e3ccfba41e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "889e6fa8-b260-486b-b3b6-1b60c90b23fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4054f668-2314-4006-be15-dcf06f9a8d99",
        "cursor": {
          "ref": "226cb1c7-7d64-4b17-b6eb-712a77213d84",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e5532e49-ebc9-4bd8-91ca-401a92f292d2"
        },
        "item": {
          "id": "4054f668-2314-4006-be15-dcf06f9a8d99",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c10b3538-3e1d-4723-bc9d-3f2111bf5cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fe9156-01de-4ec7-a22e-883335d23d08",
        "cursor": {
          "ref": "ca5c5c68-f109-4c8a-8b40-d4f089a71242",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e62751bc-44df-41c3-9111-c666b2346cfe"
        },
        "item": {
          "id": "64fe9156-01de-4ec7-a22e-883335d23d08",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d644a74b-82ec-4528-84c7-10ede46a4d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66f18f9-3d44-4eb4-8a0a-9b88c563d832",
        "cursor": {
          "ref": "1e060598-1f0a-41c4-b767-687513303560",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "eda5bf00-1c40-4070-b1db-4387f63e4e30"
        },
        "item": {
          "id": "a66f18f9-3d44-4eb4-8a0a-9b88c563d832",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3c28000d-af2c-4a17-9c09-bb99080d1abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248c74f4-2cb1-47a7-a0fd-e71f6cd7e98b",
        "cursor": {
          "ref": "7c207298-c3f3-43ab-95ac-b827c6173225",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0fbefffe-0223-491d-a229-e65c02341b6e"
        },
        "item": {
          "id": "248c74f4-2cb1-47a7-a0fd-e71f6cd7e98b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7a970360-2c77-488f-92d0-caf6447ae13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4161a6d-2c6d-43d4-9254-33c371eeda61",
        "cursor": {
          "ref": "d3854dc9-958c-471a-80c8-cdff799889ce",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ae0b99c6-b8dd-4121-9556-e1eb9c70eabf"
        },
        "item": {
          "id": "d4161a6d-2c6d-43d4-9254-33c371eeda61",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "88a234fa-28d0-4ce5-a0d9-5a266ada4126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3314e60b-6c69-44fe-bd72-7101f14c4296",
        "cursor": {
          "ref": "1ef8d15e-8030-46ed-b7bb-340a727bbee7",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f24e70b3-78d8-43c8-a444-e1f72acacf1f"
        },
        "item": {
          "id": "3314e60b-6c69-44fe-bd72-7101f14c4296",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6b6d4cbe-c4a8-4ebe-95a1-2609f5af182a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53dd3826-ec2e-4f16-bee7-1de3e0f06a3d",
        "cursor": {
          "ref": "fda02bd3-24b0-443f-91a5-e192c4aa5f43",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "250f8653-195e-47b6-8a5b-86d4bedd4a36"
        },
        "item": {
          "id": "53dd3826-ec2e-4f16-bee7-1de3e0f06a3d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b76a5349-c17d-4fdf-a9da-34b5d5486c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f1a831-2784-40f1-bce1-a6c5198b7f1d",
        "cursor": {
          "ref": "43e4d236-2999-482b-b6bf-36053bfc3580",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "944f4a47-26e1-479b-b497-d2449cbe7628"
        },
        "item": {
          "id": "a6f1a831-2784-40f1-bce1-a6c5198b7f1d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "04ac5591-dcf3-4314-abce-adad192f61bf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be79f0a7-ddd9-4b10-8350-112b19a4c9ca",
        "cursor": {
          "ref": "a61040e5-7c53-471b-895c-63370f62d471",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6e09606a-9915-4359-8727-ccdc2c0d2c30"
        },
        "item": {
          "id": "be79f0a7-ddd9-4b10-8350-112b19a4c9ca",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "86868837-70f6-4cce-8846-1509895bd43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6840281-5d77-47c6-9dcb-dd4266cc8907",
        "cursor": {
          "ref": "26c1103d-4a62-48f2-8efb-23d36537838f",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "cbe6a588-b1a5-4aad-8769-4b0e1069c2d3"
        },
        "item": {
          "id": "c6840281-5d77-47c6-9dcb-dd4266cc8907",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "832a2b20-d07c-4e5d-ab63-7b6c47991a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fbac50-aef5-427f-9b20-acd01883fd05",
        "cursor": {
          "ref": "db469702-cc1d-4dbe-bd6a-2050f2194c25",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8fbdf9cf-abea-4860-9f1d-397db056fc85"
        },
        "item": {
          "id": "64fbac50-aef5-427f-9b20-acd01883fd05",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4179527a-5dac-464a-8391-14749ef13ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f8cbf39-c265-4818-ad60-542292c75cf1",
        "cursor": {
          "ref": "affde046-bc1d-46ac-9b5e-396d47ca73c8",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "bc9bde03-597f-4ec1-a67f-fd717609ac48"
        },
        "item": {
          "id": "6f8cbf39-c265-4818-ad60-542292c75cf1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4dccf733-4ef3-48e6-914c-3a86cca8287e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764127a2-f165-4959-85bc-3b79f4a788d0",
        "cursor": {
          "ref": "d4a0bd95-8628-4c5d-b0a5-95ba7c027be6",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "efa11419-9d24-4e30-95dd-41f8a141b0d2"
        },
        "item": {
          "id": "764127a2-f165-4959-85bc-3b79f4a788d0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "60210c3f-3ae2-4180-a2f2-5c5b957c3351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fffd2c19-f9f8-4701-a1e6-239e05bdcfba",
        "cursor": {
          "ref": "8d36f894-781b-465a-bc64-047f4cffa299",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e0f06d7a-8c13-49bd-af7d-7c253a4cd82c"
        },
        "item": {
          "id": "fffd2c19-f9f8-4701-a1e6-239e05bdcfba",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "800ea0e8-45e4-4043-b1ad-63817bca92aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e33562-340d-45be-bb81-8f981d8a7fec",
        "cursor": {
          "ref": "e57bb950-ec5c-41b0-9b5a-7f3fd7802d4f",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e8349d06-9a86-49a3-af45-345afa929cc7"
        },
        "item": {
          "id": "b0e33562-340d-45be-bb81-8f981d8a7fec",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "632d222a-f626-457b-9f4a-9d2491dc8b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f1cc70-c978-4c01-8a40-929039bff1b8",
        "cursor": {
          "ref": "109f0e4e-b21b-4573-a47c-e543b3da4a6a",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "55283cc9-8098-4f3f-9c3d-869cea2278b2"
        },
        "item": {
          "id": "72f1cc70-c978-4c01-8a40-929039bff1b8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8a3c018a-0d89-4fa1-982b-b162ce7e5c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9311a5-6a23-48e7-8359-8c4aec894f90",
        "cursor": {
          "ref": "dee543fa-03bc-41e8-a57e-06bc1b015f74",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "43fc72a0-a5b8-4857-aa97-0ca02e3079b9"
        },
        "item": {
          "id": "3c9311a5-6a23-48e7-8359-8c4aec894f90",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "cdf5494d-6463-4c33-9b6e-af63d798cd4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6e414c-a363-472d-ba86-a58c41312519",
        "cursor": {
          "ref": "559d41c2-cc05-40ad-90de-d757145e0a4c",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "08fa87ab-dcd5-44e9-994c-81a7f503d065"
        },
        "item": {
          "id": "ef6e414c-a363-472d-ba86-a58c41312519",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "02f0472f-9f47-4815-b0ca-5b9be50fcf99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff112e69-a1b9-41d4-9cd7-9825bde2a2d7",
        "cursor": {
          "ref": "5e586109-8e9b-49ae-a593-d6bf2bf52d31",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "441ff2ff-81e7-4dcb-a31b-060960d73ddb"
        },
        "item": {
          "id": "ff112e69-a1b9-41d4-9cd7-9825bde2a2d7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "650c7e29-f2b6-4c98-90e2-5e9e921e779d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ea7bb8-c4d7-4557-965c-3ac75793b38c",
        "cursor": {
          "ref": "e3f452be-c991-47b0-93dd-84ba70bb095c",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f79f7a22-6d39-419a-a930-e8cf0ffd0b39"
        },
        "item": {
          "id": "45ea7bb8-c4d7-4557-965c-3ac75793b38c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2d5bc075-3df3-4ccf-8013-4ec71b53304f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eaa31da-bfaf-445c-b1fe-1be4a7379f9a",
        "cursor": {
          "ref": "72eb9c16-2583-4bcf-bcc7-79bd532ffdfa",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8179b26d-50b9-45b3-b653-f2f1a40de49e"
        },
        "item": {
          "id": "6eaa31da-bfaf-445c-b1fe-1be4a7379f9a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3cef8e6d-a78b-4b32-9423-b536b94143ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9c7619-801d-4a44-a3d3-5e04f0ca8750",
        "cursor": {
          "ref": "2bc9cf6d-451d-4a56-b93f-40912b61fd15",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "def62a2b-4047-4012-bd1f-7ab86493fe15"
        },
        "item": {
          "id": "5f9c7619-801d-4a44-a3d3-5e04f0ca8750",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "27f8b9ea-6f39-4bbb-8896-8d41591605f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e119dcb2-256f-44dc-9a41-9db167cfeb4c",
        "cursor": {
          "ref": "c7eff665-7274-4a57-999c-c887494a2cc8",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0fba14c5-1767-484c-a038-c8e04dd76c3d"
        },
        "item": {
          "id": "e119dcb2-256f-44dc-9a41-9db167cfeb4c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "758e589e-af72-47ad-9768-592e79bd3b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5994e2d2-8887-48a5-bcd2-b8129f108ae4",
        "cursor": {
          "ref": "2af3d441-16dc-4d59-a417-59355e3c5586",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9fc4c2a1-680b-4e4f-9f04-a17d243f9c9d"
        },
        "item": {
          "id": "5994e2d2-8887-48a5-bcd2-b8129f108ae4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f7d88eb0-b509-45c8-8edf-98e78da613f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb1c517-b332-498a-8b2f-44ebfd90382b",
        "cursor": {
          "ref": "eb00b6ec-dc80-41b7-9045-d15d170fd72c",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "cc37682b-dd06-45c8-9b6e-8b43d8f18046"
        },
        "item": {
          "id": "0cb1c517-b332-498a-8b2f-44ebfd90382b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b9216461-c5d6-495e-9bba-750d695a85ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "515e91d0-e377-4bb8-9499-ca5a89a96536",
        "cursor": {
          "ref": "f1af0084-5906-401c-8f22-505508bbf4ec",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2a7ec0e4-a2a5-45c4-a0ac-1cce926aca5d"
        },
        "item": {
          "id": "515e91d0-e377-4bb8-9499-ca5a89a96536",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "69dcc97f-3744-4c98-b045-45932700eec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dfd544d-003d-4f06-8079-f4e7fde29f2f",
        "cursor": {
          "ref": "f264a423-bdc0-4cc4-8982-0a7df6f330b4",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c2cf4e8d-fbe9-4aa5-bd37-37d3a056a68d"
        },
        "item": {
          "id": "3dfd544d-003d-4f06-8079-f4e7fde29f2f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "392ccf0a-0ed7-42b9-acc9-2f61552c4464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41843d82-ae96-4093-9593-e98ab801b85f",
        "cursor": {
          "ref": "7d0c59a3-aa4e-445d-a4ff-18650894bf85",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "703feca2-7ec6-4ade-83c7-bdd378416be5"
        },
        "item": {
          "id": "41843d82-ae96-4093-9593-e98ab801b85f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8957e23e-8f52-4100-b236-cfd2ef35966c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8649985-633c-479d-ad40-c52ec930f794",
        "cursor": {
          "ref": "711b1481-16c7-4948-b74e-6810661bceae",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a3770ecd-5564-4aff-aedb-d9dc5a5f5043"
        },
        "item": {
          "id": "d8649985-633c-479d-ad40-c52ec930f794",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7f5a5d1d-e24a-4f45-880f-df16f34be4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac823db-b0b5-4d51-bb98-2cce59d1eef7",
        "cursor": {
          "ref": "0afa30c4-84e1-494f-ac24-1ad3b3e50052",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ff432127-34ea-4990-beaa-a7a9b57191f9"
        },
        "item": {
          "id": "2ac823db-b0b5-4d51-bb98-2cce59d1eef7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6b1d0f27-21df-4bf0-814d-a7660c2273eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449eb50c-63a8-4724-ba7f-fa7f4ade5d88",
        "cursor": {
          "ref": "bfe5012d-63aa-4f3e-96a3-7629660bd0d7",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3fdc10bc-5bed-4b74-a59b-b945f3909044"
        },
        "item": {
          "id": "449eb50c-63a8-4724-ba7f-fa7f4ade5d88",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "dba8ff96-be83-4d97-b5b9-34a48a367ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0596aecd-1af4-4f94-90d0-163ad931c1b5",
        "cursor": {
          "ref": "8aa19486-9d82-4680-9905-23d8bf5321bb",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "bece8784-5182-4431-b985-556e725d6d42"
        },
        "item": {
          "id": "0596aecd-1af4-4f94-90d0-163ad931c1b5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4d1f5648-1e56-4d31-9dfd-db5e032f5248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9d6a8a-d845-4653-a2f1-2b065f08053f",
        "cursor": {
          "ref": "9035cab7-9b64-442b-a830-e9466d8b8f23",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5f5eca62-5723-4994-ae41-cb46923553ad"
        },
        "item": {
          "id": "ac9d6a8a-d845-4653-a2f1-2b065f08053f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b39fad4e-ede3-486b-8850-3aab1e267272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12fe378-e9ce-4023-96ed-db4ae2fee7ae",
        "cursor": {
          "ref": "52c312a6-6cec-40b1-9ff7-9243aac805ef",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "67185e3b-1458-42e4-a65e-a6a15e9d8b75"
        },
        "item": {
          "id": "e12fe378-e9ce-4023-96ed-db4ae2fee7ae",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d00d27bc-cf17-4838-a9e4-c98e006b63a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b00ae4f-b432-4470-bf17-3be10d31013b",
        "cursor": {
          "ref": "968a8406-a1b5-48ca-92e0-3e1c7d43c945",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3d3323e1-0146-480f-b580-1cbed9c4859f"
        },
        "item": {
          "id": "0b00ae4f-b432-4470-bf17-3be10d31013b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ca93c088-d3e7-485d-9b98-f153d2246624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71d8890-04a4-4802-ad56-af8be26edc7e",
        "cursor": {
          "ref": "a03a4013-565b-448b-9dc5-ff9e57571c4f",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b8d9e25b-6ca8-4025-a71b-eba0afe09048"
        },
        "item": {
          "id": "d71d8890-04a4-4802-ad56-af8be26edc7e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6ebcd491-6f1a-4bf6-bead-bbf7a31faec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282b5e4d-a49d-408e-8368-7e23032901cd",
        "cursor": {
          "ref": "3eb0ce13-9952-484e-95ad-ccc73f110598",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9b7041a5-2f3a-4cdd-b2b1-10f58ce0c11a"
        },
        "item": {
          "id": "282b5e4d-a49d-408e-8368-7e23032901cd",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "54fd6bce-7690-492d-9fed-1ab684b05aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1811eda9-72e1-48aa-931f-52294858fae7",
        "cursor": {
          "ref": "590c8824-cd0a-45a2-9da7-350ec78dbdca",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "93e3a4cb-4eeb-43f6-bc7d-d25dfedf6cd8"
        },
        "item": {
          "id": "1811eda9-72e1-48aa-931f-52294858fae7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3e2509e3-af0b-43d7-9331-60c103216273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53048414-ae01-474d-be13-8e126590780e",
        "cursor": {
          "ref": "ae6bcbcf-fb21-420d-ae53-1354661704ec",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "eaf37da9-c9c3-4337-9561-9a91ad2e7649"
        },
        "item": {
          "id": "53048414-ae01-474d-be13-8e126590780e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "81dbe91d-ed6b-46ec-b986-87428cb011f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f116dd58-9ef3-46e7-8190-cb05b646fea3",
        "cursor": {
          "ref": "47d8aea6-c16b-4cfe-a448-de4621845056",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "904d53c4-8d71-45b2-9bfb-fd1353cc4cf4"
        },
        "item": {
          "id": "f116dd58-9ef3-46e7-8190-cb05b646fea3",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "efbd89f7-0614-41d3-87db-d09496479896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0656740-25b7-44fd-87b2-f78194d6a738",
        "cursor": {
          "ref": "99086973-8899-49c8-9a3b-e695350efe46",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ec79afe0-da67-4eee-b569-c209f68510ee"
        },
        "item": {
          "id": "e0656740-25b7-44fd-87b2-f78194d6a738",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7cee3193-a47f-42b6-96c1-57fde0eeaae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0699b45-a096-4060-9f5e-548c66eac66e",
        "cursor": {
          "ref": "9b7b4bce-9332-45e3-9f8d-8789bc0cb1b1",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "82b5bd30-26b7-429e-88e7-8c8775217094"
        },
        "item": {
          "id": "f0699b45-a096-4060-9f5e-548c66eac66e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "47fe2508-213e-45d3-b8c3-30ab1e3e8bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a7305a9-7643-4fd8-afd7-e467f4ab1649",
        "cursor": {
          "ref": "5dc0cc26-84e6-4a11-bdb2-b5bd0266485e",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "82d4e633-18a2-412b-8c30-0fae842c9564"
        },
        "item": {
          "id": "3a7305a9-7643-4fd8-afd7-e467f4ab1649",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a63ded32-e29b-4ca8-b0d8-5704556dab53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e383d6-aa14-4f74-87e5-1662365fc730",
        "cursor": {
          "ref": "8dfc18b7-9ae5-4222-9044-56ef05e97620",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f91d15eb-0733-46b1-bc87-477135d45355"
        },
        "item": {
          "id": "02e383d6-aa14-4f74-87e5-1662365fc730",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4662c832-b037-4448-9a9e-815f9bbaf87e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b148bed-842b-43b0-9fdc-f45d11745352",
        "cursor": {
          "ref": "c9d93caa-2c77-43c7-b15a-39e5fa0aea14",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3c38917a-3b7f-4e5f-8dba-363c0a2c2120"
        },
        "item": {
          "id": "8b148bed-842b-43b0-9fdc-f45d11745352",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8d065fdf-e6a8-4522-8eba-1a4afa8332b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a211ac6-72fc-4f8e-b6ac-9d83bb5e6629",
        "cursor": {
          "ref": "f20f67e4-a9c1-4a54-be88-993c8a74dfc0",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ac3a8ee2-7a19-4d6b-ac39-8b9ffb7a4a3f"
        },
        "item": {
          "id": "4a211ac6-72fc-4f8e-b6ac-9d83bb5e6629",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0f362776-859d-4c22-a9a9-06749112b4bf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85390709-7644-4ca0-9869-cf85b1063e18",
        "cursor": {
          "ref": "d8a3cff7-7ed3-497d-81c0-d6fb04905ff7",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d43ed2af-b775-4344-aad4-be390b0091a9"
        },
        "item": {
          "id": "85390709-7644-4ca0-9869-cf85b1063e18",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "893bdf08-4f15-4c21-9d91-ee83eb72b898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c97c9d9-edeb-4d8a-9b96-d1876dcdabc3",
        "cursor": {
          "ref": "3ac5e05b-3d02-465b-8194-898f0b39d313",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "938191c8-7c4f-4d86-8e83-2d9f6e1fb80c"
        },
        "item": {
          "id": "7c97c9d9-edeb-4d8a-9b96-d1876dcdabc3",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b8283aa7-d1cc-4302-ad6d-7b11024a98b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b3b6e9c-4ff5-4b03-9e47-5fa509f18d5e",
        "cursor": {
          "ref": "b9c8567e-9e80-4192-a7fd-8b6f1ad4fbf5",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "93d677a5-a35b-4b55-b468-94dd0a2dea3e"
        },
        "item": {
          "id": "8b3b6e9c-4ff5-4b03-9e47-5fa509f18d5e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3e65a4c2-3672-4c6c-b811-bc7ed7f88c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba84a90-199f-42d8-bdf8-709dcdc64bd5",
        "cursor": {
          "ref": "05292d08-a374-4e62-a262-8849a54ce7e8",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ffefdcfc-25e8-41ae-a323-13524dcabffa"
        },
        "item": {
          "id": "3ba84a90-199f-42d8-bdf8-709dcdc64bd5",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "80b858a9-35cc-4f99-b2d3-4b6986dfac7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7681050-f35d-40ec-8d0f-d4b2a18a8071",
        "cursor": {
          "ref": "2fc58493-e9b4-4369-a8c8-8d3f0b7eab0d",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "0c0f6885-d072-4cb4-a35c-b64216a21b11"
        },
        "item": {
          "id": "e7681050-f35d-40ec-8d0f-d4b2a18a8071",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4edea955-e9df-4192-afa0-8e95d66dc1ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1ed579-62cd-470b-9b0d-9655aef5de4e",
        "cursor": {
          "ref": "10ac6cf1-233d-4b41-ad7b-45abf0d5118f",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "76d493dc-e7ef-4721-82f6-732074866741"
        },
        "item": {
          "id": "db1ed579-62cd-470b-9b0d-9655aef5de4e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b12259ac-f994-4d54-a82d-4e2cc8a89dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af593ff4-802f-40a3-a018-faf084612fdb",
        "cursor": {
          "ref": "8bb1191f-04c7-459e-a018-ca65933e28c2",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6be5e41e-7759-4f6f-9531-e1536bdc00d0"
        },
        "item": {
          "id": "af593ff4-802f-40a3-a018-faf084612fdb",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a465b3c5-9dbd-4a26-92be-ad5a2b91666f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d110b5e-0466-4a01-b9ca-4f3776f4cef7",
        "cursor": {
          "ref": "32206b5c-e799-438b-9023-830736df8502",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "333b8797-c8b6-4c56-9af4-4d2903feee53"
        },
        "item": {
          "id": "7d110b5e-0466-4a01-b9ca-4f3776f4cef7",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9e70047b-3020-4fed-8d4e-d51fbd78ec08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cecf0fc-f35d-4572-a3a5-dd6b10e63a6b",
        "cursor": {
          "ref": "22a0d042-6571-4f51-9fe2-70e84758c6eb",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d8155808-5baa-4758-995f-3a475270b68c"
        },
        "item": {
          "id": "3cecf0fc-f35d-4572-a3a5-dd6b10e63a6b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "49a7e961-52e2-4fb2-9723-5cd32b9a256e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9d032c-e829-4d38-bf4b-8d07045c3373",
        "cursor": {
          "ref": "eb20c5ef-7a01-4a01-adfd-040b6c7db90c",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "154266ed-8652-4d7a-bb95-992d48d91425"
        },
        "item": {
          "id": "7e9d032c-e829-4d38-bf4b-8d07045c3373",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3035033c-b86c-48fa-a8d8-6148546172dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38cd2204-c69b-453b-9cee-222d1db542d4",
        "cursor": {
          "ref": "4c1f47c5-52bb-4184-8148-4a8b93f20566",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "42267368-acda-40b5-9a5f-5fb5ba196643"
        },
        "item": {
          "id": "38cd2204-c69b-453b-9cee-222d1db542d4",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c3d82370-774a-4472-96b6-576e08a98222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b2e157-0cbe-482c-812b-26023a3dc813",
        "cursor": {
          "ref": "c4e3f35c-ce8c-4f81-bfa9-fa387298da01",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0da4bbea-2e17-4430-aca4-a2433869af60"
        },
        "item": {
          "id": "90b2e157-0cbe-482c-812b-26023a3dc813",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e0d09737-7929-4087-90fd-8326403f4bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9275f8d-6b3b-4681-a5ee-6ee57a283db7",
        "cursor": {
          "ref": "021ddffe-d2e4-4524-8c17-496c12117e13",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9867cc63-43cf-4878-bbb2-6298503def4b"
        },
        "item": {
          "id": "c9275f8d-6b3b-4681-a5ee-6ee57a283db7",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b19fed3f-5042-45d4-95aa-950259daeb41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf71ced-6b21-4664-9b1b-8c674974dece",
        "cursor": {
          "ref": "b8d004f4-7a55-496a-854c-d698756f8c6b",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5515390c-4ab8-40aa-86a8-9a2682f1f80a"
        },
        "item": {
          "id": "6cf71ced-6b21-4664-9b1b-8c674974dece",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6a3e546b-087c-421a-ae6f-efdb18eccc9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e270fd5b-d3e1-4ef2-bc3f-3e723dde0860",
        "cursor": {
          "ref": "3e6adf04-2b28-4112-b1cc-62a8ff521147",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "826bcf3f-6ddd-4b60-8b40-fa0d4dbe5b58"
        },
        "item": {
          "id": "e270fd5b-d3e1-4ef2-bc3f-3e723dde0860",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "320b126d-2418-49a0-9c8d-5a0f6d6abc15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3787406c-1e00-4098-9d3e-94e6da30538f",
        "cursor": {
          "ref": "2af6292f-5a23-4dcc-b612-49a141665d63",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "994c4f5a-4b40-4564-bec3-a794255cdd3b"
        },
        "item": {
          "id": "3787406c-1e00-4098-9d3e-94e6da30538f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "dc3aad1d-4091-4b7a-9559-43c6b24abd00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583edb56-ac74-4ad2-8f0e-662f15207f75",
        "cursor": {
          "ref": "759b90b1-95d2-46ff-a8ec-f2eff0631710",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1710142a-cc9f-413f-8227-c9a5ea2280ae"
        },
        "item": {
          "id": "583edb56-ac74-4ad2-8f0e-662f15207f75",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e1be673b-856b-4272-955c-84bda67acb2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e0c911-eb89-4a28-994b-6ea3fcd398a1",
        "cursor": {
          "ref": "82fe5477-2ca2-4132-be6a-aa2775c71b9b",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "067d564d-56d0-4ada-9d01-25bcc773ed3a"
        },
        "item": {
          "id": "44e0c911-eb89-4a28-994b-6ea3fcd398a1",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "aab919cb-3e11-4aa8-a54d-5e10ccce228a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa88db5-d871-4d01-b52f-4b375030a792",
        "cursor": {
          "ref": "be090b89-6622-4482-88fd-203d66e764aa",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0ec69c0e-cd77-4684-8dc2-60e5b6d78172"
        },
        "item": {
          "id": "bfa88db5-d871-4d01-b52f-4b375030a792",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "96ce93cf-e9d9-4340-ba12-fd69bf117aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0771359d-060b-435c-beed-3b74170e8efc",
        "cursor": {
          "ref": "8fe1dbb3-ca8a-4f17-bc41-93305051a838",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7c8aeb60-0a10-433b-94a1-9b4b151091d5"
        },
        "item": {
          "id": "0771359d-060b-435c-beed-3b74170e8efc",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7f6883a2-3fa7-4e38-9563-7fb4a0d95ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0ec02e-a5c3-4f3e-882e-f1da28799e63",
        "cursor": {
          "ref": "dc581bf7-2c4a-4282-85b8-8f79a335df67",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a84c4e5c-9e90-46bf-87c6-781453d4e51c"
        },
        "item": {
          "id": "4e0ec02e-a5c3-4f3e-882e-f1da28799e63",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ceb25d13-9d8c-4ca3-9912-8c0b11de22fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a31a2b94-d1bf-4b51-8269-d45869f6feb6",
        "cursor": {
          "ref": "49e6ba70-301c-4d98-9b9e-439f87951226",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a9647a9d-4da6-438c-a227-d57854d60587"
        },
        "item": {
          "id": "a31a2b94-d1bf-4b51-8269-d45869f6feb6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "6323605a-2f39-40cb-b198-4a6a02231f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbebc30-d727-48cf-baf6-73d33e5fba7e",
        "cursor": {
          "ref": "81290f60-322b-4f72-8cb8-eb9f77c6d64f",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1f5acdd1-290c-4606-9030-444c253a1539"
        },
        "item": {
          "id": "7cbebc30-d727-48cf-baf6-73d33e5fba7e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "73f921b7-6b28-4db4-b57d-792292f1e383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8dfd60-fc23-47de-9e89-38f06aef11da",
        "cursor": {
          "ref": "33f1505f-5c1b-4635-b00e-852a1ee7f9d9",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d430a4cd-b610-4fb0-945c-f31c99d896d9"
        },
        "item": {
          "id": "ad8dfd60-fc23-47de-9e89-38f06aef11da",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e7b29b93-d317-4f43-b58a-182601ac4a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 140,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd46df5-bc5d-4e86-bb1c-f80c4d299ee2",
        "cursor": {
          "ref": "acd624d3-7e6d-474a-8e62-30a015d2a2f1",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d94ca81b-bef0-4e3a-81a1-da7a9a3737b7"
        },
        "item": {
          "id": "dfd46df5-bc5d-4e86-bb1c-f80c4d299ee2",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6c6f676b-dfc3-456d-bfae-9b97d81d5085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c08083-8afd-40f5-9f06-822dd21eab2a",
        "cursor": {
          "ref": "9e30e759-dca0-4b1b-8649-428cd03bec3c",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "dd29fff1-beb6-4771-9ac9-0042bb3b2236"
        },
        "item": {
          "id": "82c08083-8afd-40f5-9f06-822dd21eab2a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5719743a-8633-47a3-9f82-6b619530fdec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc9187e-c47e-4d50-a0b6-783b8ca96d67",
        "cursor": {
          "ref": "f021c967-96c3-4266-9e45-3a9d42abfe09",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "682aebae-3b3d-4f5a-87c5-4f8174408723"
        },
        "item": {
          "id": "1fc9187e-c47e-4d50-a0b6-783b8ca96d67",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8fdad3b7-15f5-41f1-957a-0bed6d13c175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3ad339-3b85-4866-ad42-b26368324664",
        "cursor": {
          "ref": "7e43ddcd-7217-4420-ac14-a1b7528f4c12",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "49247940-d59e-4b31-b576-b2bc7a817d31"
        },
        "item": {
          "id": "6d3ad339-3b85-4866-ad42-b26368324664",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7280520a-c312-4a0f-bc10-6de33111283b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4b9bdd-6ab0-40f6-9626-39ba1a1ce4ca",
        "cursor": {
          "ref": "b13c96ab-6ff6-44da-93af-fba309c92468",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6145c217-55d9-4fa5-a098-2ebd30a1556d"
        },
        "item": {
          "id": "eb4b9bdd-6ab0-40f6-9626-39ba1a1ce4ca",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "189c210c-a0ca-4bca-9923-158c0a33168e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047e8673-bd20-4daa-9fef-c85100ff7347",
        "cursor": {
          "ref": "dc0d8e85-d68b-4aab-a7e4-f70dd0b74ce1",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "584859c6-2ecc-47b4-be36-6c41b36befad"
        },
        "item": {
          "id": "047e8673-bd20-4daa-9fef-c85100ff7347",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6284a499-5560-47dd-8bb8-1dad2297d384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e319c4e5-8dbb-4d45-95f2-56e2ba937136",
        "cursor": {
          "ref": "13e25ae6-ef1a-4322-84fd-8769c77e8e4b",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "04cc796e-5cc7-4832-96ed-10d041f001ba"
        },
        "item": {
          "id": "e319c4e5-8dbb-4d45-95f2-56e2ba937136",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b9f37e8e-8a98-4441-946b-3c28a4225c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a118c957-d417-417f-836a-890452431b21",
        "cursor": {
          "ref": "cce4e760-219a-4590-8b7c-587311b8ab71",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "46a97a30-6c3c-4bc0-9708-091a2303303d"
        },
        "item": {
          "id": "a118c957-d417-417f-836a-890452431b21",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6853b08c-cf37-4be5-b25e-494fa23b7f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48466423-e64b-4c0a-9eff-8a058191ebcf",
        "cursor": {
          "ref": "536a2c49-2552-4b59-b015-d232dbb7e3e7",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ddf697ab-99b7-49a8-b981-fdba3848bfa7"
        },
        "item": {
          "id": "48466423-e64b-4c0a-9eff-8a058191ebcf",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d8e9cd5a-2535-4c37-a6e3-b3b5e6aeb5cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2da1940-517f-4d5d-9375-5dce2573485f",
        "cursor": {
          "ref": "5b3c8992-d1e1-4676-8f6f-4e61afec8abf",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "63ec5897-48cc-4036-b3e8-a0741638af48"
        },
        "item": {
          "id": "b2da1940-517f-4d5d-9375-5dce2573485f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7ea2192b-1dc9-4caa-9905-3bfb3190306d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cceb972c-7895-4353-bbf7-d9ff98f94c55",
        "cursor": {
          "ref": "69059600-d5dc-44ff-94c2-9303a895e2e9",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "46a016b0-4d88-4374-8671-5a59721540e7"
        },
        "item": {
          "id": "cceb972c-7895-4353-bbf7-d9ff98f94c55",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "506f0bdf-5597-4387-8230-2ff5090973a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af8e757-8bf2-4556-9062-7b78e7d35370",
        "cursor": {
          "ref": "ab268f51-87dd-439b-9276-7189d557368d",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "69834d3f-45aa-4d0b-bf8a-950830b6958a"
        },
        "item": {
          "id": "5af8e757-8bf2-4556-9062-7b78e7d35370",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "cf4bca26-815a-41c1-bccb-e1a761e7d16e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac752118-bb4f-4352-bf12-d81897c5a5b6",
        "cursor": {
          "ref": "a1cd65e6-05bd-4a26-9159-a98e0951b547",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "54e360e5-05e2-4d1b-8c3f-dfc8b84a1804"
        },
        "item": {
          "id": "ac752118-bb4f-4352-bf12-d81897c5a5b6",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "882a534d-6fc4-4a80-a84e-2c01ff590a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f52d1a-8eac-4d2b-8d57-63192800da78",
        "cursor": {
          "ref": "5496e163-9c7c-4e61-84db-13d4471747a7",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3f54a1f0-8226-46b8-a7a8-13769c48a44f"
        },
        "item": {
          "id": "d7f52d1a-8eac-4d2b-8d57-63192800da78",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "23a61e32-10a4-4f27-84f8-9fba8e86c0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "932d664c-e69d-4f75-aa8f-28fec2dcaaaf",
        "cursor": {
          "ref": "4cb99ff5-c9a1-4022-8f30-ea54009f43cd",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "83dd727a-be36-420e-b77f-ff1eba706cc9"
        },
        "item": {
          "id": "932d664c-e69d-4f75-aa8f-28fec2dcaaaf",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4154735c-a592-444a-a6e4-0777bee32b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7168109d-133f-4f2c-9046-d15535fc6909",
        "cursor": {
          "ref": "95650e0d-8516-48eb-888c-7b48c9e1581b",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "210c7dac-2a86-4526-a3f3-b3807266658d"
        },
        "item": {
          "id": "7168109d-133f-4f2c-9046-d15535fc6909",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5b0434c8-c5bb-4ca4-aa93-a8ec52cf3465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e6a1d1-018e-43ff-a42b-087031a3be5b",
        "cursor": {
          "ref": "99b3cd5c-1732-41f5-92f4-f0a0fd6124f7",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1b9978b6-4e58-4b5a-82dd-277d6cb61e4e"
        },
        "item": {
          "id": "02e6a1d1-018e-43ff-a42b-087031a3be5b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7c2b6c56-3f93-49be-aa59-2948708cc85e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36536df0-78c6-4f10-90f0-cdccfe58f9ba",
        "cursor": {
          "ref": "e35a4d77-e31c-46a2-9077-2d7d4e6947e9",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3fc4d726-8c12-430c-b9d9-b0c76ac16837"
        },
        "item": {
          "id": "36536df0-78c6-4f10-90f0-cdccfe58f9ba",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f8a58265-afa2-46b5-8002-196ad19dc6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b955cda3-1621-4a12-af7f-67a462a8500b",
        "cursor": {
          "ref": "08165f20-c8e9-4ada-b03f-92419dcba72e",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3cc4f877-e60d-4aab-98d8-0f834c0e6fe3"
        },
        "item": {
          "id": "b955cda3-1621-4a12-af7f-67a462a8500b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ecf651a3-af8f-422d-bcec-3de3a9166c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67fc7934-bd47-47f9-b30d-030b5b3a0877",
        "cursor": {
          "ref": "c5b3c9e9-8ffd-45fb-8161-dd1a15e89e2e",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f67f5176-2900-4577-82dd-2f488801c9d6"
        },
        "item": {
          "id": "67fc7934-bd47-47f9-b30d-030b5b3a0877",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0c4af0d3-296f-4db2-8bf1-1b8ae5a25df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15d6a90-6b4d-4903-ae43-8ee264f77774",
        "cursor": {
          "ref": "98e75980-ed82-4475-a9b2-06a504362d70",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c64d0e12-3c08-438d-a3ed-1d36870b5f9f"
        },
        "item": {
          "id": "e15d6a90-6b4d-4903-ae43-8ee264f77774",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7a19a9e5-fa24-479a-bd75-99e9952a50fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794e8308-04ca-4b14-8e26-6f72f8092751",
        "cursor": {
          "ref": "bb6b9494-f57a-4c5b-850a-7c0bd28e3225",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "07522a65-de2f-44a8-b848-76955c2067ef"
        },
        "item": {
          "id": "794e8308-04ca-4b14-8e26-6f72f8092751",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "96522a1f-a0d0-4789-b22d-522aa7c40e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2886b3b1-5241-4b4c-b2a1-a3d3aad8ae14",
        "cursor": {
          "ref": "442426ff-8a27-4953-8460-a6e1d0d3f5bb",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "259d04ac-6027-4c7c-ad9f-1808d96db1aa"
        },
        "item": {
          "id": "2886b3b1-5241-4b4c-b2a1-a3d3aad8ae14",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "497696bc-be7f-4d2f-af80-0b878a94ee4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e31547-7d33-4d39-8095-cdb5cf187309",
        "cursor": {
          "ref": "b4171363-645f-4437-870d-8a02c8db57c5",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5d9b0ae1-a3fc-4174-a546-57357e2361f5"
        },
        "item": {
          "id": "63e31547-7d33-4d39-8095-cdb5cf187309",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a01f1c60-11e3-4bf6-babc-328d0d21d4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa062336-1644-4658-a64e-831f5235b478",
        "cursor": {
          "ref": "4ebdc48f-945c-4515-b35b-0554dbf8daf0",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e1501b04-ad89-4add-bd6d-8d4b23f9435d"
        },
        "item": {
          "id": "aa062336-1644-4658-a64e-831f5235b478",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "682d16a6-4c5e-482c-968b-979e688c2f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f026ca54-92ba-441e-ae57-36024b22450d",
        "cursor": {
          "ref": "ae1adfdc-740d-4b5a-9818-35e5074de278",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "906b50db-ce91-476a-a303-795dac33d0a1"
        },
        "item": {
          "id": "f026ca54-92ba-441e-ae57-36024b22450d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "35f10cf2-01b0-4bcc-9619-b3a5c7e726b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff15e2aa-7c74-4a2d-a0a0-745c58e173b0",
        "cursor": {
          "ref": "4584ff90-7cfd-40d6-b94f-c120c4d6f482",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "dcf30bda-259b-407c-b884-cecaae25fd2d"
        },
        "item": {
          "id": "ff15e2aa-7c74-4a2d-a0a0-745c58e173b0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "fe7c2cfe-e950-41b9-9638-5532ebcef7c0",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "61246fbf-53bb-4b56-86be-be8aa10c2d66",
        "cursor": {
          "ref": "f60acacc-62fe-4397-86a1-ee1c98734c4e",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b8db51a4-85f2-4f5a-922b-16fcb0999f1f"
        },
        "item": {
          "id": "61246fbf-53bb-4b56-86be-be8aa10c2d66",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ca4c790b-d669-47c7-a6f0-095372328448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cfc5b9d-cde3-4240-ae62-bf3cf2cb27b6",
        "cursor": {
          "ref": "8e8a23a0-7ce8-4819-b08d-ad6757f3a829",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d92f3ffa-33d7-4119-88f9-35eef93a17ce"
        },
        "item": {
          "id": "5cfc5b9d-cde3-4240-ae62-bf3cf2cb27b6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8c95e9e8-0769-43b5-8293-20a982ba6154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7036f325-a038-4400-9ad1-74fd706654bd",
        "cursor": {
          "ref": "e7c09e54-b954-40c1-938c-a5c3be86b092",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "823c2610-dd0f-45bf-aded-d3776b02bce4"
        },
        "item": {
          "id": "7036f325-a038-4400-9ad1-74fd706654bd",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "04885b28-bbeb-486d-91f8-10026fa45558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4065566d-5952-4487-b247-fb5d6f8d53bd",
        "cursor": {
          "ref": "91d0cb60-74db-42a0-80a4-d71b01e31ef3",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "813812da-d827-4cc5-a6c7-ee665227dd62"
        },
        "item": {
          "id": "4065566d-5952-4487-b247-fb5d6f8d53bd",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "628b9378-a1e1-4c8b-99ab-86bc3375f30b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc64cb3-2bc6-4f46-a421-c72bfc62e421",
        "cursor": {
          "ref": "e184f482-3d51-41a4-9ff8-5dccf7a6e12f",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "bd9cdf84-fd00-4afb-9ff4-8f8957bef786"
        },
        "item": {
          "id": "8cc64cb3-2bc6-4f46-a421-c72bfc62e421",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "bb4bef63-08d0-485d-83fc-46bab8dea647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87d9095-05f4-445b-8f69-3b951cd89339",
        "cursor": {
          "ref": "0d477531-e07f-4866-96f6-8f66af57e637",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "29cc2959-ea8a-4c88-8449-a7bcb41bce37"
        },
        "item": {
          "id": "b87d9095-05f4-445b-8f69-3b951cd89339",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8e36aca6-a2e5-4908-89f1-a13b68a6dd0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72706b59-6c08-4e7a-be36-7dbd6582609f",
        "cursor": {
          "ref": "b9fd5efa-bba8-4d32-990d-49447922f720",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "cb7f7270-8a2e-4276-8755-a0b2694298a1"
        },
        "item": {
          "id": "72706b59-6c08-4e7a-be36-7dbd6582609f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7ead43b2-a7e7-4a7d-ab40-93b233cfec6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c24072e-2b55-4ebd-b0b7-af4972cdc422",
        "cursor": {
          "ref": "f16202f2-65ec-49b8-bb21-334d024aa08c",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "455993cd-6cdc-492b-a43c-5482a2db31ce"
        },
        "item": {
          "id": "0c24072e-2b55-4ebd-b0b7-af4972cdc422",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "2f89c801-4e22-47e7-ba29-dc7b56cab055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88aea74-0d3d-4875-84d6-eaed93fbe06e",
        "cursor": {
          "ref": "7d56b23d-d8a7-4490-99f3-9c6442ed25f1",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6fca7307-6349-4cad-a5ca-097e5a28d949"
        },
        "item": {
          "id": "b88aea74-0d3d-4875-84d6-eaed93fbe06e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "322a11bc-4638-453d-bc85-a2071a27e946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541fb16d-f1a7-4469-8be1-349dacad027d",
        "cursor": {
          "ref": "dd7dd1a6-427c-4add-b15e-0e9abff4c019",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2605753b-a5e1-488a-9f03-36ebf5431c5f"
        },
        "item": {
          "id": "541fb16d-f1a7-4469-8be1-349dacad027d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "bc938ec6-0d92-4669-870b-4e24b3153f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fefc6bac-4ff3-4257-9562-9caf80bd60ba",
        "cursor": {
          "ref": "b5998e5f-7adc-47a7-a26e-e62a02b2446e",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "50bb5470-c3c9-4c55-8153-c91b1a1a8faa"
        },
        "item": {
          "id": "fefc6bac-4ff3-4257-9562-9caf80bd60ba",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "50514fb9-4284-4183-9b2c-57081c0036e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf8c689b-21e5-44c7-8354-9941794c38eb",
        "cursor": {
          "ref": "6d110362-70ec-4280-ad44-18fc58650a80",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "fd4145a3-6c85-4289-99d7-7bc489540e4a"
        },
        "item": {
          "id": "cf8c689b-21e5-44c7-8354-9941794c38eb",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1ef13c44-5891-4bb8-9f0d-7ff72f5ab99b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff182c9-8f6e-4a69-9f1c-50581be6d93a",
        "cursor": {
          "ref": "60023cd1-8aab-405c-a9b3-f1895df93bb3",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a120e95a-e748-46ab-a363-eaa8703df5a2"
        },
        "item": {
          "id": "eff182c9-8f6e-4a69-9f1c-50581be6d93a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "42cdccd5-798c-4d5c-a9d0-1eb54e5cebe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46cbb63-cc48-4fcd-b4cf-c04d9a1c26c4",
        "cursor": {
          "ref": "84fc0ba6-ce8c-406e-aac5-11656cf8e23f",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "95c9ac97-07a3-44c9-a0a5-cd58ad716e85"
        },
        "item": {
          "id": "d46cbb63-cc48-4fcd-b4cf-c04d9a1c26c4",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a5ab17a0-b690-4102-a75e-5bcb80f1954d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20d7199-a2ae-4c70-9a31-5cde38eb089d",
        "cursor": {
          "ref": "8c2efa2d-8656-493e-9bfa-361859c56f6b",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6ed0aa4b-96ec-4b24-b6fb-d0e698e8630e"
        },
        "item": {
          "id": "c20d7199-a2ae-4c70-9a31-5cde38eb089d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7b35deb8-049c-41f6-a1da-a8059cacee93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0d7c7e-ab67-4c69-bf1c-0a21d5f7a89e",
        "cursor": {
          "ref": "b7118d9f-5f6d-468b-ae6a-1dbea7e8018c",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "690db133-2351-45ab-b630-8261bf100816"
        },
        "item": {
          "id": "1a0d7c7e-ab67-4c69-bf1c-0a21d5f7a89e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "184728be-5792-4206-aed6-e005e4753099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b02f1606-83e6-47cc-bc36-fadfcc1a0836",
        "cursor": {
          "ref": "380061a1-655c-4f75-a98e-3af103339aa5",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "722ede20-61d3-416b-88a9-da475ceb08ee"
        },
        "item": {
          "id": "b02f1606-83e6-47cc-bc36-fadfcc1a0836",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6ceabb4b-aa00-49b9-8a72-9c128d79a7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6fab35-d72f-49c9-b6d3-b477bebf5da6",
        "cursor": {
          "ref": "2a10744e-a0e9-4355-9d11-6bac003f6202",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9ee83c23-c802-460f-8cac-b04b2f212221"
        },
        "item": {
          "id": "bf6fab35-d72f-49c9-b6d3-b477bebf5da6",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "75e2b2b7-3368-4b2d-8f3c-e8be7b00fa21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e0a0f1-ed61-4bac-82e6-5c94f6bbc4f1",
        "cursor": {
          "ref": "275be2f4-3adf-4724-8493-feba42857ae3",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2bb20fca-4b4c-4ebc-936a-a667c5d9a638"
        },
        "item": {
          "id": "31e0a0f1-ed61-4bac-82e6-5c94f6bbc4f1",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5ebedeaa-8f9e-4cd9-9703-fb10e7fce9b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3240f01c-af70-4b1a-a309-699b1930c319",
        "cursor": {
          "ref": "fd322d3d-801f-49e7-aef4-cd3c3b120976",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b1c187f0-f4fa-48c6-af97-91f6deb2885f"
        },
        "item": {
          "id": "3240f01c-af70-4b1a-a309-699b1930c319",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "068fd2aa-2c55-4324-aa34-381de5cb18b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4353e4c-7fd4-483b-9480-f6e3ed9583eb",
        "cursor": {
          "ref": "f21ed95f-f428-404e-9f12-dcba63a3187e",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "2e30a9b6-b8be-4d4f-8664-58ac51250ccb"
        },
        "item": {
          "id": "e4353e4c-7fd4-483b-9480-f6e3ed9583eb",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "bf036887-df85-420d-a9f3-be76b0195281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2473de86-9457-4527-a8d7-027841a64f99",
        "cursor": {
          "ref": "6ccda2d7-56ca-49a6-b5ff-390af4365e9a",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "72e6dee7-467d-4c97-9042-ae36a6c3554a"
        },
        "item": {
          "id": "2473de86-9457-4527-a8d7-027841a64f99",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2fd0a86d-70c9-471e-ba55-dd270fc5d665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf22eeb-67e2-497a-a896-7917f1775bb7",
        "cursor": {
          "ref": "69619cc7-dbb3-42e0-829b-6bdb923a2915",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "1d36b5af-671b-43a1-bd23-76ee9f2031f5"
        },
        "item": {
          "id": "6bf22eeb-67e2-497a-a896-7917f1775bb7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d6d68925-c9a2-4313-ac50-c0a81b7d83a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242d7b84-76ad-4e56-9504-bf77e214a1b0",
        "cursor": {
          "ref": "869931d1-19d2-4dd4-b17d-e37a2fbdda45",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "c503a7ac-b31e-4232-9dbe-62fda10c6bfb"
        },
        "item": {
          "id": "242d7b84-76ad-4e56-9504-bf77e214a1b0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "024f9280-3b02-45b7-ade5-3887a0d3b5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b27f1df-1b88-43a7-a1af-01de72cffa7f",
        "cursor": {
          "ref": "1881c898-b584-4410-a1cb-5d9026f5818a",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "ff6e7021-592a-4234-81c5-609b0c8c4ff7"
        },
        "item": {
          "id": "7b27f1df-1b88-43a7-a1af-01de72cffa7f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ba0a67b6-5eab-4703-b0d2-510605d982c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7893f83f-0bfd-4611-b0a1-909b32614589",
        "cursor": {
          "ref": "496f3ca1-c865-40d4-b1dd-c233ee1b7033",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "8b792137-62be-4a52-9a5c-affadbd00056"
        },
        "item": {
          "id": "7893f83f-0bfd-4611-b0a1-909b32614589",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1797c505-5e0d-4983-8e41-d0b7cfe27005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf2da12-d95f-4a04-8724-40f1ab15a509",
        "cursor": {
          "ref": "8e931efc-6dd7-4c86-820d-93fe319a881a",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "05ad50a5-030a-4e5f-bd19-6612b0dd123d"
        },
        "item": {
          "id": "dbf2da12-d95f-4a04-8724-40f1ab15a509",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "649d6a6f-7f88-43a5-9107-908e2fa75f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a03fa6-fc23-46ca-9d3a-7d10d8b4d9ad",
        "cursor": {
          "ref": "567e35af-6059-4783-8e3f-177d2dff559e",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "0a67f0a3-a504-481f-a29b-67862b515175"
        },
        "item": {
          "id": "28a03fa6-fc23-46ca-9d3a-7d10d8b4d9ad",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "2a5dc947-5e7f-4f21-b096-524d55994717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb6283c-ab1f-48a3-b1e1-2c4dd77ee458",
        "cursor": {
          "ref": "147b4a53-dfda-444b-907d-a3583b63a961",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "b9388812-47b1-429f-a2bd-42065cb17c09"
        },
        "item": {
          "id": "cdb6283c-ab1f-48a3-b1e1-2c4dd77ee458",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0bac7e38-0b60-4080-8ca5-726069072fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125b8076-6d99-4a4f-8193-d164027f9f1b",
        "cursor": {
          "ref": "27e12340-b1be-42c3-b056-c678256a616d",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "1b66663a-5cdb-4973-9dd0-bf0082c1658d"
        },
        "item": {
          "id": "125b8076-6d99-4a4f-8193-d164027f9f1b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1b7fbffd-170a-443a-ad37-109034e9ae7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f24c072-bd0f-4a1f-b9a3-e12e85e9e3ea",
        "cursor": {
          "ref": "1ddcaf96-c58a-49c5-912f-94e785fed4fe",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "6883ccda-203d-4d30-8883-7b3910d1ce32"
        },
        "item": {
          "id": "8f24c072-bd0f-4a1f-b9a3-e12e85e9e3ea",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "72272cdb-5216-433c-8d46-10215dcdc9a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92f4ad1-f236-474d-b8d3-459e64cdc8de",
        "cursor": {
          "ref": "d46a11f4-59f9-4ce3-8b28-164ab9221df0",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "5d6ab5fe-da0a-4191-8e0b-e5187467144e"
        },
        "item": {
          "id": "a92f4ad1-f236-474d-b8d3-459e64cdc8de",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8e02e32a-c98f-4ff8-8a6a-0440b53371af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5648bbb9-c449-43c2-9c89-b88f42b6b774",
        "cursor": {
          "ref": "8b178708-ad70-4b14-a850-a2ff62905d2c",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "33f89fa0-24c3-441e-b625-f54394be0f8d"
        },
        "item": {
          "id": "5648bbb9-c449-43c2-9c89-b88f42b6b774",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d457bf88-c73a-443d-8da7-777990e3301d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55e5c0e-e88c-4b97-93f3-8b178757526e",
        "cursor": {
          "ref": "6035356d-c07f-4a0b-9cff-83b42547ffc2",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "6eddbbd4-3f54-4873-89b2-0a94cb45e0ed"
        },
        "item": {
          "id": "b55e5c0e-e88c-4b97-93f3-8b178757526e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "adbf321f-a8b4-4a86-90c8-858c32226881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9fc95a-c422-4ba1-9a7e-1ffc1d734d72",
        "cursor": {
          "ref": "db4b57e6-ce43-4b1f-83d9-b1652c3e97dd",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "72d60dba-ebf4-47e1-a6b9-66775bb5eb88"
        },
        "item": {
          "id": "4c9fc95a-c422-4ba1-9a7e-1ffc1d734d72",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7e0ef753-6a7c-4b7a-b0bc-54c70074304a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1b5bf8-606b-493f-b022-30eda11c6eed",
        "cursor": {
          "ref": "857ca88d-0a77-4c8b-b1c0-47527149b8da",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "9eeab753-1cbe-488f-85c1-295f38c4eade"
        },
        "item": {
          "id": "fc1b5bf8-606b-493f-b022-30eda11c6eed",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8af1edc1-c540-4576-a3c4-141e4094abb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85124c2-9a46-45a9-b7cd-a70cba3b2cd5",
        "cursor": {
          "ref": "a2ffd430-33cb-400e-9393-a03f6dd243f0",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "5187dc7a-12e0-4ae0-a7bc-e5bf9b616498"
        },
        "item": {
          "id": "d85124c2-9a46-45a9-b7cd-a70cba3b2cd5",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3717cd41-f3cf-4c95-a8a9-fa593c4dc5a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00722f2-008a-43b6-9fbf-5d36b4173438",
        "cursor": {
          "ref": "a92919c0-e4a5-469a-8d94-5453fc4ea387",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "f06682af-6796-45c0-a351-25a9a4c90185"
        },
        "item": {
          "id": "c00722f2-008a-43b6-9fbf-5d36b4173438",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f614b4d8-afc1-444a-b4d0-eb3bd0487558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac9471e-44eb-49e7-8ecf-bc7dc2c74cb6",
        "cursor": {
          "ref": "18d27231-d7ec-4225-98be-890bbbc009b3",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "3cd2f0eb-6314-4d22-8d72-ee8a509c0c34"
        },
        "item": {
          "id": "1ac9471e-44eb-49e7-8ecf-bc7dc2c74cb6",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ee56f695-d065-4b3e-9393-e3004c59d771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e13ea6a-34f9-48ae-af72-4f20ccf873e4",
        "cursor": {
          "ref": "91819c48-4cf6-4e66-98b5-7ce7be3250d3",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "3117cba7-9fe1-48f2-8636-320e953aafcb"
        },
        "item": {
          "id": "7e13ea6a-34f9-48ae-af72-4f20ccf873e4",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e67701f2-a4f2-4ed1-b969-69cd7e1ee9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a3c3ac4-91db-4226-acac-753d558c59c8",
        "cursor": {
          "ref": "c0fb53bd-3e1f-4fcd-93de-331591b7bfc2",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "9f38eb9d-26d8-42df-96b2-5e7c353aed64"
        },
        "item": {
          "id": "3a3c3ac4-91db-4226-acac-753d558c59c8",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "04139d52-9d03-4406-99a2-ab8941dd4b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a232e803-1032-44b2-a5bf-2bb9daa33ca5",
        "cursor": {
          "ref": "95cba6b6-5e4b-45ba-9838-e0e3f0d19f2a",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "7e912505-8c85-44c9-bb00-cf029cd9f122"
        },
        "item": {
          "id": "a232e803-1032-44b2-a5bf-2bb9daa33ca5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "bfd7a140-244f-420d-8b19-8b946f30f18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4039ce-b30b-42d3-9e07-705b88ee060e",
        "cursor": {
          "ref": "073e8b4e-60b6-49ce-86e9-b239aa18b584",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "3a4ab75e-43e1-4b1e-b0fa-1d62d8b6cb1d"
        },
        "item": {
          "id": "6e4039ce-b30b-42d3-9e07-705b88ee060e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "650a1656-aa1d-431c-aeea-352d3501489d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0f1745-e4cd-4ca2-9259-07bd068e54fe",
        "cursor": {
          "ref": "598a2c7b-7d8b-4eef-bf96-da277ec6f06d",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "478573ff-020b-486f-8de5-87f4d78447ba"
        },
        "item": {
          "id": "3a0f1745-e4cd-4ca2-9259-07bd068e54fe",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5c801ee2-2dfc-4aab-8647-653de122d4c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f86b63-c950-4474-9633-a53179e42da0",
        "cursor": {
          "ref": "f0fb366f-5b5a-4e6a-9f14-d01d5e292297",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "142bb145-1e62-4b05-be1a-f0eb0cdacfdc"
        },
        "item": {
          "id": "70f86b63-c950-4474-9633-a53179e42da0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "294fe0c6-c888-4ea8-944c-166acbf5a978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce6ab42-6f4c-4559-81e4-48fa850a01eb",
        "cursor": {
          "ref": "fac2186c-b810-495d-99cf-3eac9500cf4a",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "02a12303-dea6-4e98-8e4f-f4b919066187"
        },
        "item": {
          "id": "4ce6ab42-6f4c-4559-81e4-48fa850a01eb",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "934e0906-b3ac-4ba7-bc77-747396a9d823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cef5b5e-ab1d-4186-9fb5-ae5f7982f9a8",
        "cursor": {
          "ref": "eb14f96b-acf7-4cad-813e-cef42e0eadda",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "c7925f18-0879-4866-ab80-0706b36b1610"
        },
        "item": {
          "id": "5cef5b5e-ab1d-4186-9fb5-ae5f7982f9a8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "67f38756-c5b7-4751-8659-f5d525f9a4e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94609fc-826c-4ee7-a052-93d4c2aa54e8",
        "cursor": {
          "ref": "62853433-a71f-4356-9cdd-b9b1f72c6abd",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "ab6a3073-a116-48d6-83f7-9f37b4b9bd54"
        },
        "item": {
          "id": "b94609fc-826c-4ee7-a052-93d4c2aa54e8",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7dfd7dc6-7ca6-4294-abba-42032b298396",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8145fb-3505-4cca-aa17-94fe5eb6c21a",
        "cursor": {
          "ref": "e22de6eb-96a2-43e3-9dd5-f64b4fa187b6",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "643cf3d1-c9dd-427d-8521-1e2bdd677270"
        },
        "item": {
          "id": "8d8145fb-3505-4cca-aa17-94fe5eb6c21a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ba9164d8-982f-4e21-88db-38639408ab8c",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da39760-24f0-4955-b527-91d5195ed3af",
        "cursor": {
          "ref": "55813bd6-5ca0-49b0-a634-d7169ecd3a56",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "70db5248-40b4-4009-93ae-a0ea725a266a"
        },
        "item": {
          "id": "1da39760-24f0-4955-b527-91d5195ed3af",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1160cb85-61ce-4aa5-bcf4-07b2d015b50d",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23d8e57-58bd-4da4-af5a-19a0a78ece33",
        "cursor": {
          "ref": "1cfb70d5-4804-494a-9c0d-84c1d450f208",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d0c7d8b6-dc74-42f5-a8c5-084965a4e7bc"
        },
        "item": {
          "id": "c23d8e57-58bd-4da4-af5a-19a0a78ece33",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "84ed8b86-046c-4d69-8bbc-6295a6fd9970",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23d8e57-58bd-4da4-af5a-19a0a78ece33",
        "cursor": {
          "ref": "1cfb70d5-4804-494a-9c0d-84c1d450f208",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d0c7d8b6-dc74-42f5-a8c5-084965a4e7bc"
        },
        "item": {
          "id": "c23d8e57-58bd-4da4-af5a-19a0a78ece33",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "84ed8b86-046c-4d69-8bbc-6295a6fd9970",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78760ade-5bed-484d-a848-c43e76f3707f",
        "cursor": {
          "ref": "d408fcd5-da70-4ebc-898c-1b2198b73dbe",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "89343ad7-79b0-4c95-87ac-445cc3456c10"
        },
        "item": {
          "id": "78760ade-5bed-484d-a848-c43e76f3707f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "772a58e8-c6d9-4dbd-9d72-aee59a290538",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "461068c7-f5d8-4f11-95e6-988da067e90b",
        "cursor": {
          "ref": "ca157fe5-b4a7-4952-b056-60a81a5b6f19",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "c89cac2c-0af5-4c6d-a60b-42ccc1bedbec"
        },
        "item": {
          "id": "461068c7-f5d8-4f11-95e6-988da067e90b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "fdc49ed0-4c9f-43d7-9f13-712512b6101f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}