{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2d355e07-6963-4dc6-b8a5-e613551e4373",
        "name": "Clear Cache",
        "item": [
          {
            "id": "5a3f85c4-91c8-43c6-84a8-a66a87f4845e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ae517844-4cec-4052-9606-2f7ed81ada25",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "64267633-f0c2-42cb-91e3-a414148b114a"
                }
              }
            ]
          },
          {
            "id": "59ece31b-c75f-4b58-8993-32d0233d3a09",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "532d39cc-dfc0-4649-afc6-5ccc406f0412",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b84f1553-12b8-4781-810a-5ed790645464"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "267c1adb-9876-4923-9b96-4fcb37373bc2",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a8718574-66fa-4172-8cc9-d9e047839ce5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "18f4dbc5-7319-425c-bf04-18bcb1f1c70d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2dc113f7-e8a1-4500-b6d5-266b838f10d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "011da6eb-45d3-41ff-a9ff-3de377df392c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "04d92bd2-4ac2-4f23-baff-8f896e70636f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c59c8c4a-7b2d-4f66-9fcd-d1c2742995e2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5590521a-edc0-47ff-80ac-cccea7d66092",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "db169c3f-7d09-458f-bef5-5a3765763b60"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "084cd967-7ec5-4506-a969-c72ef683fb7a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "df56cb62-16ac-4128-93c7-ecb6876e806e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "17b0f2a0-6aaa-4a38-a4f4-58a4c6543733",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f991d80-a986-48ca-adc0-9cae84cd42c6"
            }
          }
        ]
      },
      {
        "id": "c999cfe3-7d88-42a8-a327-3a7373643446",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "adfd7afe-783e-4d8e-85a3-21bf2a3995c4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ca0ca105-1643-48e8-b765-956389014dc1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ccaa7fa6-1066-4d0a-98fa-aaa8f89a2240",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "542372a4-5709-49b2-a4c9-8d6b31d008d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1696516f-a1a4-4377-94ca-4b687ae45c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb839ab-16a5-43cf-a5aa-74237135be8f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0c8bc1-be33-468e-a996-6d7fd9f7a1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fdd67706-66f6-45a2-88a0-dc52a06301d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37236cfd-16e5-41de-9506-547b34df72ae",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2bbc9c8-3b48-4cfe-91b7-863bfe73b191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b46da788-2b9f-47be-80a7-cfa3ea8de6c2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d5513716-7a5e-4437-afa9-2827a006ac27",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "69079dd0-14ca-4137-a1e4-b615cd1f3f57",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95cf02bc-3d62-496f-a907-a903ba1ab6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a560aab-67c1-4955-8d98-fca7944c0e89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63c1129-6911-4886-9e3b-0996ad16c5bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6867816b-058a-44df-b83f-55bbaa5ceb70"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "78c146bd-0487-4937-9970-ebd59b2da42d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "358e3129-cb6c-465d-bfe7-1b2fda70db13",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dae0a674-774d-4a00-9096-fb1714993b70",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "92ab3b91-6cc1-4228-9b97-cbbd28359f41"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4532a01-8420-4853-94db-f6695adf4fae",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b93fa5b7-10fe-47d7-9e8e-c92742af64dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3dede667-7771-408b-9630-10c1920e5ee4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "346652ce-0d92-4bf4-a362-716b446be7dd"
            }
          }
        ]
      },
      {
        "id": "8583f647-c368-4982-ad87-ffeb3769b5fb",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0030aa09-868d-40d4-8c72-7101accda38b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eec5db70-698c-4bb4-b28e-aa05df3cf1cb",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "feb0fcf8-d83a-4c98-9441-f9b73943cac1",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba670bbf-6767-4137-a1a9-ab3126def8f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0271d777-24d1-4de5-96bd-e91f2a1ae52c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d895068-78a3-4448-ac2a-c5e8f8b26859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d502b583-9fbd-48c2-9379-d31367381750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c359f4-1a15-4fdf-9304-14e1ae2464e1",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90b0d99-483b-451d-a449-4f95e7c362d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec61c0a7-79af-4f32-b4a5-6a8687bbbbd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7471f232-3779-4487-b817-eb70b2c3a790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61602cb1-6df4-4901-98b4-3f171805fb5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e420acd2-9b7d-4f3e-9824-e4add4afbbd8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16aec100-4e5c-4545-b4f8-b28f6acd4969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad6a9a7d-af95-4afc-a345-ca5b7c9de953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91912f38-bbba-4f6a-8aa5-996368bd630f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68ff77d4-8039-4e98-9aa0-87e7aefb3e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c71faa-bc74-4bd9-b6e0-36cf4a8e52b9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f01ea4ac-b9a1-42c9-b294-6f732f4cda14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d7c6a8d-8e86-4661-854a-867617da9409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d048a1-f575-449a-9f6f-ebeb4cecfe32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c22a5faf-9854-4ff7-a309-bf538ff8b011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8790c7c4-f3e3-4838-a1b3-6d2bb4f31467",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb405ffc-fbf9-4c0e-95ab-6eae787e65b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b03863f1-96a9-48e8-95a9-cb19e1364fe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b0d499-6686-4145-b681-3cc06ed872c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ba286b2-6f9b-4143-88d8-793b6a23e654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36040c2b-e1e9-4fe1-8db0-47646126a3cb",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9daa45ba-0aa4-40fb-b4ff-6fe6ae522e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5191ba32-0270-42e3-a7f1-bd98d9e6335c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258d059e-f422-4951-af75-952d9ce1f255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3a9c0a7-1c78-4852-9cf8-037d3bfa1d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1005f341-171f-4098-86c9-9a0c6c08b72e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36693360-3959-415d-b1da-1934cb1af850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e04fa58d-4d11-4539-9232-eeb9696696db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb525ad-74ad-44a6-9692-2f5fde4ad305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f60a83f8-07aa-40f5-92a9-e724fadd5a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab12230-f438-41fe-8ca8-0a34e13c97d4",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbcdbcf9-1d0f-4fdb-846f-7bace8eca9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271dc94c-7fd8-42cf-9745-5fdc1d21ef51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff1fea1-0d59-4d91-a8e2-3ad4e045b169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2f728aa-a7dd-4687-bf05-b22c73b77ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c363031-6998-4101-a8b0-6850739d5141",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5312c400-99e9-46bb-b458-fa81035a3060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1194977-6e2b-4a17-a304-46b4a6417fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6410f4f5-cd79-4566-a71a-48cc99928097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6a4ab29-1bcc-4a92-ab4b-8bae2d732f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e09aa37-0f92-4a5e-860f-205feef8679a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e322cce-db24-43b7-a22a-c231fd30b94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70ef898f-d727-4776-9bff-920cbe7d9ac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e8b2f9-162d-41d7-a817-7ecca561f6e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d42c222-855c-4160-90fc-c57c669067ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20231044-77a6-4534-bc72-d26e63ecfc8a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64aa0a34-e8ea-49bb-952f-a00ae34fa548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db3d540a-7381-41dd-9bf1-a061f7e312a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "933f0a9d-0d16-4ca7-a66e-41d49769bd91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa162e2a-3cd6-4365-b58c-71817e4f9df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6749b483-79ec-432d-8251-4410347fe1f4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2cff86-75b9-4648-81b3-4ea0a2b2a22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d9c903-2e43-468e-9047-bc18b6fb4de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2f5a87-5bf5-4a8d-86dc-110082a54829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16043cf4-07f7-4708-8e8a-44ce4e1dd8b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4716c9c-1044-46cd-9c5c-2422bc4ad8ec",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bffb865b-c5cf-4397-be33-e52effe20b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2e5e07d-56aa-47e4-b907-b3546dc2a5de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116076ef-4292-46c4-9e4d-86a3dd85816e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6a9d0a4-891b-4176-b266-7b2ffdfdc017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d264e4-9ee0-4c54-baf9-0400573173d7",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62bfd42-eba1-409d-b05d-cdced03c1945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1578188b-77ac-4f7c-8423-01f3b886f744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db7e6e28-ac6d-4e76-97ed-6fabff597347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd27a853-2767-4770-be00-e44d604da634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb368ff-6dad-4921-b92d-2037ef21ba84",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e00b71-cffb-44f1-9b87-cee7a48efb8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be764a0b-712c-422e-aefd-e0ebcc8a3fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d0a91c-4f7e-4871-bd95-22ee50471308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbd09b6d-81fc-460f-bebb-31745c9de239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8922ff9-a48d-433e-8cb5-57aa575774d9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f964d758-3201-4f54-99f6-7948bdac1679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0743c171-6036-45ce-bfd1-2a4b13453296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7cb85f-e8b3-4e62-a4e5-9b4075c0f880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2759b9c2-3247-4882-a614-14b3c27f8aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123718d0-2c60-4054-94cf-19fcf6ecbe2d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf76d7b8-4a12-4792-bee7-f2eea61e6bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51d232bd-057b-4d4d-be87-8db5cd5651c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb85341b-ab14-4de7-9dad-799123da98c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "937c36c3-ba47-402c-afc8-cca7ec94dda3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217c2221-e6fe-4e7b-81fa-8a30832febdd",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b10453-327a-4ad0-8f22-6ad64073d38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6154b1fd-3f96-4db6-8012-89c6efcd4091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50e5f08-2afa-4324-8274-b47b1189da72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a9a0376-6e5e-46c4-9fb7-a82d7f93b906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4db2269-7053-4ab4-9647-5d1bac2afb05",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c167e7-588e-4fbc-b3ad-3ff7a1530636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88259713-0ea0-4c80-b60e-ebf003b90083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f47d91-5740-4f60-8232-a1b3491d1542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ee08532-6ac0-47ac-98be-2f5c03100e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7607bea-5ac3-4312-be6b-47502a2d8bc3",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac61ea7-9416-40e1-af78-99b1b9277ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "debc75a8-292e-455c-a32e-685bfa7e937a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56c6a36-36d6-4888-8a6c-5945e280dcf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b77cfb05-dcf4-4ed6-a490-66a3036c2997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54ca758-5a22-432b-afea-593deb51711c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffef66aa-d5b9-4988-8e18-cfdedced0a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c32f0cbf-3060-4b7f-b795-5e4cc62b7702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5b10b2-beba-4ea4-98c7-c9eda75490fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f5716ee-2e76-4007-97c7-74e01babaf7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2573eb2-2315-4c59-91ad-d85caafbbfa1",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15835620-e177-4b1f-b3df-1a4f05749c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23fafe3f-3be9-4e3c-997e-232f2ce69051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42766f80-405f-4d1b-93fc-a48089b7191a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a397b48b-5d50-4598-9933-9b9138a92142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d85666-60c0-4df0-9094-82358d3190eb",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "989a012e-1b7d-491d-ba8b-a5f7bdabe336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34b01691-7835-4525-b364-e88e7c095d1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff34dee9-789a-4b83-8bfb-b745f703828c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "afd12fee-0fb8-4942-a9c4-2537243861d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69216543-3bce-4776-b247-793ed83431ee",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b723c979-e52a-489a-80a5-d4f14e76e057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48433ee7-d2a6-4013-928d-020e1535c75f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff496b9-6f65-43e8-91e7-fec3648c32e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3136e9ff-41e8-4598-b001-76067b20d8e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7611b49f-feb5-48ca-96d1-1ec5fca7cb82",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "457397d9-fede-479b-a4c0-8ac67657aab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9a6f4bc-3727-4ab5-b666-b563b9a92fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6aa0238-8731-4911-a546-5569bcd3dea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "76676792-704e-4505-a995-a0abd49f50b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc5a704-4b40-46c2-a50c-2cb78a677c0d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f2f298-43a6-4409-a917-a02624e99514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "835f2540-5f98-4d52-a9fe-eeaf1011a471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024fdfe3-b8f9-4366-8a06-ea5fa22f034a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b72d8b48-b6ce-4564-b93c-1aaa8f8db0bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ead44a-3e7d-47c9-bddd-b5ae320498db",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8078ab67-14f9-48d7-a9a8-5f119d042150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ca9b10-fd86-4ab5-94bc-8ad4782b0540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a46464-3cfc-4b6f-9523-7c0885d7c164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d3a5986-b3f1-4b2d-a111-e87f4841d64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8248cd6e-794a-4e4c-8183-401526be9a05",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa23e5b2-244b-46fd-bfdd-e6014bb83d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b102d3d-6e1f-4ba9-91ca-bc8ae1f4ab77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff70de5-99f4-4f70-973f-831a261fffa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "baf74341-ec24-47f1-bc6f-cfa676d1b978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15c3274-d404-4c62-b000-0dfe8dd0d1f9",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b171267-8bb0-493f-a0d6-699e550f4d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b42d0e-edee-4d64-ad3c-7ca40a02c878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11657516-6dd0-460f-ab2e-182b51acefb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ee2b16-bdc9-4b76-9cfa-35157b44f695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa5ec2e-de62-4cd6-9e1e-1cde23ff9e6f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39cca416-630a-41ce-a3c0-24c71f0e53b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70259fb8-aa48-406f-89a4-b80938fdb514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91bf8ca0-bcdf-491f-84ea-1f4ee13e0a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6efe652f-bfdb-4631-adb8-89383ee7eb1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84f8a8c-ebd1-4c19-9e06-ac9dce36bac3",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fcade71-1cb1-44ca-b208-5ea83e7c237e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11e4d234-b6c4-4690-8718-9cc40bda3c77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b727545-02b9-423e-a7ea-54d86d875c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8856ecab-40f6-4385-8277-57d2e7f8e106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12609c2a-a216-4b64-9541-fab8d0ba7715",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eafd350-cd32-495f-a0f7-97c42eeff5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf68cde9-c15c-4c9e-b87e-26a4be29815e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f65f78e-b5ea-4bd7-8f86-2a8b8df69798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7207a305-81fc-4ed7-a5ac-8f68d43ca67a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff76659-3e00-434f-bf82-732696aa859e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a521ff-1331-43b1-9804-524d9511c9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69149e05-4cb7-4166-9541-fa4e3c89e0ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496291c0-e815-4a2c-986a-2a395ecfcd70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60b24ede-9ae2-447d-9f58-a094a284e068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5537777e-afb6-4179-bff1-61a3d0c74873",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fdfe425-fe56-443d-ac9a-8326f58f0bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf4a1ff-4e7c-4dbc-abbb-e61b1e5e9348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b3337f-1748-4a87-807b-ddff2964f133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "120e074c-27c5-4f38-a04c-d1c2fc3107a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64a6783-fc75-4365-a316-05a968b675b5",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6d5c35-6934-44e3-9bdb-8ec4ca3573f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f1bedb5-b8e1-4baf-94e8-b99f30c759e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0567874b-1553-4bfd-a596-5fa0ba978390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b18eeadd-9b72-4476-9c94-d7c8f1461963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a681bf8d-bc97-4df1-a91a-7f27bd7e0e30",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36698ac7-a4e9-4915-a315-1a794650f135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b41c276e-713c-4315-a708-b3bcbdda9f90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec353a7-8f20-45c3-8d3d-08307f2705d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "678061d9-68d0-4896-bbaf-b44c3cc0cc70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de5b1a4a-734a-4e2f-9c27-b95b3ce6ca1f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0514caa0-e7eb-4f13-93b2-d19c5823e985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d404bfc-c848-4929-8009-a87550cb5e6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3478c1b5-b9c1-4097-bfe6-8a70ebeacfd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b5128e7-37ee-4781-af77-8f8f081d3353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eaccff8-ceed-4408-9a49-3d33fdcebeb8",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "411e4af9-c16d-414e-bf47-be372ad13b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d26983e9-0be1-4d14-a051-e59ee3d9172a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6686b7a-a14e-4eb1-97ba-7227c4a3dc49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf59bb4-abe2-441d-890a-4aa6ffdf646f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac776ad-c8bd-433a-b72a-89fed4437ff6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "954b8aa0-0bbc-4eab-970e-8ca2a4afbc44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e8db6a8-7c14-4765-8554-875ca6865ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0decd06-57cb-48a1-9664-859d2ed662ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b33b352-6edc-4bf2-aad6-0c231d4f5e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6355e78-81d3-49be-ad0f-566dada69166",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4959aee-b6f4-4600-9867-87e1291dfeb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44be4ce2-b70b-4f0b-bf57-53da6ae10df4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c3e74d-43a4-4242-860b-e54fa209dee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "45a2f5c9-223d-4a38-b695-2da315b6fd51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8253ff64-0dd2-4dde-8b4a-d8e6def81af1",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b72d43-9b8f-4452-aac6-096a60f37453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7a73724-b127-451f-97e2-ff33b206acb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198afff5-b535-4971-88d2-19ff2b7736ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7688938e-a46d-4ca5-9fbc-792a4f2e42ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16590d39-6d04-43ac-b3e5-ae94ad5abdec",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ada2db6-c5e5-425f-b659-1b2b73348680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5775ca01-2ae0-4ed6-93f4-3fe0726c61aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48cc499-66b7-4665-9858-bb629d4a5645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "de91cca2-91ec-48d5-9144-af39d779aef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c4ba37-e156-4a4b-bfb4-564c5af2ed22",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adadbd7a-87b4-4d80-a7c0-081e4a54f881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e4a78e6-2265-4dc6-96e5-dbac04583952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "147cc9f5-a45e-460a-a90d-c24f0f2ae254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b2f2c94-d125-4d4f-96c5-0f78517f23e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e26ff8b8-e171-4f21-bdf6-b655c7c428f4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b46555-c0af-46f2-8606-22c6f0e3d59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16190aac-b054-4513-995b-6518b56dfc09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab5bc244-23a6-433e-96ed-821d5ec6a434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5ce009b-7ce4-40c5-8528-e4f683cd4a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec2165c0-2c13-41cd-ad3b-19898bf3212d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa22968-63c0-4f3a-ae2e-1447e66dd44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c17f901c-25b0-4c61-9a8c-560ea60e1289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6831f6-32a6-49d6-af8e-7fdb5e441b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "385edc0a-6654-4437-942f-6953d0fc9737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77670d1-598c-4a21-bfba-4108ed673b4c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05d8fd1-b900-4627-ba93-e88af8256b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9600d3cf-c9a2-4046-9b7d-a527da998cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8d2d69-e9f7-4d1c-8fb5-c5b10552befb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d1302e7-2145-4b90-9e95-e0ceee19c1b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca4fc83-1d1b-4e45-aa0c-ee111222dd85",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1038dd1-995e-4961-bb62-85ebff83e8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa6a9f1a-6490-446b-881d-6f2e9f31b616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1aac5e5-75ef-4311-a431-90c9d71d096b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "81ab061d-8ee1-4133-805c-a79e385ac3af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236a080c-ccf9-4819-a37e-0700de53a519",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2a8211-6655-4200-8af0-d60d2d1b40eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4081516e-aca5-4d06-a479-beef1403aee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee74f783-02aa-4091-a90c-1a69cacdb774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b6cfeaf-55cf-46d0-85f8-eadf5d644dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ae48e3-0038-4840-8a4a-fef0bff409ee",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff708790-9104-4e24-9a24-7ee5f8223e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a66462ef-3964-41c5-9f63-04b507868ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d529fb7-4164-47ad-aa82-8fd813953779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d20641d0-a546-4f9b-ab93-c47b2b3fb913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14575801-93c4-4f1e-bcb7-7b016d6e6536",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deac2afe-d1a4-40bf-8f29-5fd889cad471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff43e0b4-3918-48b3-b89e-0cb79cfd4f89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff0d004f-1ee6-4f0d-a1f8-1e44fda2fd5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "43a96e63-f55f-42f5-8752-550756e75eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26b639e-8898-4184-b65a-c3739db175bc",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02eba5a9-89d2-43cd-803d-4d8ed418c283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4931e665-6b8c-4237-b64e-a5fdc636db45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc12b4bc-8efe-4f9e-b36b-d9b44c98c52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "428e2852-bedb-458e-9c1d-54a1e54aeb06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641a44ca-195a-48ba-b355-129318176f29",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1365d9-249f-41e6-b50e-ddd79ccb89e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62da6fb8-4a05-4094-8e0d-34cd7f9540ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e44df10-7f70-4a25-80c9-66f6d1591aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "55f83407-6c19-47ef-88a8-0809dd909115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1ebdab-805a-4a64-ac8b-0490ba1da06a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce5b6a6-6806-4229-bf8d-e5c4bda2882d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b58ba73c-1ebd-4abf-9c3b-1d1a7774a6c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e351e5-9405-4cbb-9881-847dd6284d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ec6b010-7422-4004-ae3c-2fb4bee16eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ed9001-794d-4d72-b75e-6b0243a647b9",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9dafd4-5e34-408e-8ded-cb0a371c55be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e613107a-3541-40c4-99b8-183c013b8893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7591b3-bc97-4d21-a5a1-75c21463903b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "461a1b67-d992-4846-be9a-cb44853915eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c5b65b-b726-4937-bdb5-a667fb18749e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ae7c28-0d76-41ef-9669-43c752cf75d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31e5980b-7f4b-4336-acfb-53dbd2d79450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa88fe65-1392-434d-86db-6513a764392d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b218f24-e5c7-42e6-9846-53e51c040478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc14465-d2c5-4fb9-abb2-33ae3ed61507",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ef100f-bca1-410c-9f42-be3236ca1f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ddc756d-165a-4c51-9b9c-e1bd974ea01d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752ec30a-6121-435c-baf3-8a8dc3190566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "fcb4bc4a-b463-4e2b-95e4-74ac0ce69833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5d0af1-b817-4263-9505-e0ae7b70f811",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f5250f-e407-4d13-abba-30498e6a92d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "604f4e32-ff5e-4e74-b5bb-308ce569b332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18db23ea-483e-402a-a844-7e3a443279cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba2b8e7d-36a6-4cf1-851c-e846538141a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e946bfdb-b853-46bd-91d5-b9ecdf35ced6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51cb9060-e51f-4fb7-b5ed-c50098975b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c69a552e-24de-43cb-bd20-fa206c0a5968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7208f8ba-703d-4538-b1a1-e0e8b61e614a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "31ce0eb5-337c-494f-b1a1-81cc105c9730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d25131-3e1b-4e59-86da-ba8f73aa5d2b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48eae416-38ce-4462-af00-daee1345a9dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d55a2bca-a2b0-4481-9495-fc84e5d3d274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42169d24-f4c3-4cd4-bbbe-7aa9f7b54396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "efbe2d03-5fe9-413c-9cc2-fc9cc5660aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad00229-f33a-428f-ab43-a0093869378e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c39cb20-e240-474d-b7ef-401475526ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ead50398-568d-4af1-9f36-f4812f558085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a832498-1eeb-41a6-bbe8-45619e2ad98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c3cb0c7-b6d9-4b5c-91e5-2fea9171b1a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69155015-2a0f-447f-90e2-daeffa648e0c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69669a47-7807-4515-8bbf-8f1d917b13fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89607349-43dc-40ca-bf47-4baed63b74b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9988210e-38bb-4b83-9ac8-3688adf0af2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea32e600-fb10-4238-92a4-1d2b42d82998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e2e7a8-9f1d-4cbe-910f-e37914c94f3a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97959ef-9277-48ba-823d-86c1d210eac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2894d84-81de-4c7e-8c6e-f398d427893a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ae46ad-a068-47c7-aba8-3b8b55c10b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ba092ed-dd04-44fd-9d10-53270ea8607a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a806962c-ecf7-42c8-8044-1c8961bc7fc5",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86af0d7f-0e6c-45b0-8536-221288ac010f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5c7302a-5815-4768-9ab8-708cafb8533d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4390ef0-7b2d-4354-8b0b-6fbb7bf04b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2e2eaac-faf1-48ec-a5e9-0a388f2f8fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae74ff3-a7b5-43bb-a221-6b076bd717bd",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df67e059-5283-4c7f-9ae4-ad1761f6028e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae42664-b9c7-4d67-a5c8-caf3d71591e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a54cb9-ab21-45a0-a9c5-4ef34be2f421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "364ef7d2-f760-4651-91a3-370bd22f4286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1262a572-c06e-4634-9476-ae7ff17cbc29",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e1a065-ed2f-465a-a009-40791df4c74e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d19a654d-f698-4c0c-ae19-e4921f455782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f024453d-4065-4164-ab65-c3008d884225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "905093d4-b8b2-4f57-afb3-85b20a7becd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd91bf1-c57c-43b8-96b0-99362bc1aded",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c60dc09-93b1-433c-b036-ae6332c6143e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68d86e67-587d-48aa-9535-a5fb5d3ea349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1feebe-6d5c-4557-87af-7fff081e641c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "06a59bfd-fb60-42ce-bec7-0470b2c0add4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79d3e20-42a6-4f22-93f9-e444a94ef0cb",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f9947d-21d2-4ede-b22b-c9e99bdb7ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f61b609a-c7ad-4648-90b6-3f582c8b9303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7206dfda-f26e-46e8-80cf-dbc52ffae9ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6cc0ca37-3814-4cf8-8ef3-8b89c703038e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca5379f-2b0d-4955-bc57-36c25629a9a7",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f98626f-219d-4e40-8e3d-27c65df31261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bd62765-b61c-4d57-8256-b7b6b1801492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5abb643-377c-4218-b146-382e9f95ca0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "33cce56b-b615-4303-955d-3202ef8aa42d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b920f7bf-1e8f-4131-807b-d8e5d9672ebd",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4c2ee4-3a9d-44b4-a0c3-3eb13f21a4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c01c823e-69be-424d-8e0e-e148c7690723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32a8851-1f2a-46c8-a1ed-fa421606b289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "30fbf2ad-ddbf-41c0-bd97-2ef26d79d28e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5865c6c2-d615-4438-8626-4ecdb77f4613",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3176660a-51f6-4754-b2cd-99f15a88cefd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d72264e-6570-40bc-98dc-bef62f12594f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43eac477-d37c-4ebd-b0be-ad7d80c76a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1001873-1cc2-420e-b718-840f0ebb4145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193d77e5-d8d3-4bca-9973-f1868b9c795a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d216894-d083-4546-b609-c52ba7523931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7e0e3ec-eaa4-498a-a0dd-f5d7f068d97e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901d4cb7-a198-4b20-86a2-72c89c046e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "765940cf-34a1-49b7-8fc0-58f2d2812b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9debef18-8797-49c3-8843-1b0ece5a4f4e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd01bfc-7bfe-48ae-a4c1-0ab741249fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b1ebe8c-184d-4b16-8e28-feca9c3c8bed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d89807-0ce1-4d11-9028-1e26a9af46b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b4237bc-e1dc-4247-88bd-b722dd7d02b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e14bbb68-7e4e-4ef8-8cec-b1e2150b8ae7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec947e9-cbb3-417f-a3f1-71af81c583b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8647c061-2072-4ec6-98c6-6b1c582e190c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f84d9bd-90e5-476e-b798-8c8d6f90119f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b0871c5-2964-4689-8361-10d6394fe401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e89966d-0d84-4a38-a455-6a810516589d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c347f613-9e9c-4c79-9a92-95ded6574fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c523e8d-7c11-4796-b23b-22dfffa0bb85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77fd9639-ba6d-48a3-a748-0aeaeac6e3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7db719f3-48f9-4c3f-a844-3c9ec88d0a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1d2486-be89-4891-bf61-c0af54ce755b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faba4b59-a0f5-4e16-9519-bdbf4749d706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f01deb4f-e58f-4b8b-b898-b9c9ecf16479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a581e08-bfff-4bde-b188-9d57591b1a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e565ea63-1e2d-4bbf-945c-a26256c5ee42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6791403-cf22-4c93-8982-5ff6bda9d11c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6666386-dd86-44fa-84f5-7e609ea6c2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07835d0f-9f78-4efb-8dd7-cd75b426f740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a102120e-a1df-4374-87af-1b0715497078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e721bb2-75fb-45e3-a00c-1a9e7c854f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "093d56a2-a189-4744-80a8-a0b5582c550c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ddfd0a-cfaf-4c77-ac25-6cf8b46a1d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84cde8b1-858f-4485-9728-52d3ccf2ef3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69050db9-e7f9-43e6-aa44-11f1094420d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5f2251c-c4bf-427d-93bc-f0eb29c59a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9348f007-6797-4af4-89a5-ff46858bece8",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a5e5b0-0ecb-4992-92b3-7015f4a4aee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab6f9c2-3db2-498b-94d0-a77068de86ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a754b0d-1d0b-45d1-9024-8739cdccf682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7287e8e-2ca5-4ba2-9662-7038fcf413ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6acde42b-9840-4cb5-9d11-8da23cd74724",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96300e95-ecce-4a2a-8502-5f78465a6fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a48ad4b5-f2a5-4b96-823e-fabdcd962ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca97b2f6-c870-4b52-bb54-12efcf142882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "61530669-f700-43c6-8a3c-dd4e29932309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060e2641-2246-46f6-bdac-58d8ea97f114",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99efcde8-4462-4172-9851-6629099d879b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c17c9e88-f9b4-4019-8f74-0f8725c428b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f181cac1-511f-4e24-9f70-3cbc333b6641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "846bf120-0eb5-4834-a9c5-4609960076a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e75f580-473f-4177-a228-43a3c5904e58",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10422d04-a290-4688-9b4d-820198dccf50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ef2d69-51fc-4e40-b868-dea8b8096cc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c8bc09-fe4e-47aa-8db5-2949a5d8752e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "717559bf-a3fe-48e3-aa00-51480a2ff2db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbf9b42-97f4-46cb-86fd-8d15278e2ed4",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da90930-f9d7-42c2-a464-bcec3e00fab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b21e387-cd6c-45df-b289-b0263cf06b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "933b6d5c-9fb4-4b80-8dd6-9bab30a0bcfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "972d09a8-fdf0-42c2-af73-26b29dd28241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a033e616-512e-4216-aa07-4ebd014e26de",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76dda608-92a5-4db0-995a-c88ba52c1391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6126c5f-6f30-423f-8666-3d500d375849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0af4653-64de-4604-b11f-118d71bd36b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1420e847-6044-42b8-93f3-019c5400c4ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c057f8-418a-4a6c-b0ec-bb3505abbeb3",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be2ea74-21bd-48e5-b792-69b26bd4f690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2b36d53-6d3b-4440-b463-31afb844743f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7be48b1-a8d4-464d-bb41-d6b09e4355ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bebd36e-4bb8-4348-9973-c9b9d04bc7f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d393845-4bda-4f8c-b330-a8f2ca0e0248",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48df1108-8534-46a8-86f0-58bd6438a17a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ab5dc37-befe-4228-9015-cd6d554cc80f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c85923-a968-484f-964b-930231c5a0ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c8b0fac2-92e0-45d7-b895-c967f1720100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee3fb1c-e956-4f14-919e-0491b2927aa1",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25beefe4-a245-4577-af48-daef4a3c2cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb9633be-7f68-42fe-8132-16df63da2f62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3db9a7-d397-41a3-8ddd-40558b06c714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a850a9a4-dd95-4120-98be-3be7c472a4d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78df27bc-8a5f-411e-8dfa-5a2ce67a4ab0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e9e8bc-6dd9-4377-8f53-bdd302dbd4e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2425a73-9c94-4ce6-9595-971fae7d4331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15842314-5e51-4c0c-94f4-69953d9e9c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6864ee85-fb99-454c-b4d7-31023935e8e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b9545c-a09c-4a9f-b0be-1b3ea0c8b5ee",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94900ea1-8924-499f-b108-9b9112d65875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84709486-3a42-47bb-b6c7-76352a92e016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5958f58-5e9e-4998-a514-9da993ea08d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eaacf31d-75ae-44a7-8b2c-3371c263ea94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66df6c7-d76f-4bb1-97a1-5ebfe0bd4a84",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b699932-0c1b-4890-aa1b-a1e70e9aaa90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f1cf83b-f06d-4bae-bf4c-d6eccd7f888c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855b89d7-3507-4f81-86eb-331ed0775456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d104892-3af2-4be9-ace9-3c29e8de2886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec1c150-d960-47ae-804c-325e09ba6110",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be0aecc-27ac-44a8-873f-7641db21bb1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e8a8e50-b0b5-4e02-98b1-64566d5861b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26132fc3-a484-40c7-9bec-775c998004e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "296b3ee7-f3eb-4d32-b823-28151a066c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b3309e-7d48-4686-842d-17467414b4ff",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70752038-58b2-49c2-a54e-0b6b8041fc41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "825ad5f8-a3dc-441d-83f7-ea960c95758d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b5e357-9be4-438e-aad2-ec6037b28a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7572ae3b-8e64-4c20-b332-3aa07897465c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433d0f25-dc98-41cf-9a00-433384b5cf29",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b516b90b-e0a1-4e4a-9d57-a2b7d4331142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1a428389-5428-47b9-adf2-13783884a4ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42adbbb1-8f9b-4fd1-a333-955285963bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "74f86b26-2f18-4fa6-99ea-243b9fe932e3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "28fa2196-4fa0-4690-89d6-8d7c0ed0c21a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e4d8fa6d-5be8-4ebf-b3fa-52f4c9b383a9",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02d2fd9-b43a-4bac-9a0d-99d1911a4daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aed567e6-bd6d-40dc-8bd6-a2f1654b9402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37d7c3a-1622-4bf0-a8de-47121006ef00",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d960cce2-55ec-4f4d-b450-9d61f05d7133"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c24f77db-4835-4a1a-9d21-985eed9a4edb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "168a7b59-1690-487a-bdd1-a82e5761548f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "154b279a-aefa-4795-a36b-785394e7b107",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "901457db-146f-452c-bcf8-bf01e61b9abd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9a60ee64-69cb-41f7-a0b0-b2221a5f0aa0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "09f043c8-6200-41e9-9f06-4c2749ed9fa4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ede44834-e4a4-4716-a08b-95c7fa7c2adc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e742ae00-d14d-444b-9a60-89a1aa83b300"
                }
              }
            ]
          },
          {
            "id": "9dbd2bd8-02f0-4744-bf0f-466c2434ecf2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e70b37ef-5b67-444d-9a80-95a8ff6d6938",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "554f9a8b-488a-4f0d-8f24-817608226cb8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5cff7027-00b9-4985-a4f6-9674d8fcd8c5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53573491-25ae-4954-acde-6b74a337a1cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "26b64cce-8064-4437-92a1-b6fd2ed206f4"
                    }
                  }
                ]
              },
              {
                "id": "d6c805c8-5f60-4434-8b66-aa7729040aae",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92a1ff7d-5664-4871-8bce-c4b50e901404",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "20273dd4-3769-4277-a6c2-1d5ab0f96736"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c389e05-fe59-446e-bc1e-b39ef9cd13ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a3463d7f-e7a0-4160-9f73-69255fa2a7b2"
                    }
                  }
                ]
              },
              {
                "id": "5add3336-d8f3-47e3-80b9-39c987c67f78",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "39f5417f-ddd5-433c-acef-00252ba02fe0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "17c172d7-fb2b-4754-a0bf-451f8cff0ff5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6c8158a-a3af-4c5c-9eed-31f098da9f0b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f4ce9fb3-5a5b-4066-988c-1b167465778d"
                    }
                  }
                ]
              },
              {
                "id": "a19c5dde-353b-4716-b614-c4f67f1f365a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cdb9c078-7f33-4f43-8c3c-f8a0c31bd150",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cff1a5dd-56a8-4922-9b43-614666220537"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8399961-f858-4f2b-b53c-e0db5b51cb43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "eb2f9400-ca3d-4422-94e7-482d7052c2fc"
                    }
                  }
                ]
              },
              {
                "id": "40bfcee0-4a10-4a94-9515-af74715076c2",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "46fd95f7-d6cd-45f8-9bf6-3155e31430eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9637ed0e-5317-4987-bd8d-c2ff7b2394b2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71dc3435-143a-4c1b-8150-e5800db7cef2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0197a943-7fb3-4957-9534-4163d06b466a"
                    }
                  }
                ]
              },
              {
                "id": "f858a95b-da1a-4e60-af7a-60e792a56896",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "115acdaa-b0d1-4b2f-88a5-08fcf39ca4da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3a6fdd6a-5d5e-461c-a9d3-58a5e642ba6d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "329722e3-8f31-4bd0-a5f5-36ee0acdfa52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6bf7ec1b-421e-4b25-895a-b1053c793b50"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8534990f-7b6d-444c-9c82-11d41387e73d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "00900ce2-ff8a-4a04-ab3e-32ca122636ed"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8bdaa7e7-583e-46eb-8e67-23debbdacbb3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f2b09470-48b9-4c96-8e52-e64363ba1f43"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e2886a19-4f4f-407b-b4a2-87590708ed7e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "283b9155-e5c2-4549-914f-b8899a1e57ff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "16a18572-5121-4613-98d5-11d2d4a2edf2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "720d0acb-031e-446d-9690-ec71b2953540"
            }
          }
        ]
      },
      {
        "id": "361a396d-66bc-44ae-8785-88cc9864070f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "baaa77ea-8d8d-4c81-985e-514dd3fce701",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6f78a98c-959b-427b-a165-d74be8a30118",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "094621b3-d0f8-4e5c-8415-6f6108ea7810",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59014b7-1d90-4b51-bf50-fb1e0fa35a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "518cc41a-5fe3-4e09-a8ce-6ae4ab42bdb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f0ff9c-6863-4948-9e6a-fdb903e38827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "45cf5002-c188-44b0-867e-7267bfd7c647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451f289e-81c8-41f9-8342-f6560e43b503",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c8d4ee-7f6d-4fe9-aea9-c9915351c2ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed71a444-be43-4c61-bc94-7b046ab621b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d161fba-eade-4a2c-8459-09c22f381cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "772c9a50-ee34-448d-8174-71692b882004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e0799e3-a79b-4666-8cc4-eb417bc79561",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6191fd2d-35a0-4f16-a3fc-d551395c6e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32530af5-e561-499b-90e2-3a091e4873bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd3dd69-817a-454c-a478-149d0c859602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "36deee24-6769-4043-8527-cda1a9fd6688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9436c87e-7280-4040-b47f-6018e998d4b0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22a49b1-c01e-464f-941b-d0733bed24a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e94ed988-ecf5-4d8b-972b-671ddb4aae0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a16ea6-d8e7-410e-ad01-5df33bcdb3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c5d0a2c-0167-475c-a06b-1991bff12203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47236720-9b27-42b4-91ed-3d5d9fa2d0f9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec76aff5-41f3-427d-ba4e-0d939c5aef4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad48ff4c-d03e-49f2-90ea-61983003a9be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a6a18f-19a9-4e00-ae5b-f89244ffa0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1df664a-3b8e-481f-a286-b0ae978dfa94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ce73fa-0c99-428f-9c22-f7d07c4a14fe",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3547e7c1-d184-479e-bda9-e9e0bf77b436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b943311-1f2b-4323-ae99-74c961cc6e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55505dc8-89cd-4f20-8363-d8050e3cc553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "60d7903a-a614-497d-a872-aaab4123c651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7efe0c49-d8f9-4413-8b8d-ff479c30c8f1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7658932a-d27c-47d0-b041-bd8b2c7afb9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc66a180-65f2-4474-b27f-d406a5731b43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa643e66-23ef-40a6-9524-c136c7a0500c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b669604-4692-4cc8-8ae7-0b88beda96b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9426e0db-164e-4eed-a5b6-c80973dc2dcc",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2455ba13-5bab-4d9e-a53b-c5e38bf20a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "965c7590-f05c-4ebe-91eb-e65b6bef1008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dcb0aa1-87b4-4742-a431-bcfb7e393ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cad51f9-abca-4f1e-8cee-b5acc174fde8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f422d7b-fdc7-4dc9-b06c-a9b952a0fb5a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9dee02-e9f7-4256-8457-753fcd225608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e8389ee-c7cb-4823-8312-9789fcbb855e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef13e09-d9e0-48b0-ad8a-090cc069bc86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26e8e06d-3453-4176-ba91-529505a9ff92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5af751-1c5d-4675-89da-a8bfcf6811fa",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "131088a3-70cb-41b7-8cc3-b44e3e531cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09e626fd-b75c-4156-a686-f6993e331ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eba129e-214c-4b19-8bcd-8b6091e21a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12b9a115-4716-4579-9201-87be99e177e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf3e9bb-94c2-45f1-b241-db8487d2af8b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc273fd7-967f-47de-9e6b-8fd318007fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eec1e8c-3822-4eb6-9740-b06eca791b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e93cd649-b05a-412d-ab61-ac62a5e00b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2923dbfe-7994-4a19-be79-185dd274b3a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae49349f-5ad6-4d9e-b03c-486754ae69be",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cad33c5-1e12-49ca-b101-e2ff6ad5cce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af6a54a3-c3fa-428e-8f7b-2856b305ca29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "835a5dda-2128-4e60-9a65-7db8fb345f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5cd64fd1-d5ad-4be7-be07-c3231d04ff4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8172a00-773e-4c01-94bc-3caba09748bb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc2ed03-2dfe-43cb-8f30-82e524c25150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e94f2aa-7dfe-421a-8ce6-80f479f83392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5b9eb6-edfd-4f33-8cf8-49717b65f314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "75b2b463-cb52-404b-b81e-959630b516fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7701ba6-0e70-4b17-9721-6f136e2052a2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e790a86-e668-4d76-b620-acf33426ce18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c69873-aa32-4125-bbe4-42c3a75cb69d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d92ed4-dd57-4329-85b9-409316de5721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad49531c-612b-4a5b-b8af-168123737b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7124ea7e-ba42-4a21-8bca-9f3d7e511212",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1b8ec2-62cf-4694-a67c-0cc053dd2d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5656ac3-0da4-4b00-9a10-09289a2aedeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5b1501-3183-44e8-9524-e4ebf4244291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "551975d7-ac03-4c05-9eee-fa91735c100b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce62e9b-c201-4181-963b-6c1c1513ef4c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08748ac0-75f7-46be-b612-406b2c702096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e2681d9-51de-4e4a-ad9c-4331b3200784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d37c64e-6b79-4fe7-b6d0-a13812dba9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "85c89b31-ef18-4043-9456-54c2d9e36e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39dae3b-d16a-4732-a524-4e6da2410db2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7050ceb8-67c6-4810-b25e-6676605f8c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42980c84-9184-47ee-ad3e-032f10f6cb04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23751707-78aa-44b7-9452-0bce167cc676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "256e7b46-af1a-411b-a289-490b37cba9db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364740c5-784b-4407-8af1-89a06315db84",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c77e8ee-769a-4837-8660-980cfbabcd9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "015a8d37-4cf7-4af4-86e5-e65b1f513900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3fbc62-19b6-4317-9a24-9af2afce2157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d680aa3b-a9aa-4194-b04e-431f95add3c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32bbef2e-63e1-4a2f-b6af-966d9244b7d6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f003e5f-e4f2-484f-8e51-009eaea3beb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbcd451f-b5c4-4b19-8223-e3d5d187a0bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4feb4189-11e0-4a79-a9ff-709d16379e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d4af430-0997-4ae4-991d-bec721ebc39c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e44e32b-cd3b-4220-a647-6fce7de82c6d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6dad4c-9d21-495d-b01d-eed20a2f2ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e8207b1-5fb5-4321-b2e9-d5e48ac46915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc4cf5a-9cb9-4d55-88ba-fd34d7e6e814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d48fe46-09fa-425d-9432-d6eeca2e3c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a791271-9139-46d4-830a-8434f738bf60",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b45e74d-c88f-4ee2-b06b-574dbbc0c65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aae1312-d20a-45e8-8ba0-6cca5416271e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4627ea-b42c-4fbf-ac3a-49e112120aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9dddd48-32c0-4465-a198-f9e3eac326ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eccf6785-b866-4de6-9d8f-1064efa5f3d8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b565b73-ba2c-44a7-ad21-8bb22bb5de49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c96cc5ed-363d-4ae3-8777-d8da0dc57659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671c29d9-f6ec-418b-8c23-0190b187fe62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfbabdea-483b-4126-8129-52eae8397892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476f7fe2-6e2c-43df-92bb-e8c5c92a1e2d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d70db7-5928-496d-9c55-6763520ba3fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b0c042a-441c-4661-846d-0d5935b881c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d78b583-7dd0-4ec1-807e-f63962fa5fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee7033db-122d-4390-b556-fd9f1a42def9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f425d38-62a9-40c6-a7b1-b63032b67a67",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "165f0b8f-8a20-4ecc-a806-a919fcb61bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f43180a-ed85-493b-9c96-3359ec292d87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd68a02-29f2-492c-881c-78905f0d5081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a709824c-9af8-459c-a466-975b80e0a25b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61463a58-6d93-4171-a13e-071c3d2ed346",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b54e5e66-859c-447c-a849-5e2663abcab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d5055ed-09a0-4cde-87ab-9b7eabf1f1f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e55e73-5742-400e-8482-2bf7aed20364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8efe05e9-e923-439d-9576-18317a6e0cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca248854-67cc-4003-ba9a-9ddaa3f80e84",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d57efe-9f7d-42b0-b46a-9669daf5cca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b8a237f-29ba-4a31-a275-474a1641bdb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828d91e5-3418-4be5-a379-00b884e208a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45f06482-9df1-4e82-a859-d61ef3eddeeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca8e9e7b-a08c-4302-a125-25486c7383cb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f72ae92-7c49-40b8-bbd5-5a537514bb69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76171f1c-2055-4b07-8b64-9b3087a370bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc9392f-001f-4b45-b916-090c8c32b7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ddfeb54-268f-4e2f-967c-e0fca35e8a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ac34ab-6970-4524-bffb-55643db3ec5e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b35c3bb-e101-44c2-851d-c189aab55ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1755d16-2e7c-4603-a6a5-0dacb69b8680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "664b24bf-33e3-46f6-baec-7e6399ab9343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7538fee3-6748-4fb0-92bd-5bf402de1a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112668f3-91a9-440d-bae9-44f01a57cd17",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c6bf17c-f18f-419c-9437-fd3f72908130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "224e5351-3f6e-49ed-a1e1-bd261f19dc97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "accf7946-0ce7-4b41-b2e9-e39159ad20af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e20841ce-5007-41de-9311-fc1fe7fffc3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1993ce89-d8bf-4d98-bb11-1e75f4c0fa31",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682705de-1b83-4ee2-9a6d-793199aecf9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe474f88-9579-4d70-9592-69d1f87dbffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "551c95ec-d301-4d3c-8cf8-e969e2e3b1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb725948-3d5f-4623-a223-19cd3439ca1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f3a9ac-c871-4d08-ab65-fd3c6326970e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8348c61-f3fb-417c-802e-b5b2af0d7343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1860f6b-ac8f-480d-aac0-ec30c6f71368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f19b54b-76e7-497f-8191-86b813d171c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c58a3bf2-cb42-4e13-9b1f-36b10730723d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b0395e-6e2d-4a73-91d1-a02549709055",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4d4c70-2b44-4fc1-9962-d3dd80c17b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7577f9a-7565-4c18-aa5e-b801e5686dad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0741eb9e-f7e9-475d-9b3a-8bb532d958e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6db0b716-e8e2-490e-97db-22a250124cee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f959f4bf-2eb1-41c0-a97a-e280484778a8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ca5911e5-1f71-4602-a5bf-862898bcb123",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31516862-09ad-450b-8bae-3190fea65453",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d645d85f-6eb6-4e55-b5f5-8717caf9b931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ad05ac-d6cb-4d4c-a69a-b91dcf5630eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15d5b38a-d3e8-4a44-b467-a748f70d6e68"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79dc4321-a644-4f24-93db-944a19e7137a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2955d4ff-dedf-4d73-b834-765d659f99a5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "17c39d27-64f6-4d5c-ba0d-fa8fbe8cdd31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d802352-f696-4a21-9e2a-ac646ec44425"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3279176-ec0d-4bb1-b442-5b9aa50dab6e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "50e46c7a-9ca0-428b-88e4-cb29d5154084"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e498ae70-e2e7-4868-9160-a1cc2c53bf33",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "61b33561-0139-47f6-b5f6-4b3a4956d8cc"
            }
          }
        ]
      },
      {
        "id": "350c142e-d99a-4fe5-8e8b-49636aa3b176",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "2fcc810b-e572-472d-a5fe-eeee8289eaf5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1a19628d-fdf6-4bf6-a167-d5d10ecbc40f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "db4c5193-3d69-4b8a-a9a5-afdfbe7648fb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edcd8658-3383-4eec-b848-fbac1489254e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b60678-f0f4-4e71-bdf7-9877cea7859e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0172f0a3-e583-4296-a82d-fe33033b9ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ef98cdb-0279-41cd-a8f5-1fa69410ccdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa739a58-7a7b-4612-94a4-fc799b97a3d4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9aabf27-5e39-441e-9bc3-be6ad0da3997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0299b1-d7d4-4c9e-a997-f2c88fdb7db5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c04483-6727-4cf1-941e-e36eb8666664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3090e068-f5ff-42c5-bca9-b8ffa413c040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663c3f28-23be-408c-8c00-0d954b7f8475",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b7019c-85c1-4bdb-8457-e91b18a3105e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0e8bbd9-1b2c-4c39-93aa-a68f0d1d768b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28171206-1ac9-4b25-9955-e72ab2fef377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b173a11-15f2-4128-bcd4-49a673a8becc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67656a02-15c6-49e1-9c17-7804e71034c2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c32edb21-9fd9-4a28-8bcd-4c05ed5d4053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d611704-2164-48a5-9fb5-e44518f743aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68372f9c-4ba5-4164-a4a6-ff1af78a2f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6b9db2c-562e-4b56-8f5b-0a0e6efa9134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9786c0b0-62ff-4c71-871a-c49f2ef307ab",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5331d94-8683-41f5-a35f-a308e884bf96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dfba96a-b50d-48bb-bf38-bd1e23094f69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b7d4a9-9391-4270-bdd0-28361d212231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fb39143-4c4d-4b56-b278-5898409bd520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7ccf58-c135-44ad-ba0f-6f5cab430d21",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79753f7a-ee4f-4c90-b498-da11840614ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d872fbec-83b7-4c3b-9aa4-f8eed59e04d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a146e261-db3e-45d0-9228-8310c4d5e208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "08764761-b4c7-409a-8d4f-8e66c356190f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27e8a9a-2228-4031-a1e4-e41068d691f3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "873e33f2-b055-431e-af7b-03a107fea623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60b0e21b-3b05-41c7-bd02-684362e62dd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63a385a-3820-441a-adff-0a661efdba3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d482b0ee-6ee4-4e3e-941b-b3268b58329c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72b0d8a-a298-4a69-9aec-148e65ed9ea5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b5e0f5-f5f6-481a-abb1-7d13561472e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bd34788-83fe-4aa1-80e1-139012a67437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b4fd90-d753-4aab-a182-3b55814d5c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "13597186-74c6-42db-bb59-80ce1259b3f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8232c09-27f8-4b2e-b60f-953138a4a692",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ca371f-d2c9-40fe-a141-06ff1f72b2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "643edb3c-f5f2-4816-a3c1-5868ce259908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a524cd4-7346-4f23-a948-d71b068e358c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3f343e4-e285-4ea6-b4aa-702408b2e939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96d9dcf-271f-4ab0-9b5d-54513736bc7a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef44b1b-1d58-4859-8fe8-ede923afdcd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1420cc3d-866c-4cfa-afd3-95d548cea52d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c8f7b7-2b4f-4360-849a-9c729afeb3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f50d603f-3fd8-414a-b526-9ee3b02e0041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b2793f-3fa2-4a94-b87d-81cfc01ec196",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f6c0f7-2f61-416b-8bb3-6f97f21aeba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a7d0d15-84ae-477e-8ad8-8eb19d4b977c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391bf2e7-74dc-4d3f-b4bc-3b31c9b7106d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "85d3df3d-527c-4357-a09b-862e651a09dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781a8385-c90d-41b1-a10e-989037e68363",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aed5658-f2ca-4348-8887-5ee0fed67217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fad4b72-3779-4f81-ae22-ae3168a045fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f014199-6524-4ccc-bce7-204412553403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "824554ea-e25c-46cb-a816-a24ceb790b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46dd4845-8326-41cb-b899-34b13c4a9346",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a9292d-cf61-4fa5-95a1-ec334c7df8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7da5c7f6-82a8-4dc4-af1d-5b07119088c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7e5e20-1506-4cb2-8b27-824ab083665d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac46a6f2-77a2-4217-a7bb-a6384dd197ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "651bb4e6-3928-4e1b-ae42-cea615e63526",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55dc911-e3fb-4c8b-be7a-091f5ef323b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a3c656b-10c4-4d85-8348-e8b7c897c3d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36237a21-0bc5-47fc-86bf-092638f395c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "88733339-812a-4efa-b996-7fd9733ce2ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad547ff-6c45-4d9a-94d0-29792760191a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06cb830c-acde-4e62-9f34-d98f8633c6f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f53ac946-b51b-454d-850b-7931eb45852b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48005916-29fc-4d12-bf73-ec493199dac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6a64925-ac2e-425b-b042-2e08d469e094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ad1c3e-dc06-49a3-8cce-650300b44364",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbb1038-b5ba-428e-aee9-f598b8df2d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b855a07-f20d-464c-beff-4a447552a0dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86104b5-441a-4547-a271-efa458907165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec472b5b-96bd-403a-bf1c-5277ac9efc64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f855f693-d360-409a-8459-69f1c600c196",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb99410e-e138-4b71-805e-5d4fcbf10b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b06cf24-d304-4bbb-940b-a2e0b7029623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "384f8594-8074-47b7-be56-2361bcbe71d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f11d2e6-3503-47b8-b7bb-9cc8c0300a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294e0b0a-2148-4b0a-b013-7a519dd9bb3c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aedc67c-d5df-4617-8fdd-d9db6c915af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a423e09-2778-4b22-b0b9-5f48d57a8109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73acf595-bf70-4fdc-8152-5d1077d2ab6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1f8c615-5f13-40a1-b136-a915e63808c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee80c8ba-4977-431b-b25f-f05495c49825",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e37d8c0-38d1-4312-8a0e-e2080961d82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "036fbe87-610c-464c-863a-cd952b77de8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2e153f-9026-4bd3-a47e-70d3ba4f3e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79ccf339-df16-4352-9924-7d7fe87e99eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd1544a-8ac6-4025-a722-a4c4e490bdc2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a552bf5f-e4c4-4054-9b11-0d1bdc4c2d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7deadf4-bfb4-4c7a-97d7-8067c9c4440f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa47583-7b69-420a-be0f-3fa80187e5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70ea460f-ebe3-429d-b798-787510a703be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a51c7d5-5779-45f5-badf-8dbd69c609ae",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d26ccac-d06e-4aea-8b08-7bf183195470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e446c7b1-eea2-4e30-b915-dede2ada5d93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63a14eb-5b58-41ef-9d67-8925dde06bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b95532b-eae1-4f47-a298-2c64f9e41b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb490ce-8995-4e1d-afcb-36f4aab54a66",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2efcff43-aae6-4cd7-809e-f97fe68f59ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7f1b47d-c643-4a59-95af-85ba9e6ccd95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157125ae-a2ae-4774-8930-269945554835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e0b3a16-4d62-402d-98bc-47421a37e5f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a544a43-5c58-43e9-9a0f-9b4627cb85c9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e12e37d-cec9-43ed-993e-9069ae8a8f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd761dba-6ec6-4d25-8bab-bd14eccee132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36121121-ae7c-4bc3-9bbe-7395c479d81b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3b67864-935f-4bc4-b937-ce7d0a59929f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97990e3-4107-43c6-83cb-c5c24e341445",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97210798-2b57-4745-bc2e-e2a2a583ce06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad6f249a-032c-410f-ae71-81654fa6d9dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15d2767-fe30-4cd2-83b9-d4c2268e85f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04740f9e-0875-4c64-a4ed-a89c31437a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c90e14-1760-417b-b7ec-5ad305c828e3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "857ec11a-89af-4bea-b9b1-14f3bbc22c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d8e1fa9-1ee4-4321-9168-e447dc014634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97da9af-16fc-4c1b-b0d4-c1c55753b940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27780b27-86e2-458c-8900-88ba4baf3150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1859c271-1acd-431e-a579-bbda228b6940",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "148ab90c-003c-4fca-a2d2-b40309850b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70bcf6c9-c064-471e-8e4d-ca132cd0eed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "465581c9-f55b-4bf7-9e3c-63d92e8d3ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30ec9976-a32a-4d95-a5de-4d395e82daaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9bc3df-6260-4f93-9707-e0d74716258d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4daf25a-620e-4bcc-ba6f-40044039a020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37cb0acb-7ff6-41b4-b4db-d6261c43de7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4de531-33f8-4ce9-8178-1968fcc31042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11700b96-ecd7-434e-a06b-6fd742779ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbaccc3c-b800-4a50-b96b-658269d3470f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "843e9672-2ba2-4d51-b79c-cd31602cb316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93cb2dc3-c5a0-4402-9186-6d22ac59f11e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a719c606-231b-42d2-aaa8-64bd62f55467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95928629-8854-4db6-8125-364c5742f542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4914289f-21bf-452b-9908-c3178135900a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3edd5f77-96f2-4345-a4a6-45f2612bf226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52facbeb-3275-4c5d-8e56-df4862405013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057ccb58-3256-491f-9c0c-dea87e5ea675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d18f33ef-7501-4f47-bb77-b0e9fcd3c234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ed31ee-c6a5-4518-847d-8dff7a1a0fa5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd4aa8d-5359-4626-8aa1-0e96f9735931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e073ab4-cb61-48d0-9b53-22f1508f7ea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5756046-88a0-4421-82c4-deaf5c539fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6933358b-e274-4f72-808e-686105940c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8a7f1c-5f0c-429a-a64d-65829b8696d0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f4d5d7-09fe-4c83-b920-6c23b5425cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3efe12bf-9892-4d9c-8693-85ca2bc511e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552bd006-f1a7-4104-a995-f476d8de6629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d408787-9298-4ec7-adff-feb2c6740b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017d285b-6ddc-437a-b1c2-1e49de4fef34",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56cedc93-b2ee-4707-b642-330e608faeab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8246da26-dfb2-4aa8-8597-9e2ad0fe01ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "facd3279-59a1-4810-9925-676d301e98cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5690cde3-ea3d-4427-90c8-7b912477ee78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da843084-e6d7-4169-9150-3401c785ab72",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ee6a80-5f4b-47fb-a9f5-fead95db0519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad1a88b3-e135-4a1b-8615-849ddeb55607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dcef6a4-fdf2-41b5-825d-e4e1a9abe0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7c974aa-6546-4888-b9e7-54301375fbcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa091e15-13f7-41ab-8ef8-e01eb2b4a22e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ca5504-092d-4fe0-a4d4-248f3313135b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2944bf05-d315-40ea-8acf-4425ba4b730a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5f6026-4bf0-4aad-a19f-ef43b36d527c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53e6e422-e328-4c3b-bf48-713326ebc006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4228e5-aaa7-4681-9b77-40db1c9f4734",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c870c5-efdf-46d9-acd3-a9b92df11928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bebce53e-15b6-4911-b0d7-e41253ceb228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "887004a8-408d-4d2b-a403-f60d8c6b58d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9bc3a6a-c717-4b1c-bb17-1936b372b741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a33ee20-4d3e-4a62-927b-ecec63344032",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61997c6-f247-42bb-a362-3775af8d0e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "451d33a2-7b47-4b38-8db5-5952214c47e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67fc4c9f-579e-4f5b-bc75-5d445105e30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c353d46f-ad80-4325-a1a5-6873ea3f13d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9975d7-ea51-4547-b55c-75ee2e8946c3",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f740d3ae-c806-4a09-bae9-202c2b08e17e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adedb041-a9d5-4064-adfa-9ec66e60d2cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e13d1de-65a2-46a7-9b72-3e6ffbc32545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b03c700c-b038-417c-8040-cfdc5618f50c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "790442d1-2473-4263-9c4e-cceab9814afa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0f2aef68-083e-44c6-86ce-868d095e3580",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ad413f-fb8f-40de-b94e-33d86b28ff22",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d74237b8-019c-420e-81ee-4d8aae903828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a91a90c-0380-4a7c-834e-d73defffccb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "57b17e70-6642-474e-8638-c66b7fbcc454"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34b384f7-5cab-420e-a129-dc644debe7a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2254fbbb-b048-41f5-9eca-4485413a107f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "89a8cb52-03ff-441b-998d-4c1b4e529659",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7fd7b0a-5001-4170-8065-9616d7cab169"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b96fbb0-0147-4b2b-aae6-95fee92899d9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6b9c1c47-f1e9-49e1-a50f-49cf36652f34"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f9333229-fe04-4371-87ad-703e7e33c39a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "65069c79-86a6-42f8-8750-0560e7e1208d"
            }
          }
        ]
      },
      {
        "id": "3f365d45-748c-4c32-b3e2-7f5ec419fdbf",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "738a4a6a-61b9-4afd-9c43-3a57a09bf049",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fbde9a54-b804-495a-a5db-b6a2994eb75b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f66aee2e-f6bb-4091-92d0-25e2db491e84",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46af06f1-9f10-47b6-8cd3-d3bcf027a720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5578862-fe51-4911-9e33-4ba465011566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5f78c5-7436-47a8-a333-645328816dd4",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17cb5389-4ba2-4671-89fa-a4b3400493ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a331543-ba9d-47e5-8164-97f1bc221697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df26e14f-0c1f-4b16-85ea-153fb2782a67",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d70c782-3944-4d85-82cf-cb67b79bebd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c571c3bb-37ac-46e9-9261-2085829b439a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a3ca7f-4969-4d4c-b8c8-59dab7408236",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d050f1ee-9101-4b5a-b74c-72c24cfeca0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a83cf3-6b9e-444f-9957-dadf94d329ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ad5e09-0510-4af1-97ab-846583f6d9fb",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "280b1017-a055-481e-ae0c-22c20cd71a88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40603f1a-c269-4332-a976-988ab247281a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c325ec14-cd55-4f38-837c-ad8c7e4d8236",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f907693f-5b88-4485-bf39-83ea7de86679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02c27fa4-5ca2-469f-9a70-e890aca5323c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04835332-8fbf-44b6-9a8a-c952281e5d54",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5984ba9-3b98-4d9d-bdd1-82240e9986ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3272624b-37c6-4811-9479-20eecc0415e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b3a6c8e-679d-4c72-bdb5-9a1d9defa31a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd2eefc0-7b7b-49d2-8f4f-515bdb89b1a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eed78c0-8f63-4964-b8f8-354aa113ea54",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17200e91-3ec7-4cdb-951c-f87f8c2901d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87320b3e-a9f1-4b81-ada4-09f3a2916633"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c7909f-1753-4c98-a65d-62444022b950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "156b2796-418e-4922-a4f7-8a4c506b67b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a8c00e-436c-4da0-b3f5-2a0409fc3c3f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d776d2-3c52-4752-959c-c9e3b61174f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae96d0e8-a9f4-4552-a75e-becd4b67cb7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d39589-327b-42f2-9a0f-8e5f5348845d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dff3272d-8629-42d7-b1e0-184af7e1de72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef4968b-00b9-4e6a-9d25-77b99ce4492e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "267d89b8-2f86-4454-a6a8-f1d665d6b997",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f556277-03d9-4a67-bc1e-50344615ed8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9b247a-1b50-4c39-b3b4-6ba5ecc3869e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5516e789-de50-459b-84a0-9981c6883c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17453b5-18a5-4cb0-bfa7-77877c63927e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146af095-8a23-416e-8b87-1ba7d641a726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e09b7288-97ef-4d45-9143-fe77d1638df3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9db4062-eb3d-4c9b-bd22-2dcbdf34e9a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df9822c9-3502-40ab-a8ff-e8c0e262d4cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895a8327-56be-4201-b4f4-09124d3d95b5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa479ff-6069-4352-875c-06a06be4af98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9248c2a-e5ac-40da-afc7-36dddf8f75b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cfb2c12-6212-4f67-9150-a8e8d5477137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ec6bc6-7473-46e8-94a3-ade606e18774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f973422-c55f-4439-882a-0da44018cf63",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b66cc8c-3e6f-4cb8-b0da-211461aed4d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89547e1c-1132-45c5-8bab-94fe27e9b717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "790b7ab6-035d-4658-a646-aad5d8c2f29d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c851f4f2-24d7-4a31-a0c6-1d1daf72dc46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77018b8-770e-41b8-a350-1bbb4c9fd021",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a72f04-44b4-444c-9457-17b87aca8e76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a33d80a-0987-457f-8f01-9da8578face4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b3d1ca-23ca-40f0-8e08-7662e27b45a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30e2776d-1add-4c66-a894-2f5582f03a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1423dc-6ec5-4d91-bdc1-7c8fd74eeac7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c0d293-bb4d-4a3b-b05d-c0371a1c952a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "173998af-0965-4e38-82c1-6361ba5c7dc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc34efa-f6a3-4dde-a337-32caff2a6687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ba91c0-3ab9-4618-96d6-a53335115a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b66a401-7394-4100-be8f-c3ac53225143",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8a8bec-38e0-4a81-bcc9-169437725cae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f9fc65f-0ac5-4348-b63b-346d7080e45c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "790a60fb-08ea-4a9e-8883-f96ed56612f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5a7e0c6-2ba6-4052-9169-bd103cade09e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5314e134-bcea-41ac-b2d7-4a8b364ca1bd",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b398289-ec46-48d6-97b6-bd5efe325fb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de9709d1-4319-4577-819d-961f7f87d487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "741e001f-dfd9-480a-b393-2ce1f396d300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "700e9740-d0bb-4e3a-aaa8-00eee63c3c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e28d586-b50a-4188-8e35-8a911e428404",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebbf682e-e122-43f7-8cf8-a7376b6318d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caa75c92-f4b4-4528-967c-c0f6730ceffa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f07152-cfc1-47b3-95b7-51cd246f7034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ad111d-0326-407f-853e-aa5c8b2b8ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b9c715-f3f1-4f9d-a557-a964d9babd99",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b661f628-5d14-4b11-88d9-dd72788c885a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34f54afb-1241-4528-a81e-d4e6255776ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b548e84-1e1a-4c3a-9b54-8f3b083477d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5fdc84a-bc5d-4a59-bb46-ff2abd8d6f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d040d99d-da15-4c46-ae0c-a5da600f29f5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f72c27-b7c7-4185-af5b-990053165ef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "954b0048-be77-46bc-b309-1a1671eb7a2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "564c45e0-03e8-41ba-94ac-0c2667489ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ecdb04c-3eda-4229-98c8-9713e015c366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb9f2ec-f273-4ab7-bfc6-d7380f6f4c8e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d56ee08-43f1-4f72-9650-effd9308810e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b47124f3-609d-421a-a2fd-ead840a387a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "315e80d2-12cc-4ed9-9dd2-cc0a0179516f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1cf7643-0c5f-47eb-afc2-041d3b3b65c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e076aa2c-4e87-4e5f-819c-b7d2e8f7eb6d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a593f1f1-e15f-4c76-aa6d-2be98dd2b570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "675994f9-34bb-4273-87d3-4259f610e87d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "092e66df-c607-4044-87f1-b6e7b5342f92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "286a420e-e4c9-4649-b8da-ef9e01d320dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6823f8a2-9655-40b2-ac6b-94e0de5f3b99",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df4e776-1cbe-4742-a607-d9baf47e729e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab66377-5004-44b2-b9bd-a04fcd2ce4a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bede9e81-0f65-481d-afd8-8e5ec3449a7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81606437-6926-4ef5-97ac-f9230146d96f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1cc9f1-6509-43dd-a0fa-3231e7188f80",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a864a5b3-08a7-4668-849c-29628b4a8654",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da383b75-de03-4e64-8aab-db0648840052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93d0609-808d-4b1f-a712-41e830e63ff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "156b4073-2acb-4028-9d24-e9fb6f6fbfd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89e3252-c79b-48c8-bf7e-c391a73feac1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c351ce-7b67-4d7e-8cfb-6d4295672478",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da5cbdd2-40f3-487c-8757-8f02a58a0db6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6f6699-1c9f-47a5-b842-ed0a29176791",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa0293d2-8a8d-4394-8c1e-d9cb0d17248e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b209d6-66a2-44b7-990c-6660cee075ad",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5ee2ff-87fd-4d60-a5e7-6ed8f5ef92f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29f3707d-f779-47d7-a05e-fa5dbd192da3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f7cc5d-73d3-4db6-a393-4c65794567b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd381b1b-71f8-4417-947c-a52e40a808c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ace41e-0fc2-4195-8d87-28c970cca49d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7fb292-f97f-4ede-b449-2b2678b5da5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2374de5-f05b-4e50-93a9-87a4fd93a088"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3df847-222f-4914-8218-66c3bdaff2c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46873d2a-89d8-40d7-9014-8a72167a7e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c76765c8-88d7-4c88-adc7-bcf46f4c1cfa",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa41427-b59e-4bc5-b7fb-8dc0db021c22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9804491b-643f-424e-94e9-9f06c33e2fbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b19de67-21e1-4133-ad6b-267ef819860a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a1ad9bc-3267-45af-a256-9f4427b25a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9bd73d-dd00-4df6-b8d8-f26f415928cb",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2927e5ff-1af5-4f98-a1ee-0af9c6958392",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c11f2728-ab6c-4266-9a75-0d0720d17c85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f92148-96a9-4a11-8185-92d7b6739661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00bbbcdf-07fd-43ab-a675-50ad701d31ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce59acb7-4fe8-44a1-98a6-475e40bed06c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af46b6e6-63f1-4bb0-b6fe-689179ca09bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd2275bd-58c7-4ce4-8936-1ee50937aaa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "853bf978-0b8a-465c-b13a-b02980a0f285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cbb1f80-17d1-4bf0-b53f-76c03d30f888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1cbf0a-79a8-432c-9a05-83b126e74221",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9005db6-dd5d-4ef7-b51d-6502d73dd19c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f9d96ba-7a1f-490f-8eb0-6c102d76543c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "601a6711-8fe6-4014-adb4-e216191c2ee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "867e4214-93ba-4108-83bd-177bfe25fa38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f030a2-2602-4105-8e7b-90aa996cfb62",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d824853c-4c3b-4b13-9809-a13745547e70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3523e0b1-18b5-4d43-8b79-4aa7f79a1ae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24244eef-f24f-4701-9c6e-8a839389e2a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edcf1eb1-9c70-4dc7-8112-50ed1c72d8bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17985526-5432-4186-bdc5-b83f71956208",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f6e356-8bd0-4f79-8348-f438931f9e7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c263a2d-c2e8-4497-b857-c132931f72e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf76373-9363-41ce-a3b5-8c8d5808c12b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2fa95ae-fe4e-45d1-8355-e5a24b00c317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd207385-ba43-42f9-916f-f77179b736b6",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d5e18f-82e0-4a91-a614-d3d8c53f11ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27d31f99-d372-4dc1-b61f-5210ea6ff972"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ffa6ba-a096-44d9-81e3-feaed1b6439c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c979d2e2-4230-4598-8728-f528b4e92f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3581ae-3f22-417f-97a2-b79981b201db",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169a8763-8fad-415b-a4b6-3b42de2253f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daeb7a56-ed24-45bc-851a-4a1f035db755"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "577583b3-6df1-4c40-93ac-3108b75470d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7025f86e-570e-4b73-945b-ceb60e5b918f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a2317e-d7e3-4016-a197-f5ee08190c72",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04143410-ebd7-4a38-bac2-6e50871ee6ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b74e7f2e-326f-4b72-b6c8-bd6cc3d80a81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c0728b-e440-4ed8-97b0-f9c7a6c45441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e79bb1-2a05-455b-88c7-a6c144f4d577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f49d6b4-6f65-465b-81ee-c661c241bd1a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d95b75d-05bf-4ff2-9f2d-4dad5384f8fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8addf439-950f-4b24-8db0-e3575b9df976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37aabe6e-6a65-4830-809e-e2812ccacb85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c79c355-21e9-4231-9e72-d14af9748961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86af5998-e191-46db-b721-b8854ead102f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea443af-c4f4-4b02-9adb-80580ede3d67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b385a13d-8dff-4c44-b104-dabd8eee25c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34dbd2fb-be88-4161-b1bc-9d41badbf312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77423016-983b-45f8-89ac-fdef3a539061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f14f18-31db-4328-b841-124699666190",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d5cc8a-4e4d-4310-9cf1-cbafb196ecb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cce27cdd-fe8c-4ff3-8995-6082726e56a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e281cfc-c851-455f-ab89-105f6051ea8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16744dbc-268b-40bf-af67-dc247857d513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b048dfb6-fa99-4f59-be60-e34f1b9ce695",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be37d4b5-6ba6-4b9b-98a6-47a2fdfa71fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e85c8dbc-0ce6-4c9d-97aa-775c43970a6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0380b17-6eba-4a3f-8299-0dce757227ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5e009e6-92e2-4e8c-a1ec-34378306934c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9549a43-e79f-4730-b933-01fb9a853cb4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f39b7d0-c9eb-4ae2-901d-75a658abef10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd10009-0ca9-449a-960d-1f4f85070e2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "510ccadc-6443-48d2-846a-656da473bac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36dd8f4e-7e97-4f72-819c-f2349f63a5c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d612667e-9e72-464b-bef0-199085ec7511",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462d5030-cc24-478b-b9ea-b63f45790ac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee84d846-31e0-4919-9376-433a9586c3df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c5e56b-1383-4c11-8049-81e3da209450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b918a89-ea16-4d3c-a0c4-f80cc6b8eda7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0684bfc-f274-4e21-9025-ad871e09fb82",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280ee3bc-b970-4922-86c6-cacecbb294b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe25ca43-4385-4636-b15e-c961c9940edf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c7382e-262d-4180-9d90-67854acc95f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55fe1ce9-2840-4067-9c37-03289f541db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "662f46f6-d02d-47b7-bd94-a585165ec83c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01ffa13-28ba-46ff-b4ef-73334bb2898a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59c09a79-c938-490b-9d06-5b31f7199a38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af714ae-54ad-4861-94bd-94a1b73542f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9159a6b7-bbe0-4add-ae84-1bbd498ed283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80415b3e-ee9e-4f30-99ae-ecafb25db7b4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c59f15b2-cd09-42f7-8819-372c517db5f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29307b87-70e7-44e6-b598-9e672c45937a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b558e83-a1f6-40a6-bb66-490670925495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b5ef11-9cb0-4819-afb8-f9f89fd83095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b72bb12-4706-4c4f-8471-079537750b5a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725857eb-269f-4b13-93e4-3a01112e7079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e17e2dd3-1397-4947-b444-c78002d381d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6981776-2820-4177-b214-44c401671ea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b718a2-f5dd-4190-82b6-159f73acc019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e8a6fc-405f-48a7-a876-a0d352988179",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a147fc6-ccd6-4e8e-83b9-fced7a0d4c0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d28317ad-3651-4cb2-b47e-131beaa37ac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d34963-b549-4693-8958-2cec7b6cd8af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c2557b4-a95c-4290-abbb-ef18a7d99e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4bf52d-a7ba-4c9c-838e-d3dce63cde7c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470e89d2-0239-41aa-8cc1-9005e94d5e35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b407de24-a4c0-40b2-9e6a-5e44bef0ae63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fb4451-645e-47d7-9585-f88efe08e4f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4029ee2-9b07-4012-893f-de347fb74764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b28f6e-31c5-4eb4-87b7-50e9451bf048",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53dd7b5f-3e9f-45c3-9391-890a0937eb04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18323239-41ec-458e-b574-106dbee632a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9fd2f8-c64f-4386-bd7a-84a1bd307ff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c72848-5917-420a-8b36-22d7b59a78c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c034a5a4-3ccd-4bd1-9861-c0f3d6e67e69",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c0334c-f9b6-4d06-824f-c2a41e8236b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2addcd26-0a08-4c8e-8b77-2ee468ace6db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8b8097-7f93-4fed-8003-82387de0d0ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e44f1874-5a5b-4a4a-93a6-6d79332174e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7fdcca6-3bc2-470f-9935-a4b21d994be4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4168f377-c155-4f95-996e-2244a76d115d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4e0a935-ce2b-47c6-92b8-b3f304f7ceac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4ed3d5-8282-4a28-8689-ecde57ffc7cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9475e1a-00b6-47dc-bc83-d4152dc9d05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c764fb71-8d9a-4c38-9039-307d524b5e72",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7fb0002-7474-4ef7-92ac-77936d339e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d6868ec-3280-4723-ac10-bfb361acb82a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec9628a-0ef1-4cb6-910f-d1ec4fdaba19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79f6e14f-54c5-4e95-a5ac-23fbae2dc453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81e1761-a45b-4ef7-9428-0ffb7cca9781",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21fbe32d-8f2e-4a27-8e9a-fe1140423f69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02e35840-26ec-4aa2-9b71-3bb24b421312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6198969-4502-4e41-8bec-febcf4b617d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b990e04b-4397-4c8e-8dd1-ee8329bc3150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ef2a4d-48d3-4773-939b-6c4093245039",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89fab419-c81e-4c54-a0e2-b65f6e163749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8678cfb-f316-46a0-b4d8-c225e0d92251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0200143e-ce38-4523-ac27-0f35618504aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "126bc83a-fda6-4274-aaa8-b07c9d001de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7896be18-d3dc-457c-a207-c727f9526751",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "512a741f-8486-4128-a225-d7609998a422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39e7b261-f8b0-449a-a9d4-ad8f6861663f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfad4c9d-2533-4908-94b3-5827e6618518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d3d12c-6dff-4dcf-830a-7b7c3538837b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d7714c-97bf-491a-96ec-bdd8b3b45fc4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8bf5be-ac56-422b-b7cc-13eb193981b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9532e404-428c-4625-97ed-0c743ffa145d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7261501a-f0c2-4f5d-bcf2-8146c376b139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "214501f4-3cad-42b2-b568-3da4ef9748ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d0e5c2-8ff1-48a2-882a-46f6fdbc5c7a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef7694ec-9cd3-4779-97a7-f3145c03455d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86665113-84af-4d9a-99f2-933908e2a16c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6333b266-4a29-4edb-9df9-9a6fb5f87e18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13ca4d6b-4bf7-4df1-b900-dfea1f5f2c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c255d604-675f-4399-856b-d3084c6384a6",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e52e1a-fc2d-4d36-aaab-6e6a6402b5b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7455043-42de-4b1d-b8ec-3f00ba7ee256"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f40d102-7d37-4a23-8a0c-a2a73a81214c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e92b7ac-9c03-4e82-aa51-4953d748bc85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a4e384-8eac-4f8f-a130-2fb8a5fb5e6b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd56923-c81d-43f7-8c6a-0454d58bac16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "007613ee-1048-479a-ad6e-22e78c3bfa61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ffa874-fdc9-4be9-b916-a8ff9bb427b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90139ad7-75c9-455c-9366-ac4cd57ca85d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4de202-d316-4724-8f29-6e0303f2f041",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adadfd54-8a94-43fe-8b95-96ff91cbec59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f849d20-d0da-4241-bcb7-46fc0c8179b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3521ff-f72e-4115-8516-61c30a6aba5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "992a1a52-f0ed-4894-9bc7-f2dfa093bf24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e010f01f-0175-42ab-9a35-8217ac4b5e6a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cef2300-aab2-44dc-989e-a865c29c4e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ade26978-dcbe-455e-86a1-3f15b5921d29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c70f1b-bb14-4013-9784-9fe56ca06733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eaefb46-32c1-4f5f-b86d-a0aece0cc41c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de465a1-88b7-4493-9e49-233ddf702a82",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256ded68-4921-400e-8866-e1919a53ddc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17ef7772-c12f-47d9-9b90-26e6d9d91c80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "279cfc36-4bfe-4702-a46c-fbd8cc977efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffa1adcc-85b1-41dc-9cb5-b0e0ed1ea6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137bc92d-93ec-4ae8-882a-f8cc622e60bc",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3aa3e6-52ad-4c52-a73f-8bb774e3dcfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1beb3e9-4682-40b6-aee4-3dc28e5cf068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3d602c-addf-48cb-b0d6-5f7d519cf58e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52cad8d2-5064-473c-9479-a13736c89706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8da725-c6a6-462f-a034-36d3bfad7cc9",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a06a1a-0b32-47bc-a576-013b381da42d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6b54562-b87d-44b7-b1d6-be90189c6bfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7c0b27-5192-4327-8e2d-f9a6cfd804fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8bd335e-7e65-44b5-9b19-61e18504653f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7927483-9351-41b8-97cf-5378f93b193a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "171b3ee6-332b-4b73-8c78-694bcb3bf91f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41430db7-a1c1-48c9-859e-7381ae2c885d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6846685a-8d44-4630-8a08-2c86caf23126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5c6bb25-8a87-42cb-8847-564ba1f2eb96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee20b54a-8535-49f5-8d86-f31dd8319024",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4e3f7c-b2c4-4cb9-bf99-fed8a9ae1c18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca81e48c-54bb-4823-b94b-c6957233d19b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "249eacfb-fd98-460d-957d-09cb118a6b6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32fc7f09-e11a-4faa-9468-44d78b20a98c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3efb7bf5-9e6c-4976-882a-f226d1867562",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae3ba70-77c0-40e2-aa09-13c7a2b814e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6a2802c-2218-420e-8fb2-971031eabb3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa9bb67-642a-4804-a7d7-61e18c08dea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43a45d03-e6fc-41d3-8b6a-52a43da80402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f158901b-786a-4410-a5b4-daee1b8cb7cf",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00916a8d-1dd2-49b9-ae56-e71959371548",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9d2ecfa-4c98-4310-a986-e95315a5a4e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea10b50-1a7b-446f-b6ef-61014e21cada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b128d08-2352-4209-836d-d681f3c01a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa6a009-74e6-4595-ac1c-e1f6ad010cd5",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281bb476-779d-4d22-a64e-8bc9a8f93b76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e61aa20d-3123-43ae-94d7-d8fb5db3e287"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5e8819-6a93-4248-bb55-216a2d8a12bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd3d4107-f2d9-4012-bf27-c524ba1a71f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5c80de-12f3-4bb7-83ce-35e84919fc1b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2125775d-2610-403f-8ec8-c7eb53b67115",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87d19a36-9a90-48b5-9095-77b577e02752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fad793c-712f-4d09-885b-03daba89b52e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee0e4f80-190a-4391-b31e-5ec14c9b399e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40cdbf3e-2833-4022-88be-ccb33bd34a11",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e42d22-1533-4fa8-a065-c28f408fe0db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a0dddc8-7a38-416b-884f-46ff115285a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "110aee0f-7b25-4a12-89f4-5d6e1e61496c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd19cca5-7e7d-4681-8cce-845842ae9288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a13822-7c1a-4f86-86e9-d0967feceae4",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ae11f2-bd34-4033-9215-f1ad14416857",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8313ae82-65fc-45a7-b69b-f938164021f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8f9df9-e882-479f-a3a5-79b3016f2930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8171c7f9-de93-49be-8e9a-bb74f120b17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231286a6-2034-47f3-83a2-fc172d557a81",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d96e11-9be3-41f9-8d16-c88fdaac5f2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b13862aa-4968-4d7d-86ca-0aecae25d588"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d0da6b-a0b8-47d7-95d5-a27e38358168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e935d24-3fc7-490d-bb3b-62c9f4e6dc17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1804fc0d-45bd-4d77-b22a-e9e64d8cf579",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d503d72-f820-47e6-9efa-7cc8e7df96cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4b83e11-7d13-4d0c-9414-746a2f99b461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd60370-0f1b-4c33-b690-b156e3257091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66faea7e-05c6-4d38-be6b-af333701724c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8787b53-a76c-4c95-af00-397ac3671086",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847deb68-dd2d-451c-b5db-9bf0434030e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1158791f-9df5-4bf5-b205-fcedf7008552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58fb783e-702c-45d0-a315-d38450166a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd7e54f8-22b2-41a7-879c-90dafc0745fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b334c0-5640-4152-b18b-3e628c769b48",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812f775c-3659-4179-aa0a-1b4befbc906d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37871b55-3316-4530-b07a-1b1618636f46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b873222-4f2f-471e-b5de-32228ba0cb90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24ed2185-d9b4-4e0b-80ef-02f8b9e489b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d20f53e-fa8b-422d-a617-ce9c04413698",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e78217-5161-46bf-ac40-0ba6dad2d9c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ab1ac45-e3a1-4731-80b9-731072cf1cfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0205b83-60cb-4f44-8b89-7a6fefaff0be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68bf2aa1-1ab4-43af-bd6c-13d15d610d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f46064-fac6-4a82-a96a-6b5541c9f3a6",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b61457-f4a4-4e4e-a0ff-35ce9a522339",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63d7a1ec-3614-4e65-bd40-ccd857e2c711"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b946550a-10dc-4f82-ae4a-44c6108dfd74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb134bcf-d5d7-40a6-a655-75b55dca9601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de112e1-d7f2-4adc-9c1a-11053c414607",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed8c922-bc58-4473-9403-336cf4423064",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a06c6ee3-0af6-488e-8d2d-1efe3c6a24ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c2e35e-2525-4cd8-b584-cf9578aba8e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "730e356e-7d56-40d8-96d0-44db66cea09c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac92e2f-47d3-4b73-866c-8b4ffdcca304",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c454ddb1-237e-40fd-be90-f416cad33dd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9ab0aa6-7244-4ba7-b3a9-c0ac50c0a4ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8fc730-a97f-489e-bc72-e46a734faaa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acc704d3-55da-4ea0-9c3b-e9d71a6948dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663bb814-d0c3-4f78-85c3-3e41cbe868cc",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e18e0d-873c-488d-9a6a-6c832b32b025",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ab5fdf7-d1db-400a-b9a2-41f4e97263e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "587d0b31-b244-4740-9166-9403be006eb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "118f0561-9c0d-4a30-a50e-4b0eb3ec2b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0119c26-0b55-4edd-94e1-eb3898dedaac",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccff0796-1fff-4307-93b6-555fc25327fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26c31766-b6bf-4cdd-a056-5c88a49b2d68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f87f206-31c4-42e4-87d0-ba5c3189aec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1dd5b0a-f010-4598-8f62-c1a6d7435a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c718ce-a3fa-4f9f-94bf-d853b7db60bd",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4faa4454-9a37-4b34-b675-b7f6b00f75b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dab12154-6641-4622-8e9b-f6c841da78a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2887dd-fd22-465b-a5f4-559a46fef960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dfabadb-e847-4e25-a0ae-3a25a6c8a4b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b7e3bc5-e7d0-4db1-a4fe-206a4b0061a3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022efa32-d302-44b0-96f9-c1101c96d24f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4db9770b-fa9b-4f2c-816f-76a79f2c0f00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7295af-96ff-4080-bc83-7df1d03b7750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59abfff7-8348-475e-852b-82f24a21a522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35842cd-00d4-4c87-a30f-5c443366c55e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63859dd1-d7db-4a61-bbdc-9a7b3528eb6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0c76070-f8de-4299-8dfb-2584d5a99559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b42613-c8b6-4950-a60d-c72260729e36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e01c075b-7ea3-4b96-89b6-c775a351416d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74079e58-bc71-4004-8e45-ba333dbe6458",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb7ae00-0286-4bfe-8c6e-5db7da95bb10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b98b22a-2eba-437a-9c4f-5e2b922a5a93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a9e59d-a6ad-4a3e-b151-9a8108746d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f6ac89-5043-41bb-8a1a-18bf2f19cd19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93987c56-4c34-43de-bdaa-ee8178762c64",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215d8257-5655-4d3c-9665-13ebfb57044e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "467839b0-4358-406c-ae8a-adc03673cced"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9feb3a79-49ec-412d-8f16-31ca17d41cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "606b9f75-b15c-46b3-bbde-ca73b33cd3c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ff2d29-658e-4f9d-ace8-5643331293cd",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04940387-31e6-465b-bffc-d1a77b941f52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04295c65-8f39-4cfa-8fa6-6b4f6f59d89d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2977ae8-7aef-46d1-a864-a1aef7144f76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcd06e11-d780-4536-aa08-4d9b78b2c7cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ca7ece-1176-413f-8d1e-b491851318ed",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8db4e62-9ccb-4978-aa51-7e4d9bd85391",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55bb0a3e-03f6-4530-a97d-fe4508cfd70a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffcece7c-1699-4a1c-8760-f17cc88cb511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e054cb06-f7cb-4f92-93d1-2f8206254be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2d5b75-b053-4bac-aeef-511ea175dbe0",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c62bec7-6855-4763-83d1-70afcbc4bc27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe4fe3dd-dabe-4b30-a718-54474734f12a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32fd2f0-6291-4bdb-b10a-703bf0266ad9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37e92a6a-56ff-4421-b9cf-ec7ca543d43a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c437a4c6-6def-45c6-a5a0-b5f0bf65d275",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9345c4f-b19f-4eb3-bbf1-008d07f0876e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ff8b859-f2cd-4861-b7e8-0b7405287c02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5545fd8-14c7-4829-9dbb-c50c705ad46c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "127a954d-ce6f-400e-9037-017bc88c4fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b8c812-31cd-4699-a558-a837adb0fbd6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66814c2f-2d4b-40a0-a57f-5b76ab1975e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9f724cc-1545-458b-bc4e-ac1a0149408c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "871d0771-649a-4482-a5bd-2395ab636ebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d260c768-14f0-461d-97d6-8d75014a81fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf3eaba-3aad-48c4-b6c3-573acc860f9f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76b5668-bafe-43eb-a9ff-a15e2fcd7178",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33b4be8c-d1a5-4e96-bca3-892b780b41bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ab02ac-ad6f-4b10-a726-05bc88600206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f108607-f1fe-49d7-a514-f9dd8529d156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88740d6-8a04-42eb-8168-74a8f97acfe2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40550e05-7430-4ba4-ac76-a795f4ffd5b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7d7afe5-7143-4ab1-b43c-614e0a609ead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "337a0209-cdf7-40ad-808f-dc64ea7f40c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd6c3146-f1fe-4081-9c5c-44bbfeeb9ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14aff7ef-44d8-4ae7-9dfa-2027abb12344",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3cdce07-b00c-4f1d-a92c-af68569697dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ba8752b-b1f8-4078-8823-67cae6f4c430"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3008d16f-260c-4b78-a2f0-48be2b10e6c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4027cb49-0e8d-446c-a328-96be6921cd65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044fda67-7010-49ad-8a23-2ee5a978fd6e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674dc755-864a-4d2e-976b-4a9c37da852a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bac5aa3-3c17-4761-8284-75391ac32bc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "160cff50-62ef-4bab-89ba-83125f486e5a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55919be6-fa9a-4992-acd1-4310e2fb06d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f04d62a-3760-471a-acec-e1a084de631f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34365aee-e154-45a7-82a7-ada891162c37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "994146f4-246e-4bab-b896-eee5c403f430"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "859b2e89-6bb6-4c16-8e3b-c31011577d87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1dfa633-dd1d-435b-9adb-91c9c8e708cb"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "afb19382-b0b9-42bb-b227-205068d8c722",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "337fa2f2-5387-44a8-b80c-bc180d1efb26"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf993fed-f7d6-445a-b197-09c74f123d85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8846db76-08ce-45c6-8b17-3efaec0f8c00"
                    }
                  }
                ]
              },
              {
                "id": "f9cfb381-d8c8-4542-9726-61a6d0a71a3e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "947eccce-7e49-4658-8604-f17c92cb654c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c556a4a-507f-4aff-a10d-d8b3fb3b1604",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8dd9180c-04ec-4921-a26d-5059913dd35d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "348eec3f-5b70-4a7a-ad0f-d3140e6e8228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a821407-c58e-42e1-986c-3e5bb0c49487"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc011ed9-c6fa-42b6-8414-28be74f936e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97abb21e-6eca-4bbc-83fc-dd3aa69c4033"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "efff2a6a-606a-4b18-be13-2791f4968fcd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb7bb201-e5e1-4edf-9518-61631bf0887a"
                    }
                  }
                ]
              },
              {
                "id": "ab3de5c8-d9c3-40b3-8005-79b28427aa4f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3638fef1-b904-4e81-afab-a40c29c60fa1",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde6f184-9456-4892-af73-0a03028514c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8f4c2602-b819-4d04-8b35-83c41186e1e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f5743b-0bfb-44ba-946d-bb37c292dcf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcace001-143d-4fd7-b27b-fedef14f8d7d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "848d6231-ce5d-4f5e-ab26-e97fcddb4e26",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3652b089-aca5-44dc-9889-5f7d3a06ef20",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3271d595-7344-4f90-8f3a-db29c42c39ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0997ae8e-8541-455e-aa1d-c5099aff13ac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "803ac8a3-d3ac-4e9e-88f0-6724ed631dbf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aeef9cd0-1b96-4a2e-9c65-6e0707bbf981"
                    }
                  }
                ]
              },
              {
                "id": "d43dc23a-2da7-4192-9701-3c75516272a9",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "121f9053-691c-4bf3-ba34-7da0806d6015",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0354f5fe-f5c0-44b9-aaea-800a7008084f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69f0eefb-036e-4468-81c8-253f09fdacf6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a33f51b-97ed-4582-b812-c768d57908cb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ba00493-3e37-412e-b323-61b606e10580",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f2459c53-2cac-4507-94d6-d17a4b68e858"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e1638151-0612-43c4-af4a-84641d844790",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a1fa5cc9-93e9-455b-b36e-20670024782a"
            }
          }
        ]
      },
      {
        "id": "e40b927b-37e0-40b9-bbd4-f71f517db349",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d6a07430-4d26-42ef-854b-18b44b35dec4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4c315b0e-e493-4808-a904-a1710ea5485c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2104b123-1378-4903-8072-f42a2d371163",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9baaf7ca-505c-42ba-95f6-8d85d1dea0a5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "28bb617e-f142-47e2-8998-49743071ee5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a296f3e6-9022-49fe-874c-656695313555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35a4ce78-4408-4214-9f97-5159afea124d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e032085-be7e-4c24-b771-5f816ce13d37",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e2f2447-5b97-4262-925e-b1b0a84ca1bd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2f55a8b-fd80-4414-a3d1-faa95bf5335d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "623549dc-61cb-4b72-9016-ebc7555cad3f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f9806964-b754-44c4-8d13-e83136a3a28f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "03fe7a39-685d-4df8-9206-cae46d62a010"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b6433c4-30c7-4e68-88f8-dc71c63440f0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8234163c-62a5-4ea9-9ec7-ae77b2d90466"
            }
          }
        ]
      },
      {
        "id": "6ae1aba4-c2ff-4eb8-a01c-bbffc3d0e3d4",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "430601eb-a62a-417c-af7d-c8fbef2a535c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c19c9592-5a58-41d1-9586-fa84ff74702d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2fc4eb9e-4bae-48dd-b634-0a083d7d4784",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6dddd80-b6ad-47a0-9d3a-77db79fadb1f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2556ec4-e123-42bc-b400-6dcd2a406802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8245a7-7cdd-4b39-ab56-666480e361eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "003313e7-9f46-47c9-a6df-19b74c98a4fd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f3e227a-25b6-4be3-8721-d3f4e1f90a5a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66171ad6-4912-4291-a40f-d0fdab82a457"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc23f3e2-8086-44d3-b9dd-efe22b54a969",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ecfbfb13-75e3-4fda-80be-71e02775cfcf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8030c1d0-e5f4-4a64-9d2b-c16c69b1c6be",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "75fb5e63-9b8e-47e5-930f-5988e78a7728"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "882df63c-f41b-4c51-8d0d-fb0f889a57bf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "acd92b3d-2a2d-4589-8fa9-bd6748c30d5c"
            }
          }
        ]
      },
      {
        "id": "482038dd-5bcd-4629-b188-62f7098544db",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "502017dd-8fd5-4ea8-b331-00775078b4ed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bb8806cc-2642-4e96-a839-4d851e529799",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "63ddfd8c-3dce-4774-b9d0-1faef2cf810f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba4a8d7-d6df-431e-aac6-1b18d1cd1d41",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "092bb32b-ca39-49cc-964d-8f13fe710206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0df5164-8725-47aa-b1c5-44e13e39730d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "376fbd45-074e-46c2-8790-e6be437d1dbc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "911e402e-4e1e-41ef-8e19-97de7fa7a74f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2ed60e6-4e51-476c-b115-acad5ef4dc65"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b81b02fa-10f6-4b26-9e80-a869731ecdb7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8d78295-78ef-45ac-ba05-36fca7a0eea2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1b5f225f-8014-40b0-ac04-51d50990e940",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "57f614d5-2140-4965-89ef-0ba20fe9604c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb319473-9cac-4c97-b99c-6cfb73c8cd8b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3a209b35-60e5-4105-a768-5f8d6f15d132"
            }
          }
        ]
      },
      {
        "id": "f696cee1-6d97-4f9c-9300-90a9eac4a521",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2ae3fddb-5f2d-4b7e-a665-22e2ade8abd4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "036f3a5f-501b-494b-bf4e-1f7879be271d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "cee6399f-e36c-49e6-83f2-78308c0a87e2",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "60585f0a-9c92-43bb-a6f1-87cf4c1adb50",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "267773c2-e88e-43a4-8e81-743e193d917e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 211.30281690140848,
      "responseMin": 7,
      "responseMax": 6688,
      "responseSd": 419.4823434555239,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1691368783305,
      "completed": 1691368855359
    },
    "executions": [
      {
        "id": "5a3f85c4-91c8-43c6-84a8-a66a87f4845e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "45192478-426b-49c3-83bb-32ce7e9bccb9",
          "httpRequestId": "17e5d87e-2e45-4c07-8973-0ddab8adf9d5"
        },
        "item": {
          "id": "5a3f85c4-91c8-43c6-84a8-a66a87f4845e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b906e726-ce7b-4d02-9d6c-4c1f7d88b477",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "59ece31b-c75f-4b58-8993-32d0233d3a09",
        "cursor": {
          "ref": "5d5e4c22-88bd-4b2c-ace7-b3c48ea34daa",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "069ee9d3-b0a4-45cf-948f-035e5999aacc"
        },
        "item": {
          "id": "59ece31b-c75f-4b58-8993-32d0233d3a09",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ed6f0bc6-1d7b-4ed7-824b-8c3ee92abbb7",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "18f4dbc5-7319-425c-bf04-18bcb1f1c70d",
        "cursor": {
          "ref": "cea35191-84f2-45ec-8f9e-8a4dab06a6f8",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "213e031c-d82c-4b3a-89ba-6d7a7280e7a3"
        },
        "item": {
          "id": "18f4dbc5-7319-425c-bf04-18bcb1f1c70d",
          "name": "did_json"
        },
        "response": {
          "id": "4b2b9693-0869-49ef-a38c-55ef0b8f03d5",
          "status": "OK",
          "code": 200,
          "responseTime": 971,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccaa7fa6-1066-4d0a-98fa-aaa8f89a2240",
        "cursor": {
          "ref": "37130504-17e6-4251-a09a-6467d3cd03a9",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "647f5288-3ac7-48b8-b541-3902726a7dae"
        },
        "item": {
          "id": "ccaa7fa6-1066-4d0a-98fa-aaa8f89a2240",
          "name": "did:invalid"
        },
        "response": {
          "id": "f14b62a8-4069-4034-9da3-225f9e5d22ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccaa7fa6-1066-4d0a-98fa-aaa8f89a2240",
        "cursor": {
          "ref": "37130504-17e6-4251-a09a-6467d3cd03a9",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "647f5288-3ac7-48b8-b541-3902726a7dae"
        },
        "item": {
          "id": "ccaa7fa6-1066-4d0a-98fa-aaa8f89a2240",
          "name": "did:invalid"
        },
        "response": {
          "id": "f14b62a8-4069-4034-9da3-225f9e5d22ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb839ab-16a5-43cf-a5aa-74237135be8f",
        "cursor": {
          "ref": "c1245c69-04e0-4a93-9914-8d6d0c46394a",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1e79b22f-5d54-428f-8fc8-60ec96dcbaa9"
        },
        "item": {
          "id": "3cb839ab-16a5-43cf-a5aa-74237135be8f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "47ffdff0-11a8-4b41-bfb5-fc22f7c70128",
          "status": "Not Found",
          "code": 404,
          "responseTime": 424,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37236cfd-16e5-41de-9506-547b34df72ae",
        "cursor": {
          "ref": "c509b596-665c-4b42-96e4-91a3da09fdb5",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "bdd20ad4-2081-4f68-9a8a-d46200df106e"
        },
        "item": {
          "id": "37236cfd-16e5-41de-9506-547b34df72ae",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "91857ced-ec89-49f6-a124-88cc3ea187b2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 258,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69079dd0-14ca-4137-a1e4-b615cd1f3f57",
        "cursor": {
          "ref": "f6ae4ebc-e111-4567-a32a-b1b16f514a9f",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3171b2c1-bbcb-4c92-b8d3-695a875c0361"
        },
        "item": {
          "id": "69079dd0-14ca-4137-a1e4-b615cd1f3f57",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "60aaac6f-1b09-4017-a84b-a221145fdb58",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358e3129-cb6c-465d-bfe7-1b2fda70db13",
        "cursor": {
          "ref": "602f0613-98d7-41b6-8b44-0f3a11b94d87",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8747cc0e-fbc6-4ac4-ac7a-e5ab099d65b5"
        },
        "item": {
          "id": "358e3129-cb6c-465d-bfe7-1b2fda70db13",
          "name": "identifiers"
        },
        "response": {
          "id": "a10df404-c48a-43d1-8608-d4fa72e28120",
          "status": "OK",
          "code": 200,
          "responseTime": 1112,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb0fcf8-d83a-4c98-9441-f9b73943cac1",
        "cursor": {
          "ref": "dce12a24-d5fc-4801-a439-77568ef012fb",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "af5d5ce0-809d-4e2e-be66-639ccccfa941"
        },
        "item": {
          "id": "feb0fcf8-d83a-4c98-9441-f9b73943cac1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ec1f191e-7eb3-4e8b-bcab-a93cc6804b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c359f4-1a15-4fdf-9304-14e1ae2464e1",
        "cursor": {
          "ref": "6ce28a25-fa02-465d-84b8-3e2e9581229c",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ad31706d-dd62-4ee9-9919-fb7fa950824e"
        },
        "item": {
          "id": "71c359f4-1a15-4fdf-9304-14e1ae2464e1",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c88b3ced-ea28-4cf9-b3f9-7db54c87b28f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 976
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e420acd2-9b7d-4f3e-9824-e4add4afbbd8",
        "cursor": {
          "ref": "b0ff1e8b-f60b-486f-be5c-3963bf2b9e88",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "43253b40-b777-4672-9ceb-062874541883"
        },
        "item": {
          "id": "e420acd2-9b7d-4f3e-9824-e4add4afbbd8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "29d1e846-30c8-4f73-b953-90a15139dc70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 984
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c71faa-bc74-4bd9-b6e0-36cf4a8e52b9",
        "cursor": {
          "ref": "6e5a347f-7197-49c9-a1e6-9661c1130c8b",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3eb22aaf-133c-4602-9ed8-84441840c832"
        },
        "item": {
          "id": "16c71faa-bc74-4bd9-b6e0-36cf4a8e52b9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2e979139-7b4c-49bb-a903-753f7b15900f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8790c7c4-f3e3-4838-a1b3-6d2bb4f31467",
        "cursor": {
          "ref": "840f9172-26d4-4da7-9c26-bf78961727b5",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f3566882-d2cc-46a9-bb48-3950563d8aa6"
        },
        "item": {
          "id": "8790c7c4-f3e3-4838-a1b3-6d2bb4f31467",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7249f89b-31f2-4b56-94e1-b17fed99a28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36040c2b-e1e9-4fe1-8db0-47646126a3cb",
        "cursor": {
          "ref": "5f68f336-081e-4682-8ac5-8b6d57fee9e6",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "611232f3-56a2-4731-90fe-8d43eee02d1a"
        },
        "item": {
          "id": "36040c2b-e1e9-4fe1-8db0-47646126a3cb",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "32e8b43f-00c5-4081-98dc-a2c49ebb4258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1030
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1005f341-171f-4098-86c9-9a0c6c08b72e",
        "cursor": {
          "ref": "d1125ed8-92d2-4a14-a127-30e7ff5149ca",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e562da63-626a-46a3-970b-c5ea2f55844f"
        },
        "item": {
          "id": "1005f341-171f-4098-86c9-9a0c6c08b72e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a17faf9b-be72-40f6-bfe6-2609d2d54f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab12230-f438-41fe-8ca8-0a34e13c97d4",
        "cursor": {
          "ref": "9dffa81f-4acb-4cf1-96bc-86aa44bd1d19",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "303266e8-1c1f-489b-b571-bd1effcb4959"
        },
        "item": {
          "id": "6ab12230-f438-41fe-8ca8-0a34e13c97d4",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5a5748be-0f57-409e-b7c8-338165d05166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1068
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c363031-6998-4101-a8b0-6850739d5141",
        "cursor": {
          "ref": "5f29cd14-429d-4fa7-a062-0380d672b5cd",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "07858cfc-14d6-41c0-aaef-ad6689d74460"
        },
        "item": {
          "id": "9c363031-6998-4101-a8b0-6850739d5141",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "96e96b56-aa7e-46a3-bc5e-d27c4a6306aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e09aa37-0f92-4a5e-860f-205feef8679a",
        "cursor": {
          "ref": "21169f96-36ac-4587-80ef-94d4949c526a",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5d22c439-b1bf-4bc6-88d6-ce788db2102c"
        },
        "item": {
          "id": "2e09aa37-0f92-4a5e-860f-205feef8679a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e5963b1d-158b-4a0f-a55c-95777631596f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20231044-77a6-4534-bc72-d26e63ecfc8a",
        "cursor": {
          "ref": "8cbd2e7a-6bbd-46db-91f4-0738ee713a07",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "66b58d48-2930-46f2-b9e7-042a17f372d7"
        },
        "item": {
          "id": "20231044-77a6-4534-bc72-d26e63ecfc8a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c0c02062-b803-4840-87ea-e44b2db078d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1036
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6749b483-79ec-432d-8251-4410347fe1f4",
        "cursor": {
          "ref": "148080a8-5ee7-490d-b52a-4058cfab4eaa",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b5b9bd97-4263-4f5b-816f-a60a15d373b4"
        },
        "item": {
          "id": "6749b483-79ec-432d-8251-4410347fe1f4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5d8835b0-6314-4318-9836-bdd67070ab27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1077
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4716c9c-1044-46cd-9c5c-2422bc4ad8ec",
        "cursor": {
          "ref": "ccd36d43-45f1-4e37-9746-6ddbd2493052",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2fa563c5-90a5-489f-830e-5d0434e62f14"
        },
        "item": {
          "id": "d4716c9c-1044-46cd-9c5c-2422bc4ad8ec",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "99280fdd-1480-4d31-90a5-b27d5201b7f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1092
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d264e4-9ee0-4c54-baf9-0400573173d7",
        "cursor": {
          "ref": "ff9315f3-b0c2-4779-a6ba-d461684132ff",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7736d92d-1108-437c-a8a4-4c78484c5533"
        },
        "item": {
          "id": "04d264e4-9ee0-4c54-baf9-0400573173d7",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7c1dea86-0064-49c0-83c1-2c3250bc023e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1048
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb368ff-6dad-4921-b92d-2037ef21ba84",
        "cursor": {
          "ref": "4f95d5b1-2451-46df-8c30-c761f35f1aee",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b69a7ac5-fdb6-4450-8779-2b4ef6c0f9ab"
        },
        "item": {
          "id": "beb368ff-6dad-4921-b92d-2037ef21ba84",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "51201525-e04a-4609-b5c5-89559b353c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1045
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8922ff9-a48d-433e-8cb5-57aa575774d9",
        "cursor": {
          "ref": "8b13079f-123f-4731-84da-37426fd0eaa5",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "bdfbd28d-b163-43eb-9614-add2dd75f256"
        },
        "item": {
          "id": "c8922ff9-a48d-433e-8cb5-57aa575774d9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "abe8476a-3451-4d63-a6d2-4ff3eebf54d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1047
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123718d0-2c60-4054-94cf-19fcf6ecbe2d",
        "cursor": {
          "ref": "7bc10d22-49d1-4055-8bfa-ee0783a549bb",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6c3469bd-43c0-4047-a4aa-ef6525b14375"
        },
        "item": {
          "id": "123718d0-2c60-4054-94cf-19fcf6ecbe2d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2026ce71-91e7-402c-b0f0-be26cf44af72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217c2221-e6fe-4e7b-81fa-8a30832febdd",
        "cursor": {
          "ref": "e0b93eaa-af47-4ac7-9dc9-130715f8bbea",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1058f7b5-94cc-4cc0-84af-bd641bb5f421"
        },
        "item": {
          "id": "217c2221-e6fe-4e7b-81fa-8a30832febdd",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "faed5853-4a8a-479a-80ea-80e654a93f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4db2269-7053-4ab4-9647-5d1bac2afb05",
        "cursor": {
          "ref": "3193e89f-42ba-4082-b57c-1aff3874d657",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9e204b6d-c359-4ac7-8e81-d861c94f969b"
        },
        "item": {
          "id": "b4db2269-7053-4ab4-9647-5d1bac2afb05",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f0b19ab8-e415-454c-a942-69fa86a81ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7607bea-5ac3-4312-be6b-47502a2d8bc3",
        "cursor": {
          "ref": "fcf688e0-46a9-4055-bbad-108da1044703",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e08f718f-2b04-45c9-ac96-969722dcf3a7"
        },
        "item": {
          "id": "e7607bea-5ac3-4312-be6b-47502a2d8bc3",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d2cd511c-52b5-4be4-8550-ff6613c817a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54ca758-5a22-432b-afea-593deb51711c",
        "cursor": {
          "ref": "6160612c-093f-4d5d-b8f9-1d9d1cbc1b97",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2b132153-6117-453e-ae82-e8d181888ebc"
        },
        "item": {
          "id": "c54ca758-5a22-432b-afea-593deb51711c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c30cd045-cf20-4583-ac7a-f605e23dbcde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2573eb2-2315-4c59-91ad-d85caafbbfa1",
        "cursor": {
          "ref": "41157fa9-94b9-44a7-a6f2-9559d76ef3d6",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "00402488-bdf8-4c19-9475-204d23e22745"
        },
        "item": {
          "id": "b2573eb2-2315-4c59-91ad-d85caafbbfa1",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d970d661-724d-4d24-b19c-ab85aecf93c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d85666-60c0-4df0-9094-82358d3190eb",
        "cursor": {
          "ref": "3155520c-6874-43f1-ae9d-322d262edbb8",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "73707ff2-956c-4920-81b3-060cb7c1bacd"
        },
        "item": {
          "id": "a0d85666-60c0-4df0-9094-82358d3190eb",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0e347b25-0d6e-4e25-b328-ef09f0b6592a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69216543-3bce-4776-b247-793ed83431ee",
        "cursor": {
          "ref": "a56a7c3d-6db2-4cca-830d-307b078f0fbd",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5476e9b5-3a6c-4645-b5a3-ab9130cc8387"
        },
        "item": {
          "id": "69216543-3bce-4776-b247-793ed83431ee",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "29462cfb-840f-43d2-a73e-873b6ce8e4ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7611b49f-feb5-48ca-96d1-1ec5fca7cb82",
        "cursor": {
          "ref": "29f0acd8-bca7-4b92-8a00-b7fe088ee740",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "48dbf5e9-c561-4221-8442-4f7aee019837"
        },
        "item": {
          "id": "7611b49f-feb5-48ca-96d1-1ec5fca7cb82",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6e82e3f4-d799-461d-b5b0-44ef75291f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc5a704-4b40-46c2-a50c-2cb78a677c0d",
        "cursor": {
          "ref": "03f83a8d-8c74-488d-959c-4593ac998854",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "cb792d1e-01ad-4fd4-baa9-56949ce4da01"
        },
        "item": {
          "id": "5dc5a704-4b40-46c2-a50c-2cb78a677c0d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "48199d0d-9515-481c-82bd-c8a696a38313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ead44a-3e7d-47c9-bddd-b5ae320498db",
        "cursor": {
          "ref": "ace49cb5-cac7-4d85-a9b3-b74a88546ac2",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "abccabae-7223-460a-b3f3-62ae9ca3ad67"
        },
        "item": {
          "id": "63ead44a-3e7d-47c9-bddd-b5ae320498db",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "38148e70-2561-463f-b383-3bf680147ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8248cd6e-794a-4e4c-8183-401526be9a05",
        "cursor": {
          "ref": "09f6c8b3-4f74-4573-87ec-7fd777e0b8f3",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "cd5458fa-eaaf-4f57-8e1b-412946bb98a6"
        },
        "item": {
          "id": "8248cd6e-794a-4e4c-8183-401526be9a05",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ba902f3e-caa0-4483-8db1-156943ffef18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15c3274-d404-4c62-b000-0dfe8dd0d1f9",
        "cursor": {
          "ref": "688909d8-a728-4878-b06d-42591359436a",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a03b952a-04e5-44f1-8ab2-4f4dfaf3f412"
        },
        "item": {
          "id": "f15c3274-d404-4c62-b000-0dfe8dd0d1f9",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "cacc1e1a-71aa-4b3d-99ae-4982641340e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa5ec2e-de62-4cd6-9e1e-1cde23ff9e6f",
        "cursor": {
          "ref": "01370ea7-830f-46ed-a132-9f6553f0a791",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8eb63062-4719-4716-99d7-97454fe5d6ae"
        },
        "item": {
          "id": "8fa5ec2e-de62-4cd6-9e1e-1cde23ff9e6f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ce4860dc-7ebc-4556-bba9-563548006510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84f8a8c-ebd1-4c19-9e06-ac9dce36bac3",
        "cursor": {
          "ref": "e6119a7f-064b-44ef-a32c-46f33e5f7b8f",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4789da88-94d0-41d6-8cc7-5eba9abad102"
        },
        "item": {
          "id": "b84f8a8c-ebd1-4c19-9e06-ac9dce36bac3",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "89bd67dd-0cee-461b-a658-544d46540f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12609c2a-a216-4b64-9541-fab8d0ba7715",
        "cursor": {
          "ref": "e98bcac4-fda4-4bd2-8dfa-225fa45bea36",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e5c2173b-6565-4165-aa1b-de70284d04e0"
        },
        "item": {
          "id": "12609c2a-a216-4b64-9541-fab8d0ba7715",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a87da3c7-c157-4cb8-b957-773d76ea7595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff76659-3e00-434f-bf82-732696aa859e",
        "cursor": {
          "ref": "f2264932-278c-48d3-a9f6-c144067c3ddd",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b39db620-cce6-4467-b70f-6b2ddce33659"
        },
        "item": {
          "id": "6ff76659-3e00-434f-bf82-732696aa859e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9c71c793-6af8-4613-8e1d-beb0fd96e8e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5537777e-afb6-4179-bff1-61a3d0c74873",
        "cursor": {
          "ref": "b22a2f80-4dc6-4b71-8709-199417f99d73",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a7ea3b6f-80a7-479b-90a9-eafbc1a3f959"
        },
        "item": {
          "id": "5537777e-afb6-4179-bff1-61a3d0c74873",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e4b7c7c9-f441-4b48-a366-ec58a8778af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64a6783-fc75-4365-a316-05a968b675b5",
        "cursor": {
          "ref": "afee5615-7bce-4402-9275-4a9797c78c98",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d8f4bda9-28d6-4156-a10d-5a25a7d12300"
        },
        "item": {
          "id": "d64a6783-fc75-4365-a316-05a968b675b5",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "509d59dc-103b-4f02-be46-ff87c3b604b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1808
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a681bf8d-bc97-4df1-a91a-7f27bd7e0e30",
        "cursor": {
          "ref": "8d1a1873-b50a-4780-abb4-61766493d9e2",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "18230d96-1dec-404f-9d57-cd2cf1867bd1"
        },
        "item": {
          "id": "a681bf8d-bc97-4df1-a91a-7f27bd7e0e30",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "30c9755b-46ec-4470-bd50-0f125ac8553e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5b1a4a-734a-4e2f-9c27-b95b3ce6ca1f",
        "cursor": {
          "ref": "2896f73b-c0aa-48fb-924f-78997fc3cd28",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b964be8c-a4e3-47f0-9f28-e94a34051872"
        },
        "item": {
          "id": "de5b1a4a-734a-4e2f-9c27-b95b3ce6ca1f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1703681a-e07a-4e4d-8669-8b20e2dde19c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 226,
          "responseSize": 1436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eaccff8-ceed-4408-9a49-3d33fdcebeb8",
        "cursor": {
          "ref": "74dda6b4-9eb6-49cb-b9e5-5874fd0e07c9",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d281a19e-dc16-4898-b47f-c207c75e9cce"
        },
        "item": {
          "id": "2eaccff8-ceed-4408-9a49-3d33fdcebeb8",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "45e299b2-ef1a-4748-8277-132bbcdfdd1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac776ad-c8bd-433a-b72a-89fed4437ff6",
        "cursor": {
          "ref": "d3ff29ae-542d-478b-ac0a-c4d7a3cd5a46",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6f5cad8b-17e9-4875-ab20-4857a31c5772"
        },
        "item": {
          "id": "eac776ad-c8bd-433a-b72a-89fed4437ff6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b59d42e8-e7a7-42d9-8f5b-a426659ac872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1745
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6355e78-81d3-49be-ad0f-566dada69166",
        "cursor": {
          "ref": "c8e7a6f0-3ae1-4481-9d50-89d860b9968f",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a86250e3-3b1a-4054-9db9-06d28a28457c"
        },
        "item": {
          "id": "c6355e78-81d3-49be-ad0f-566dada69166",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0041fd0f-c00d-4b95-8f73-8879eaa9e76f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8253ff64-0dd2-4dde-8b4a-d8e6def81af1",
        "cursor": {
          "ref": "1b37bfad-a9ed-497e-8cae-293644118629",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "69447261-e815-40bf-a7c3-bf6b58a2a2c7"
        },
        "item": {
          "id": "8253ff64-0dd2-4dde-8b4a-d8e6def81af1",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "8f4228da-1372-4be6-b51b-f68da98a8ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16590d39-6d04-43ac-b3e5-ae94ad5abdec",
        "cursor": {
          "ref": "fb588f27-0a11-4453-a7c5-1dd0cba997e6",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "49b4938c-6d1c-4ba1-a5f3-f9b8a4b6cac1"
        },
        "item": {
          "id": "16590d39-6d04-43ac-b3e5-ae94ad5abdec",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ba0850ce-b2d4-4750-9d2f-e82910381054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 2147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c4ba37-e156-4a4b-bfb4-564c5af2ed22",
        "cursor": {
          "ref": "c357a22f-7021-4c80-877f-88d3307b42e2",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8e0dca6e-053f-44e8-9408-1fd54a509880"
        },
        "item": {
          "id": "71c4ba37-e156-4a4b-bfb4-564c5af2ed22",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "4c2105e8-1a48-48fc-b882-7dcf39fcfb61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e26ff8b8-e171-4f21-bdf6-b655c7c428f4",
        "cursor": {
          "ref": "13683c35-f27a-4ee2-8018-918fd4f514f6",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8923cad1-b661-4417-b828-88a10146fbe8"
        },
        "item": {
          "id": "e26ff8b8-e171-4f21-bdf6-b655c7c428f4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "db1c5a83-cdff-43df-86ae-ab5b944573a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1035
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2165c0-2c13-41cd-ad3b-19898bf3212d",
        "cursor": {
          "ref": "ac84380b-a948-427b-a4bd-6e96d40b2d7d",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "313642eb-67d7-4578-9dcd-42197ccd2290"
        },
        "item": {
          "id": "ec2165c0-2c13-41cd-ad3b-19898bf3212d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "64338007-bcb7-4c2a-9baa-6916af2556ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1059
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77670d1-598c-4a21-bfba-4108ed673b4c",
        "cursor": {
          "ref": "6c904410-948c-427c-847f-74a9f2b77a2d",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d10e3883-3979-4e22-b20a-5ef50c3052ba"
        },
        "item": {
          "id": "f77670d1-598c-4a21-bfba-4108ed673b4c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "be17759e-7b0e-4a37-8908-a225d03fe500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca4fc83-1d1b-4e45-aa0c-ee111222dd85",
        "cursor": {
          "ref": "5f086963-f61c-450d-8fbe-c9b31656270b",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d520210b-0926-4cfa-a233-f0e517c0a1a2"
        },
        "item": {
          "id": "aca4fc83-1d1b-4e45-aa0c-ee111222dd85",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e34fa8b2-a30f-44fe-93f1-16b4bb52a400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236a080c-ccf9-4819-a37e-0700de53a519",
        "cursor": {
          "ref": "9d8196dd-0c27-4223-927e-9b2079edb978",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b1e30e05-9668-48cd-b72a-254f3f72cba8"
        },
        "item": {
          "id": "236a080c-ccf9-4819-a37e-0700de53a519",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a867923f-0d7f-4391-8b53-5bf83e4f36a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ae48e3-0038-4840-8a4a-fef0bff409ee",
        "cursor": {
          "ref": "6648e8e1-78a1-48d1-8eae-cccef914ac68",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "76e92445-be1a-4d10-9c96-270efeb359df"
        },
        "item": {
          "id": "c8ae48e3-0038-4840-8a4a-fef0bff409ee",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "8eedd445-60c4-4296-9209-fd6cbe703391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14575801-93c4-4f1e-bcb7-7b016d6e6536",
        "cursor": {
          "ref": "64d4920d-4f34-4d85-81b8-17d0b166b405",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7670a9ae-219e-416e-9462-7254dda23dcf"
        },
        "item": {
          "id": "14575801-93c4-4f1e-bcb7-7b016d6e6536",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4a8eabcc-d521-4639-a1ca-853d2c61b436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26b639e-8898-4184-b65a-c3739db175bc",
        "cursor": {
          "ref": "d726a964-aa94-48c9-a5d0-902e0b4bcc91",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "aa49aeec-72f7-4c63-8183-b5029c232725"
        },
        "item": {
          "id": "d26b639e-8898-4184-b65a-c3739db175bc",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d9d17458-0bfa-4b17-a9c2-446fe44a10e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641a44ca-195a-48ba-b355-129318176f29",
        "cursor": {
          "ref": "a2a8199b-b788-449c-beb9-bce0c05d5a90",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "4689b3ad-c2d7-499b-8d81-49de1ba0fcf7"
        },
        "item": {
          "id": "641a44ca-195a-48ba-b355-129318176f29",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b8ab4397-d05c-4535-9203-5e053faff935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1ebdab-805a-4a64-ac8b-0490ba1da06a",
        "cursor": {
          "ref": "5948ba00-465f-4441-a351-a2f11a4c183e",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "6bbb35e0-a183-4b7f-ae53-8244f3315e5e"
        },
        "item": {
          "id": "be1ebdab-805a-4a64-ac8b-0490ba1da06a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6028acb2-4d5d-4cfa-8f9b-9ab3635df01f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ed9001-794d-4d72-b75e-6b0243a647b9",
        "cursor": {
          "ref": "3dd21ba2-d43e-4042-b7c6-5ad8b3e382de",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c3cecfd1-0ff6-4e1d-83fc-3dc801f670a2"
        },
        "item": {
          "id": "a1ed9001-794d-4d72-b75e-6b0243a647b9",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "728fa322-f3d6-43b0-a3f8-972096f7d896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c5b65b-b726-4937-bdb5-a667fb18749e",
        "cursor": {
          "ref": "370487b0-9d9d-4226-acc9-76e62e3fb5e6",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7f56b101-411c-4495-b43d-768966db78ab"
        },
        "item": {
          "id": "e6c5b65b-b726-4937-bdb5-a667fb18749e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9e6aad3d-8845-4aaf-a048-97b8b914b90a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc14465-d2c5-4fb9-abb2-33ae3ed61507",
        "cursor": {
          "ref": "d6a7e09f-3efb-43c2-a3cf-c751ca442867",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5593cd4c-e31b-4b7c-b3bd-9542e6086329"
        },
        "item": {
          "id": "0cc14465-d2c5-4fb9-abb2-33ae3ed61507",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c40561ab-62a9-434d-aeb5-cc1b90db69c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5d0af1-b817-4263-9505-e0ae7b70f811",
        "cursor": {
          "ref": "81b0fb0c-ad60-4f81-bd13-5da65ad9d468",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9fbbf624-5a21-419c-a934-4516c0959673"
        },
        "item": {
          "id": "dc5d0af1-b817-4263-9505-e0ae7b70f811",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "bd74b0fa-4a18-4ee8-a577-bf76104586a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e946bfdb-b853-46bd-91d5-b9ecdf35ced6",
        "cursor": {
          "ref": "2f4650d4-575f-40c0-8e85-dd1fab27c60e",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4d5cc31b-9c8f-4fd8-bf50-42d0593491cf"
        },
        "item": {
          "id": "e946bfdb-b853-46bd-91d5-b9ecdf35ced6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3dbf339b-a90b-443c-8990-c118107a2906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d25131-3e1b-4e59-86da-ba8f73aa5d2b",
        "cursor": {
          "ref": "6a667b23-6129-4cdc-b69a-03a93c859049",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3bc1f8d6-ae9a-4fcc-80b4-fa26f897df03"
        },
        "item": {
          "id": "31d25131-3e1b-4e59-86da-ba8f73aa5d2b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3c51a982-717d-4dfa-8684-2ce642881bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad00229-f33a-428f-ab43-a0093869378e",
        "cursor": {
          "ref": "7ef731bc-4032-41e5-b606-a9c98cd28c06",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "22299b7d-ee9b-4753-90ef-981ded8202f2"
        },
        "item": {
          "id": "5ad00229-f33a-428f-ab43-a0093869378e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a969ebd1-8af8-41f7-80e2-0b6e0281161e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 231,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69155015-2a0f-447f-90e2-daeffa648e0c",
        "cursor": {
          "ref": "48c3aa53-60a7-416d-a167-fc0a7e6b9736",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b98ed18e-5ab4-4f8f-b8e8-97b6091e96f3"
        },
        "item": {
          "id": "69155015-2a0f-447f-90e2-daeffa648e0c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d5a6d916-2aa0-416a-af51-c1ace968d88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e2e7a8-9f1d-4cbe-910f-e37914c94f3a",
        "cursor": {
          "ref": "9f959d03-9c43-4d81-b558-87e8ac87a0a8",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f64bcd56-94e1-431a-adda-ff84895db457"
        },
        "item": {
          "id": "e2e2e7a8-9f1d-4cbe-910f-e37914c94f3a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8ee7ceae-acfe-4d2e-87e9-fff97243c775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a806962c-ecf7-42c8-8044-1c8961bc7fc5",
        "cursor": {
          "ref": "454e4f13-a755-4d3d-930e-35e08af8e46d",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6890b1a5-bd17-462f-9478-71ecb4627556"
        },
        "item": {
          "id": "a806962c-ecf7-42c8-8044-1c8961bc7fc5",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3ab74b9c-a44b-465a-95fa-8c98c3d2ce93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae74ff3-a7b5-43bb-a221-6b076bd717bd",
        "cursor": {
          "ref": "711d17a8-3214-4ce9-9ecc-210bd36167f7",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5322cd95-c898-409d-9e53-10d8f1192b92"
        },
        "item": {
          "id": "cae74ff3-a7b5-43bb-a221-6b076bd717bd",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "765fa59c-a25d-4c3c-bf53-c73853b2ff12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1262a572-c06e-4634-9476-ae7ff17cbc29",
        "cursor": {
          "ref": "a272984f-f692-4a44-a0a8-c890594d106e",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f13c0278-56ae-45f9-a66b-acb77b3a7e91"
        },
        "item": {
          "id": "1262a572-c06e-4634-9476-ae7ff17cbc29",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "dba9788e-de1f-453a-8411-811c810bdc8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd91bf1-c57c-43b8-96b0-99362bc1aded",
        "cursor": {
          "ref": "515c49ab-b1fb-4ebd-a17d-a5c717e84108",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a5713442-3d79-450c-a937-d1fc30ea407e"
        },
        "item": {
          "id": "bfd91bf1-c57c-43b8-96b0-99362bc1aded",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f06d9a78-3d31-4a0a-8585-677ec71112bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79d3e20-42a6-4f22-93f9-e444a94ef0cb",
        "cursor": {
          "ref": "d9d9f6f8-2ad8-4870-9c78-a366b4881ee7",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f1db0cb6-04b8-4a50-8e19-3080b049b2c9"
        },
        "item": {
          "id": "a79d3e20-42a6-4f22-93f9-e444a94ef0cb",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ce97713a-823a-4a1d-892a-37f0747ff187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca5379f-2b0d-4955-bc57-36c25629a9a7",
        "cursor": {
          "ref": "94b6788a-6677-49c0-be4c-ef2eafcf0fd9",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c0c3814d-6ac9-4a7b-aea1-a9bf863cb4f0"
        },
        "item": {
          "id": "5ca5379f-2b0d-4955-bc57-36c25629a9a7",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ba737507-1972-4c10-92b9-50c4b26645ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b920f7bf-1e8f-4131-807b-d8e5d9672ebd",
        "cursor": {
          "ref": "6f8c7117-4a9d-478d-aa50-a5fcfe78a40d",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "09ed2cfc-5193-42e7-b399-638e3f5fabf2"
        },
        "item": {
          "id": "b920f7bf-1e8f-4131-807b-d8e5d9672ebd",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7009be79-c0d0-4814-b9c5-0046c293bde1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5865c6c2-d615-4438-8626-4ecdb77f4613",
        "cursor": {
          "ref": "f20d8a64-9cf1-49ed-abd5-39c28dfad465",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "19af7fe1-75ef-40ae-ab75-92026261bbce"
        },
        "item": {
          "id": "5865c6c2-d615-4438-8626-4ecdb77f4613",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "568efc80-3dcf-410d-a59f-9aae5aac3c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193d77e5-d8d3-4bca-9973-f1868b9c795a",
        "cursor": {
          "ref": "a396ddac-c05c-49ae-9d84-68d71bb1e2d4",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f2795da0-225a-4000-b103-8e7569f662ee"
        },
        "item": {
          "id": "193d77e5-d8d3-4bca-9973-f1868b9c795a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "73fd9045-909c-483f-8b73-806575e8d0ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9debef18-8797-49c3-8843-1b0ece5a4f4e",
        "cursor": {
          "ref": "703b7fea-03d6-4fe3-ae14-da3c254f7e51",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "097d9c9a-6350-4f63-b99f-2ae985b3d6dc"
        },
        "item": {
          "id": "9debef18-8797-49c3-8843-1b0ece5a4f4e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "baa2e8eb-38c7-4427-b577-761a7743b1b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14bbb68-7e4e-4ef8-8cec-b1e2150b8ae7",
        "cursor": {
          "ref": "76c75700-a15e-4f73-ab48-65dc83fedfd7",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e8285d8e-365c-49e7-a33b-b382eb35483e"
        },
        "item": {
          "id": "e14bbb68-7e4e-4ef8-8cec-b1e2150b8ae7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9127f8c4-9fed-45d9-9652-1b14d28ad92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e89966d-0d84-4a38-a455-6a810516589d",
        "cursor": {
          "ref": "886fc424-aa9f-4137-98f4-2b953b15827a",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0acaa732-d257-4a4c-aadf-b4986b6f9ca5"
        },
        "item": {
          "id": "2e89966d-0d84-4a38-a455-6a810516589d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "bbbde4f3-fbd6-4706-abe8-e5288beb1c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1d2486-be89-4891-bf61-c0af54ce755b",
        "cursor": {
          "ref": "41d9136b-05db-4b1e-a817-ea5377f3548b",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "02ba9caf-e1bd-466a-9b55-2a076d771c74"
        },
        "item": {
          "id": "bd1d2486-be89-4891-bf61-c0af54ce755b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d795c317-0cc8-4339-8776-dcc23cb44112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6791403-cf22-4c93-8982-5ff6bda9d11c",
        "cursor": {
          "ref": "29d41093-fd4f-44d6-abd8-040105c94c1d",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f998fc61-f886-4247-b6a9-83e0ea06a9db"
        },
        "item": {
          "id": "b6791403-cf22-4c93-8982-5ff6bda9d11c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1a02dcd1-dd45-4355-95ca-a7e250862698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "093d56a2-a189-4744-80a8-a0b5582c550c",
        "cursor": {
          "ref": "90b575e5-4ccb-4e8b-b89a-9b9aaf78df6c",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "402bf926-8c94-45a2-bf0c-0b01369c2ea0"
        },
        "item": {
          "id": "093d56a2-a189-4744-80a8-a0b5582c550c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1fb04999-1cab-4b45-ac94-b50a384cfbd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9348f007-6797-4af4-89a5-ff46858bece8",
        "cursor": {
          "ref": "2dc1110c-c7e0-4e51-a871-470676015842",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0a2805b1-e5cd-412f-b438-7b9a52783e37"
        },
        "item": {
          "id": "9348f007-6797-4af4-89a5-ff46858bece8",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c4cc508d-db73-44f7-b1c5-f778451d83ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1064
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6acde42b-9840-4cb5-9d11-8da23cd74724",
        "cursor": {
          "ref": "8ede1bd3-92b5-4f11-a4c5-7ed3bca90eca",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a79b1872-0cfd-47b8-baf3-86a64bc58689"
        },
        "item": {
          "id": "6acde42b-9840-4cb5-9d11-8da23cd74724",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "bcceedaf-860e-4dfe-bec1-d919d68eef8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060e2641-2246-46f6-bdac-58d8ea97f114",
        "cursor": {
          "ref": "0aec6464-7fc1-4920-81e4-682f8601f6b8",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ea41b613-bf2e-4aeb-ab95-8e294f0a36b2"
        },
        "item": {
          "id": "060e2641-2246-46f6-bdac-58d8ea97f114",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2ed289ec-424b-4dbb-a132-f20775826931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e75f580-473f-4177-a228-43a3c5904e58",
        "cursor": {
          "ref": "87fbe54e-a9d8-405a-8c72-063839a075ce",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ab4f7d37-3583-411e-af3d-20fe99c856f2"
        },
        "item": {
          "id": "4e75f580-473f-4177-a228-43a3c5904e58",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6f09a135-7b8f-46c5-9cbc-5ad5cdc0beb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbf9b42-97f4-46cb-86fd-8d15278e2ed4",
        "cursor": {
          "ref": "7838b84d-4503-4088-88cb-991a3605f87c",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e9e701c7-0ac7-47ce-9872-ec55e242ea2c"
        },
        "item": {
          "id": "acbf9b42-97f4-46cb-86fd-8d15278e2ed4",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "87392b37-0c2a-4e05-a779-1512d70b2a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1087
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a033e616-512e-4216-aa07-4ebd014e26de",
        "cursor": {
          "ref": "03a58318-4964-49d4-9bae-884dd9bc530c",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4e07cab7-49eb-42df-b0be-0401b2801abd"
        },
        "item": {
          "id": "a033e616-512e-4216-aa07-4ebd014e26de",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6094bb81-500b-4a2d-b6bd-7a99892d0efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c057f8-418a-4a6c-b0ec-bb3505abbeb3",
        "cursor": {
          "ref": "e1ccd049-79de-44c1-b7f1-ae46295a3516",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c5874611-3fc2-49f1-89b5-34db46dcf79c"
        },
        "item": {
          "id": "94c057f8-418a-4a6c-b0ec-bb3505abbeb3",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c2c2a511-e392-4a8d-b47d-6e33fd0213c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1086
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d393845-4bda-4f8c-b330-a8f2ca0e0248",
        "cursor": {
          "ref": "5d7aa963-f0ce-495c-a65f-91d9e453fba2",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e4f33d12-26f2-4be5-a367-f86a5f97b504"
        },
        "item": {
          "id": "4d393845-4bda-4f8c-b330-a8f2ca0e0248",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b7ebc268-d008-4a03-b73b-183555a0c8f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee3fb1c-e956-4f14-919e-0491b2927aa1",
        "cursor": {
          "ref": "5260c16a-070e-4c6f-9ca7-adc0b6b663dd",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "00cfcb46-c83d-4801-af94-2cfeb924cee8"
        },
        "item": {
          "id": "fee3fb1c-e956-4f14-919e-0491b2927aa1",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "fe82c98f-f372-4c38-9cb7-967fd050c8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78df27bc-8a5f-411e-8dfa-5a2ce67a4ab0",
        "cursor": {
          "ref": "ece041fd-7505-4b70-9763-dc0696bd859d",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9284edff-fb0d-464a-bf5b-1483b529ba90"
        },
        "item": {
          "id": "78df27bc-8a5f-411e-8dfa-5a2ce67a4ab0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "52f2a967-62a8-4540-aeae-e366591887f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1379
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b9545c-a09c-4a9f-b0be-1b3ea0c8b5ee",
        "cursor": {
          "ref": "e31fd9fe-9568-4d83-b5ac-ecc912825376",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "271f3ca9-d7e4-4709-af20-c8d65444e9ae"
        },
        "item": {
          "id": "35b9545c-a09c-4a9f-b0be-1b3ea0c8b5ee",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d2c8e292-d28c-40d2-9564-b09f09c94b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66df6c7-d76f-4bb1-97a1-5ebfe0bd4a84",
        "cursor": {
          "ref": "4abb7a0d-7cd6-411d-a37c-417e92b2ebef",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "63242a65-ead5-4a2d-abc3-5ef763dbf577"
        },
        "item": {
          "id": "a66df6c7-d76f-4bb1-97a1-5ebfe0bd4a84",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "76b519f9-98a5-4ba3-9d3b-94d6f59e8c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec1c150-d960-47ae-804c-325e09ba6110",
        "cursor": {
          "ref": "6c4826d6-28b5-4b8f-89a8-57357ce7479b",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1e7e9182-ca46-49f1-8f34-8fb217a7e40a"
        },
        "item": {
          "id": "1ec1c150-d960-47ae-804c-325e09ba6110",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "489a0988-57e7-43c2-9b8d-23610ae5f93d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b3309e-7d48-4686-842d-17467414b4ff",
        "cursor": {
          "ref": "0a449b01-79b5-4809-a54a-d7dcf2413331",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "be021af6-0e40-4371-82dc-f5aa42cc2e2f"
        },
        "item": {
          "id": "79b3309e-7d48-4686-842d-17467414b4ff",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d8ab6b16-4789-42ca-a431-59a889f20872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433d0f25-dc98-41cf-9a00-433384b5cf29",
        "cursor": {
          "ref": "dc9c3efe-f159-4050-b20a-57b60f73df5b",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c472b932-2bda-4543-bf88-2fe4ea5643df"
        },
        "item": {
          "id": "433d0f25-dc98-41cf-9a00-433384b5cf29",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f65a7b46-d5d0-49c3-b94c-f9aff541dc23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d8fa6d-5be8-4ebf-b3fa-52f4c9b383a9",
        "cursor": {
          "ref": "126270ea-3ed8-4081-b877-1078bcc404f3",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ab1c504b-bafe-4fe7-9cbd-0de1bf213bc6"
        },
        "item": {
          "id": "e4d8fa6d-5be8-4ebf-b3fa-52f4c9b383a9",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "41caccc2-80b8-4256-86c5-6c4dfb4c7b86",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70b37ef-5b67-444d-9a80-95a8ff6d6938",
        "cursor": {
          "ref": "c15a13db-31af-469b-b56c-998fe00b78cb",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "25d5b0d5-12fb-410a-9fec-dfb803071a79"
        },
        "item": {
          "id": "e70b37ef-5b67-444d-9a80-95a8ff6d6938",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5ece0f94-17b6-4230-a4c0-e565f18c41a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:102)"
            }
          }
        ]
      },
      {
        "id": "d6c805c8-5f60-4434-8b66-aa7729040aae",
        "cursor": {
          "ref": "862eebf0-b0e7-4c18-89f5-3fcfd7019687",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d9033ab2-6bf5-42c7-b7a4-4a79ea0681f0"
        },
        "item": {
          "id": "d6c805c8-5f60-4434-8b66-aa7729040aae",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "883defd1-a987-4ba1-83ec-783517a01e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "5add3336-d8f3-47e3-80b9-39c987c67f78",
        "cursor": {
          "ref": "2ab69e55-2403-417d-9caf-8ce3b60e14ab",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "873f6f4a-a3f8-4363-a5b2-5210355aec79"
        },
        "item": {
          "id": "5add3336-d8f3-47e3-80b9-39c987c67f78",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "171d6f16-3006-41e3-a313-f005a2b576f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "a19c5dde-353b-4716-b614-c4f67f1f365a",
        "cursor": {
          "ref": "ea45b37f-ed94-486a-b932-80728119ac83",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ead11cbe-4ac2-4b6b-86e9-bd74cfb251e1"
        },
        "item": {
          "id": "a19c5dde-353b-4716-b614-c4f67f1f365a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "bd80b2f3-7730-411a-a910-e24abed1393a",
          "status": "Created",
          "code": 201,
          "responseTime": 6688,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "40bfcee0-4a10-4a94-9515-af74715076c2",
        "cursor": {
          "ref": "e96ce577-9a27-4038-89d8-806479205ee7",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "76295bf8-d2a7-4dd4-966a-7cda1c066514"
        },
        "item": {
          "id": "40bfcee0-4a10-4a94-9515-af74715076c2",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9a60360b-2300-448b-8043-40a5c5902008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "f858a95b-da1a-4e60-af7a-60e792a56896",
        "cursor": {
          "ref": "9fa6f63b-40f6-42e2-8e16-5e1c1b4831b2",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a7c03c7e-8125-4f4c-a486-633bd611b18a"
        },
        "item": {
          "id": "f858a95b-da1a-4e60-af7a-60e792a56896",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "08b06809-433b-4632-bb55-94e678d598b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1190
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "094621b3-d0f8-4e5c-8415-6f6108ea7810",
        "cursor": {
          "ref": "d77a7d1b-0fa5-4bcd-9760-15ab4ce40c21",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "69d0f5ca-9b9a-4314-b971-4d5fe212239f"
        },
        "item": {
          "id": "094621b3-d0f8-4e5c-8415-6f6108ea7810",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d44a28d5-02a3-4ca0-ab5f-bc3c584009f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451f289e-81c8-41f9-8342-f6560e43b503",
        "cursor": {
          "ref": "0a5b1811-8d8f-4944-924c-c8b1715449d8",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "81359ed8-0dd0-42d9-a15a-75062a25c6cf"
        },
        "item": {
          "id": "451f289e-81c8-41f9-8342-f6560e43b503",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d66c9655-43d3-4863-bb72-a237f3203e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0799e3-a79b-4666-8cc4-eb417bc79561",
        "cursor": {
          "ref": "c59d4798-f26f-44b0-b3da-e8ee11a5a2ee",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "38c642c7-78bc-4a99-9ba5-fd6cc53e477b"
        },
        "item": {
          "id": "0e0799e3-a79b-4666-8cc4-eb417bc79561",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0b359088-5220-43d9-b070-41e693703289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9436c87e-7280-4040-b47f-6018e998d4b0",
        "cursor": {
          "ref": "a8af1e30-86b5-4948-a930-031b1b2712b7",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8522c4f5-0779-481c-89cf-e4488d6166ea"
        },
        "item": {
          "id": "9436c87e-7280-4040-b47f-6018e998d4b0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ad3cf94b-fe10-4050-be5b-b0c95d42b0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47236720-9b27-42b4-91ed-3d5d9fa2d0f9",
        "cursor": {
          "ref": "64775025-1a77-4c34-9536-bbbdd9a70c4f",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d09354da-ac58-4fa2-9cc8-02449ccece6b"
        },
        "item": {
          "id": "47236720-9b27-42b4-91ed-3d5d9fa2d0f9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5be24919-e29a-4de3-ab3b-91e9d50db748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ce73fa-0c99-428f-9c22-f7d07c4a14fe",
        "cursor": {
          "ref": "696fd5ca-b0f7-40db-a639-60aa7e537b58",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ae2468b1-95f7-4944-b8ad-bdebb53fdab9"
        },
        "item": {
          "id": "a2ce73fa-0c99-428f-9c22-f7d07c4a14fe",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1362c13d-5e9c-42e4-8c81-b12e8536d945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7efe0c49-d8f9-4413-8b8d-ff479c30c8f1",
        "cursor": {
          "ref": "e482d258-dcdc-4c15-ba2b-96b10e6b261e",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ace1ebd8-aff3-42b1-b743-ffd598419edd"
        },
        "item": {
          "id": "7efe0c49-d8f9-4413-8b8d-ff479c30c8f1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6c464522-5e77-4f29-8bf7-c25ca8b21783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9426e0db-164e-4eed-a5b6-c80973dc2dcc",
        "cursor": {
          "ref": "61514166-ad02-4360-91fb-96941a21f39d",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8c28f6d7-75e1-4f57-9b58-6338cf8e3330"
        },
        "item": {
          "id": "9426e0db-164e-4eed-a5b6-c80973dc2dcc",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "59bf9447-5382-4a54-807c-e4a0b77ae334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f422d7b-fdc7-4dc9-b06c-a9b952a0fb5a",
        "cursor": {
          "ref": "af06a0c8-a397-402b-a1f1-e53e58a6b308",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0b4d2e12-99b2-4936-b0de-f61d240debf1"
        },
        "item": {
          "id": "7f422d7b-fdc7-4dc9-b06c-a9b952a0fb5a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5439656b-9b87-4527-8ae5-706de8e36a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5af751-1c5d-4675-89da-a8bfcf6811fa",
        "cursor": {
          "ref": "65611a8a-74a0-4f96-8538-0e01d73d8ea2",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2be97ad5-0b42-4280-9d0d-092174cad744"
        },
        "item": {
          "id": "ac5af751-1c5d-4675-89da-a8bfcf6811fa",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "44f31389-292c-447f-a4aa-e232840fe2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf3e9bb-94c2-45f1-b241-db8487d2af8b",
        "cursor": {
          "ref": "dcfce106-1d8e-4c71-9fcf-ec84e7363305",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f84e1dc6-21b0-4e1a-bd60-8d8e80b649b6"
        },
        "item": {
          "id": "dbf3e9bb-94c2-45f1-b241-db8487d2af8b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "046afa77-9940-4285-8d0a-cf722e62d346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae49349f-5ad6-4d9e-b03c-486754ae69be",
        "cursor": {
          "ref": "25496da6-adfb-48ad-9567-477325eb2dfe",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "37e4c958-7865-42cf-b2bd-de3a4b489bb8"
        },
        "item": {
          "id": "ae49349f-5ad6-4d9e-b03c-486754ae69be",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8c5c58f8-efc3-4d87-805c-148f51652da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8172a00-773e-4c01-94bc-3caba09748bb",
        "cursor": {
          "ref": "6bdf3407-41b3-456f-a9e0-0d8f1eab535c",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5f97fda5-0f3c-4535-a545-52f8f3882663"
        },
        "item": {
          "id": "b8172a00-773e-4c01-94bc-3caba09748bb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "95160b84-d2e3-4891-a986-ab2f360d0a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7701ba6-0e70-4b17-9721-6f136e2052a2",
        "cursor": {
          "ref": "663454b8-c39b-405a-a995-ef5056f791bb",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "09bc3e75-c996-41e0-95a2-f592216c748f"
        },
        "item": {
          "id": "a7701ba6-0e70-4b17-9721-6f136e2052a2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a29f0eb7-c140-48cd-ae4f-0463e343e661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7124ea7e-ba42-4a21-8bca-9f3d7e511212",
        "cursor": {
          "ref": "eda72cd3-e8e6-4bd1-8823-fc8c4d5d4d88",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "96d6ffc0-3d72-4f68-b370-2bcbecd744bd"
        },
        "item": {
          "id": "7124ea7e-ba42-4a21-8bca-9f3d7e511212",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "02fb1b12-8260-48fd-a2fc-ef8558297497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce62e9b-c201-4181-963b-6c1c1513ef4c",
        "cursor": {
          "ref": "fb369284-971e-459b-9124-3222161acef4",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "3d40ee8f-b25f-4672-b9c1-10614f497b61"
        },
        "item": {
          "id": "2ce62e9b-c201-4181-963b-6c1c1513ef4c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2289bf6e-2f85-4e03-8334-be5a4d522f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39dae3b-d16a-4732-a524-4e6da2410db2",
        "cursor": {
          "ref": "332ad5c9-ece6-4771-bc01-513eaba1b6c9",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "35f293a1-213b-49b3-a1de-b8a0534caca1"
        },
        "item": {
          "id": "b39dae3b-d16a-4732-a524-4e6da2410db2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "dc4e4777-3b9c-458f-85a4-01d3b23b9c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364740c5-784b-4407-8af1-89a06315db84",
        "cursor": {
          "ref": "49ac4fbb-8875-47f2-a776-423527824eb3",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f307463c-2637-487f-abaa-544980af5ee6"
        },
        "item": {
          "id": "364740c5-784b-4407-8af1-89a06315db84",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7b15c352-cf45-4a53-8332-779d123b646f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32bbef2e-63e1-4a2f-b6af-966d9244b7d6",
        "cursor": {
          "ref": "a5f36344-7a55-4d21-ab27-b59725dd60d3",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "46c6e0be-a044-423b-af78-ab5fe3ddabde"
        },
        "item": {
          "id": "32bbef2e-63e1-4a2f-b6af-966d9244b7d6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "99d414f2-964e-4356-890c-9e2ee915dabc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e44e32b-cd3b-4220-a647-6fce7de82c6d",
        "cursor": {
          "ref": "ab41cb32-19fd-47b9-bfac-0c0b51ecb050",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "937dee30-e177-484b-aecc-585684bf143b"
        },
        "item": {
          "id": "0e44e32b-cd3b-4220-a647-6fce7de82c6d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0afb08fe-dc6e-420d-9aee-27b3c50a49e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a791271-9139-46d4-830a-8434f738bf60",
        "cursor": {
          "ref": "358d8afa-0d15-47fc-8ba4-d68bf67c9cbb",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0ea57aca-c7d6-4b57-a456-7aced867a8a4"
        },
        "item": {
          "id": "5a791271-9139-46d4-830a-8434f738bf60",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ea122f27-a5b1-4442-8966-04c1deaa90e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eccf6785-b866-4de6-9d8f-1064efa5f3d8",
        "cursor": {
          "ref": "9524b5eb-034c-4d85-b472-e71a0a365908",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "80fc1014-36b5-4c38-80c4-dc0bd75a4c2d"
        },
        "item": {
          "id": "eccf6785-b866-4de6-9d8f-1064efa5f3d8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ce6cdfd5-ba15-4b7d-8d3b-c294171fc7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476f7fe2-6e2c-43df-92bb-e8c5c92a1e2d",
        "cursor": {
          "ref": "fc1de4da-b170-40e8-a297-1161a49a2953",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "5a7d6e1f-4250-4f1f-ad64-9311d9814634"
        },
        "item": {
          "id": "476f7fe2-6e2c-43df-92bb-e8c5c92a1e2d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b0f94334-2563-46a5-b97a-3099702f37fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f425d38-62a9-40c6-a7b1-b63032b67a67",
        "cursor": {
          "ref": "cde71b86-0295-4efd-b659-c084d7d58fcd",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "833a5cad-9832-4a8c-8dbe-de0a886ad0e1"
        },
        "item": {
          "id": "8f425d38-62a9-40c6-a7b1-b63032b67a67",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8e5ac59e-2d5d-4925-800a-bba49766e444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61463a58-6d93-4171-a13e-071c3d2ed346",
        "cursor": {
          "ref": "7e13b667-45ea-4d68-8650-5a40a5b6fd92",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "dd70ed4f-c2e3-4697-852c-249cf8464191"
        },
        "item": {
          "id": "61463a58-6d93-4171-a13e-071c3d2ed346",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1db8e01d-f040-43da-8935-bd305923450c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca248854-67cc-4003-ba9a-9ddaa3f80e84",
        "cursor": {
          "ref": "66ecf355-24fc-4dc0-89e3-ad67faf8b9a2",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "28e1467b-6869-4289-8fae-e554bf36402f"
        },
        "item": {
          "id": "ca248854-67cc-4003-ba9a-9ddaa3f80e84",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8d09f542-908f-4a6e-90ad-f1cd5dcfe6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8e9e7b-a08c-4302-a125-25486c7383cb",
        "cursor": {
          "ref": "d24de854-a54d-4f6c-b035-3ebf85498803",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "aa36a155-58b5-4e95-8b72-51af9ce5ac95"
        },
        "item": {
          "id": "ca8e9e7b-a08c-4302-a125-25486c7383cb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2fe9eb2f-beab-4016-80e9-f404a4778b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ac34ab-6970-4524-bffb-55643db3ec5e",
        "cursor": {
          "ref": "7079769e-1004-4b46-a27e-040c03ba8b02",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "635841fb-b82a-437b-a9ad-01d3daa10ef6"
        },
        "item": {
          "id": "97ac34ab-6970-4524-bffb-55643db3ec5e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "20f34a63-c3c4-4c60-8a71-30f92ddb37fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112668f3-91a9-440d-bae9-44f01a57cd17",
        "cursor": {
          "ref": "32dd5edc-2338-49b1-a6c4-1dac0c2cd95e",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "23806625-407f-4844-b388-d61eafdf4244"
        },
        "item": {
          "id": "112668f3-91a9-440d-bae9-44f01a57cd17",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cfc4f396-9235-4a09-83eb-90e91c4b6de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1993ce89-d8bf-4d98-bb11-1e75f4c0fa31",
        "cursor": {
          "ref": "b27e16ef-ad0b-482f-a38a-dc82dfcd850b",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ee2a5892-2c78-4c24-b9fe-a840ff194e59"
        },
        "item": {
          "id": "1993ce89-d8bf-4d98-bb11-1e75f4c0fa31",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "39e8438c-fba6-47d9-8b12-fc5fac794930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f3a9ac-c871-4d08-ab65-fd3c6326970e",
        "cursor": {
          "ref": "6b5c1483-67c6-4f43-a1cd-2dcd79b17080",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c61b5338-ff79-4787-920c-84c595cf0846"
        },
        "item": {
          "id": "27f3a9ac-c871-4d08-ab65-fd3c6326970e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2b4684fc-90ee-45b6-8b2f-390ccf5a1270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b0395e-6e2d-4a73-91d1-a02549709055",
        "cursor": {
          "ref": "318b8682-fea5-41dc-89fa-2c155ae17c11",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a302cb07-98c5-445c-9cf2-0efc83d59efb"
        },
        "item": {
          "id": "99b0395e-6e2d-4a73-91d1-a02549709055",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5e7d0bc7-bdd6-45cc-91c5-c91ddf1c6f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5911e5-1f71-4602-a5bf-862898bcb123",
        "cursor": {
          "ref": "6b340bd6-aa26-44bd-a239-fa50814964c0",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "6a2733c6-ba14-4204-ba8c-a1bd1fefcd54"
        },
        "item": {
          "id": "ca5911e5-1f71-4602-a5bf-862898bcb123",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "84e8b219-563f-41f9-9e54-95e043bb28af",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4c5193-3d69-4b8a-a9a5-afdfbe7648fb",
        "cursor": {
          "ref": "e63bdb7b-993d-4188-bca3-1c257cf68a5a",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ac1090e0-9f6b-4988-a55e-23e0ee62d165"
        },
        "item": {
          "id": "db4c5193-3d69-4b8a-a9a5-afdfbe7648fb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8abba856-4a8f-4df4-a183-46dd05d925a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa739a58-7a7b-4612-94a4-fc799b97a3d4",
        "cursor": {
          "ref": "14ad4485-4abc-467a-af0a-ab83f9faf3c6",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "3159ab88-b275-4d78-8af2-ecead5525ff8"
        },
        "item": {
          "id": "aa739a58-7a7b-4612-94a4-fc799b97a3d4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "591f15b9-11a7-42ce-810e-5719ce4a777f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663c3f28-23be-408c-8c00-0d954b7f8475",
        "cursor": {
          "ref": "f1065e7d-e161-4928-becc-6d660c756570",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "cd7c0aa2-5ad5-44fd-8e3d-3d8230f6d217"
        },
        "item": {
          "id": "663c3f28-23be-408c-8c00-0d954b7f8475",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e442b95f-5052-4cb5-8204-adcc2d4c8edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67656a02-15c6-49e1-9c17-7804e71034c2",
        "cursor": {
          "ref": "3281c9fa-8b7f-4808-8068-5156a6fcd0f6",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0825566b-7504-4308-8612-fde73cb3ca03"
        },
        "item": {
          "id": "67656a02-15c6-49e1-9c17-7804e71034c2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "69ab013d-94ab-4164-ac7f-5c62b4e90ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9786c0b0-62ff-4c71-871a-c49f2ef307ab",
        "cursor": {
          "ref": "af6fab61-698b-4150-8529-bdc101bc890b",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "43204af9-566b-4b9d-af01-401300f64470"
        },
        "item": {
          "id": "9786c0b0-62ff-4c71-871a-c49f2ef307ab",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "64701fce-ca2c-4949-94b2-4f7d5a931574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7ccf58-c135-44ad-ba0f-6f5cab430d21",
        "cursor": {
          "ref": "d8797d82-bebe-4810-a5f5-9608bff6ac88",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "138bbbe3-c523-48fc-8d82-1971210359de"
        },
        "item": {
          "id": "eb7ccf58-c135-44ad-ba0f-6f5cab430d21",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7a77394f-6a63-4463-bf0c-f47115cc830b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27e8a9a-2228-4031-a1e4-e41068d691f3",
        "cursor": {
          "ref": "11a67881-4252-4830-81df-f323088e7923",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c5200243-e40f-4e47-ae13-d76747c8782f"
        },
        "item": {
          "id": "b27e8a9a-2228-4031-a1e4-e41068d691f3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0d312a7a-0055-48c7-9a3f-42655e993130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72b0d8a-a298-4a69-9aec-148e65ed9ea5",
        "cursor": {
          "ref": "5c9fe5d3-087f-4e6c-b75a-452ba991fbe5",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "dd17a470-5ec3-4e7f-8e3d-7677d915a60a"
        },
        "item": {
          "id": "f72b0d8a-a298-4a69-9aec-148e65ed9ea5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "94973c36-d1dc-4676-ab6c-631bbeb71962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8232c09-27f8-4b2e-b60f-953138a4a692",
        "cursor": {
          "ref": "99607bd1-49b4-445d-903f-b05a7e47f7fa",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "172dcfec-616a-452a-af29-bee6e8e415ee"
        },
        "item": {
          "id": "b8232c09-27f8-4b2e-b60f-953138a4a692",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "637b2a8d-bb9e-4f12-bd74-1bf639f1be28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96d9dcf-271f-4ab0-9b5d-54513736bc7a",
        "cursor": {
          "ref": "253b165a-26c7-4670-bd63-6729e7f4553a",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0c1870fe-dc37-4691-bdee-ca3fbfe10711"
        },
        "item": {
          "id": "b96d9dcf-271f-4ab0-9b5d-54513736bc7a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5591e653-1894-44d6-b62d-8d91256be43e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b2793f-3fa2-4a94-b87d-81cfc01ec196",
        "cursor": {
          "ref": "cde4365a-9282-4461-b813-1f5c62f7f4d1",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "13ff77d4-db0d-4dc0-b479-92b4c1249e72"
        },
        "item": {
          "id": "57b2793f-3fa2-4a94-b87d-81cfc01ec196",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "65615b85-33b0-4e82-99a7-fa6c859a3490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781a8385-c90d-41b1-a10e-989037e68363",
        "cursor": {
          "ref": "8d274485-5a7a-43d1-8857-8a2aa5e2ef64",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d06d4db0-9cfe-4c2f-909c-13d351f8364c"
        },
        "item": {
          "id": "781a8385-c90d-41b1-a10e-989037e68363",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2350b4a6-bb28-4c81-85aa-7742e5968c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46dd4845-8326-41cb-b899-34b13c4a9346",
        "cursor": {
          "ref": "b32fbaa9-869a-4169-b87b-5764c870740f",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7d8fe9c8-9cff-43e8-aec8-d1ae41b352e1"
        },
        "item": {
          "id": "46dd4845-8326-41cb-b899-34b13c4a9346",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "eb34e5e0-e855-4fe8-a866-98cff3a827d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651bb4e6-3928-4e1b-ae42-cea615e63526",
        "cursor": {
          "ref": "6505fa0b-dce9-4179-8220-0fd4642e90c2",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "01525aed-ef80-40da-8e2c-2e817c7a15a4"
        },
        "item": {
          "id": "651bb4e6-3928-4e1b-ae42-cea615e63526",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "edcefd7b-4d95-4d30-967f-d2b6b57808f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad547ff-6c45-4d9a-94d0-29792760191a",
        "cursor": {
          "ref": "237b1c6e-5071-4aab-be43-a24e7af6cb24",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "85e26e01-98bf-4c2e-908f-daf60a32942b"
        },
        "item": {
          "id": "1ad547ff-6c45-4d9a-94d0-29792760191a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "675e0699-380c-4568-81a1-340e37582101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ad1c3e-dc06-49a3-8cce-650300b44364",
        "cursor": {
          "ref": "0ad7b9e9-73a4-46cf-9025-fe3a4f54b109",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ad1c666f-7d00-48c5-8e27-52b150fc7a56"
        },
        "item": {
          "id": "03ad1c3e-dc06-49a3-8cce-650300b44364",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "09307362-bae6-4abd-b32f-31e0729fe3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f855f693-d360-409a-8459-69f1c600c196",
        "cursor": {
          "ref": "909bf8ef-ae43-4c30-b400-7007c005612f",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7f8c6ec9-a449-4054-b73f-eddf5daf7054"
        },
        "item": {
          "id": "f855f693-d360-409a-8459-69f1c600c196",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d77749ef-5ed8-48fd-869d-79b638165651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294e0b0a-2148-4b0a-b013-7a519dd9bb3c",
        "cursor": {
          "ref": "5769befe-cbc5-4fd9-a877-9b7e0eb5d2e3",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "073ec469-38e8-4e7a-828e-a9eefd73a92e"
        },
        "item": {
          "id": "294e0b0a-2148-4b0a-b013-7a519dd9bb3c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "02640f6a-a324-4a0d-8ac8-3b81684de27b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee80c8ba-4977-431b-b25f-f05495c49825",
        "cursor": {
          "ref": "34ec0470-1e50-413c-9ac1-a72f62214f58",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "095e53b1-e7b1-412d-a895-e3689290e887"
        },
        "item": {
          "id": "ee80c8ba-4977-431b-b25f-f05495c49825",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2e9149b3-139d-4e84-a33e-a9fc9ab527bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd1544a-8ac6-4025-a722-a4c4e490bdc2",
        "cursor": {
          "ref": "6290bfed-c496-41b5-a1cb-8ba4f373c3d4",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "54ce02c5-8491-4662-8d78-7762a2ca0ef8"
        },
        "item": {
          "id": "dcd1544a-8ac6-4025-a722-a4c4e490bdc2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b0756a82-d87e-47fd-be54-dac5931a3207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a51c7d5-5779-45f5-badf-8dbd69c609ae",
        "cursor": {
          "ref": "86e00ef4-87c9-44fc-a9f3-345952e64cc7",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c686205d-ccde-4c50-a392-7e10757e39e3"
        },
        "item": {
          "id": "1a51c7d5-5779-45f5-badf-8dbd69c609ae",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "89533439-43d7-49fb-aeb4-d0122f12fc46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb490ce-8995-4e1d-afcb-36f4aab54a66",
        "cursor": {
          "ref": "72ab5982-f6a6-45dc-9449-d7a08f018f62",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f3943cdf-6e90-4bd2-a9c3-5c62f2dddf51"
        },
        "item": {
          "id": "0eb490ce-8995-4e1d-afcb-36f4aab54a66",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "33838a1f-6361-418f-a8b6-4457dc3df5a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a544a43-5c58-43e9-9a0f-9b4627cb85c9",
        "cursor": {
          "ref": "d6a1b105-d5f5-46ba-984b-e886234e445d",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e70d25ea-e5dc-421d-9411-3212d60aefc6"
        },
        "item": {
          "id": "5a544a43-5c58-43e9-9a0f-9b4627cb85c9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4d117aa9-9181-4edb-9bf4-800f06f4cc92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97990e3-4107-43c6-83cb-c5c24e341445",
        "cursor": {
          "ref": "0ea2b776-b3b4-4e1c-adeb-acc387e3db20",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "97254d9c-1d6a-4b9e-aa43-3715a47b94dd"
        },
        "item": {
          "id": "f97990e3-4107-43c6-83cb-c5c24e341445",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "926cbb54-0527-40ae-b3cb-5bac5b58a6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c90e14-1760-417b-b7ec-5ad305c828e3",
        "cursor": {
          "ref": "d71334c2-74eb-4064-b42d-d24ae26d72aa",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "10103f49-016d-4657-8d9a-f2f5cfd4e039"
        },
        "item": {
          "id": "f4c90e14-1760-417b-b7ec-5ad305c828e3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "031192aa-cfe7-41b3-85b7-28dbe1efbd5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1859c271-1acd-431e-a579-bbda228b6940",
        "cursor": {
          "ref": "dddde785-acfd-4279-8d29-2ee18e4be292",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "fda13e9a-6886-4581-821a-1df2bb1e5bcf"
        },
        "item": {
          "id": "1859c271-1acd-431e-a579-bbda228b6940",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "67f1e130-0472-41a6-825a-b6448b4bb17a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9bc3df-6260-4f93-9707-e0d74716258d",
        "cursor": {
          "ref": "95702a52-c1c3-4d9a-90f5-fefbd4460499",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d390f4fc-7da4-4025-af94-790037f0f5cc"
        },
        "item": {
          "id": "2e9bc3df-6260-4f93-9707-e0d74716258d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "16079b29-1fb2-4011-9fde-7a7f7472b38b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbaccc3c-b800-4a50-b96b-658269d3470f",
        "cursor": {
          "ref": "bc92e386-905b-443b-8ad2-58d4796b0dea",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9eec2fd5-f951-4f4b-ac95-33edddf0d9f9"
        },
        "item": {
          "id": "fbaccc3c-b800-4a50-b96b-658269d3470f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1f5fd4cd-0c37-479d-8e71-6598ee9da46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4914289f-21bf-452b-9908-c3178135900a",
        "cursor": {
          "ref": "fea86941-d1ca-4a43-99f6-9d4c8a2e5f28",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7930059e-19a1-43e0-9cce-c636b718d4a2"
        },
        "item": {
          "id": "4914289f-21bf-452b-9908-c3178135900a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4eaf03ab-9bd4-44f4-b87d-8b600a8155d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ed31ee-c6a5-4518-847d-8dff7a1a0fa5",
        "cursor": {
          "ref": "b3f8143f-282e-4371-9e7b-cd0733c575d5",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3d50fcc3-7f14-4926-818e-3b97f192b736"
        },
        "item": {
          "id": "f6ed31ee-c6a5-4518-847d-8dff7a1a0fa5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "528d6707-e608-41ee-a076-8e9db2be25f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8a7f1c-5f0c-429a-a64d-65829b8696d0",
        "cursor": {
          "ref": "ad76710c-c92f-49b5-b82c-bdf831f6307b",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "14270e3d-ec41-4909-8bf6-022a9a1fa011"
        },
        "item": {
          "id": "da8a7f1c-5f0c-429a-a64d-65829b8696d0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "93d1c74c-011a-4ec6-bc39-cdafb937ae87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017d285b-6ddc-437a-b1c2-1e49de4fef34",
        "cursor": {
          "ref": "be97e79a-57d9-4cfe-9402-b150aae22533",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "66201958-afb6-472b-8473-ac9c06835117"
        },
        "item": {
          "id": "017d285b-6ddc-437a-b1c2-1e49de4fef34",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b3dd1678-2082-4648-b30f-4d82ce4185c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da843084-e6d7-4169-9150-3401c785ab72",
        "cursor": {
          "ref": "6e2ae6a3-ff15-40c7-bb55-51b5c70b297c",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ac49af7e-3c46-494f-9491-4fdb2db32287"
        },
        "item": {
          "id": "da843084-e6d7-4169-9150-3401c785ab72",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b6e3707b-1498-438a-961e-ebc2720c8d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa091e15-13f7-41ab-8ef8-e01eb2b4a22e",
        "cursor": {
          "ref": "d28b3304-539b-47aa-8705-4a773388a996",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a53887fa-0af2-4d9c-8518-aa491fcff48d"
        },
        "item": {
          "id": "aa091e15-13f7-41ab-8ef8-e01eb2b4a22e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "8e2f40f6-c069-48e2-a123-d9423b7ece7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4228e5-aaa7-4681-9b77-40db1c9f4734",
        "cursor": {
          "ref": "d816eab9-0152-42ff-b46e-a9889d9a43aa",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "719f717e-5a5c-4cea-94ee-c94a79a6cc8a"
        },
        "item": {
          "id": "fc4228e5-aaa7-4681-9b77-40db1c9f4734",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b0f52446-f6b5-44a9-a20b-c5baa831c7ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a33ee20-4d3e-4a62-927b-ecec63344032",
        "cursor": {
          "ref": "91018e66-55f6-4a49-b8e7-f4e264813db7",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "86d8f82b-645f-486b-be0b-ac0bd97808a3"
        },
        "item": {
          "id": "9a33ee20-4d3e-4a62-927b-ecec63344032",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "67e740ee-5857-43f4-a084-3d322b06d565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9975d7-ea51-4547-b55c-75ee2e8946c3",
        "cursor": {
          "ref": "0f5e8132-2354-4969-85c9-8664aa0e8dfa",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "31fbd80d-99e4-474a-ad2b-f402c6f66efe"
        },
        "item": {
          "id": "ec9975d7-ea51-4547-b55c-75ee2e8946c3",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "136e8ee9-0e12-4a87-8291-2ee7df94914c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2aef68-083e-44c6-86ce-868d095e3580",
        "cursor": {
          "ref": "6c7a54fe-ffb0-4b20-b3b8-464420f5ca30",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "bdf9cba8-f178-41a9-b9b3-7a7ff0d1e468"
        },
        "item": {
          "id": "0f2aef68-083e-44c6-86ce-868d095e3580",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d05ce2a6-8092-4a1d-a4f3-1c00d9a3083f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66aee2e-f6bb-4091-92d0-25e2db491e84",
        "cursor": {
          "ref": "9561260b-882b-419d-b740-d3c7fea85ef5",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "09fc97f2-8f03-4584-ba38-9cf9c34c2c2b"
        },
        "item": {
          "id": "f66aee2e-f6bb-4091-92d0-25e2db491e84",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0d9f542b-9114-49a2-90e9-ffdb024968c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5f78c5-7436-47a8-a333-645328816dd4",
        "cursor": {
          "ref": "63468087-47ce-4fb9-96eb-e0ae15c39a4d",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a3503d62-3926-48bd-8162-7671e25604fc"
        },
        "item": {
          "id": "6e5f78c5-7436-47a8-a333-645328816dd4",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a5a8bce3-e425-4749-93f8-f467284918a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df26e14f-0c1f-4b16-85ea-153fb2782a67",
        "cursor": {
          "ref": "1ee24a02-c9f1-4fa1-8e41-a08c3a56dbf4",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c7b25905-bee1-4d6a-a4d4-4998b1c3e814"
        },
        "item": {
          "id": "df26e14f-0c1f-4b16-85ea-153fb2782a67",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d3f8a900-a0b3-44d1-9f97-1e712f9ac04a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a3ca7f-4969-4d4c-b8c8-59dab7408236",
        "cursor": {
          "ref": "1566e4e0-5386-46d5-85df-827460576614",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "bb36db2a-e534-47ad-a713-7d14fcfaff71"
        },
        "item": {
          "id": "49a3ca7f-4969-4d4c-b8c8-59dab7408236",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "69b8644e-8052-460c-baac-fc17e0f427e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ad5e09-0510-4af1-97ab-846583f6d9fb",
        "cursor": {
          "ref": "bcc0666c-6e36-41f8-ad2e-3e8a7000844b",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "04487c72-4b41-4d03-9316-aa39cc1cc707"
        },
        "item": {
          "id": "d5ad5e09-0510-4af1-97ab-846583f6d9fb",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4cccd597-4eff-4d3e-92ce-aaf43a50fe2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c325ec14-cd55-4f38-837c-ad8c7e4d8236",
        "cursor": {
          "ref": "ca9e649e-53e2-4dd1-a952-5835fb718c94",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8e6024f8-db74-4440-b300-5140c72bad00"
        },
        "item": {
          "id": "c325ec14-cd55-4f38-837c-ad8c7e4d8236",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "573d5272-661a-4999-8c4d-e8ee60a7d45c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04835332-8fbf-44b6-9a8a-c952281e5d54",
        "cursor": {
          "ref": "3d710b39-3189-45c8-be40-1bdbfdf672df",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "71d3e538-9eab-4cd6-9806-e0f605d18740"
        },
        "item": {
          "id": "04835332-8fbf-44b6-9a8a-c952281e5d54",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d16b7f6e-0ab8-47ee-87d5-f54943039e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eed78c0-8f63-4964-b8f8-354aa113ea54",
        "cursor": {
          "ref": "2c87aa89-6a4d-41b6-8651-370b937da4aa",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "eea4d2c8-b79e-49b4-927c-19c535d5178d"
        },
        "item": {
          "id": "4eed78c0-8f63-4964-b8f8-354aa113ea54",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8a00d551-bf8b-4d75-a232-9455ba9e4017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a8c00e-436c-4da0-b3f5-2a0409fc3c3f",
        "cursor": {
          "ref": "6e7c2724-2aeb-40e6-a6e5-d2de9b17f077",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "13d01743-fc73-4f60-ab04-16b7c4a44310"
        },
        "item": {
          "id": "b1a8c00e-436c-4da0-b3f5-2a0409fc3c3f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6e8b1f91-4faf-43a7-96c9-106978145944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef4968b-00b9-4e6a-9d25-77b99ce4492e",
        "cursor": {
          "ref": "0c198466-c6f8-4a2e-b498-03713d7c9603",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7f34d95d-40dd-40b0-b79f-1e2acb53b270"
        },
        "item": {
          "id": "9ef4968b-00b9-4e6a-9d25-77b99ce4492e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "abeec8e6-9e7b-449f-930b-e59190dcb9cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17453b5-18a5-4cb0-bfa7-77877c63927e",
        "cursor": {
          "ref": "035a1b0d-22cb-4292-8357-9e453011837a",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "dbdc5aeb-52de-46a7-919e-be56ccef38cd"
        },
        "item": {
          "id": "f17453b5-18a5-4cb0-bfa7-77877c63927e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "4d5a7770-6a06-4c66-9b09-beeb26623c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895a8327-56be-4201-b4f4-09124d3d95b5",
        "cursor": {
          "ref": "6edb4a86-217c-4900-9970-abf1476df8fd",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "67458b45-b158-4424-b67f-f36ae56a70c8"
        },
        "item": {
          "id": "895a8327-56be-4201-b4f4-09124d3d95b5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "82e36efc-4f86-428e-b2d5-49c7389fb454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f973422-c55f-4439-882a-0da44018cf63",
        "cursor": {
          "ref": "77cf38b6-97d3-4e7f-9661-31a0c96e94b7",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "daf37f24-386c-470d-aac7-b5b924f146a1"
        },
        "item": {
          "id": "7f973422-c55f-4439-882a-0da44018cf63",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1c38ee40-105f-4e5f-8e2b-33dd8e48d647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77018b8-770e-41b8-a350-1bbb4c9fd021",
        "cursor": {
          "ref": "13f7fd27-ee8a-4488-b803-68eca29007c7",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e71100d8-feff-4c88-bf76-a8ba9f3c313b"
        },
        "item": {
          "id": "a77018b8-770e-41b8-a350-1bbb4c9fd021",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "20db0616-846d-40bf-8882-3b53940090b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1423dc-6ec5-4d91-bdc1-7c8fd74eeac7",
        "cursor": {
          "ref": "1ef7e0ba-0903-46e3-8bec-997f91d23e09",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "becd4cb3-a916-4e7f-afc1-fafa838239e4"
        },
        "item": {
          "id": "7e1423dc-6ec5-4d91-bdc1-7c8fd74eeac7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f7dafa34-90ce-49f2-8ca8-f30e3d47e42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b66a401-7394-4100-be8f-c3ac53225143",
        "cursor": {
          "ref": "c09119c2-bfce-4f26-91c2-a815f006f9c3",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "824ffade-abe0-49b2-b03b-bea2c609a0cc"
        },
        "item": {
          "id": "1b66a401-7394-4100-be8f-c3ac53225143",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "84cfe7fb-4cdb-4bc0-97a7-712e5f523b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5314e134-bcea-41ac-b2d7-4a8b364ca1bd",
        "cursor": {
          "ref": "61781af3-1dcf-4dca-b4a9-8ee070848cad",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "dadf7637-67a4-4135-9cb3-494775cbbbc3"
        },
        "item": {
          "id": "5314e134-bcea-41ac-b2d7-4a8b364ca1bd",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2641eb58-ad58-40cb-9d45-87b6b9a181b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e28d586-b50a-4188-8e35-8a911e428404",
        "cursor": {
          "ref": "1d74bbaa-2c0b-456f-b488-dbade7b8a969",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e21eb791-440d-4327-91c7-a42463ca1d82"
        },
        "item": {
          "id": "6e28d586-b50a-4188-8e35-8a911e428404",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "581fb92c-7a42-417d-aa6a-e146080ea755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b9c715-f3f1-4f9d-a557-a964d9babd99",
        "cursor": {
          "ref": "b6300318-ce1a-4e52-b66f-89a2c45d6079",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f8f5a0f0-cf36-43c3-a6a4-73acd27e0cfa"
        },
        "item": {
          "id": "b5b9c715-f3f1-4f9d-a557-a964d9babd99",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5067d158-f357-439f-8ace-24c9956e5bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d040d99d-da15-4c46-ae0c-a5da600f29f5",
        "cursor": {
          "ref": "42a5780c-942e-45a5-8b45-194fedc6b32d",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d5e1c9e8-59f1-4be5-84de-cd51853d9fe2"
        },
        "item": {
          "id": "d040d99d-da15-4c46-ae0c-a5da600f29f5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1e03a7da-af07-4b26-9618-882d5e5c1c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb9f2ec-f273-4ab7-bfc6-d7380f6f4c8e",
        "cursor": {
          "ref": "54e282da-faea-47df-8c97-1cc5b54d24ee",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8b0ef05f-d3a7-4fca-ab2c-af4eccdcd0ac"
        },
        "item": {
          "id": "ddb9f2ec-f273-4ab7-bfc6-d7380f6f4c8e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "381abbff-6d6a-464d-95e9-fe285a40ce5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e076aa2c-4e87-4e5f-819c-b7d2e8f7eb6d",
        "cursor": {
          "ref": "f63932c1-18cc-4653-927d-8796f79e2cda",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "fbbb6902-cff5-47a4-9849-ec4b16b5a208"
        },
        "item": {
          "id": "e076aa2c-4e87-4e5f-819c-b7d2e8f7eb6d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "dcf70618-5231-4de0-aeaa-8fc58fae4eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6823f8a2-9655-40b2-ac6b-94e0de5f3b99",
        "cursor": {
          "ref": "62319de4-8540-400b-a8f2-b56329ef496b",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "90c08616-696c-45fb-894e-7e53d0108d41"
        },
        "item": {
          "id": "6823f8a2-9655-40b2-ac6b-94e0de5f3b99",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8ac37da7-5086-4d69-b621-575921e10f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1cc9f1-6509-43dd-a0fa-3231e7188f80",
        "cursor": {
          "ref": "1e88a8bf-b71a-45d4-81f4-849ebe90b8e4",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b6846f61-16cd-4aac-88d3-6fb141d7a300"
        },
        "item": {
          "id": "8d1cc9f1-6509-43dd-a0fa-3231e7188f80",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "afe37aa7-d3ad-48a7-a107-4591fabbf4f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89e3252-c79b-48c8-bf7e-c391a73feac1",
        "cursor": {
          "ref": "8305885e-9612-4adb-8bb8-93f7f9b89f84",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1bff5006-c31c-40c3-b749-0c62e9a7de68"
        },
        "item": {
          "id": "b89e3252-c79b-48c8-bf7e-c391a73feac1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "708e3a48-4927-4652-83d3-1358abb08ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b209d6-66a2-44b7-990c-6660cee075ad",
        "cursor": {
          "ref": "4b0332ff-9359-4702-a794-fd1830d088a1",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "63e5a5cb-aa10-431a-a66b-88691d6f86f1"
        },
        "item": {
          "id": "54b209d6-66a2-44b7-990c-6660cee075ad",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b252fdbf-38c4-40c8-9cb6-c9163f6c29e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ace41e-0fc2-4195-8d87-28c970cca49d",
        "cursor": {
          "ref": "3a0a15dc-50a1-45fe-acb1-a35dac9a946f",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "08ac8f8a-f703-4f27-9961-d06c4a3096d4"
        },
        "item": {
          "id": "e5ace41e-0fc2-4195-8d87-28c970cca49d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "55b485b9-9258-45c7-91c8-3cb98fc7c0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76765c8-88d7-4c88-adc7-bcf46f4c1cfa",
        "cursor": {
          "ref": "924dbe01-aaf7-4ed0-99cf-aad372a677d9",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f2349a1e-4771-464f-a48e-7cc3719635f5"
        },
        "item": {
          "id": "c76765c8-88d7-4c88-adc7-bcf46f4c1cfa",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "78d3a42a-1a52-4e34-aecc-a770fa054594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9bd73d-dd00-4df6-b8d8-f26f415928cb",
        "cursor": {
          "ref": "23d17a15-986a-4950-bf43-f2c4282e88c9",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6af757b3-d978-42a9-b0cc-b5725f18c01d"
        },
        "item": {
          "id": "9c9bd73d-dd00-4df6-b8d8-f26f415928cb",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "bfdf68c4-ad94-43c5-937b-ad7e1638abb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce59acb7-4fe8-44a1-98a6-475e40bed06c",
        "cursor": {
          "ref": "e44a3c46-769c-46ad-8aad-afa0f4fc1e50",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d5fde4cc-5987-450f-bcb7-35bca58dd6c3"
        },
        "item": {
          "id": "ce59acb7-4fe8-44a1-98a6-475e40bed06c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7d33d0d9-7c85-47af-914d-2fe76137bfef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1cbf0a-79a8-432c-9a05-83b126e74221",
        "cursor": {
          "ref": "eb52655b-0f07-4c3e-93d8-50eeb94e6892",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "949c8223-9d52-4304-8434-4bcb10d7f785"
        },
        "item": {
          "id": "5b1cbf0a-79a8-432c-9a05-83b126e74221",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "607dec38-ebfa-46a1-98b6-40a640d070d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f030a2-2602-4105-8e7b-90aa996cfb62",
        "cursor": {
          "ref": "410c10cc-4eb8-4a9b-ace3-a09f33d35496",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b0792c93-7072-48f6-861f-07a741b1992c"
        },
        "item": {
          "id": "64f030a2-2602-4105-8e7b-90aa996cfb62",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "beacb946-12ab-4d3b-951c-a16b30d2236a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17985526-5432-4186-bdc5-b83f71956208",
        "cursor": {
          "ref": "754fa4c6-82de-48e3-b404-b84bcc8080cc",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1ca9c585-6b53-4294-934d-2d86e083979c"
        },
        "item": {
          "id": "17985526-5432-4186-bdc5-b83f71956208",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "5c1715b5-3bcf-425f-bacb-8943734a4d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd207385-ba43-42f9-916f-f77179b736b6",
        "cursor": {
          "ref": "5ec367a6-937a-4a8f-ab57-c1288e012a34",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a38b2a66-76bd-4dbe-84d1-fd822c8b20fb"
        },
        "item": {
          "id": "cd207385-ba43-42f9-916f-f77179b736b6",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c56d58aa-4cea-4d00-bbf4-5a61aa093cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3581ae-3f22-417f-97a2-b79981b201db",
        "cursor": {
          "ref": "932fd72f-f483-4360-85d8-62c5403428c9",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "53abaa23-d688-4968-b7bc-f81131d7a5d1"
        },
        "item": {
          "id": "6b3581ae-3f22-417f-97a2-b79981b201db",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2199133e-add1-48b9-838d-4a64bbc00d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a2317e-d7e3-4016-a197-f5ee08190c72",
        "cursor": {
          "ref": "61104b7d-b3c5-43e4-a059-0fa8e88a6b69",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3d9cc282-a8ce-4cee-9bfa-ceb5f149802b"
        },
        "item": {
          "id": "41a2317e-d7e3-4016-a197-f5ee08190c72",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "42b260e8-efcd-4201-9eb2-32771d354d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f49d6b4-6f65-465b-81ee-c661c241bd1a",
        "cursor": {
          "ref": "fa22c456-8251-4a03-8562-84e49cb527aa",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "360e9af7-554d-4193-a7da-d410ddd3f290"
        },
        "item": {
          "id": "5f49d6b4-6f65-465b-81ee-c661c241bd1a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c07395e4-a9d1-400d-b185-7e54a07c0474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86af5998-e191-46db-b721-b8854ead102f",
        "cursor": {
          "ref": "610941b3-733e-4d8c-ab0d-2bb29206cad4",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2eea4f35-b910-47b4-9dc3-bb7d76928305"
        },
        "item": {
          "id": "86af5998-e191-46db-b721-b8854ead102f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "73437671-e3a7-4474-a522-7a035673ddd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f14f18-31db-4328-b841-124699666190",
        "cursor": {
          "ref": "e130c65b-dd51-4dbf-9e48-588ae8ee8ff6",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "51f98ae5-67f8-41fe-8197-835000ef2f3e"
        },
        "item": {
          "id": "d9f14f18-31db-4328-b841-124699666190",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "25e70693-c3bf-4288-9cbd-008ef1e8aeae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b048dfb6-fa99-4f59-be60-e34f1b9ce695",
        "cursor": {
          "ref": "15396869-4e47-4701-9dd7-7d8411ea4aa2",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9a252afa-1bb6-4955-b5b8-b6c07a6894ba"
        },
        "item": {
          "id": "b048dfb6-fa99-4f59-be60-e34f1b9ce695",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "dcd64b53-925b-4912-9964-be6ca1ab50f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9549a43-e79f-4730-b933-01fb9a853cb4",
        "cursor": {
          "ref": "49130b54-42be-467c-a8c9-67d1d0fa20a9",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "bf50d80c-8720-4ecd-8760-1126f75341b6"
        },
        "item": {
          "id": "f9549a43-e79f-4730-b933-01fb9a853cb4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "57404284-703f-44c9-9672-17ff08e77f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d612667e-9e72-464b-bef0-199085ec7511",
        "cursor": {
          "ref": "26ba83c5-79bb-4cd7-b38b-ba84fd714b29",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "248cd387-b790-4434-8565-2f91dbcf9fe5"
        },
        "item": {
          "id": "d612667e-9e72-464b-bef0-199085ec7511",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "052ce03b-ebb3-45f6-9c13-c75e7cd73a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0684bfc-f274-4e21-9025-ad871e09fb82",
        "cursor": {
          "ref": "f4dd4c93-dccb-4e93-92a9-f4ad8c264771",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e50642ad-1dca-43aa-bed2-0f4cf9cd5310"
        },
        "item": {
          "id": "e0684bfc-f274-4e21-9025-ad871e09fb82",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ee12c29a-4bab-4bea-868e-ee30aed9d8ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "662f46f6-d02d-47b7-bd94-a585165ec83c",
        "cursor": {
          "ref": "d97011d2-88cb-436c-9932-39b2fa67a592",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "547fff88-485a-4957-9d50-56278175594b"
        },
        "item": {
          "id": "662f46f6-d02d-47b7-bd94-a585165ec83c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "16ede0a4-95d7-4109-a8a6-c211d871aea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80415b3e-ee9e-4f30-99ae-ecafb25db7b4",
        "cursor": {
          "ref": "ba1b25c5-c8ce-4108-a836-68bfeb580207",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0ee6f57e-2be9-4743-a5ab-b329d342a8c9"
        },
        "item": {
          "id": "80415b3e-ee9e-4f30-99ae-ecafb25db7b4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3b4e580c-ebbc-4697-994a-d93fabb9d236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b72bb12-4706-4c4f-8471-079537750b5a",
        "cursor": {
          "ref": "13cc1c9f-d0cf-4052-8929-24eb59fdf8b5",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "623d63ae-cab9-4ccc-b690-f2a3e5c55168"
        },
        "item": {
          "id": "4b72bb12-4706-4c4f-8471-079537750b5a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "240d7bb4-383c-44e2-a359-0f73c3ef8ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e8a6fc-405f-48a7-a876-a0d352988179",
        "cursor": {
          "ref": "0664d753-b99f-4fa7-be06-a701e1ec01e9",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e88e5772-2ff5-4719-be94-63fef805f09f"
        },
        "item": {
          "id": "14e8a6fc-405f-48a7-a876-a0d352988179",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "07e3b054-3287-4c32-b1ad-2bb1a5f4facf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4bf52d-a7ba-4c9c-838e-d3dce63cde7c",
        "cursor": {
          "ref": "e3b694b6-f5c7-40a1-b7ca-62afb806ca0e",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "2a470431-af2b-4161-bcee-881ce3372496"
        },
        "item": {
          "id": "dc4bf52d-a7ba-4c9c-838e-d3dce63cde7c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "41e0b6e7-cda9-4b96-9fc6-d636dd4c2550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b28f6e-31c5-4eb4-87b7-50e9451bf048",
        "cursor": {
          "ref": "0cb206a2-ad87-4d8a-96e1-b354765622a2",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f6c8ed14-ccce-405c-abcf-85fe3c137b95"
        },
        "item": {
          "id": "26b28f6e-31c5-4eb4-87b7-50e9451bf048",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e750c8ec-f03e-418c-b99e-ddecb093bf80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c034a5a4-3ccd-4bd1-9861-c0f3d6e67e69",
        "cursor": {
          "ref": "11477bb9-e58b-4b4d-b915-a9285e7f311c",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "32154834-7ff8-448a-a00f-448866323d8a"
        },
        "item": {
          "id": "c034a5a4-3ccd-4bd1-9861-c0f3d6e67e69",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f98a67b0-4a00-462a-b4fc-ce2ee0443563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7fdcca6-3bc2-470f-9935-a4b21d994be4",
        "cursor": {
          "ref": "87f51d2b-514a-4369-87f9-14e8c957e34e",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1d0cfb5a-3443-4db9-90a2-fa315abbe220"
        },
        "item": {
          "id": "a7fdcca6-3bc2-470f-9935-a4b21d994be4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f42ae352-e790-4cfd-b16c-fafe870b97d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c764fb71-8d9a-4c38-9039-307d524b5e72",
        "cursor": {
          "ref": "1dbf58d9-05e7-491c-9313-c0407ca7d4e5",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9bca9638-69e0-48fc-ba51-f31ff04ab02c"
        },
        "item": {
          "id": "c764fb71-8d9a-4c38-9039-307d524b5e72",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "55d478d1-ecfe-4a50-8248-1f4089b4cea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81e1761-a45b-4ef7-9428-0ffb7cca9781",
        "cursor": {
          "ref": "39c0cedb-5e46-4fc1-8d6b-1f1ebffc6a77",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d46e050d-dbd1-420a-ad2c-9d8a87671ff4"
        },
        "item": {
          "id": "c81e1761-a45b-4ef7-9428-0ffb7cca9781",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "214b7f8c-f44a-4350-9182-dad09eb793fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ef2a4d-48d3-4773-939b-6c4093245039",
        "cursor": {
          "ref": "7eca0e15-114c-4014-8771-3a2696c47a5e",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4418edf1-35d5-491f-aa51-3024019080b4"
        },
        "item": {
          "id": "99ef2a4d-48d3-4773-939b-6c4093245039",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ba362512-658e-442f-8b4d-f2525647db80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7896be18-d3dc-457c-a207-c727f9526751",
        "cursor": {
          "ref": "f97d7dad-7a8b-4d7f-9de3-e117131af566",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ac25182c-dda3-4126-b811-ac04e6be74df"
        },
        "item": {
          "id": "7896be18-d3dc-457c-a207-c727f9526751",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "731ec615-d911-4c48-be26-b29cbf84a2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d7714c-97bf-491a-96ec-bdd8b3b45fc4",
        "cursor": {
          "ref": "46e0e556-3042-4d0c-8bbf-568298485310",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "4ab531e3-d5c7-40a8-abac-4abf04ef063e"
        },
        "item": {
          "id": "d1d7714c-97bf-491a-96ec-bdd8b3b45fc4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2e0221cd-6be4-4760-bd45-726d66807fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d0e5c2-8ff1-48a2-882a-46f6fdbc5c7a",
        "cursor": {
          "ref": "ace828cc-70a1-417f-977a-06d7231ce4a7",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b2c6d8c4-7b7f-455a-8303-c444fb709c5b"
        },
        "item": {
          "id": "89d0e5c2-8ff1-48a2-882a-46f6fdbc5c7a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "78c24c11-cdc3-4eb9-9bbf-0da40aae4ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c255d604-675f-4399-856b-d3084c6384a6",
        "cursor": {
          "ref": "0e8cbe7b-4d32-40e7-99da-fcd1c0eb5dd5",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2aa9c3fb-2dad-42f2-b1b5-af59bd05c70a"
        },
        "item": {
          "id": "c255d604-675f-4399-856b-d3084c6384a6",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c3744283-4237-412c-9d2f-abdc3921bbb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a4e384-8eac-4f8f-a130-2fb8a5fb5e6b",
        "cursor": {
          "ref": "09ba25cc-307e-4d30-bbe3-a9b185286fc2",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "649312b6-f3b6-49f7-a433-0730bc77d90f"
        },
        "item": {
          "id": "72a4e384-8eac-4f8f-a130-2fb8a5fb5e6b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "20472381-184a-42c1-8ecc-c9be51d54897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4de202-d316-4724-8f29-6e0303f2f041",
        "cursor": {
          "ref": "21566d47-6a0a-49b1-bf9c-fcb58bf96085",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3a5acb52-5efd-4ec6-85e0-c6cd27aad28e"
        },
        "item": {
          "id": "1c4de202-d316-4724-8f29-6e0303f2f041",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "adf43dd1-76dd-4329-9430-566f45a9607c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e010f01f-0175-42ab-9a35-8217ac4b5e6a",
        "cursor": {
          "ref": "892e91f9-8181-45ba-aa9f-33e416f2d08b",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "09917cbd-f896-400b-b801-db00d41e2655"
        },
        "item": {
          "id": "e010f01f-0175-42ab-9a35-8217ac4b5e6a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "081ff1bd-5a90-44ed-b3a3-d393359dd41c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de465a1-88b7-4493-9e49-233ddf702a82",
        "cursor": {
          "ref": "8389ecc8-31bc-4831-98e1-499bba5ffcba",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3999dfc4-01fe-48bd-a9cf-d1ba2bf11da3"
        },
        "item": {
          "id": "6de465a1-88b7-4493-9e49-233ddf702a82",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "847f0852-04a8-47bc-bf2e-46d9cf690b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137bc92d-93ec-4ae8-882a-f8cc622e60bc",
        "cursor": {
          "ref": "8f1ff761-e938-4077-9e8d-c1393039953a",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "010f0c4f-9d98-490e-8176-8b98d711725f"
        },
        "item": {
          "id": "137bc92d-93ec-4ae8-882a-f8cc622e60bc",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b6ccfff0-08cc-4208-a567-49d3bb59132e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8da725-c6a6-462f-a034-36d3bfad7cc9",
        "cursor": {
          "ref": "58deded0-7b84-4801-9d42-67edfb90a05e",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "fe0b0b1f-f235-4998-b920-b036e96f7184"
        },
        "item": {
          "id": "1b8da725-c6a6-462f-a034-36d3bfad7cc9",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4664c175-97ab-4ebd-9165-38ca19cf5150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7927483-9351-41b8-97cf-5378f93b193a",
        "cursor": {
          "ref": "bdd3f3f4-e724-4c89-96a7-738a46e2a9ac",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ac4466e8-b4bd-412c-a67c-3790b2098bd5"
        },
        "item": {
          "id": "f7927483-9351-41b8-97cf-5378f93b193a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c0459292-a845-432f-9273-1996d0c36e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee20b54a-8535-49f5-8d86-f31dd8319024",
        "cursor": {
          "ref": "633d0aa0-3125-4963-9bac-028782d373a3",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4fc09c42-7952-4e88-9ae3-39cb2a007553"
        },
        "item": {
          "id": "ee20b54a-8535-49f5-8d86-f31dd8319024",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4aeaaca8-b187-4e0a-93cd-156f37ce154e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3efb7bf5-9e6c-4976-882a-f226d1867562",
        "cursor": {
          "ref": "d0b38f05-0215-4749-a018-00dacf93b617",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "73b0a21e-910b-4af6-b7ee-6047d7f49a97"
        },
        "item": {
          "id": "3efb7bf5-9e6c-4976-882a-f226d1867562",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "703d0525-4f20-4c79-abdf-12a7c4887467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f158901b-786a-4410-a5b4-daee1b8cb7cf",
        "cursor": {
          "ref": "68b3b77f-4b55-4cc0-a3fa-3a08cc4ff70e",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "60c8b21f-2f4b-4492-bb40-394940ef82ea"
        },
        "item": {
          "id": "f158901b-786a-4410-a5b4-daee1b8cb7cf",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f487c112-1599-404d-8e61-c4bbe1c4db23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa6a009-74e6-4595-ac1c-e1f6ad010cd5",
        "cursor": {
          "ref": "3800d14c-efaf-4dc7-afa2-1e7830ca1754",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3d6576b2-a9c4-41f4-9686-7ce348ebbe5b"
        },
        "item": {
          "id": "5fa6a009-74e6-4595-ac1c-e1f6ad010cd5",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "bfb10bee-718b-4e5c-83f2-583ef7972702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5c80de-12f3-4bb7-83ce-35e84919fc1b",
        "cursor": {
          "ref": "0668b0fa-431c-46a5-8908-7656fb856b8d",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "52f0c443-eaaf-4522-8a8a-73e0186a18f4"
        },
        "item": {
          "id": "9d5c80de-12f3-4bb7-83ce-35e84919fc1b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e4f475be-0913-4b75-ab1b-4259b5756f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40cdbf3e-2833-4022-88be-ccb33bd34a11",
        "cursor": {
          "ref": "17ad9423-839c-4f76-8d20-1320e6a2b5bf",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "88977c79-e00e-4765-b814-4f24a8855359"
        },
        "item": {
          "id": "40cdbf3e-2833-4022-88be-ccb33bd34a11",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c0831544-02ae-45e2-a004-14cea958b4a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a13822-7c1a-4f86-86e9-d0967feceae4",
        "cursor": {
          "ref": "61cc3f00-6232-4ca5-a9cc-9b57cea2bda9",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a4d051e9-dd4e-4aa2-a724-6ad285b8bbbe"
        },
        "item": {
          "id": "44a13822-7c1a-4f86-86e9-d0967feceae4",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3aa503d4-682a-423e-9079-573788531719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231286a6-2034-47f3-83a2-fc172d557a81",
        "cursor": {
          "ref": "9ecaef40-3afc-4672-b41f-49d23d1c96a6",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "fb8d310d-5bfa-4ce4-925b-33b0a20b9b22"
        },
        "item": {
          "id": "231286a6-2034-47f3-83a2-fc172d557a81",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e4d7215a-ede6-4128-984d-1aa5b4c70c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1804fc0d-45bd-4d77-b22a-e9e64d8cf579",
        "cursor": {
          "ref": "be05743f-0e7f-4c5c-9ca0-76e80676cc49",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "e6671b2d-40d4-43e5-9dd1-17f406c74755"
        },
        "item": {
          "id": "1804fc0d-45bd-4d77-b22a-e9e64d8cf579",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0e04a6af-67ec-465a-9515-446aab057ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8787b53-a76c-4c95-af00-397ac3671086",
        "cursor": {
          "ref": "d91bd713-0608-4fed-bf90-aff2455f5ea7",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "72edc5de-9a1b-4ca0-ab4e-51ca28f97cff"
        },
        "item": {
          "id": "a8787b53-a76c-4c95-af00-397ac3671086",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "090e0809-2c8c-453f-bbb0-d2a9a673a04a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b334c0-5640-4152-b18b-3e628c769b48",
        "cursor": {
          "ref": "cd9e235a-ef5a-477e-b63a-2bb1a190fd33",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "3a190216-e9dc-4ad9-94b0-07426e130466"
        },
        "item": {
          "id": "00b334c0-5640-4152-b18b-3e628c769b48",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c690e6b2-c69b-4b97-8037-9ffa974dcb35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d20f53e-fa8b-422d-a617-ce9c04413698",
        "cursor": {
          "ref": "0c852501-9385-4ea3-ae33-08c064b98646",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "509f80c0-d774-429a-a31a-49c666daa548"
        },
        "item": {
          "id": "8d20f53e-fa8b-422d-a617-ce9c04413698",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a941adac-1a27-497c-8726-f2cc2624b57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f46064-fac6-4a82-a96a-6b5541c9f3a6",
        "cursor": {
          "ref": "c1b4061c-178e-4873-a6c3-91203bb686d8",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "70fd8cea-a715-4547-bcb0-126374bfa7b4"
        },
        "item": {
          "id": "44f46064-fac6-4a82-a96a-6b5541c9f3a6",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "83342abd-7936-414a-88ef-f1acd9e10155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de112e1-d7f2-4adc-9c1a-11053c414607",
        "cursor": {
          "ref": "f8bf2a28-63e9-44af-b7c8-70befe0f235a",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "e80f6a4e-cc86-4afe-91a5-eead7b68af3a"
        },
        "item": {
          "id": "7de112e1-d7f2-4adc-9c1a-11053c414607",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ced94911-9098-4a26-bdbb-3fe1ebc943a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac92e2f-47d3-4b73-866c-8b4ffdcca304",
        "cursor": {
          "ref": "d4eecbef-69ce-41c4-a018-fbcb780a0cbb",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "ac3b2785-540d-40b8-9fc9-af3496b5860b"
        },
        "item": {
          "id": "7ac92e2f-47d3-4b73-866c-8b4ffdcca304",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5ee24a79-0c07-4bf4-87fe-36d837653787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663bb814-d0c3-4f78-85c3-3e41cbe868cc",
        "cursor": {
          "ref": "1a9c292a-010b-4d95-8ae2-6aff8869c123",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "48d9e35f-ee9a-4595-90bd-df94dcc340c4"
        },
        "item": {
          "id": "663bb814-d0c3-4f78-85c3-3e41cbe868cc",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "782e67db-3d5a-45e2-816b-c53eedeaaf5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0119c26-0b55-4edd-94e1-eb3898dedaac",
        "cursor": {
          "ref": "d77d2f1a-fc4c-4b32-b34b-b59372968195",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "6168cfd3-d206-4e2c-b4ae-ed2214f8ae28"
        },
        "item": {
          "id": "d0119c26-0b55-4edd-94e1-eb3898dedaac",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "53795537-8bf2-434d-bee2-7c23207fa243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c718ce-a3fa-4f9f-94bf-d853b7db60bd",
        "cursor": {
          "ref": "bbce03ec-9964-4f9c-b768-af4d6f676656",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "8b92861a-b313-4996-aa70-49ea324a9ada"
        },
        "item": {
          "id": "91c718ce-a3fa-4f9f-94bf-d853b7db60bd",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "565ba286-a3e2-46f1-8fc1-ae2df109985b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7e3bc5-e7d0-4db1-a4fe-206a4b0061a3",
        "cursor": {
          "ref": "47fa571d-9f0a-4013-9d58-d099467fc40e",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "4c74e877-e374-4318-8c82-fb6ab0a26667"
        },
        "item": {
          "id": "0b7e3bc5-e7d0-4db1-a4fe-206a4b0061a3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d8ad6284-94fb-4156-b9b3-5bef91f714aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35842cd-00d4-4c87-a30f-5c443366c55e",
        "cursor": {
          "ref": "2392e99e-7389-439c-b22e-1d13657a0bce",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e37ee2ac-f6b0-4df8-ab21-874402ac5e8a"
        },
        "item": {
          "id": "c35842cd-00d4-4c87-a30f-5c443366c55e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d262a3f4-4a04-44b5-a4f0-7d2dfe092126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74079e58-bc71-4004-8e45-ba333dbe6458",
        "cursor": {
          "ref": "f5f4b525-7493-442d-90bf-a6760f730f2c",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "a265693c-78ad-42e0-9a21-5bcc43385975"
        },
        "item": {
          "id": "74079e58-bc71-4004-8e45-ba333dbe6458",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e8ab3a38-33a0-4634-bdc0-982ab3a34bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93987c56-4c34-43de-bdaa-ee8178762c64",
        "cursor": {
          "ref": "11fa8ead-c1df-41a1-9784-0951c5dc52fb",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "cb025e75-940a-49ba-a609-c2c0a9dc1ddc"
        },
        "item": {
          "id": "93987c56-4c34-43de-bdaa-ee8178762c64",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e078fcde-7fae-4a71-9214-961578371c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ff2d29-658e-4f9d-ace8-5643331293cd",
        "cursor": {
          "ref": "5e7ef683-a8c1-4bdc-980f-763e04cd0d7c",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "c2802a84-1130-42c3-9e3d-ea073ce4e3c3"
        },
        "item": {
          "id": "01ff2d29-658e-4f9d-ace8-5643331293cd",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b3025230-6b99-4ae3-bda0-f66427c63164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ca7ece-1176-413f-8d1e-b491851318ed",
        "cursor": {
          "ref": "e0eb5066-4c77-4e9c-aab1-d0ef4a2c31d4",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "af42196a-8360-432f-8fe4-53caa7612447"
        },
        "item": {
          "id": "62ca7ece-1176-413f-8d1e-b491851318ed",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e6f4c58c-b650-4595-af41-d72a2188a7e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2d5b75-b053-4bac-aeef-511ea175dbe0",
        "cursor": {
          "ref": "362dd0a0-68bc-40be-a865-52da3f04f233",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "eb176329-9c51-445b-8e45-f0c214ae37e5"
        },
        "item": {
          "id": "be2d5b75-b053-4bac-aeef-511ea175dbe0",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "70fbc44f-e255-4cc3-b9fe-8e29ec87ea13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c437a4c6-6def-45c6-a5a0-b5f0bf65d275",
        "cursor": {
          "ref": "13b1ca77-1865-4573-b98c-301be1263bb3",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "4294531e-bf59-4f09-b001-fa27048a2b6f"
        },
        "item": {
          "id": "c437a4c6-6def-45c6-a5a0-b5f0bf65d275",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a77804ba-7fdb-4c9d-9981-149dc3d023f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b8c812-31cd-4699-a558-a837adb0fbd6",
        "cursor": {
          "ref": "143b3dc7-32fe-4529-842b-778336f7e929",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "6f5f2921-fa4e-4c0a-84d0-e221aaa2dca5"
        },
        "item": {
          "id": "56b8c812-31cd-4699-a558-a837adb0fbd6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "96ed18e5-98e6-424a-b03f-c78610b6ee68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf3eaba-3aad-48c4-b6c3-573acc860f9f",
        "cursor": {
          "ref": "b2448161-09e6-4db5-854d-f3747dfbb698",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "8757710b-5663-4d4d-8fa5-fa06b6683a7e"
        },
        "item": {
          "id": "bdf3eaba-3aad-48c4-b6c3-573acc860f9f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e715240e-2485-4006-8e89-839cac2b35b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88740d6-8a04-42eb-8168-74a8f97acfe2",
        "cursor": {
          "ref": "5a90b10f-fdef-4a75-9aff-5b0a4195a8f2",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "db3722a7-0ede-40db-8187-4f550f1634f6"
        },
        "item": {
          "id": "e88740d6-8a04-42eb-8168-74a8f97acfe2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "44639a5e-a7b1-44a9-af09-af82669fbc56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14aff7ef-44d8-4ae7-9dfa-2027abb12344",
        "cursor": {
          "ref": "7ee5cf84-cb54-4d66-a1c5-d1a9a9036c87",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "305fd054-5f63-45bc-b121-239e2e6da2f2"
        },
        "item": {
          "id": "14aff7ef-44d8-4ae7-9dfa-2027abb12344",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e3e6840a-2681-4ba9-bdd7-c5da4efb7c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044fda67-7010-49ad-8a23-2ee5a978fd6e",
        "cursor": {
          "ref": "b4e3bba2-ead7-4e0a-ac77-286c8becb90d",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "006c5c3d-a0b4-4516-a699-4a09ce03bbf4"
        },
        "item": {
          "id": "044fda67-7010-49ad-8a23-2ee5a978fd6e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3da2ad4b-eec3-4819-969e-559469bc8b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f04d62a-3760-471a-acec-e1a084de631f",
        "cursor": {
          "ref": "19c1459a-ab1c-4f69-b5a7-1c8a265398cc",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "4fba0e34-d992-45ed-ab47-34a86032ef15"
        },
        "item": {
          "id": "8f04d62a-3760-471a-acec-e1a084de631f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "acb697fa-bfc9-4300-906f-48ce0f32b40e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "947eccce-7e49-4658-8604-f17c92cb654c",
        "cursor": {
          "ref": "5c64f6be-1792-4870-b05d-20001e043ba5",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "47f2f177-c43a-408c-a017-442ea6a68d17"
        },
        "item": {
          "id": "947eccce-7e49-4658-8604-f17c92cb654c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "bde0a2c4-168e-4766-917c-4a0732696d88",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3638fef1-b904-4e81-afab-a40c29c60fa1",
        "cursor": {
          "ref": "237d05e8-b5e7-4651-97ca-5ea78394f3b5",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "ac0ff7d2-ca27-49a9-9fed-52dfd56dcc81"
        },
        "item": {
          "id": "3638fef1-b904-4e81-afab-a40c29c60fa1",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a77846d9-0ffc-4257-8de2-c9caff03bbec",
          "status": "OK",
          "code": 200,
          "responseTime": 104,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3652b089-aca5-44dc-9889-5f7d3a06ef20",
        "cursor": {
          "ref": "de522a7c-ae39-4bce-8751-856015514371",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "f782d1b0-65ae-4a91-960a-8630a64d8dc7"
        },
        "item": {
          "id": "3652b089-aca5-44dc-9889-5f7d3a06ef20",
          "name": "credentials_verify"
        },
        "response": {
          "id": "102629e7-df1f-4ca9-9423-61c96acb4545",
          "status": "OK",
          "code": 200,
          "responseTime": 1652,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43dc23a-2da7-4192-9701-3c75516272a9",
        "cursor": {
          "ref": "6fa32065-f9c5-4cfc-81f0-fed41ad4e090",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "34f323c8-6640-4193-8e21-6600b3acd783"
        },
        "item": {
          "id": "d43dc23a-2da7-4192-9701-3c75516272a9",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "524ab5e7-c769-4ca4-83da-0c6ae79d8ef4",
          "status": "OK",
          "code": 200,
          "responseTime": 1163,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2104b123-1378-4903-8072-f42a2d371163",
        "cursor": {
          "ref": "fbae4f7c-bb9f-42c6-b723-c029948f9ea6",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e697db03-c8e3-475b-b4d6-4e7df5772ad6"
        },
        "item": {
          "id": "2104b123-1378-4903-8072-f42a2d371163",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ce9667f0-6ae9-4ad6-bc49-c5554c542349",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2104b123-1378-4903-8072-f42a2d371163",
        "cursor": {
          "ref": "fbae4f7c-bb9f-42c6-b723-c029948f9ea6",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e697db03-c8e3-475b-b4d6-4e7df5772ad6"
        },
        "item": {
          "id": "2104b123-1378-4903-8072-f42a2d371163",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ce9667f0-6ae9-4ad6-bc49-c5554c542349",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc4eb9e-4bae-48dd-b634-0a083d7d4784",
        "cursor": {
          "ref": "95128d7f-3c8e-4414-8ac4-1eb9cd7d10ce",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "02318a9e-e8da-4a44-ac15-186e7a411019"
        },
        "item": {
          "id": "2fc4eb9e-4bae-48dd-b634-0a083d7d4784",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "58809778-be34-4f36-9483-edfa76ade6e3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ddfd8c-3dce-4774-b9d0-1faef2cf810f",
        "cursor": {
          "ref": "379c9391-20eb-48de-9eb3-0ffe64256af2",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "fe338c3b-7450-43ab-a718-0f059450244c"
        },
        "item": {
          "id": "63ddfd8c-3dce-4774-b9d0-1faef2cf810f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4489555c-2a92-4c19-8058-dd558efd6e00",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}