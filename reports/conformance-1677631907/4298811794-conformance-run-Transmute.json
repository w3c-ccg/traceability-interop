{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ceebf22f-1e37-46a4-bd31-d88c4f1c42ab",
        "name": "Clear Cache",
        "item": [
          {
            "id": "16e89518-6407-4e7e-b33d-7214953384f3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3928241f-fce3-417c-afca-747c108f8798",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b953ab5b-7032-425b-9262-3b202151fd4b"
                }
              }
            ]
          },
          {
            "id": "971aab7e-f499-4997-99ca-b8450c971ee6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8b3bf0d0-9fe3-4038-871b-2b90bb1a7735",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "41404930-270a-40af-8ec6-07bae6af96be"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e203df98-595b-4a7f-ae03-0635df891057",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "71e0bcec-1fcd-4acd-ba94-480a35918ff1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9fc3ffc4-6b45-4e64-8915-bb88db0c9392",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e46d20e-2bc3-4226-941e-5501594d3607",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dd08d190-0f25-443c-aaa5-a70d821d18ad"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a91059fa-da9a-487a-a50c-2968f670554d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "87fb742a-3b6e-4e63-b228-3a4e83f3b862"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3e376473-c635-45c9-8c5c-c4d558350ff7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "60f034bd-30bc-4bd9-938f-f40820ab4788"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a70a77e-3dff-4aad-b60f-771d2c85761c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4b3f28ff-fcae-4871-907f-082aac2c1838"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72a1b7ab-0cff-406e-9ef6-829446a38132",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "07a3c39a-0a03-4d34-8623-803074796064"
            }
          }
        ]
      },
      {
        "id": "c74858a9-a7c9-42d3-9359-e1041781d01f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "460b67c1-2edc-4f67-889b-f635a300c930",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3b0966d8-6a0d-473f-bc19-767afa97653b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c2fad074-6390-4ed8-a1f6-5cde480d7a9f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a541a6c3-0b41-46c9-bf27-2a09c89dd77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ee9ae22-1573-4752-9f5a-cedcf6de4b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ca6b27-3628-4f40-bf09-e85a6a4508cc",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9eafa37-f180-4dc4-80ae-7822173409c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce8043a3-d729-47b0-a207-0e78bccb4e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d9f1fd-dccf-4862-a786-9ae814447b48",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99996da-3bd5-41cd-915f-b6f41da26177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e430b51-d0d0-4328-95d8-020b93157081"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "212764b8-7a24-4797-b6b2-020d98408489",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "59c0ed66-6950-408f-90be-1fd8f8f45001",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34f92d4-bfdc-4c75-8dc7-f26097523223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd5ce9dc-1269-4b48-bb16-00fe09faa8ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0fd0cb7-02aa-452f-b590-c36171956da3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d142a5d3-f8ce-470e-8ff7-c696687afadc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd1326a-56ce-4e7f-bbe1-f9ccf32e4605",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54191fe-116e-4222-92b8-11c28dfff14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f32d16a-0c88-497c-bf23-c113aa860425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f29f442-6bc2-4bd5-8840-9ec81eb98add",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "6e5d4472-b82d-4486-a218-6d845fd462ac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9e1dd856-d968-4604-ac9f-d0e387c1392b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "47653842-6b50-474d-a17f-17f76d84a8a5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "81ae73b5-2440-49d9-b262-ce2a50138cb5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e2f0fa97-9484-40a7-89a3-35d3af1f0377"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "65c57547-188d-4119-acec-d0c1bc572fdc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "fb4245e4-df07-4667-b50d-2101e6a0dd67"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a22012f0-730b-41d0-bfae-dabfa48642de",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d5c7ba3b-8f87-4548-852c-8c02488d7fe8"
            }
          }
        ]
      },
      {
        "id": "a1a1436e-7a00-4228-8fc4-a814e66b5d34",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "cae39f3b-dcaa-49c5-8f79-66be4f88698b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6942f549-5b29-4c34-86a1-4f0a21ae9174",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "2ac05e78-1eea-4595-98e3-fb8326240b64",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e4a6b93-aff1-4606-ab3d-a0914dac83ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c75aafba-3a7e-447c-9e44-de15a2baba42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2885e3f0-a761-4221-8be5-807f275b5b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67fedd64-84db-413a-9220-55b876537e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003d3c0f-31a8-4180-ac4c-89d57a1b7497",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc670775-df41-4fb1-ada1-3e5c153d1a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e6a4182-6bbe-488f-802a-d86cefda7dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a097b1-156a-4cf2-aa6b-35778e35d4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f500111-397d-4860-8ee3-9e641adcdefe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "958e716e-a766-405a-9bf3-b3e3c3bf58c0",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08830ecc-9b69-4836-8330-1875c22386fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97d9bc47-d829-4575-bf8e-a26028ec47c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8971991-83bc-46b1-9177-84c864f72ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e29d18bc-ef8e-4a12-a12d-bffcda14de8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c3fe1f4-5bc0-4635-8ea5-63c6a57bef4c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c03738-b514-4c03-95ef-b4119b200298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dacdcef4-97d9-41d7-ab3d-26dfb487945c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfae3d5-8a9f-41d0-8923-92ccdcc3244a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70de4b73-92e8-464b-afa1-e09e33a41663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c95296-c97e-4dd2-b709-d2d7c4f27240",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ff8fd8-4f06-45e9-8c6f-dc1736691ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f9f7a77-02f5-45b4-8080-0dce16610088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a335b3b-a249-43fb-92b8-8cb9e85a6eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a808ed6-7531-405c-a056-18e808ca6057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7637b6-c9de-40a3-a05e-fb88c354f132",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afff41f9-6d64-4519-813e-4aa0be06c238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90014099-16ef-4a8f-acf4-613cdb00cf63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467752d9-aa43-4b23-bd94-26442b0776b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f3cb475-faa6-4dcd-8eb7-bdeff1ff827e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15510379-79a5-4c2d-8d78-59557d958b34",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2954c9b5-9e26-4674-8db7-98e516473a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f88a78c8-6a88-4400-8938-368f543304f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d75f15c-510a-4b0c-b45b-2a7cc361f84d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd36fa9f-067b-4bde-a308-177bd87db5f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fada118d-ac95-437a-86a1-5b64088296e2",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0bca5c8-7988-438e-abe6-3e9828039139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "444d9618-1324-4f0e-ad14-79c71a7d9861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8961b6b2-acfa-4c07-a7b3-c5048fdfdd97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c615be5c-ce70-4050-bd50-93eac70dd698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635b9f2a-a62b-4926-8925-aca431c0c9c3",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ada58bc-4745-45df-a4bd-ec79120f13da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "412c25aa-0c9b-4697-83a9-988d7ede9ef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4642049a-f850-4884-9959-6fe9aeed0f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "175f7548-85f9-4d44-a7fd-470010bfe81b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8be508-804b-49ea-a6da-c96d09456679",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2978e284-455a-4da3-8644-395342c1d6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7fa47b4-9bfb-44d9-bc9c-b9ceb1e0c136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72094019-3745-48d7-9b18-15b2abda14eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "400ba530-43a7-4e26-ac0a-5f2888b6bdee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0bed68-5ee0-4bf0-ae07-20fbaa8c4cb2",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec280cb3-494a-4d25-aff8-6efccd771e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e5f9903-adf8-417d-91f3-df08e0463c04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2808b2-2a68-409d-a52d-716966da83ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e30d7c6f-d53b-46e5-ad1d-a07d03806f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd9bbcc-a385-40a4-8443-cf15e786a159",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e650cf60-75ea-476e-ae3f-3e9b1b642cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "843261b3-1e4b-4917-935c-4d24211d7bcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbbb2bc9-2716-433f-b839-b31365bb5014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b5b2f23-85cf-47d3-99c3-95836fbd6dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17080328-29f1-4107-a198-c8ecdf9f43a0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0eb9538-ddd1-453e-8dbf-d654d34883f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b336d972-f09f-43ca-9209-a615fbcbc5bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f87f02e5-1eff-4cc9-85c5-8e1d2d98a92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f3f929d-43c4-4528-bc95-5b74c587ed5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626dd85c-85fd-42d8-968f-5a5afe5053ca",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8918580-22d7-4694-a75b-4bbf86032add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36210d78-6410-482f-b14e-1a9a4715adfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc61a90-4154-450f-8df9-5ccb1d656ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68c3486b-6d05-4f38-9112-db649d030aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18225b2d-1e9e-4084-ad15-aca9447d572c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a7630b-6905-4619-9bce-50ef03bcafc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baa13728-57f9-455f-9751-d234b3829f1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79fc50b-a53e-401d-a0d4-09caa4b98158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46c300cd-f8a0-42d4-be21-82e7e3567bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788972c2-68cd-4cc6-9a22-472a0e491712",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc40a14e-b317-4842-81b5-96955c922c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "661ee90b-5393-4b64-b972-167906a74ec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f921b6a-ed5b-4162-9b7f-4600eaf95d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "785e50da-fa0e-41c7-9491-e656cd61aa3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d3edcd-5c41-4e8f-a3f4-3031a466a544",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74d81de-0c2c-4d71-b668-a06c272742b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54892902-37c9-497e-80df-854625ab3476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5daad9e-4e59-4346-8ed3-538e1153af9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2917c71-8fcd-4e25-bc3f-072b700d8a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671b2ca3-611c-44c3-bf56-4bdf7e6acdc2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a6254a-cf67-4299-add2-6168a4164f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8fd6462-1e71-4fc8-a590-f32cc1494af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5977b7-9702-468e-ab44-e80e9e3cb06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "64337b19-0d58-43ae-a7b7-2a6447bacfe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40bca01b-0b56-4ba2-a59b-a720ec9cf3c5",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4982bd73-ad31-40b9-846e-21b6ea81bb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bb9f17c-2b19-4419-9a27-5b5538bf984c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a0e855-1389-4601-b022-2482a39d8a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8bd9a7d-83e3-44b3-997c-7661892e1768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530d40b2-298e-4d84-b336-4fd298c8a8c7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67e0298-18de-4618-8bf9-99a47030f4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec8269a9-a534-4d66-b94c-7a0d7905408e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8ae0e5-1727-4e75-8423-c0f98e5b39c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1e49ff9-2428-4a23-ad02-0984ba44d208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e20b2a-0f6a-4da9-a7c0-6087be5cf442",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "536bad82-486a-4f3f-b948-29b609ba657f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc458ea0-4bbc-4a94-be7d-7c2b5a9bef39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f94c24-375b-454c-af6b-05e55bdeba64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a8119cd-8372-4931-b8b4-b8027f930d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8caf27-f8af-4653-b436-6815da33db8c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b98afe6-527c-49a6-b688-6351024d125b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77f1542c-c61f-4be7-bcba-e9ff59e82052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53dc6207-f6b3-4fe8-af7c-2280ac2042a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "97218a23-5055-4f48-984f-662937ad97b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d19a98b-437e-4e34-918d-e8338ae716e6",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc2901d-2aa6-40cc-899e-6479c20b8b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8fddc77-1c5d-44c0-90d3-a19487180b9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d644b02-ddfd-4621-b264-57effc082483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "19d91b4e-40f8-4242-8ec7-57ac8e399d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113dac3b-45cb-4225-949f-470c6de711c5",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ef0b99-bd01-4e98-9048-a04a23e200f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02314022-3182-48ee-b925-486ecc7ed109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e91fdd-7ad1-4fd2-88bb-dfe5ee307f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdb8f105-aabc-40a9-a9b5-28cde2f0ef24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47610acf-0a8b-46a6-9ca3-687e425e1ce9",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30118dd9-8028-4de4-9496-d7a1bcc9806b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b67518a-10c8-448c-ad8a-f156ed7c00c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3337103c-9abf-42e6-a071-070f564bc873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9698c382-ea07-4e91-b7a0-7119f0bba649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac0799e-0d8e-4a6b-93dd-18f05a49c7e9",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ae404d-e18e-4654-b743-91214812bb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9ca5090-7887-4d7f-a1af-78b52dff2772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10a7f87-e6ad-4258-989a-729aa79ebdb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7168817-8de8-4c6c-b833-30443bb5c29c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93263214-3f01-4d78-87cd-f76ae9314c2f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd9de71e-21d1-4a49-82bf-e6bfb12bed29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d5a6d6e-b3a1-4967-b05a-383a59903b70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea77915d-a297-4453-9982-979c312e483e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d295a75-249b-4649-9259-c21ab607429e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9074954-0507-42c6-845f-3321c8bca310",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d91af7b-477a-4f62-86e4-9b4a7752f31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6646f83-7ff1-4dd1-9ea7-33b4f2c795eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5a80c4-3369-457a-ad71-75c7e0caf6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "85ff190d-8098-4f35-ae16-65125c686a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ff181f-9c76-444f-992d-1d2b9ffb3471",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abcfc30-2010-40ca-b824-db9f321b75a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "080dbb48-61a6-45b4-a8f9-fef7914689d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af09853b-7a4d-475b-88bb-6b4fc21871d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd5a911-94d9-4ad9-9aa3-8640355031fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e642147b-ed9b-4984-99b0-051b82a4ab74",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb5ff96-a391-42d3-b2e0-12125bb7ec2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16d1cc82-8c62-40ef-9223-74387c8a20fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a86b0ab1-e73f-49dd-b69a-8f95418729a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec0f2f8c-20a7-4727-8c9a-0f526bddeae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad2de06-eb71-4c0e-a2a6-4dfcdf327807",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98403667-c9ac-4e16-89ec-309155f76cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b843f647-bbd8-4963-9065-706b7356f44d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab19995-7159-4f53-96d3-6655ab50a3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "49fdee46-f892-44cc-8f8d-2fe6f6794a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2248786c-5845-48c6-95d6-49839a9e1a31",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6879459-97d6-46a1-b8f3-65762b29c57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8771e9c9-d462-44c8-bb09-0a99d90742a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a7e381-c634-4f42-84ef-b23fb6edd996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "20018a5b-3623-427b-b627-5f7df19b74b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e8b439-97fc-4f7e-ba65-a6e879be83c8",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f55fd6b-4b3b-4d61-8a96-2b5495644630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f8774f-f501-448c-b4b2-9142ffb94bc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a49fb4f-9ae5-49a3-b62a-3e1ffc9f40a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09dc8c4c-b461-4855-b9e5-a7cc7401c5be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4201561-fcdf-4e9d-a77d-f196d3c649b7",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b54e4246-cdc7-47f4-ba86-b1d2579079be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1821c342-706c-4100-a6da-44b6c9651c08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d63f1f-c254-45f5-bd2b-b73d7f82f7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "423aa2ba-3a22-4353-9605-982e46e93266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a23e36a-6f0a-432a-aefd-58e3d80fab70",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15172455-c6ac-4ea5-8541-3e10dc946671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35761198-d24d-4261-a867-7ac5c4e75663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d9cd2b-1d87-47b7-9442-d57e5d1d99e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1e33ed3a-88a5-4801-8d23-bbafabe24b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed1ef3b-d5a0-4c40-b1ea-1994b6a84c4c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac714f1b-7510-47fa-ace5-d49945d18e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3602d898-cc14-48c4-ae0f-f9a1f07d3121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e45f919-660f-4eaa-87dc-fac739a48491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a4920f22-d0b4-491c-80b8-098bfd3a4b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cecac31e-7e8f-4eca-88da-e9a4c5a94a68",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf9d4649-53ce-4db8-8e9e-a9d4e35562f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d561fb7-2df1-4e85-b0d1-87672d02b667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1690c7-abbc-4c08-8776-da864e570a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad35a7e0-2790-4c00-ba7d-6a7d02a1d484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d65f1e-f90c-4711-83c1-9efff870b774",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57be01d-8c9c-4268-829a-8b748eec7300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0abd5d07-ba93-4c9b-8356-148290b521e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b00644f3-dc25-41e1-8f60-0d5ed313ce53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4230b379-d9f1-447f-8338-7419cd03ab62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b001ce-1b8c-4ae2-8b35-a8785b4e7b96",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da1c015-b915-477c-9471-01fcfc00b5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2c418e3-66bb-4aba-a7d3-1beab5e7c87b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0eaf93f-4c6e-4aa7-8929-84e3527be5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9d59108-5f3c-4aa5-acba-4290b32e3d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a29957ba-f7b3-4841-a9e8-d06d7e348e26",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbac93b6-7a83-4d0b-b059-d9f6b1916ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76655be2-7aa8-48ad-9e47-22686007cbc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "531f2fb9-7fcb-49c1-9c27-9035872412fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9dc7570d-5acf-4cd4-b946-01e0f4e732a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac30532-9136-4e42-9dca-eb9bd7b6905a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a936c28c-31a5-47ea-8aea-eae698e2be59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ad3e1c9-dc5a-4982-b043-93028b7b73eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c04feadf-6458-4af5-b0e7-51b869d6bfe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b190e387-54c8-4246-b270-114cea44dacf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89be4ca-912b-49e6-b065-7c6111b5d8cd",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ef5b33-4bbc-463d-96d7-a944e424f4b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62e3e2f5-c643-439f-a5d5-8094403ceb8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe79985-4ac0-4990-a298-f1934ba46319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b384bd0e-f5bd-4fd2-9521-062f3fbaf1b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef5e2439-4888-4e8d-bbd3-7f22851056ab",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e3e8b7-62f0-47ce-82c0-f92c8ad7da82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7565705a-9396-4b14-8ec7-08d3b0dc00ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185deaa3-543b-4c02-b15e-8d2c059faed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4c1c44a-b40d-4cea-9890-047a391134d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23b0ed7-420f-4f6b-b002-9c989fa50915",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e00a709-00c3-4e7a-870d-69dfcb00b831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d026ef2f-9148-4db9-b031-e34d24f9dfbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b628fa-b9d7-4d1f-8e14-60b07da7f8af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd4659c9-231e-42df-8416-b2615dad7608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431918c1-87c3-40dd-ba77-265517fccd84",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5090ad6-9323-473b-ba2b-d7e05183825a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ff36ef-9b13-4be5-8aa3-8b9cb4050551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5317bac-5832-4742-953f-0d124335c04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a4fa011-90c7-4ae4-9fe2-d06dbbc3d2cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7b9851-1f4b-4c71-9b06-0fc7a3c2e149",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dfc3fd9-1b26-4881-acff-0c335734e957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7a9b4e9-893f-4d36-af7d-856128b20176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c146c31f-6533-4eb5-a014-8e6145e70bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b9e02f3-f706-4f93-871f-b2b0625abf8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f206d47-bb5a-4ac5-9a64-d6d6c74be05e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36af6b44-c80c-429e-9b2a-f41f66d216fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e5c716c-ad41-417e-8a7b-7ee12bc337c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d46043-7890-439a-95f5-4876f2245953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d59ae50f-990c-4467-91fa-79c6cc1029ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04abe813-2ade-47e4-89c0-4be88052a671",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67fb38a-b112-4759-8170-44bd33d9ffa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3304963-fa53-4198-9bd6-931c37436c42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fdc7140-3786-4b11-a025-d691120e8542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb0a9c4b-cd05-4a94-a97e-5ebbb54b6ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc47649d-9389-47cd-9bac-c617d43989bc",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538d8cab-7156-4b35-9cf5-c23594af9b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa220d5-f8d2-43f1-b15b-dd8532b1e862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4175661-9046-4235-a104-76655d5c5cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "92ecb387-32e8-4a9c-80ce-23ed58f7fece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf347b4-74ed-4460-9c95-59e4554daf5e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4748290-d8d2-4560-b619-3035b6600d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76e76199-4f00-4003-9cab-682227def2f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40644e87-483f-4d6f-9f3b-313377e393ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9b861652-3543-4122-b847-dc3dd5892567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243d2cac-dd18-40e2-a718-3c9912b7116d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "858884cc-13ea-4474-8be6-2edbcc28a2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d320c08e-2340-40e0-b3a1-2b9403b9cb0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1364215-9418-476f-a1f8-47089d8c7b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "06ae29bd-690c-4b28-9505-a2c78e9b23f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee87dd5-fd71-4c67-98d1-13642eaf3f29",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "357beb41-0056-47c2-b2e4-2f58145477d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdafcbf3-978f-4135-ab1c-77d7f56e69af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97aea4e-ad11-4c40-9235-bc70139aff67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "83e2504a-5c1c-45f7-9126-2494970825a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ace54d7-7b2f-4e4a-84e1-c805607048a3",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2123cec-162e-4bb7-aa67-32ca6523f538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a48e2664-f926-4461-a34a-b8a15c6aca89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3791065-7190-4f75-b49d-c7877a0f578d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf93325e-51ff-4a1f-b82e-9a163d912a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a40fef-c7d7-437f-b9d6-1a2516d8a9ce",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2051df-feb8-437a-83fa-088a89ad8a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad660c54-3b73-42d4-9340-8864fd24b570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9a013b-006d-4ce4-b0ed-363614e849a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2fab66c-7ac9-4cde-ba03-d687586b9a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92fe55ee-5373-4733-b986-01487913a4b9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16da5153-19cb-4cbe-a719-7218f1cdda6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984fdc8d-2164-4acb-a737-b3f9b5d94f16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d84300ed-3e54-4a15-9b16-aed8c94b72c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c911ef5-207a-4151-8a08-b39ff6f7b90a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f33c211-e265-400a-a3eb-41eaec72440d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0cb3504-1766-4b7f-a526-643ae1099fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d0b98f-3ff5-466a-bf91-bbb022b572d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b6281e5-19b6-4288-a409-bd2eb7cf40a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "cc5f3198-c71e-4aff-baa5-a89d5e632c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be06db6-c4d5-4505-989b-3208efd38938",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc3be50f-227e-4b60-bb86-983fd0d026da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73fcdf9c-c02f-4bcf-9018-b1729af842b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9583eff9-5708-48b0-9ded-f709b0ea21da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d826dbbd-9c6b-4e50-8f33-cbec50bda903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "393b51cc-e4cb-4897-a542-a8ef941b5b20",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4e1bd5-6682-43d3-8b77-14135e0fb94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfd77dab-2ae4-482d-8ffc-f2116551bbae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a953ad86-1acd-4c5f-8c67-19ef7839affc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc7964d4-9156-4935-91bc-547e1e915b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bbb9abe-5b0a-46ab-a1ad-a03647e41670",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c19cc6-5fa4-4c0f-8284-dcf67731133b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbe2360e-a388-42a6-9df1-fafe1ba7f05d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e6975c-162c-400d-8dea-dc18b0435d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f8789a5-2868-4419-9e6b-3f722e2ebd79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ae59fe-f6fb-4c0c-a955-01084133e509",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79597e8a-7c63-4ceb-88e5-306bed2b8b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d6aaf66-034a-4562-a5ac-eb83f45b2bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b37a7f4-225c-49ba-9d9a-199e37968872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a9c0c06-dd05-4570-aa17-9edef6c8cf2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974036e0-91c6-4c84-b4c7-b2430a4782da",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7f6baf-3654-4e47-9429-fc368c64f461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b857f1d7-cd96-4758-a1e5-3599bf6775d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193f9c45-2af7-4af0-ad4b-0b5ec94673dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0814b85b-c16c-4f76-9ad2-4f8bc755a810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99383813-6ff2-45c9-888a-d46e8e043e69",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0e1a5a-d427-40fc-b4dc-880efeab02c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e5979b5-1f6b-4feb-b4ca-c133ea59d5a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956f794f-5d48-4dc7-b69d-14cdd1a55810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "af795581-b8fe-4f47-846c-b253e714e9c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c8a2c2-7d18-4422-9547-230a6b2ea180",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4539684c-b0a3-4133-8b1b-0072d7336ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76acdad6-d21d-46cb-967a-450f3b8c7fd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99c4397-6937-4526-800d-98413e84b014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9998b9ea-3995-46f6-b4ba-53809d6fa4b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b2bc17-874a-4646-9492-4caad893f3fd",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8310ae97-83df-4157-a5a8-49395618dd79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c607269-b846-4bcd-ad0b-f3a85cd752be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8682d719-d58f-47f8-a08e-11575ce6f001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "637f3165-5930-4f25-9af2-e53913b2c8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7eec58-8c32-4409-bbd9-fe4fc53802f9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ba060b-06b4-4f77-bb24-7794b49250a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b9b8b94-e420-44f6-9b48-353ed1906ec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffca4604-8517-4851-9f4b-653275da5235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "786900ad-ee18-4f6f-86b3-f857b61ffb78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15f35f3-6d1a-4c2f-be3e-71b85515f289",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c93a24-af25-46c2-943f-d248913dfee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c28187-3ff5-4244-bbf5-b2e1b5b1b483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766b7b8a-5d47-4a15-a4d7-1dfb62f7a1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f203d06-ff92-47f9-806e-53936f9dcab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43514e4e-3a79-40c7-9dcc-fbf3701da583",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "568f6ee3-579d-4627-86be-c86d790a9df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2466c9a0-1a3c-4a90-8181-ec652fee3a94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b7ad2b-2d9c-473f-9a36-458683c4c068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d2345ac-96e0-4972-adca-0caa855828c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404a2fc2-1754-4e82-8f8f-855e3747b445",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "811a5945-47d3-492f-af65-bc20c2337361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa26199b-a7bd-486e-b3c5-35c8d2520247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4d8144-7057-429e-9445-5b91262685b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "407770f7-61a2-4d5c-9cc0-bc267f79acce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b684ef-6fac-4360-a2ac-6911a0f1b240",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a73266-be44-4638-973e-8868e3ab7da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e5e1cb9-067f-44c9-92d0-0c3bf639164c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec88b03e-6cee-4a9b-a07e-b4fc81d48687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "99cbbeae-7eac-4691-a66c-6af7ac983f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc2156cf-3962-426a-8817-65c9c88ddad2",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78da498d-23ca-4913-87c8-c1045538e19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd9391eb-e951-4efe-b623-7ea51e59622d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc26a85-3821-4655-8f5d-2d492171dbbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2ff937e-0a07-4bc8-a621-9f18b545885d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2dd574-ddf5-4984-9b8d-b0afbb71ebfd",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a1f08b-9b69-4aa7-9d2e-03ba7b3a738d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc0e3189-c1d1-49fb-b22d-a0e89d91106c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f33f49-4e3c-48d8-a5ee-2db6c7b30636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b5587eb-2520-4923-8cd4-dbb45ff9ece6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb572d12-b4a4-4874-b82f-a35a6344288a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c676f48e-98e3-4199-9c3b-02a33d91afc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c39f6977-924f-4673-bed1-6b94afc26c3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe52d3a-fb3a-4c36-a522-664b75903551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5154a117-4b7c-47a4-99e8-fc5d58276d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38a7b5a-0614-4246-9e1b-fbcce15748b7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecf3c2f-7a31-4e82-ab64-e7ff7ac74f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c9ea83-28fd-4457-b01c-8c15eb872dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b57b9c1-2def-4f84-bf43-aca7d9a86d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d24d56a-a018-4087-8879-168d7ed7b80b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31331f81-0dc4-47ff-b22c-f0fd881b9d2d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a9897d-6bdd-43aa-b7f6-9df40dc1e075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "815c8084-a215-4cff-9c38-1c053126bbd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca153f8-2de1-4dfb-8047-2d8d17dd7946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "634611d9-35b7-49f5-bf7b-28bb6e0ace01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229d4a13-3e18-42c4-a77a-d5cda586cbfa",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e539555-179c-48cc-9cc4-3e7f0285346c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "824a34ad-f174-4e9e-ace7-049198148d44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a8fdd4-3d47-436e-a404-0fb51c5c85b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "488e2e8d-9186-4e46-b355-ee7defd0ae6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a70656-3a1c-49f1-b6a7-6f497814f6a2",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14016977-005e-4cc7-81f2-9ce0ff306f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51719d76-c249-4c9d-a752-fed790fcc77c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138b7cfb-7e8f-4fab-865b-8d193d1d5563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c4cb7f6-009f-4299-98cb-a0a672cc1ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238dfefe-af83-48ae-9ab7-7754c2d1b16d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d149f90e-c78b-4afc-98a8-b8c285ae199d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e10c068-86dd-43e1-bc92-c998454b3d4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c205038d-4ac9-4a4e-ad95-3c7b724d42b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca09c3d-e824-4e54-b4b5-56e28ed3f265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6aaf50-5b65-4b1c-905a-cb61e3279470",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "146acc4b-0a3a-44a7-b268-61d30be960e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa7bbad0-16bb-4049-91d9-cb2a8e588ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9879840a-9e0d-4c30-8004-248b94fb4187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34c798fb-156c-4246-9e2d-2d2a1a3e8dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1da014-fbb8-4fdb-8a80-f62ef253586e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edbfdbde-2f0d-4d7c-a7ba-5e133f53e772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f5ee18-be84-45dd-a728-db8ce2e94920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6df908-9fbe-4095-8690-c0bcdedf0583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3dfe25ff-f4e4-43c7-a42e-ec54a1ac6719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e37554-5f92-4a29-b519-845ee0e344b0",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfcf31b4-ad04-41ec-b53c-3ea3ea793c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7071a27f-d1ba-4d99-9d42-5252ec25c8a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861ffa2c-f678-4317-8219-3ebd188ceb38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1737c645-3e26-4357-9a1a-b74cf3fbcb16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d58bd9-6629-4e4d-912b-4d6801827e49",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2251b977-4238-4442-b52e-d297d8152c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b895742-21c6-422b-bcc9-6047921a29a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa58947-df18-4d08-ab41-f20297d33b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd06be8e-d5a4-496a-936e-9c402dc0cf15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ccd5bc-1769-4829-8817-0fcd4a62f8bc",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc79b57-bd97-4050-90c8-f2b7e3bb0dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "332d4fe3-81fc-4426-b05e-085d93c8d968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3915b9f8-3fed-4bed-bc30-30f7e6e30be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f932ac15-8c97-4a74-b926-ce2334757e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcba23c0-3880-4f3c-8c39-5e4891800978",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1fc4a6-7fca-4b5b-989f-9a330de5ef23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "355632e1-fb3b-4b63-9cf3-8d3172927d39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ebfc890-9fd4-4f00-a2be-cc7c666bc1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b6e8177-9948-4dee-b6cc-283ef956b3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c70ef2-f93c-4d75-b106-79148def056f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "929f5aa6-9dc1-45c7-b466-6e472ae6b6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a2fbbab-ef2d-45f4-af31-cc911592da08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5729f7-04b8-4a0f-8470-4871fb5d3587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56abd6bd-32cc-4539-8787-ae963a53ea98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97fcfe8-021a-4b53-921e-4188a54a286b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e783859-15bb-4561-997e-264323236c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a0d3b2-d738-44f0-b936-0a573449c464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be8fe603-5afa-403a-9993-16e0702ac3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7357806f-eac6-4006-ac0b-6cd070ab335c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00dc5579-1d6c-4ddc-8739-18c5d6001025",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a5a5d0-cdea-4eec-b2d9-4303ca50bb76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9b3912-c5dd-4b17-8177-c823a6515c37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e22d71-faca-4ecd-840a-9f2a54a8c5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4fbb07d-eb89-40b9-b6bf-ffc93dfe6bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c3cb11-b06b-484b-894b-a2e9c3471f12",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da71be13-2562-4b49-9aa4-7f7a7eb80d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cecfea4c-c971-40e7-a079-7cc183d21c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7766c0-f01e-41da-a654-5a7d8cb47fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3734526-4867-4bae-9b71-3a6b5cbfa2e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bfc69d7-98a8-4fb0-990c-f393fb75d6b5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb808217-afc7-41da-a03c-498fb9c239fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1574685f-3c05-4e44-9988-90452b8c76c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9807a743-c43b-4424-a02d-0e4649cb7ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "671ac452-5ed8-4c3d-b22d-fbcf20807b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5394216-40da-4c6b-959c-0a0212e33042",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60cebf2-3849-446d-8399-3328786d796c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa9c52cd-0992-4395-b711-a36e88ab01f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aab61da-8c32-4342-9e1b-d8497192dd6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebe966d2-cd8e-4682-b384-639bb1e281e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f55dd7f-bbc5-4b59-a5e8-8c3e284e74e9",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1f2fc7-6078-4a54-8d76-440e7c75342c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f520e522-95a8-4086-bb81-9e0d864e7f42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d025230-80e6-4d4a-9fdc-f7495f84c593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb038a5f-32c9-48c3-9dd5-2c82cdcfca13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c2890b-0a4b-4c96-884e-c77ad50d846e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8434b1-b831-4086-a129-544790c0337b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d742241-ebf1-4549-b16b-90fe451a6527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e73565-43ab-411e-bf2e-1816b3c03bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "085e7c06-2746-464e-b6a2-5c9b856818b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ccda5b1-548c-4819-85e7-434873adf19b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19bffd9b-6208-4fcd-9d89-55416c90645e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "251e17d0-1b7b-4c87-b560-bfab2c923701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d56f1ca-4813-488f-af55-a1c018cccc76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed07bdeb-2980-4aaa-821a-67568303861a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5c7b176d-956b-4841-b28c-ba24013e7dac",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ce819e22-dae2-4f15-815f-8d6363d657ea",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9402ebf-82c0-4726-a2bc-0850e715e0af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7304a1d5-64b0-449c-bd9a-99436a0bd017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80de15f5-bb60-4883-8126-31d30f932cb7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "df84da63-9373-421d-9895-b9ae2f53ae42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff56a192-d310-4323-b821-6542142ccb62",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39609cf4-da5e-4a27-8514-d5cd432f151f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a3b431a-7ce7-4bc6-8a96-bd557b6d8fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29194bad-38b2-43b4-8a93-ec994c738c48",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "2857873e-d717-4281-afa0-f0f39b76f654"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46eb936f-c32c-4531-8131-2739a5546726",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "025cf8c4-bc81-40ab-80e1-e4e9942c10c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "324b9396-da63-4c48-9292-967cfdf4ddb0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "192b59ac-220b-47eb-8816-65410b2900b2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5e8cfb24-dd3e-499e-910e-c478323c70fd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5459cbac-8372-456e-9565-cd74273e80a7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6afe831f-fd86-4c5c-8ffb-a1b3feee6723",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "94328d30-6777-4d58-ae9f-2211f9acdd3f"
                }
              }
            ]
          },
          {
            "id": "5b17dc5d-6a0a-45d4-88d6-7fd584942f7d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "37eeac9d-bcea-4953-a1ab-03909fcfc751",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fba9401a-7e4e-4907-b93c-5d5ec25ad3ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "da16022a-b163-43f6-b162-0f49aeaf1703"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5bdcf86f-bda7-408d-9e4c-171372c1abbf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "778dc6c6-9e00-4564-9686-8c4b91ba0e7b"
                    }
                  }
                ]
              },
              {
                "id": "6437cbb8-61e1-4ef3-a9e4-97aa9121b0b9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fab9d115-94f8-4d66-9f3b-b2fe19e2b79d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "559e1291-4a46-4d6d-87f5-b50a76030a15"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6516e95d-613e-4c1c-b475-0944105482b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ac326ee0-916f-4a83-b1b9-c590f5779b6d"
                    }
                  }
                ]
              },
              {
                "id": "8c406a82-3b40-49d1-ab6b-84103a95b325",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c2ab072-7f61-415b-a44c-160739488dbf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "130e6c82-41d2-4a8a-8bff-0587f7c67b51"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0025cce1-e95e-4cc3-9cc0-a36ccb8770d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ee2733fe-0fda-4f9e-9211-edc46029e1da"
                    }
                  }
                ]
              },
              {
                "id": "5f8216d8-7761-45af-8a4f-f070add0146d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c700a5e6-e5f4-489e-8772-d99dc7850ad5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "762098df-449b-4b22-9796-f95bd18a40a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "511131bc-63f0-4111-a0e2-2b2b38e911f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "10a975e0-58d6-476f-bd8c-df447845e6b3"
                    }
                  }
                ]
              },
              {
                "id": "733b9f88-6bba-42f5-a05b-f5d7249a9190",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "90b5c22b-3884-4fc3-b29b-ad90a427b041",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c4774f4d-f08e-4278-8a1d-aff1340f19f1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4dcfaee-fa27-4067-8bbd-d00ee5b33768",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a7823436-8038-4ea1-a681-5b8d191bf543"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6c1c1faf-bf4e-46e3-b90e-1cb5b4e3858e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2f93d76f-bb74-4d9b-98a2-cadd32be2e52"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cdad60cf-1f90-4985-bf9f-ec912c9fa2df",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bf3068c4-ebef-41bd-9df7-1f4c5d603dd6"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b4f8b377-c0ef-4c5f-8cf0-67066dbae342",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5413a62d-23d1-43e9-8ce6-c1c553fcd728"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "67c2bd45-49ec-4d44-8814-923485c93fb9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ce38fbfe-5245-4241-bcd1-35fafe8f77c6"
            }
          }
        ]
      },
      {
        "id": "128bcfd9-df36-4f49-88b7-ef40cebdba96",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "958b9b92-2527-423a-94e0-05b7dc303ac8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7b1d7cc6-bcbf-4465-be6b-99e50c8c9e76",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fddaac44-9a9c-40a1-8823-3e9bb13ec10a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa12f028-b5f6-4acc-ac6a-1791e4b07172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb62cdff-7305-4919-b611-ac1f965d2159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17152e32-9d11-4129-9b7d-58fb00ae77ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4ac4554-a476-4643-9e0b-fe0efecef352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ed1f44-98f5-424e-adc0-8e9423464cda",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "209db374-2c9d-4af0-9e0b-d892165a646f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "511b84f8-c990-4934-a9ba-c515d8abb765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9dff1c-5c6d-4c02-be9f-04299100cb81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f84d15c5-99d2-4642-b188-e04e5d05ceb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c546ab3c-ae3c-4b9b-a305-5a0bcf32cd5b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5f4941f-0232-47a1-ace8-cfdc11f41277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0853a1d0-00d6-438c-8aaa-2381a2b2ca82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c9547c-d061-4b12-8310-6042c1b04b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a248a4cc-9f98-4e3d-b260-dece39e5ba3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b2945d-9ccf-4fb4-a5e5-aba4717322b5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f920383-f4b9-4a8d-b1ca-bdad3cd70da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c46effc-08ad-4bab-b414-704853c38fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d26a06-7f83-44ea-93ba-7a89346a2f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "31a3ada8-8036-483c-9a54-a489db3ba3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed243178-d30a-495e-a3ce-2fc7927e5cd1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9355e2a-70b2-4252-bfe0-faf46dbad039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbae06d6-d0cf-4e7e-8ac4-30f1633549d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a04cb7-6b37-4822-bc6e-475bcfed0fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "288ccf5d-76d2-4635-adbe-2f4533245fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e6c538-f07d-424a-845f-bf20e27a3f8f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e0ac40-1f63-4dcd-ade5-f78e6805cf5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08e274f9-e122-47d1-830a-447197ba8142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa11f725-6e76-4e5a-b96f-73da719e4f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a027750-56bc-4904-b3ac-f92565083a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13249036-62f8-4a89-ae12-fc2b586cf87c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e70228e-7117-492c-b796-463b8f481ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a58b18b1-78b4-4530-ba4b-9c9a4bbce1bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655b5f07-81b8-439d-abba-e0a7d1d9184b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "41ab1094-f1fb-4280-9787-d2be6e5da2c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677ce92e-67e1-4097-8220-55de6c790084",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a538e520-bcfc-4c64-bd10-c59d8aee5cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "493e36aa-0078-44a1-922d-6aec12127d3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84555132-03fd-44d5-bf39-737057706232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30c6a728-8c39-4471-bebd-b2e397a201d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2c6c82-2fa1-4968-9e9e-cb473c47c231",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29117e0e-da14-4050-a63f-9f16e0939d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e1206b6-12ef-45d0-ab66-444a6b7d3bcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4b61d2-f57b-4df0-8c45-e4706fdd78ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f968f1f-b681-458b-bbbe-fd7d1b12bcfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98a1399-52af-401b-b6ce-69c25d1329b1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f02891-6812-45c5-b484-81bda70ce999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b102863d-486c-451c-9d4e-4dcd9349dbfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a58e3a-9ed6-48b1-9f37-1b8ec575b353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a27dd9d-5532-4b1d-8a72-6ef515dc7f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb9194a-bf38-48c0-aa94-e3395a78bc30",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30b9d49-8b06-4a72-8dfe-51a48f0f40d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad64988-7530-4f5d-8a06-83f6d90c323f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d331482a-a15a-42e3-9568-82267747eee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "bce63e9b-89c6-4fdb-b234-e5cdbb071d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65983a46-89c3-4293-9780-a641d3866d0d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88a9382-c71a-426b-bd74-adc39c722674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e7cd22d-6d13-4a94-b5c8-7d868c57d8e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5b69ec-e5a8-4a31-b6d4-9e9abe419320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ba02f098-e7b8-4f9f-b21c-aee20c8de560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916d8281-bb99-40e4-a0f6-45665bcf45ea",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2982465-eb38-4a44-876b-bec0e2d04017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffaa8034-4d45-4152-b9bc-b87e53bcc3e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a021699-be6c-4d53-bc83-5021912bdec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4179de77-a49c-4013-9631-f87144f91f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267b7f78-6d37-4d73-8cc0-c1ca459302d9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a92915-3357-4627-9b0b-a7e148fadf3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9826c0ca-2798-4747-9f27-9009c55f6df4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62d6735-6693-4bb1-a5e0-e78df4c0659d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "96bece86-91dd-4134-b40c-b1b3a9dfa9c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a560274-4aef-4a54-a333-85d162ed52e7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f1e849-4c13-45b8-bc1a-2ae6f9608e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5494601d-fdcb-4d0e-a410-ec136592a11d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7743f1-ad51-4f69-97c8-ea5c5a3d9d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e3da24c-ed31-4ab5-b581-9e6446b6266d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c0c1c0-a75e-457f-afd8-ab1fc75739fd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb49f51d-bab6-467f-9e3e-b30c2787ef2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a86a8270-799e-4980-a2b2-a64af94170a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5514738-c250-418d-a880-1b1b4501f350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "aba9c60e-f002-475d-a90b-e528f76c3420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d71fa83-b111-4863-a722-3ba2d3423a24",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9fa155c-babb-4d70-8bf0-7667774e0679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a050f4f-ad03-454b-ba82-fad4afdb10fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead88a60-73fc-4021-b64d-dcabe357d736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4da662ce-a901-47a4-bc4b-993fb5760559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13f879c-8d4a-487f-a8e1-7f83e6beaceb",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ced602-9db9-45be-be2a-477394f7d0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53daecc0-e2f6-4f8c-91b5-f0ed48817a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a47c56-e493-445a-85ce-492f3f39ccdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2488cca4-0ec8-4f88-963b-11e9db24aa64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2d6c62-ec1e-4d61-873f-868761edf51d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12ec7d6-d135-4770-9077-3a328946475a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8ab616d-4fa8-49ea-b3f1-ca4995927649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b9c9ad-1430-4221-a2eb-aa914841dec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "146fd69a-1d56-46bf-8d9b-f0d2c6599e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b861b0-bba2-4cf1-b324-23edf138c661",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82fb1218-9fab-4069-b982-952bb510f384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cacd0bbe-4022-4d67-8bcb-179021c2e54a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520f4d67-891b-4da1-85a2-88bf620473e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "354bdf9a-ed67-4edd-a0f3-191a6ea7af55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5343cfbd-108d-4a30-a71c-381ead463686",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a9b449-d474-4adf-a461-1468e2b60964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5adb1fe2-e124-4202-847f-8a8575199a25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a893cd89-a765-468b-9e67-ddeec496ff95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cec2c378-d5d2-4888-b043-f33d79828fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59062b1d-bbb5-4d6a-b49f-863c465f7e60",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "992088c9-52e5-42e4-bd29-e2375c3bdcaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "111bfb87-09f9-49c3-9471-b997c57d413d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4edda910-3318-4ec9-9fd0-ae44694ccdbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33fddbf7-7268-410a-8047-f2b389132da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e464371a-57ca-4e58-a1fd-0fc462a42969",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aef6033-81e3-4228-82e7-12bc6d8b7166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb88b62f-39b5-43f0-93b7-48da62efd4d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744fcc5c-ef51-490c-b97c-c1eaaa3e8474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4b0ee38-4068-4bac-a1ad-7f00c1e8cfad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a47bf5c-cf4f-4331-8a99-baea438f8a7d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d4f2ac-2a58-4d83-93e5-9790c7b90587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31741787-94d5-4185-b1ef-42763423f742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e04d11d-c5a2-4751-8e3b-39756c0478b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5079ac9b-6ecc-4da7-ae87-fc1e7320ebd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070351fa-af75-4651-8c16-5b70e871c4d9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd270c1-5044-4b42-aa7f-566b21d11b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb83e1f1-10e9-4061-9e97-a297e3be2961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d305dbb-651d-4dd0-a294-be7f5474d60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10b2211d-ba9d-4f54-ab9b-f4870c4a6c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1879061d-466a-4dd6-92b5-74ad29ad5c58",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b682e92c-63e1-4148-b94a-09f43bfac0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b640d1e6-4e1b-4b9e-8a57-3bcd963e49ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279231d3-63f2-4123-b570-a85ed9b1abf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71a0ae0b-4429-4a19-8698-8fbffaaaa482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b129cdb-7796-41af-878c-8690b41251e3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2efd0d-ce5e-4b94-a92a-1a2d9bacc5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90cd6a7d-56f1-4755-938e-5aecee08e68e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed5f94e-3e49-41e9-a142-5ad2921739e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf39b30f-cd92-42d7-848f-0b8e1bb8eff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7943d1cd-cb32-485d-85d6-e37e5aa7bed4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f69b75-276e-4044-a0a4-01bb2f480a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af549e68-1f5f-45b5-9064-f767925fac95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e28c057c-9a45-481f-a778-f389f4b52c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3a8a3ae-84ad-49af-bee7-e6b8802ae046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6011d7-691e-4a1c-a370-d10e15a2b3a9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a535c486-35d0-4787-9346-cf2f84732556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c558807-2728-4183-8207-8ec7d2cce01d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821f1ab4-f44c-4867-935d-2fe9632a0421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d244c7a-f9f5-4067-936e-5b5d52232316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44021253-95e2-46c5-a179-8951128dd575",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2137fbde-ac20-4876-b0d7-402df9f46222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61183971-0688-4286-b408-f14ee8297560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6623866-871d-4daa-a380-814fb305dc52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7ef83ac-1699-4c7c-a88a-951da6c3134c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692c16f4-651f-4969-b373-f5f52bf15101",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e16d0f6-7719-4b90-a068-82180c4e71ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c70f944b-9785-450a-b9d6-374287208477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c557b52-4029-412b-8f09-4099670bccef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b24fb36d-bfac-4b4f-a19e-719ca6651526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb927a71-8c34-483f-b5cf-b09d34f85960",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec46a5b6-0cae-455c-98c0-5cdc7c5667c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be9aaa5-2303-4e5e-ae5d-dc1427965247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e233c34-6a5c-49b3-97db-91ed034b13de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35aeba02-70b9-441f-bc39-8eccc08f5670"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a303eb13-f545-4d90-be26-5ae96ac5a0f6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "de7ebce7-29a6-4020-b066-69207c1b81a4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192f5771-2be1-40d1-80f7-ebf8c91b5000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b33321ef-18ae-4e84-b841-9a7717003d98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc7768a-6f82-4306-a041-6529ef7be48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "955c8e97-fc07-4258-b181-458c1b16448a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa4f003-2e42-4427-960d-f93d1f9b296c",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d710396-e211-407a-bdcb-8fd0ed7cd740",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "584d7188-890a-44e5-b67a-737ceac47858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b36f50a-1686-410e-a1df-b1385e702c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13790f79-d2eb-4526-8a10-a66289f5ea61"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b8f34ab-8578-40bb-bbe9-98e9b418e4a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64487dbe-ea54-4fb0-b81d-f3f3fc1dde79"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7dd47a2-3339-485a-81f6-18ae0fe1c618",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "163dedb5-8ab5-4c4e-8c20-15ccbc055e6a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19129434-8b57-4ba7-b5e5-9030364ea66a",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6da90dbb-b3eb-4734-8f44-7f552d906b37"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9dcffabd-5b0c-4456-b166-b0951655fe31",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "544b5873-9691-4a51-9f69-e1a10a07ae2b"
            }
          }
        ]
      },
      {
        "id": "7f35100b-07bc-4da8-a115-f2870ebd8d75",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "accceee6-e814-4f6e-a979-fc4dfee7b24f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "50ae791e-a25b-4539-ae94-4d284282cff1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4f304ac6-8cd8-479b-a1f8-0a580dcef262",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca46db1-d0cf-41a5-afa6-1e55322a32bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c0ab792-10e8-4016-8276-8786ec30661c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961f2e59-d7b0-48ab-91d5-65c05afbd6c2",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68e27c9-6f87-4a53-a6cd-d3917971abb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47dfeeb3-869c-4701-8184-04ccd9e30fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70356de7-0fc4-4c5f-a76c-4665de75f5d9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c09dc0-0a2e-49ff-8da1-6666bb390336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a270ba3f-9a9c-46e8-a014-884722df4847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22250e03-3fdf-4988-9104-3a8453c18602",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6832acc-e0e9-4d1d-8db0-9c132693fa43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9608fb9-3fd8-40e4-b271-64d8f7462e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3564811-6424-42aa-a826-9373d7256b96",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7c31e7-f355-4d7e-a964-1fe198968c83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30acb641-4a97-4547-90ee-7b07ceee45bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17448c6-d57e-472f-9f55-a6e663ce430e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2baff2f-e535-4d55-95b0-444587cfa2e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54858558-8e80-4dc0-a9bd-9a3ad6e7d9c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3627ec3-006c-408c-a1e9-0f68a635a6c3",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "333cb53c-0275-4989-8ed0-2bb277e8c6f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c9889b6-83a0-45d5-b9ff-2e6091b2f14d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1128ffa6-04da-4df4-824d-bbba0667a8ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e1dd520-e235-4550-80d5-447bb4fbc8e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1feb3eef-2916-4501-a5a5-efbf0d7fd8cc",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b427785c-8454-425d-9651-eba4065528ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c32f6fbe-14bb-4bb7-9ca5-17806aef42be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7479f914-b05f-4aa2-a7ba-c3bf131348c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77da4f17-3914-4160-8df7-ccff8722e8d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01373e22-7deb-4332-aa74-7c60f605ff4b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ab5e2f-4afd-43b3-8c32-d9de9011ea74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2823307-93e2-4c73-8fdc-4d5e254a9057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88478535-b70b-47e9-88ab-3ecb5310feca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b67ff971-c62e-4875-b8f7-31b34f989ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa9c442-7ee0-441c-b442-adfd50790d4f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318d74d3-be88-42c6-92e4-392d0860d10d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dada3eb6-cbb8-4570-bac1-06d41bb94e7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbcb746e-e220-4e95-bf2f-c341f7829397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c24156cc-0cc2-46c4-9e38-752b623d8256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f98cd1-5722-4689-9e00-666b2381fd70",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3781beb5-79d2-4509-8b66-3855527706cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d21d6bb-f344-4ef8-830e-5d57fa5036bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "493dbf17-44a8-4338-8f76-62e062871cdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6214bec-b2cd-42e6-812f-5f63b8e36628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab6d6ab-70a2-455f-b32b-53d4acad184a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a1ada42-9977-49cd-a31a-58ab943bb3a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d1fe398-1cef-47d1-a205-a36755a380c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbdd5aa-7649-4411-96bb-70b5b660a748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b81a0df9-6e95-437f-8396-9a72303fa2be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec27b8b-3096-49bb-898c-25824bb4deee",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b658be8-1b13-4838-adf9-f711aa764b94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ca56ad7-6930-49f1-b574-8162b0b87ae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9cbdf58-680e-46fa-808b-4440b07fce86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f7503e7-9c1c-4c12-829e-42a0908e953e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e87b696-e175-4beb-b7a6-fa7b4f0039c1",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e227f4-9245-4617-a31d-5eabff11f5fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96c40126-1f28-44d3-aca7-2f57be2a07ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce022f1c-6319-4121-996f-e9fa5e1ed1bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4915c909-bf06-4934-99d7-788c68d8b40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc54587-cedd-430a-9688-af250286ba57",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791cfaa0-6b57-4325-a544-867f167219fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b64274a-8659-485f-bf64-36f040970585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0f3d9d-a7d4-41d9-8363-ab143c6587bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ba82428-6ec7-42ae-843c-24c49a0d2216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf5e816-5b9c-47db-a09a-f2c900296fa7",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb09eae2-d562-4d11-95e9-db1f2d97b5ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa2e43b6-2a07-453b-b781-11943b71d66d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f0d39f-c6e7-448d-9db8-940ca76ad8e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fac77359-b984-4031-a298-de85555c6f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af36c49d-de47-4ba4-96cd-489ac1c8c5aa",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d83ee9d-6c25-4f00-aef4-56dd3926888b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "731b504d-c2b9-46d7-b2c1-f9f2d7d14446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e17f30-dace-46b4-b907-cc9f59d51b66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "442df3d9-4218-4d33-adad-092735f29090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9bf3be-ebd6-4746-9634-c4eab250a5b0",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57916a68-728f-42cd-b0e3-11a66886bd2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f31c4324-a269-450e-baa4-87cb55b7fe4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47c8aae-ccc7-4937-995e-d674b80a15fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09a7dedd-140d-4d35-a40f-f7405912908c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc33b111-92fc-4756-aaf2-8c4bc420de05",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2283f8a5-21f6-4dc2-a0e1-aef4c3381cbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69ce4153-0a76-4f35-ae77-8990f487c93f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c3fae3-2cd1-4231-9e93-d6b4f9dcdc4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7ec00a2-f428-4f8e-97d6-78c89c58c1b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51effe1-448e-4bd9-a970-45850b6444fe",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec5d445-fa81-4bb6-9425-487ae1c7fa79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d715a3-e56e-4b59-915c-6f11b9ac8c20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe4210a-757f-4009-a81b-6b189102bb9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c52001af-3dd9-4660-b96f-c795a764347c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624e6dfb-e032-47fa-86d5-4212d07fa788",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16f4b55-dbb7-47d9-8892-06deabcee349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "558d63ae-8c66-44f0-b6bc-bdc91928d133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef61a746-46bd-4e36-826b-8087f5dbe35e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acff6128-325d-4a30-8b84-acef017b4fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c62710-9e2b-4ee9-b5a5-d7fdd8ed460a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3be774-cccb-4f4c-b48f-2b603cf295c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f65e9f5-6af6-4ea7-9082-13cda0e6a8c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a7e04e-7277-4a09-ad54-2c37c8e91845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa6e83b8-4b6b-4aa3-b459-997a3acc23ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec18dd1-f79b-4240-890b-60b4b66a029d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8aff389-bc02-4b04-a76c-f63d2cf884f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ad63219-d2ff-4ab0-8e2f-fdada33d9546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d522f47-3eba-40c0-8f5f-b617c673dd17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8435febd-5b59-4f24-876c-474d472d216e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c17471-c14a-472d-ae56-2915effe6a98",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498c5f45-e5c4-40a9-a6a3-885dcb610821",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2785146-7386-469d-8e1f-e8b4aaaf3cdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a465dc7-9aa9-4c6c-807c-86d84bfd4451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "497f3a23-6266-4c85-9d70-9347925a81d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86003bc-e455-430d-87fc-41df6b36013f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d86749-4001-4b69-a806-795f5d0e5f8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dc8437f-7e18-418e-8492-75c48eca89bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81106548-c68e-40ce-a05f-889ec31585dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28823eac-f75f-4426-9090-35fdd83d10ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5151dff9-3314-46a3-9c2f-e703fa68fe83",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e6fdc8-e175-418f-970e-12da77a17be5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e6ab256-599a-468e-90a5-a3c05a1ef835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "024d6933-928d-426e-994f-81a2b485d58a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8895daf0-4eea-40e4-870d-948c772b7b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e367c47-2ea7-4c10-a377-e6278b5bdcea",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97254fd-f775-43c6-94e2-01bdb8a76578",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c96791e4-6d66-4bfd-b1c8-e45c7cd0bb9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94843664-a1df-4bca-ae50-08e723458014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b9d4606-2756-45df-a890-11e8f12b9daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c50e89f-2c76-48ed-82c4-e42b098b9978",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf8bc01-845e-426b-bee2-f7c8e365ef5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cbd309e-3591-4e11-9468-3fd23d03a942"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3a8b4f-33a4-4419-804d-bbedc8f28b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92eccc61-a13e-4af2-b095-c3e39a8dad72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae41841c-b601-46e4-83cb-61ace6d6cda6",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16198c2-3ea2-4333-91e0-805c5b8fd8e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e5ff8a2-004c-4b53-85d0-d9a928d7c214"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd19364-55ef-481a-b1a2-53a3fe73bde5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3621d4c-4571-43a7-b4a7-9f97abca198b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da985de-1cc5-47ed-a68b-ea3a65e781bf",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6f6c36-3249-4c83-a164-4aaa6525c164",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a653435-d9ff-4cf1-a839-2f3c6dd59da1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e1d5b5-46f8-4d88-96d9-4546d623e07f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a3610b4-9c7b-4e3d-a9fc-133321cf0d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9892fd-e41a-465d-89e6-a68a1a2c26e7",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6927a890-26bd-4068-978a-877f7131b19b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07b80d98-0f1b-4c00-acea-7e0663cd58f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3bfa235-99a8-4e0f-856c-1e1a54337a97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee4f7761-c3a8-4016-bce4-56bc81c1a457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641cf589-30bc-4330-a5a2-c6ef15f3cf94",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20821049-ccf4-40f0-9f96-7221197b0e08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8212a5f-ecf8-45eb-ae40-21593fd8d642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b270788c-daaa-4459-bedc-744d9a3ba422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7a0cbaa-2b9b-44c7-b5b2-9fd8c7d207c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1393ad1-55a5-4c04-80af-02efca860800",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ce4586-f6af-42fb-bf36-f7eb496ae222",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44be9ec6-a483-4630-9986-eba215d670cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7dd13d-f0c5-44c4-b661-1db53a89b6a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66c1039c-5733-4e49-a1b6-de372d8d44ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a085ae72-85f4-4280-b4b7-30bed1d8517e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ffe968b-5b1c-4656-9cf2-d6e60509d1b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5468b19f-3812-4483-a550-91775659b2a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d1c56a-9b3c-4c42-a549-229064003aaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5075684c-4ecf-4b56-a399-91a148a00255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c4a695-7a65-4f4e-a1d0-ba12238b2728",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378ea837-27cf-472a-b040-7c9b8494ea79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1995a30-f218-47dc-921c-085099e89ce2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a55eae-807d-4bdc-8d90-ba24f79bc463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4711718-9a12-4879-b4bf-6fbf7618e05b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141825a0-3006-4279-b7db-382dec98b3bc",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc77c4e6-8a1f-4eb3-b269-825a2749cb9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00a32629-7973-4add-9a03-0b11fd7fc62b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7acf1a6a-ce28-45a2-ab0b-aed26d835243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a610a8f-6eec-44f6-9973-be6bdcbe7b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51bd7e72-5377-4b9f-97e4-34a9d59a726a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e87a06ed-cb87-48bb-8e80-59954669a683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2057a9b-b785-452e-a8c7-b6f9b342843d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08153d75-b4e7-4b8e-9448-b254a83152b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e608f57-93cd-46ac-ae4d-d6a2427e2bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c0a2ab-5101-4e34-9504-8415bc219343",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9389bc46-e2ca-41bb-bd15-7ea8ed517382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8adf6b88-5561-4bac-ad56-c53901c5d624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb81e0f-b707-402a-ab21-09936143fb77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6efb072e-473f-41bb-94a5-44dd7888ad69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44fc1546-12ad-48c6-870b-f6f54c31a25d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db414a5-c81e-49e4-b7dc-a2237c9a47c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4175c19d-b8b4-49d8-85d3-429693745e04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83dc9c7-3a5f-4c4b-a683-7fe1fd68ef70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ec9e72-4285-4cb2-8f9c-60786c59870e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e63c33f-c451-4328-8bf8-9fe68fe59b99",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2e9370-37d2-41f5-9c40-2e7dc8a0103f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72641d26-f453-46bb-98fa-2386bfb90e48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7318aaec-4808-4955-9c7e-886453d65bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13721fc4-c029-4148-b231-b1cc0c3818b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f391c3-e855-4fe3-b752-1537c2db941b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9fdc759-2e4f-428a-b3a6-3fcdd0ee6f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f68983fb-9ae1-4757-af78-0ef65766fccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dececf97-5fb9-419d-b97b-5fd46cf76426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24a42251-5d1a-4cbf-933b-65b8bd3a08f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80bb3725-bfcc-4b29-a659-e3a8b998bba3",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06ae574-2b94-4fae-b70c-da40bd8f9a9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "addc52a2-1441-49ef-aad9-ab2a33e630aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7dfff0-bdc8-43e5-9604-b8541b68445b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "464c13e9-c429-402e-9a4c-1164ad641cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df91517-8cbf-4c8d-a639-0f9829fef349",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a96e4131-cb5e-40b5-a001-6b9a7c996eb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f46c0b51-6948-4cda-9648-7bb608ff6976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7781c43-3b0c-4917-8568-973d9c2e2dcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83e5be45-3911-43e8-b8f3-1599d07fbf5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495dfdb3-1bcc-4231-9656-88a86b1ceb04",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332d14f4-7214-40a1-a60c-8ad333067c24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ab4b906-a588-4629-98b5-b61c0a21b88d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6fc566-384b-4ab6-8697-d1fda6f09687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ad49533-f971-4097-a046-a17b23e5b58c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed78526-6597-4c37-a8ea-336d7796e5c1",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "551a9bf8-7293-4174-9866-5db9b0efc859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fcc2adf-accd-488d-84b9-6ceda9bfbe57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "289f8859-be90-44a2-8145-198a2d37865f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08324237-018b-4e47-b47b-cbc150fa000d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222d00cc-4583-44e6-b691-eb89f7656761",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b2b0de-4b7c-4b29-97f8-85d6a7c62af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f01247e5-8680-446f-a6fa-bb50acc65317"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce2a3bb-9bbc-4811-817d-77b03703449a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a55889f-eaa3-49fa-b935-d02dc7519514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a6aa9de-1572-487c-b985-11c646667ea0",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ed9420-e0f7-48d2-9a8b-668d958c67dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3138c742-4a34-4e10-9464-5beab935ef2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdb3d3f-4b5f-4b80-9211-8f9a0316bea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa8721e8-2a2b-4c7d-8d60-cf829a357d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27631fcc-364b-4101-a595-d89d391075ca",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e78b840c-e58b-4839-a2da-339810882c52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a86af58-9163-44d6-9019-b67b9ed0395c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5bd9776-4070-47ac-bdb3-d064603a79b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d40a3f83-60c6-4bb5-a8e7-51937d6ab372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79bc8d9b-7788-4b5e-9e41-ab45f8b66d5d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cce2d2b-256e-407b-9cc3-0f0abe799943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd98d07e-a757-4f9f-a020-72ab283ee475"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43fa0a0e-b5a6-4b3b-91d0-6123e25ad4ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09657316-c12b-4060-aa8c-e60afa1a0a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e703d24-f651-46a6-ac09-10d204c4960e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82bebdb8-cc75-4c4c-833d-76c767368911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0671bfcc-acbf-4d57-b803-7e86b273856e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f5e011-2517-4352-86c8-47dc6147ec01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8266fd87-9b47-4a6c-97a8-0f0ad2a154a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e5a34b-0298-4136-bda9-7173db13bf7f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8778a590-c936-4536-a18e-745488da772b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc8f2c49-dbf4-4357-80f4-bce20a7b7eff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaeac6a8-a2b6-419f-8282-4d1dd697bc4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c564b9a5-2d53-42a2-a95c-1dbd5805ba87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd61410-d8bc-4e6a-b03c-95a67a3a2b0f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0535fcc-3bf7-4fc9-9d6e-c21871beb7f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b99b01c-0db7-4454-8e1c-873d91699276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74764424-1a3a-4436-b1f0-34b33f9c2228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd845fa-74fd-45cb-96bf-c85bf315a0f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d04506-de8e-40cb-bae4-940a2082d702",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12059c4-e035-44b7-8dfc-e00f29436fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d077706-057e-4a3d-a1c3-6034f2af976a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "161b4bbe-4a46-4c99-bdc8-fc6fb39b3714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa4918d4-0889-476a-939e-587c0804f0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16669a6e-0b2c-4092-8ba2-233aed783486",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5e60f5-5d45-41ab-bdf8-445f46132d57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "216e24c6-e667-4ecb-b1fa-aafe03558b20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9098bdf4-ad41-49ec-93ee-6f1b911ccee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cbf62e1-c7cc-40f0-937a-f1d765ca7fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde82f06-9e19-4c49-b714-cad786ca7af5",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb77535-40a1-4909-bcb3-8d7fb4750b88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b17c8dd7-a0d3-4473-9e46-03bff6bc1e8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e2e5b8-204f-4891-9bbb-7e6144ec4371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "def3d243-3fec-4936-830c-aa75ea37f7d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a706bc-2bd6-4aee-a82c-017a2e2bc0d4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a288be-ac70-4b35-a7a7-2f0330984714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "329267d1-b2e9-4392-9e78-0dcabc980aa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c37caf-f872-4feb-ba16-0d829da15951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "480dd3e6-3fe3-4bd9-b0d3-bdb2b99db414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dacac28a-9d7e-4273-93e7-0a80f69d2c64",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8257dcea-12d7-4b50-a2bd-8745efb5a122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "716ab761-d027-40bc-a12b-b0d0d32c98a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8341180d-5f28-4f50-aabd-95a52889cc5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64a652d6-2b6c-4b28-b824-0c1563a67e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ff132a-ef02-43f2-a629-4ca83363dafd",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556dfe82-021e-4eab-b445-a88b4929b5ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cdaa9fe-50db-47a4-b9c6-41a0e5b54a62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea003b4-da91-47b1-8b5c-1f80021d5eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eadff7ea-75f2-4f32-ac41-b677e20910f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0947ad5-56ea-4d80-bfe3-81a931a436c1",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ddd0c39-90a3-4633-b81f-706211fca66a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a20cdb74-a464-4766-8c31-22dc2c5a74b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a31e7f2-8c7c-45c6-b407-e7cae294c6ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a99938a2-f78f-4f0c-867e-f830258861d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a35734-2ef2-463e-a7ca-ea85cf8e8563",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33752814-439b-4354-91b7-71465bfbcca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0de90407-6e11-47f4-86e5-936a65a506f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a8e544-0cb9-49cf-b4d1-f40570732d2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da3c34eb-f861-4d6d-98ea-baf43d702e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3371d91e-ce90-49db-9131-342c766531da",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a2364f-bbf5-4d1d-8573-02f4c011f20b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c086e7b-37b5-4471-a332-e8fcd85e74ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fbf0043-ed8c-427e-a352-d19a1614ef17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff390dc2-474a-4fc3-822c-41241aab67ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7641c6-a849-402d-b220-19825d961076",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7c67a7-c849-4e54-912e-24e1bef3ff8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "228da443-525e-4eac-9cb9-201b47aafdec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d711da9-380a-4c4e-9052-75329f215e8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "614de59d-a414-42a4-92fb-0e28359a6b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a872081-31fe-4d8d-a794-910037f7a3fd",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477d6c89-03ef-4826-8b95-6ee446ea63ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ffb56b9-8c22-4809-8f3f-a4e6f89dc6fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2410dc64-dd1c-4283-8964-81851d54c360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "898d8f86-c00f-4a18-b821-17a38691ee5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7083e9d-321b-48e6-a56d-c4d39774cf8c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4bd22c-e587-4171-94cd-d7d61b9fc9af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2726123c-6d93-4e37-9eee-3e00742a5804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "439c90bd-2b02-41f9-987e-5f04a1f8f601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff54ef4e-d6cc-411a-8804-c16d84de9ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ab2d3d-f3a2-4223-aece-0dafd1dd458a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f32a68-c6a0-47b3-811b-e260a999123d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ae5ab8a-7497-4964-92b5-7d9251e31aa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45013b1e-6ac9-47b3-b7d2-87d062fe8d50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d424d52b-dc25-45d3-8233-1e91f3a9c092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478c5643-69c7-4f38-810b-d298cd400ccc",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2446b8a0-76f3-414c-ad01-af1017b96101",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c179eb0c-fa19-4f16-b8e6-71054896c5c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee94420-c994-4a1b-9658-8454176f6717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e651f38a-dde8-4bb8-809b-43970b7d4bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4fa0b42-d105-4e1b-b30e-a79d63bf5abc",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79fe5a88-1110-4bab-bfd5-21cb0fd53a16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a855170d-03f8-496c-a27b-d38000724e67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b83acd-fb7e-4e1d-b3ea-e4723d88ebe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09044ebb-c5c1-48bd-a4ea-3fcbd6aa0e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a30c91f-cec7-479c-9747-b3c5d3b6ec4b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e88f52fc-6973-4403-8321-89d3c9dd8b37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2199c295-0d98-492b-9fc2-15cb5f3dd50a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ee5617-08c8-4722-95bb-406ed7e76081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffbdfaaf-f5ce-48ed-8c39-8812ae633f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45558db-f2a9-4a70-9d34-2c60bcd3da56",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e76430-2abc-4a91-8684-9baaaed19c9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a9015bd-cb4b-47e8-bef7-1bd5442be08c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5974296f-dba9-473c-8ce6-23fba2a58458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2a31e8b-596f-478a-95a7-366a0454c87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda43f19-66dc-485c-aaf1-ea74a089eb20",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d3040f-7b84-4614-ac87-a97dbec4e508",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad9b7cee-7acb-43af-9732-db07a1d4994a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd88b7c0-fb67-465b-b418-8fc49ca22bc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df9cc2ae-986a-44a7-86bf-bb9a1b2af106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e8c5b7-79b9-4111-b3a3-e397be5a1d89",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd8de6f-adcb-4af6-97a2-975f1900ae43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff38e19c-b26c-4c98-b834-20c134a7978e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a4da45-2fff-4c9b-8ce1-b0163aca7266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81a71f85-38fb-4ec6-abc2-e9c775154605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2e4aad-c3b2-4565-8da7-516fd5b9d328",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007a9d2a-fc7c-4a42-b9f5-d24c518810fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8766f530-cbe1-4498-8c64-7503421aba5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55084bc2-8add-416e-a4e9-4fb098c0903f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c394f95-5862-426d-8aaa-856712d8a3ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f06487-33c4-4eca-bc69-d418bd4e05df",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2542f61-14d4-4a21-9a92-3a9b082124ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a39fdc6a-5bba-4fa9-b312-03fd0f695c26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1d90a1-5cc7-40be-bb02-e70a542ec336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfc5b11d-9b2f-4edb-870d-1c74319cc844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce615dc1-3917-4715-924f-b88330421de7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d1da00-24a8-4aa4-aae2-7b149b2b3866",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9985d938-ed47-4414-b5f9-cfae5735a1da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd1602e-606d-408e-8167-69f1009e5a28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a611b7d7-7c58-4578-871a-767c6065bd12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6111c5-1055-4899-b4a0-d00676ecbe13",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16689fe0-bc25-4b26-baac-cd81e6adf653",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "136b59f7-2ab2-48f5-bbc3-3d98a7fb422f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d151c33d-3874-4bf4-b018-b3d8f0ab5341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c9342a5-4723-495c-ab4b-5da3d8881bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7ca102-55fa-40f3-b76a-ab7d69c238da",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df50ccc-190f-49f4-a854-4ff76598e95f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a29fbf5d-e557-43da-9572-49a7622947fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b51dc5-bcb9-449f-8a21-4fa6899fa372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c35d138d-badf-4506-adc4-907ff2841bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb7f276-9763-4927-8529-0da3f22f8165",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924a1de4-e90a-4c40-b02a-95441e0d6234",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49435768-0831-424f-a5ab-d6861c4a18ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b357813f-c06a-4301-8c4f-b7632d971782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "863c89ae-c6ca-4396-86ba-35923a00b427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a5fc43-5f7e-4569-b42c-5f84e7b48674",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469bd093-286b-4181-a4e0-61facfe663b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc82115c-f65c-4464-b270-1f5398d4a08d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b77dada-4426-4503-8699-b646589cea01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8292669f-567b-4136-a912-69e75c3d4f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7c902f-054a-412a-af8d-4630c5074092",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65be735-76e2-422f-9691-5d1c523eb632",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6680545f-e9c0-4ed5-a8eb-a616a1429391"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a031c70-76f2-49d8-84f6-f81b882e81e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46416999-096d-4e08-b869-e9856d9a0058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc70519-485a-4300-ac2b-9fcd5baca897",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a55dc31-c48e-46d7-b681-42a486b4c600",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97597ba4-6ec8-4d67-bde7-a0dc05815852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb455994-ec09-4da8-902e-f8d633de9259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "450269da-0535-48ab-91cc-27bc6c76076b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42dbd04d-9442-4970-9bba-96c01f1f7499",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ecf98b4-7d3f-46a3-8f6a-bef26d687be5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "950f9dad-15cf-4d19-b6a1-678669265b62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3fb1c1b-56aa-446d-8678-9a736a31fb04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38d3c69b-e7ea-447d-acfd-5f619de8abc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878cc92d-635c-4237-a7d7-b62376b10b84",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ed5365-d0ca-4d3b-998f-837af529685a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88231341-18c3-4013-8f43-3d95a1b2dee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d658f0a7-1d08-4394-9a6c-06656fd9d52b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c062b4a0-0167-44ed-8ba7-3da97564bfd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fed0a08-d4c1-4b1a-a7cd-70354b948b8c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9755f1c0-3cbc-4bee-9f6b-d79f1c6a3097",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a2f68e0-88e5-4f8f-946c-35fd611e99df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5efdae95-8ef7-4b1c-b449-708ee3c7dac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "501507fd-0692-48c6-a5c1-2dd0824b5434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950546a2-3304-4f77-8dad-1399b0a83629",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c44625c-233c-4a71-b8a7-aaa6852596c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04912646-3e8c-43ee-8bf6-c5bd8d306762"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0fead1-4b2a-435e-b700-25c098de0410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c41749-9dad-400f-8a42-870ed4b9f0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9431fb17-a728-41a8-b778-c6f8ab961c13",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db53d6a5-a9b0-40da-897c-484624a99840",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c1b945f-0373-4fc3-bda5-254e3f615c6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63eb50a3-f8d1-49e2-9d2b-2d445935b4a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad4dd6bf-2745-447f-8e0c-b926bce16d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882a000e-e52d-46c3-9ba8-3960c5fc507b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d873360-bc60-4e43-a089-f2062607925d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bf50bbf-b3d9-4687-bcae-74d2444d1af4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f1a4c8-90eb-4f35-8368-39e784289dd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dc84c25-cc75-460e-9ea7-3d3a81353aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1fbd8c-44d3-47f9-8b3d-1a0bd7acf4af",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56fcf7d-7efa-4556-a0c0-4a0147f4e5c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2858bdf-aa3a-4f9d-b7ac-e44a85194c3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03642cca-8bd8-4734-8a23-96501477f9b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adcb3c61-b473-44bc-af92-ff59747a8591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33291161-b312-4a11-9ea1-1f0a05e9d82d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5009896-2bb5-4a47-8b25-a5f5825eb411",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "deb8a18e-b8e6-4dc3-9aec-a54ee76d5916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60979228-27d8-47d3-ae03-849163ddec5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64ce7cce-9d09-4e74-8594-d29651b08d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b139697f-8944-4dd7-b0ba-2f8b04936cdc",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f9842f-a768-412e-a770-9bbd1a639f42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f6d9166-3b31-4867-9606-18b4a57f4740"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6af5ce-2924-48e6-90bd-4b6a406be0cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "869d28c9-a26f-42bb-88b3-2656acb874df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9733a78-8258-45cf-8886-906968a49b9b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da51f8fd-f124-4f44-8807-cfdb00aa2161",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41dd606e-e341-464a-9aee-079ce701a9e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8563e0f9-78e1-4222-aab3-f8c6bef1d727",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8dd85fc-ce38-490a-b0aa-24e79266cb18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f351ae-42a9-44d8-88c5-279d1ee4b90f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea6c70b-1db6-4728-b7b6-134393bf5b9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf292bcd-68a1-43d4-b79e-2d144185a168"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f08ec53-f2c7-4235-9700-d03975169ee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd7b7a39-af20-4318-a4f1-6f61f27ab595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce17c2f-cb88-4f73-8b5f-29d71eb8a77b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e999d24a-91e9-4f71-9b2d-b1957ea6213c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6581d2f0-8486-419f-88ba-bb7f2a8e749a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16e5534-6964-4c1e-afbb-c66dc0f4be18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0414abd-4bda-4af6-a81b-1ed3d0e080b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a432adcf-56cb-404b-83c4-4b74a9bfe090",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a668f529-1792-40dd-b828-cee3a14c49dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73509fd0-5322-4146-8091-3fbb2b1d52b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a08a182-440d-4232-8b21-d25134b46c55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59f8b7c5-ec72-4e43-92dc-99a783310aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8767cf-150c-4b16-be24-25118616d39b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ce056e-0bda-4976-a678-54268209dfbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d842b57-a4c0-4b9c-9fe8-f7563a2b8358"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da2134f-1fc5-4293-9b7d-f7cd07d715f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c1933a5-a1db-4144-b27f-404effd0ae30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1ab17f-0659-4145-91b4-62723a74b0e8",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d36d4bf-6b0a-4d46-97ae-ece3b15d4d8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e9b5a73-6b54-47f8-b804-3b13ab6056f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3961bc9-6063-44e8-8364-3e344a626194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abc32766-f3ac-419d-b169-418aa2ab22fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f4c8ec-5460-45bd-8634-2694e14cd35b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3462eb-e8c2-4af9-b360-e97a5891acda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67cd7a19-7863-47e5-b834-aea715844a59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce49427-7297-48dc-b74a-164fa3262e27",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f48e524-5689-4745-90a1-a5d0206d32f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d948459f-3f10-4a99-81eb-7ff2119c9549",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584b7abb-5a9e-4122-929a-0ccfffdbee89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "001670fa-002f-43e5-85b5-300e0db284bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97235236-4996-4169-9214-ca64335ae8df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7823cbdb-6c6f-4b58-a7bc-53dbf8916a80"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce058eb5-8be7-406a-9c15-882f42bcff49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6340318d-baea-43bf-8035-d7378f85216b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "09ad669b-5e6c-4a94-88ee-446d3b87f017",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8469478b-fb24-4db5-9eda-5e5bcf713ce7"
                    }
                  }
                ]
              },
              {
                "id": "94822762-1d22-4a92-9920-8dbe31fbdf54",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a22ae4d-604f-4ff5-bd7a-578f4faf7234",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8977566-5fc6-478f-b49a-bb9332f46980",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c3824d0e-2cc7-4b6c-992a-c51bc4783256"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "741ef9b0-ae1f-4a48-9419-95e083321ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ffc47c9d-1dad-4a88-916f-14a41fd3fa37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2279e8-86db-45ad-996b-ed1258ba7326",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6aa6fc2-6d0d-4e8d-bb3d-6be776e348f7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c432eb70-bd96-4e3e-b7ba-ca8e878eaa79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5963c60c-ab63-4023-b8c3-88434fcbd57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ece949ec-32e6-4732-9025-9c4a1259ee5a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d157175-7181-46e4-8967-3ed1abc1eb67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ff85b3f-fc31-4e1a-95a7-8874b4c96452"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6355fac-12bb-41f4-8a0d-ed51df905c95",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf9a3131-404c-4be1-b824-ddb4b8530f8b"
                    }
                  }
                ]
              },
              {
                "id": "c89de103-e601-4113-bedc-3435e6eb6728",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b4673ef8-a2b1-49fc-911f-7139da01a229",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86715aea-d55e-48d3-b9bb-87e0ad63bbb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f5642aa5-3ad6-402a-807f-b93dc7018f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95815e7c-4d10-4d68-acc8-c7d6f96d3f7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6685e427-4f60-4d26-ae9e-2e31b4c67c04"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8443816f-7bd4-4f28-ad92-4946726e9b5c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2c8ff9e2-9cf8-4ca3-af11-29ff4e4962a5",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "60aaeeb8-cdc8-42d4-842d-dba76ad6e29f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "48683193-4b25-4bd5-ade1-6291b108bc6e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08e8d077-80dd-4bb2-a606-052909ff91db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "546ccd6d-7c43-4bdf-8b85-0dd2aed91ef3"
                    }
                  }
                ]
              },
              {
                "id": "fb3aa0f3-3f11-4494-954a-df56f9564b73",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7cb97f08-2710-40d9-ada9-bac68a1ee28c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ac259467-4ad0-4a36-bad1-ed260f62bb03"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ea08874-7484-4e10-bc33-7198555743e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b006b753-35b7-4ba6-8fad-18a512343188"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "854b82b4-cfdd-4e1d-83ff-17149c4a6adb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "077713de-4eca-4647-b074-f2d80c906cdc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd75c44e-d378-4801-8d0c-79749d93e4bd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ecde6cc9-24e5-4863-887a-3d1edff3f73e"
            }
          }
        ]
      },
      {
        "id": "02f239eb-a0ed-4723-8007-e31667e85a87",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "593160f0-ab11-4d84-81b5-9155faa8e752",
            "name": "Negative Testing",
            "item": [
              {
                "id": "87a6348a-5764-4353-859c-5ca662160ffa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "101e45bb-facc-49e4-82e1-cabfa4777a93",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0bfa70-3360-4b8b-a4ce-2bff0523a543",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ba3c9607-4b7c-47e7-a4b1-90f77e70f291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "862f5e2b-5bfa-4053-896d-8b00d85c2d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4bc7269d-cb97-4241-aca2-adc89861586d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d791dbc-c325-43d9-af62-1b44c9b800ed",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d1266e-ac7a-4082-9074-4bd0907797fb",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1125ad86-1af9-453f-8545-baa434023161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a516ab-3ead-444e-bac4-384b5d657eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32e5b1af-1cb7-4ec3-a37b-51d31643e845"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5959ee9-57cd-4241-a106-0935e94f2908",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db67169b-7bb0-443d-94fa-45d48978c44a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a667f8d-65d8-4a29-b649-6b852159b662",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e654b63c-5e93-4c5b-bc89-b2063eeebc7a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "820a8086-a139-4b04-be78-b8a4738b1b32",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "27b5bf80-5121-4c6d-a837-8d259c5d4e6e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bfb355c8-0289-4791-ad12-5de8822d91b0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d7aeb195-7a00-486d-86c8-9ac066b3670f"
            }
          }
        ]
      },
      {
        "id": "76e0f455-c976-43be-9124-200a3423259d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "dca5c7be-fe39-40c7-964d-5e066af7824a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5462ff67-29e1-403b-94c8-ca0935f4d291",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0916de87-ed44-45b8-8e24-0ef1e2ea5e4c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f60ed627-455d-4c2e-a854-ee9e6a8184be",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b77f46b1-b200-4287-9c26-2cdcd20759f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a338a768-7f3f-4cde-9d81-1477f25d1874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1db4dc08-08de-4282-8045-17c35cec217b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cfeff14-ec72-42ca-9e96-d64f9a66238e",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64fe7e1b-5bee-46ba-88b0-a5a9627bc10e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4a9dc3f5-2089-45e8-a0e7-3381240c3593"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "849e4d6f-d092-44d5-b62d-3330ba041178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b45e892-5cb1-431a-9b59-d79c5552a730"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b792ca70-855e-45e2-a717-ef7a8e6ddfbc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41931be1-45dd-4f4b-ae50-20a20273bf24"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "327d0421-116f-4f9c-89cc-f1275ca11fc7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4877cb07-aa8b-45a7-b251-b0d9b456a763"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "27749913-b77a-4490-9ffe-5904aef5b0c0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d56c89b8-f6b5-41ae-acf9-71c9be50d1fa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d5e16f5-4e64-4724-8050-aa10ec90c4c5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "feee4f5f-ed11-4389-bc8c-29e5e01d0e2a"
            }
          }
        ]
      },
      {
        "id": "0b3f56d9-6225-4723-a906-1fcccb5d82ac",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "36036509-64b9-4627-98d2-69c199b330fc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f9f02116-b099-438a-ba53-d1330f143cf7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d76cd348-c86f-463a-9215-d64de506b4ef",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55feb69-7832-41ff-8721-58e56a18b802",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "72fe9d96-f98c-402c-a170-656cb987767b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3012e9bb-a40f-47b3-a817-5c454be524fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1a287ab-ff1b-490a-8ae6-51179a398c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e4c556-0f0f-4de9-a577-4611bee24afc",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7a8b79-35d1-4db5-8109-0782fdedddec",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1c022134-371d-4383-a355-1b2bf129661b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2589e2-b1c9-42e6-9ac2-0cdb10ef095e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "92e00703-95f7-49a7-a874-b41af854add8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b34baa4-cf1b-482f-9de2-89b05141f08a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a86fae99-6ae1-40aa-b405-e1df2a3f27fd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5e74573-d57d-4cb7-a612-58573f11674f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad414554-59a9-4e4b-b920-c4e25b87c8e6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "25a6f89b-435f-4d88-b133-71df83d3503f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4cee7236-43b0-4644-a2ad-ac26b94230a9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "967b1123-2f44-4f4f-b6c0-eeea00af53d5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c282c28-a83e-4c89-8d95-fc28641d356d"
            }
          }
        ]
      },
      {
        "id": "d0c20276-7a7e-494f-bd50-bc8f1028d592",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d23c6b97-fabf-4ad1-911b-04c653990175",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "366de515-59f1-434e-85f8-9f42f496c4b3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6a02a0bd-8d11-4885-b428-59a6ac27b6c7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ca38f49-bf19-4987-a87d-7bc40755255a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "01955b98-d98a-42b5-8721-47bb5dcf6cd1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 645.7915057915055,
      "responseMin": 20,
      "responseMax": 6553,
      "responseSd": 662.7039344931587,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1677631551663,
      "completed": 1677631729604
    },
    "executions": [
      {
        "id": "16e89518-6407-4e7e-b33d-7214953384f3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1296b1f5-8a32-47d5-8f4a-7c8298a9b163",
          "httpRequestId": "c4da3de4-21c1-4ce4-b6d6-0f9484ad21de"
        },
        "item": {
          "id": "16e89518-6407-4e7e-b33d-7214953384f3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "afd4a655-6ebe-4bf2-ac86-0c154f53192c",
          "status": "OK",
          "code": 200,
          "responseTime": 86,
          "responseSize": 0
        }
      },
      {
        "id": "971aab7e-f499-4997-99ca-b8450c971ee6",
        "cursor": {
          "ref": "62a1af24-f409-4ea1-8fb3-3ac46f39c954",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "59bd5757-281c-4d33-a13f-a5082354a9d9"
        },
        "item": {
          "id": "971aab7e-f499-4997-99ca-b8450c971ee6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "69be4ce7-f141-48af-a639-a249092b3bfb",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "9fc3ffc4-6b45-4e64-8915-bb88db0c9392",
        "cursor": {
          "ref": "b6ec963c-44d6-4161-ab29-6b8343acffb2",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "491855af-bae9-442c-8541-c2522a6a1825"
        },
        "item": {
          "id": "9fc3ffc4-6b45-4e64-8915-bb88db0c9392",
          "name": "did_json"
        },
        "response": {
          "id": "3b86b609-9fa1-4f9d-8fb0-1978344a9636",
          "status": "OK",
          "code": 200,
          "responseTime": 1063,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2fad074-6390-4ed8-a1f6-5cde480d7a9f",
        "cursor": {
          "ref": "a558aea6-c276-4cfa-9366-c1ae75aab968",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "822830e3-0c44-47a0-9436-a5cbb9543baf"
        },
        "item": {
          "id": "c2fad074-6390-4ed8-a1f6-5cde480d7a9f",
          "name": "did:invalid"
        },
        "response": {
          "id": "6646cd33-34fa-4dca-b36d-77708cae1504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2fad074-6390-4ed8-a1f6-5cde480d7a9f",
        "cursor": {
          "ref": "a558aea6-c276-4cfa-9366-c1ae75aab968",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "822830e3-0c44-47a0-9436-a5cbb9543baf"
        },
        "item": {
          "id": "c2fad074-6390-4ed8-a1f6-5cde480d7a9f",
          "name": "did:invalid"
        },
        "response": {
          "id": "6646cd33-34fa-4dca-b36d-77708cae1504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ca6b27-3628-4f40-bf09-e85a6a4508cc",
        "cursor": {
          "ref": "be548808-3efd-4f9f-b123-64c41750a739",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d8afd6cd-9d2a-4c85-99cf-40e1abac65b5"
        },
        "item": {
          "id": "32ca6b27-3628-4f40-bf09-e85a6a4508cc",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fc89a1c3-7781-4179-9b42-444136c05c05",
          "status": "Not Found",
          "code": 404,
          "responseTime": 709,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d9f1fd-dccf-4862-a786-9ae814447b48",
        "cursor": {
          "ref": "ac618b72-6b20-4e9f-94b3-6bf21ac0b207",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d992338a-04cb-4fed-a625-00f472ffdf31"
        },
        "item": {
          "id": "49d9f1fd-dccf-4862-a786-9ae814447b48",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f04eede8-3d3b-46fe-8d9f-e6a38cdf4657",
          "status": "Not Found",
          "code": 404,
          "responseTime": 587,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c0ed66-6950-408f-90be-1fd8f8f45001",
        "cursor": {
          "ref": "706d7774-7cb7-4218-bfc4-ae3b7dd17744",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9c9decd3-8e40-459a-8e32-f66adac707be"
        },
        "item": {
          "id": "59c0ed66-6950-408f-90be-1fd8f8f45001",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "91f9ffd5-8fde-42e6-bf9b-909a7f8f01c1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd1326a-56ce-4e7f-bbe1-f9ccf32e4605",
        "cursor": {
          "ref": "05515b97-1088-4818-a1a0-d9764bbb8b47",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9d28a916-b2a1-4875-8942-1ac979152df3"
        },
        "item": {
          "id": "fdd1326a-56ce-4e7f-bbe1-f9ccf32e4605",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "bf7777ab-16bf-4dde-9ab2-b94b224ee2bd",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 577,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd1326a-56ce-4e7f-bbe1-f9ccf32e4605",
        "cursor": {
          "ref": "05515b97-1088-4818-a1a0-d9764bbb8b47",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9d28a916-b2a1-4875-8942-1ac979152df3"
        },
        "item": {
          "id": "fdd1326a-56ce-4e7f-bbe1-f9ccf32e4605",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "bf7777ab-16bf-4dde-9ab2-b94b224ee2bd",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 577,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47653842-6b50-474d-a17f-17f76d84a8a5",
        "cursor": {
          "ref": "328556cc-1afb-43e9-aa92-0072c9c316d4",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f7b44abd-e314-452f-aaa9-4450e40ec64d"
        },
        "item": {
          "id": "47653842-6b50-474d-a17f-17f76d84a8a5",
          "name": "identifiers"
        },
        "response": {
          "id": "d2865eb5-3763-4008-8300-886064ce9122",
          "status": "OK",
          "code": 200,
          "responseTime": 873,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac05e78-1eea-4595-98e3-fb8326240b64",
        "cursor": {
          "ref": "166efb45-8976-42e6-b17b-b682007a6c93",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "856ac081-fe1e-4430-b84c-938d3fe6994d"
        },
        "item": {
          "id": "2ac05e78-1eea-4595-98e3-fb8326240b64",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d4430305-1130-4ec1-ba8c-bbc2f47fc56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac05e78-1eea-4595-98e3-fb8326240b64",
        "cursor": {
          "ref": "166efb45-8976-42e6-b17b-b682007a6c93",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "856ac081-fe1e-4430-b84c-938d3fe6994d"
        },
        "item": {
          "id": "2ac05e78-1eea-4595-98e3-fb8326240b64",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d4430305-1130-4ec1-ba8c-bbc2f47fc56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003d3c0f-31a8-4180-ac4c-89d57a1b7497",
        "cursor": {
          "ref": "a397146d-cc56-41ec-8ffb-c9590e094873",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "12ae5c49-fba4-49f6-b0e4-40ca32e9dac7"
        },
        "item": {
          "id": "003d3c0f-31a8-4180-ac4c-89d57a1b7497",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6169c5a9-c953-4728-83e7-2ec71519194e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958e716e-a766-405a-9bf3-b3e3c3bf58c0",
        "cursor": {
          "ref": "c4c1796e-fbc2-47ff-99fb-4e15e2028ee9",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "08dd2ec8-101d-4709-9588-188e80bcf272"
        },
        "item": {
          "id": "958e716e-a766-405a-9bf3-b3e3c3bf58c0",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a39a344a-d8f1-4f87-8942-311c95cc587e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c3fe1f4-5bc0-4635-8ea5-63c6a57bef4c",
        "cursor": {
          "ref": "92827f5a-f165-4728-8110-81fce22d7dc0",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1da9e89f-67c0-4ff5-a146-9d91f4e85fc8"
        },
        "item": {
          "id": "5c3fe1f4-5bc0-4635-8ea5-63c6a57bef4c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9954f638-2e6f-4c86-876b-8573a3b67623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c95296-c97e-4dd2-b709-d2d7c4f27240",
        "cursor": {
          "ref": "f95d69f1-7606-4f8d-b3a8-ee74046c6a77",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "64e4011e-913b-4d29-897e-5837b5681d90"
        },
        "item": {
          "id": "21c95296-c97e-4dd2-b709-d2d7c4f27240",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e36f68d3-8857-42e4-a310-c1f146d5010f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7637b6-c9de-40a3-a05e-fb88c354f132",
        "cursor": {
          "ref": "d3660622-f38b-4164-b735-6d4b2b621707",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e16b1ec4-faaf-4db8-af82-b0d5c49463a5"
        },
        "item": {
          "id": "6f7637b6-c9de-40a3-a05e-fb88c354f132",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a175a1d2-db9c-4740-b767-744183c78e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15510379-79a5-4c2d-8d78-59557d958b34",
        "cursor": {
          "ref": "5a79a98a-0c3c-4c52-8f57-73ce0b7caf31",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5b3eb0c2-1318-45a6-815c-25688b5429cc"
        },
        "item": {
          "id": "15510379-79a5-4c2d-8d78-59557d958b34",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "13bd21fb-64c8-4c94-926c-6d8eedbcfef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fada118d-ac95-437a-86a1-5b64088296e2",
        "cursor": {
          "ref": "5f0589ef-dff3-402a-832f-5118aa6f9ef6",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "dc6e245d-2927-4748-9a1b-0ef6d6f13948"
        },
        "item": {
          "id": "fada118d-ac95-437a-86a1-5b64088296e2",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3792c23c-91e2-4624-b768-6d90e3311432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1028,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635b9f2a-a62b-4926-8925-aca431c0c9c3",
        "cursor": {
          "ref": "3df97c1c-5df5-4828-af62-e20087b28139",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d763bb68-d784-410a-b2cd-2768673193d6"
        },
        "item": {
          "id": "635b9f2a-a62b-4926-8925-aca431c0c9c3",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6932ef27-802d-441d-a381-3f4b8e42913e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 829,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8be508-804b-49ea-a6da-c96d09456679",
        "cursor": {
          "ref": "33666e33-eadf-4287-bccc-a4dcbeeba55e",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ab780105-a0ce-4325-a167-495dee02abaa"
        },
        "item": {
          "id": "fd8be508-804b-49ea-a6da-c96d09456679",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "90b88619-d6b5-4d8e-9dcb-ccea113dcaab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0bed68-5ee0-4bf0-ae07-20fbaa8c4cb2",
        "cursor": {
          "ref": "10bc9606-7972-4db3-910b-1813f69867f5",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ae958075-9fed-4627-b0e2-f19744dbcb4c"
        },
        "item": {
          "id": "3b0bed68-5ee0-4bf0-ae07-20fbaa8c4cb2",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4e7ace70-4657-4e4e-ad94-39ecb035a6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd9bbcc-a385-40a4-8443-cf15e786a159",
        "cursor": {
          "ref": "48d1f0d1-b6f7-4a5a-a794-96626a4a8f7b",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "feaebbeb-7474-4af2-9e55-e5902ffff76a"
        },
        "item": {
          "id": "6dd9bbcc-a385-40a4-8443-cf15e786a159",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e0c2ae52-043a-406f-bd89-e2acb2f2b5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 962,
          "responseSize": 699
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17080328-29f1-4107-a198-c8ecdf9f43a0",
        "cursor": {
          "ref": "1d6a0b10-2cc4-407a-99c4-5bb63d6adc32",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e0545e91-c8f1-42b0-b7e1-25d41399756a"
        },
        "item": {
          "id": "17080328-29f1-4107-a198-c8ecdf9f43a0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6ab6eda4-1c5c-4dde-bdce-3dedb0086a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 839,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626dd85c-85fd-42d8-968f-5a5afe5053ca",
        "cursor": {
          "ref": "b3fefaa2-28d5-4517-b9e8-a1acb1fa98b7",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "41d15f88-6e8b-4bdd-afb5-508b9326d4f0"
        },
        "item": {
          "id": "626dd85c-85fd-42d8-968f-5a5afe5053ca",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c6c573eb-ba98-4141-8bc3-a08a22fb79ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 884,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18225b2d-1e9e-4084-ad15-aca9447d572c",
        "cursor": {
          "ref": "89b67138-709a-4cbb-86ef-8c1d99a97b7c",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "213713ae-0e03-4189-b5e4-e3ecfa974d14"
        },
        "item": {
          "id": "18225b2d-1e9e-4084-ad15-aca9447d572c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f64b533f-ac5b-4a25-904b-caedca5abcd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 947,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788972c2-68cd-4cc6-9a22-472a0e491712",
        "cursor": {
          "ref": "90fd2d70-4c22-4a90-b153-6dbd4d9e3bde",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b6d4bfa1-6720-4df8-92c8-6e6b76173e11"
        },
        "item": {
          "id": "788972c2-68cd-4cc6-9a22-472a0e491712",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "95a4e8eb-f0d0-41e1-8910-cfdfcc002e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d3edcd-5c41-4e8f-a3f4-3031a466a544",
        "cursor": {
          "ref": "560327ef-a2b5-42da-bea7-c232c8edd326",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f8cc6fa7-23fb-4026-87d0-71e91670c92c"
        },
        "item": {
          "id": "e0d3edcd-5c41-4e8f-a3f4-3031a466a544",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9322e8d8-3b0c-43f8-abe0-dea1a7760156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671b2ca3-611c-44c3-bf56-4bdf7e6acdc2",
        "cursor": {
          "ref": "193bef51-b0e2-4341-88d6-547704037e1a",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "15a9994e-272e-4757-ba85-df47921ed6dd"
        },
        "item": {
          "id": "671b2ca3-611c-44c3-bf56-4bdf7e6acdc2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "828dd751-1ba0-413b-8be3-9053bb86a917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40bca01b-0b56-4ba2-a59b-a720ec9cf3c5",
        "cursor": {
          "ref": "c7606042-e1bc-46ad-88df-deafe5527cc8",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "efb1fc3d-cc63-4415-8d82-1c462c2bbd1c"
        },
        "item": {
          "id": "40bca01b-0b56-4ba2-a59b-a720ec9cf3c5",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4be8b3b1-9b5c-4760-a28a-6b700b2ceb0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530d40b2-298e-4d84-b336-4fd298c8a8c7",
        "cursor": {
          "ref": "01a2fad1-c309-433b-9c88-faeb9077c1c7",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "56922983-c19c-4d53-8429-f32889990a7c"
        },
        "item": {
          "id": "530d40b2-298e-4d84-b336-4fd298c8a8c7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "fd37723b-4783-4e42-8619-bc4d207b8996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 888,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e20b2a-0f6a-4da9-a7c0-6087be5cf442",
        "cursor": {
          "ref": "9208dc9d-a8ed-46fe-8d4a-4776a2a485c4",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f44bd261-08aa-4e79-ba74-09ce16e7998a"
        },
        "item": {
          "id": "81e20b2a-0f6a-4da9-a7c0-6087be5cf442",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ca565195-ac97-4cf3-a685-1a0a04564c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1004,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8caf27-f8af-4653-b436-6815da33db8c",
        "cursor": {
          "ref": "aacd4140-1ff7-4fcb-8114-c3aab4d47130",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5c484bca-4f74-45c6-8b25-d7da8593ca5a"
        },
        "item": {
          "id": "0f8caf27-f8af-4653-b436-6815da33db8c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4090f3f1-125f-49a6-9fe9-20030c6ad1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 919,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d19a98b-437e-4e34-918d-e8338ae716e6",
        "cursor": {
          "ref": "ff896c09-b34f-4e4f-b037-6815b2a0b350",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c9000dc9-1871-4f98-aab1-0ef20f1985c4"
        },
        "item": {
          "id": "7d19a98b-437e-4e34-918d-e8338ae716e6",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9fb1586e-d128-4fca-adeb-b6eaaeeff193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 878,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113dac3b-45cb-4225-949f-470c6de711c5",
        "cursor": {
          "ref": "2e36bae3-1fe2-447d-b5f6-10363a488078",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d216ef6e-f7c8-4bd7-a4aa-5c3a7662b056"
        },
        "item": {
          "id": "113dac3b-45cb-4225-949f-470c6de711c5",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d646ad0a-d721-4888-ba9f-dc8b30f8075e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47610acf-0a8b-46a6-9ca3-687e425e1ce9",
        "cursor": {
          "ref": "83ce0a14-180e-4eef-9d9e-5034994523e0",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2d6121e6-c309-425c-b0b5-df09ed9be897"
        },
        "item": {
          "id": "47610acf-0a8b-46a6-9ca3-687e425e1ce9",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "392f681c-836b-4f9f-9154-f547e0049b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac0799e-0d8e-4a6b-93dd-18f05a49c7e9",
        "cursor": {
          "ref": "8ff0d039-9ac4-41a3-a8e0-c50180b630e8",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a8091836-9875-416a-be3d-a028b92494cb"
        },
        "item": {
          "id": "cac0799e-0d8e-4a6b-93dd-18f05a49c7e9",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "3c889e3d-f231-47ac-a9c1-1c58c531b29e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93263214-3f01-4d78-87cd-f76ae9314c2f",
        "cursor": {
          "ref": "775779ca-18fc-4f4e-9c09-3906ace5ed5e",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "107c6a72-5aac-4745-a8c7-3870e3c7bd79"
        },
        "item": {
          "id": "93263214-3f01-4d78-87cd-f76ae9314c2f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "29a1db8e-e3fc-4deb-bf00-143f9ca9aac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9074954-0507-42c6-845f-3321c8bca310",
        "cursor": {
          "ref": "fda8af71-7c26-45a0-af1d-1f8a26ffc876",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a0be984d-f01f-4aeb-8d6d-cdd7e74644fd"
        },
        "item": {
          "id": "e9074954-0507-42c6-845f-3321c8bca310",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a1f5ea75-feca-4006-800b-5cc0b3dfaaaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ff181f-9c76-444f-992d-1d2b9ffb3471",
        "cursor": {
          "ref": "b175e2a7-6985-48ed-a6fc-b0f1a6e24b7e",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "07db5cb1-1807-420b-9ed3-75c3f6d18ebf"
        },
        "item": {
          "id": "92ff181f-9c76-444f-992d-1d2b9ffb3471",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "cea92192-c8af-4e8d-81db-3185b100820f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e642147b-ed9b-4984-99b0-051b82a4ab74",
        "cursor": {
          "ref": "e1e88a19-a96e-414b-bc5c-b6c5bbace79f",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3b481504-9741-4c7c-b0ed-4bbab31e9ba3"
        },
        "item": {
          "id": "e642147b-ed9b-4984-99b0-051b82a4ab74",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "dd387737-8b37-44fd-b5dc-e7b75efa2e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad2de06-eb71-4c0e-a2a6-4dfcdf327807",
        "cursor": {
          "ref": "6a3dfbb0-213f-4705-bea7-9b54a42e5695",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "610a986e-39bd-4830-a52d-81ff24be50b7"
        },
        "item": {
          "id": "5ad2de06-eb71-4c0e-a2a6-4dfcdf327807",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b20c2d64-0737-42ae-acdc-f4274c594c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2248786c-5845-48c6-95d6-49839a9e1a31",
        "cursor": {
          "ref": "ab98f546-f015-44fc-9126-1e8fafc7710f",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "44a66dcf-cd99-4696-b45f-2a44a33e9c3a"
        },
        "item": {
          "id": "2248786c-5845-48c6-95d6-49839a9e1a31",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "52107f0c-fe8a-4c8f-abae-64d28e2abfb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e8b439-97fc-4f7e-ba65-a6e879be83c8",
        "cursor": {
          "ref": "384afb1c-c19a-4c2c-b1a6-d3aaada731bd",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7ed21f5d-2bf8-4ab3-a1ce-d1e947ae21be"
        },
        "item": {
          "id": "56e8b439-97fc-4f7e-ba65-a6e879be83c8",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6ac006e3-8aea-446a-97d9-c7083893b775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4201561-fcdf-4e9d-a77d-f196d3c649b7",
        "cursor": {
          "ref": "adf9dcd6-5a19-4b9b-a3f1-644d1a2662a6",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b932fffa-11a1-4c65-96f2-0eaab5694ad8"
        },
        "item": {
          "id": "c4201561-fcdf-4e9d-a77d-f196d3c649b7",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ed4cdcf8-6736-4a34-81d8-a22d5b7c23a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a23e36a-6f0a-432a-aefd-58e3d80fab70",
        "cursor": {
          "ref": "356b6f1b-1430-4394-aabf-9ee201be7c7b",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e3040718-6422-424b-b7ad-02ab785707bf"
        },
        "item": {
          "id": "0a23e36a-6f0a-432a-aefd-58e3d80fab70",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b1261d53-93a8-450e-b583-fa44e92d4d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed1ef3b-d5a0-4c40-b1ea-1994b6a84c4c",
        "cursor": {
          "ref": "cc5ef5e9-5bbb-41d5-9fb1-6117b6f3aad0",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "298481f0-be89-4b4f-84a6-9914c3304bb4"
        },
        "item": {
          "id": "5ed1ef3b-d5a0-4c40-b1ea-1994b6a84c4c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "bbd93a56-194d-4941-94dd-21a372849348",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 685,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cecac31e-7e8f-4eca-88da-e9a4c5a94a68",
        "cursor": {
          "ref": "ff677420-54bc-4a43-968e-354a1e3878be",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "57c06b14-6ca6-4cd7-9f08-13282cd7408b"
        },
        "item": {
          "id": "cecac31e-7e8f-4eca-88da-e9a4c5a94a68",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "fd7a68bb-9951-4c94-987a-6b34378d4178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1058
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d65f1e-f90c-4711-83c1-9efff870b774",
        "cursor": {
          "ref": "47083a5a-0e3f-4419-a504-08774190df36",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d62df3c6-c5eb-4c62-b8b0-ecb00bea68ca"
        },
        "item": {
          "id": "53d65f1e-f90c-4711-83c1-9efff870b774",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8dd2cfc2-c640-47d7-832a-0f4e5d4bc992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b001ce-1b8c-4ae2-8b35-a8785b4e7b96",
        "cursor": {
          "ref": "a612d129-e662-4479-a284-5ac4a83ba54a",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ab46ff57-0af1-4de6-929a-42a48b2fb016"
        },
        "item": {
          "id": "72b001ce-1b8c-4ae2-8b35-a8785b4e7b96",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c13848dd-7fb7-4158-8e23-95b5aa019beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29957ba-f7b3-4841-a9e8-d06d7e348e26",
        "cursor": {
          "ref": "20aec5a6-e2eb-4dcd-8791-bbb0e3570de1",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d34f71a2-6129-4455-85dd-575b6a8dc827"
        },
        "item": {
          "id": "a29957ba-f7b3-4841-a9e8-d06d7e348e26",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "df86b11e-d89c-4a1f-b3a8-b9bf9e492e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac30532-9136-4e42-9dca-eb9bd7b6905a",
        "cursor": {
          "ref": "2e742b5f-5caa-43cf-8b3e-648fda57e66c",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "fe36bff1-f55f-430f-bd64-2ec3500f450a"
        },
        "item": {
          "id": "6ac30532-9136-4e42-9dca-eb9bd7b6905a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0bc00552-faad-4011-93e7-be736b70e3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89be4ca-912b-49e6-b065-7c6111b5d8cd",
        "cursor": {
          "ref": "5df0f9df-59b4-4e52-8bb1-06c3f5a1782e",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "31b717ec-a3cb-4760-a7a5-1b2b9e792f4f"
        },
        "item": {
          "id": "b89be4ca-912b-49e6-b065-7c6111b5d8cd",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "49d8f4fc-a62f-45af-8b41-ed2a22378b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5e2439-4888-4e8d-bbd3-7f22851056ab",
        "cursor": {
          "ref": "dc7a3d20-7617-468e-9de6-64a2987b6b9e",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2f5eb5cf-ec78-4b98-84c5-ed02f0dba622"
        },
        "item": {
          "id": "ef5e2439-4888-4e8d-bbd3-7f22851056ab",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "828e6d4f-56b5-4093-be11-c9b4f68d479d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 672,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23b0ed7-420f-4f6b-b002-9c989fa50915",
        "cursor": {
          "ref": "a9303bf1-255b-4d9f-8558-c1fc7705374f",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "cb745d99-2fba-4dac-8406-1fd5cc43f6c1"
        },
        "item": {
          "id": "b23b0ed7-420f-4f6b-b002-9c989fa50915",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3b807e63-b0af-402d-9bad-94265f1dc01c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 787,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431918c1-87c3-40dd-ba77-265517fccd84",
        "cursor": {
          "ref": "73ee4e40-0aac-40e4-8a97-67d1a7812d04",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "757c071b-dde3-4bda-a79f-39dbf0d36442"
        },
        "item": {
          "id": "431918c1-87c3-40dd-ba77-265517fccd84",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5804b295-c77d-483a-a7d7-33bf111654ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7b9851-1f4b-4c71-9b06-0fc7a3c2e149",
        "cursor": {
          "ref": "07e9c5c2-c652-4e28-822e-c763263e4d7c",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7a892768-170b-4fb9-9eb4-6589eec6f28f"
        },
        "item": {
          "id": "be7b9851-1f4b-4c71-9b06-0fc7a3c2e149",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f95a73a8-9b85-4d7f-ab95-ada8689dcef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f206d47-bb5a-4ac5-9a64-d6d6c74be05e",
        "cursor": {
          "ref": "8977da3d-40d1-4bea-9c0a-5ad9da8c5453",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d478064b-dca1-41e0-a087-832147eb7935"
        },
        "item": {
          "id": "1f206d47-bb5a-4ac5-9a64-d6d6c74be05e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f9aab802-c7e4-4642-8abd-e9b587eb94eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04abe813-2ade-47e4-89c0-4be88052a671",
        "cursor": {
          "ref": "423e45e0-26f3-44d7-8aa9-5032d6159605",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a85207ee-2944-480d-9844-09108dd1a9c9"
        },
        "item": {
          "id": "04abe813-2ade-47e4-89c0-4be88052a671",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "112e4d0c-d70f-4534-aea1-374d3cfadbdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc47649d-9389-47cd-9bac-c617d43989bc",
        "cursor": {
          "ref": "a3bbde37-7a25-40be-a1d2-e2211da72c86",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d300b509-fa8b-4e12-a5ce-a94983175c07"
        },
        "item": {
          "id": "cc47649d-9389-47cd-9bac-c617d43989bc",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4da9fea6-8b5d-4cd2-a4cf-62914fa43286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf347b4-74ed-4460-9c95-59e4554daf5e",
        "cursor": {
          "ref": "c8c3e485-8618-4c75-8066-53d6a11b6f1a",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "df3a5b25-b2b4-48eb-8581-2153a5e01218"
        },
        "item": {
          "id": "bcf347b4-74ed-4460-9c95-59e4554daf5e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c3580b1c-6a40-4135-bd84-381f1709688e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243d2cac-dd18-40e2-a718-3c9912b7116d",
        "cursor": {
          "ref": "bb051b5d-b0e4-4785-b668-173f9337dba1",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "01684fd9-4c17-4e9c-8a00-be1a75a02243"
        },
        "item": {
          "id": "243d2cac-dd18-40e2-a718-3c9912b7116d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4d2e47d7-a6a2-4165-bdb0-5e1bd7e1cafd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee87dd5-fd71-4c67-98d1-13642eaf3f29",
        "cursor": {
          "ref": "6911cf04-683b-4337-81e5-69685ff3f51f",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4bcb9b05-597b-4899-9fb7-b557aa48eef4"
        },
        "item": {
          "id": "8ee87dd5-fd71-4c67-98d1-13642eaf3f29",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "19e7dea4-863a-48fe-bcde-b5c8cb36f891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ace54d7-7b2f-4e4a-84e1-c805607048a3",
        "cursor": {
          "ref": "b34fcdff-acd8-498c-909c-bdc6b0c7300d",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7d10c880-701e-4686-bfd7-25bba303a356"
        },
        "item": {
          "id": "2ace54d7-7b2f-4e4a-84e1-c805607048a3",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "7e06c2b1-01f4-4162-a679-974bf8da5442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a40fef-c7d7-437f-b9d6-1a2516d8a9ce",
        "cursor": {
          "ref": "49924e8c-ff71-4050-906c-83dd35ddee10",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2455ba70-5222-40c9-ab6f-b48282cbc2e7"
        },
        "item": {
          "id": "f3a40fef-c7d7-437f-b9d6-1a2516d8a9ce",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "28d742a6-1552-4d89-8c5a-c220c8d39c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92fe55ee-5373-4733-b986-01487913a4b9",
        "cursor": {
          "ref": "3762824c-941d-44f8-bf38-9d476eaadc61",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1adc7743-97f2-4f92-ba68-e02c10696a88"
        },
        "item": {
          "id": "92fe55ee-5373-4733-b986-01487913a4b9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e628c660-7441-464b-a0c4-cbef5f28b22f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f33c211-e265-400a-a3eb-41eaec72440d",
        "cursor": {
          "ref": "771f7622-243d-474f-8fc7-d8b9bf8ae531",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "30408f8b-baca-41aa-add5-735ab9ca5740"
        },
        "item": {
          "id": "1f33c211-e265-400a-a3eb-41eaec72440d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "bdc73214-3449-4505-a4b1-c10657dc9240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be06db6-c4d5-4505-989b-3208efd38938",
        "cursor": {
          "ref": "9b5d5d82-9664-470d-848d-2445dea7543f",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c6195a55-d507-4b3c-9f2e-dd9c70fb139f"
        },
        "item": {
          "id": "9be06db6-c4d5-4505-989b-3208efd38938",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4d8aaf5a-6aee-438b-bc5d-934355b6cc83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "393b51cc-e4cb-4897-a542-a8ef941b5b20",
        "cursor": {
          "ref": "dc32ff7e-5889-47bb-8f1c-f7a3c2b8b552",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d77c6096-6e1f-4ac9-a371-14b5e09d5844"
        },
        "item": {
          "id": "393b51cc-e4cb-4897-a542-a8ef941b5b20",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "1f46a723-91ff-4fc6-a1c7-6ea0c451ec6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bbb9abe-5b0a-46ab-a1ad-a03647e41670",
        "cursor": {
          "ref": "fb694979-7c7c-4a1b-b127-6646ec9a0c40",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9f11cc39-dfaa-4323-a103-5f4efa4b43de"
        },
        "item": {
          "id": "9bbb9abe-5b0a-46ab-a1ad-a03647e41670",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d1b5b2e5-1ad5-48ef-acfb-d4053aa6dac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ae59fe-f6fb-4c0c-a955-01084133e509",
        "cursor": {
          "ref": "6d58476f-e3dc-4e8c-9929-4433741f9f6d",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c129349c-fa4b-4495-9073-87971523a414"
        },
        "item": {
          "id": "f5ae59fe-f6fb-4c0c-a955-01084133e509",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5c7acab6-bf60-486c-b88b-f06032099f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974036e0-91c6-4c84-b4c7-b2430a4782da",
        "cursor": {
          "ref": "9578d7ad-1465-459b-ac53-7d7e829459b4",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "10571bf1-a84d-42df-89bb-c2926bae8089"
        },
        "item": {
          "id": "974036e0-91c6-4c84-b4c7-b2430a4782da",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "72815902-090e-4cbf-a620-8ea8396aac75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99383813-6ff2-45c9-888a-d46e8e043e69",
        "cursor": {
          "ref": "a8dcec9f-00f7-4154-8140-a7691bb8b183",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "382ef40a-5063-4372-bc10-18de6c7dc996"
        },
        "item": {
          "id": "99383813-6ff2-45c9-888a-d46e8e043e69",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9dbb636e-367b-4e6c-8dd4-11ac3d708ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c8a2c2-7d18-4422-9547-230a6b2ea180",
        "cursor": {
          "ref": "72f5ec11-b98a-4a7b-80fc-8d62255dbad8",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a17a851d-afb6-497b-9d4d-b0b46f29830b"
        },
        "item": {
          "id": "63c8a2c2-7d18-4422-9547-230a6b2ea180",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "fa7a41f0-1451-4137-9c0b-9ab861cea85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b2bc17-874a-4646-9492-4caad893f3fd",
        "cursor": {
          "ref": "5b8d2efe-8692-4fc7-abc8-02a99ea0769a",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f5d7174e-01a2-49ab-a541-1c71d1d0cdb3"
        },
        "item": {
          "id": "52b2bc17-874a-4646-9492-4caad893f3fd",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f6fc1f1c-2f2c-4e13-a164-77ee53f6dee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7eec58-8c32-4409-bbd9-fe4fc53802f9",
        "cursor": {
          "ref": "eab74135-f07a-47e5-8496-87aaa3c5f2da",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "49e3f9f6-8c32-432d-ab4e-a3794999d6db"
        },
        "item": {
          "id": "fb7eec58-8c32-4409-bbd9-fe4fc53802f9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ff852e89-535c-4a4d-995c-f7b0358d1f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15f35f3-6d1a-4c2f-be3e-71b85515f289",
        "cursor": {
          "ref": "f60303e3-abaf-48bb-9102-8f3e9efbfd94",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d9f312d3-4440-4f5d-b44d-9addf36ac351"
        },
        "item": {
          "id": "c15f35f3-6d1a-4c2f-be3e-71b85515f289",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "019b5429-ebf5-4178-b975-c07eeb06dfef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43514e4e-3a79-40c7-9dcc-fbf3701da583",
        "cursor": {
          "ref": "1f8ed467-9041-48bf-9573-62921f080ee7",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "fab4164e-d8d0-4e3a-88af-c8c456c35980"
        },
        "item": {
          "id": "43514e4e-3a79-40c7-9dcc-fbf3701da583",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e72d4103-812b-422a-8a0e-1334ebb0409c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404a2fc2-1754-4e82-8f8f-855e3747b445",
        "cursor": {
          "ref": "39e18c8a-c13c-409e-a62d-437f2d9cc20c",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e0c07b9a-6ae8-43dd-a110-2388d629ece6"
        },
        "item": {
          "id": "404a2fc2-1754-4e82-8f8f-855e3747b445",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f9f5e8e0-24e7-420a-8bf1-fad4bee0359c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b684ef-6fac-4360-a2ac-6911a0f1b240",
        "cursor": {
          "ref": "654ef552-27f8-48f7-a9d4-5695d114b903",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "26741acd-2ee2-4eb9-8e6a-820ec43d2f22"
        },
        "item": {
          "id": "d0b684ef-6fac-4360-a2ac-6911a0f1b240",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b90474ab-b5c2-4614-bab8-49632e11f856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2156cf-3962-426a-8817-65c9c88ddad2",
        "cursor": {
          "ref": "53f6ff96-231e-47a4-a1ae-82096a2a64ce",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "2985ce63-7fa4-4dca-bae3-99bcfcbfb9c1"
        },
        "item": {
          "id": "dc2156cf-3962-426a-8817-65c9c88ddad2",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d9ba54af-0627-45f2-8e08-c07b1ce8ad92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2dd574-ddf5-4984-9b8d-b0afbb71ebfd",
        "cursor": {
          "ref": "912f2324-88c4-4c32-8791-ee023239e092",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "931d062e-6bc7-4e0d-9326-39d823feccb9"
        },
        "item": {
          "id": "eb2dd574-ddf5-4984-9b8d-b0afbb71ebfd",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c05f9479-835f-4a4d-8393-b68a8a17c9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb572d12-b4a4-4874-b82f-a35a6344288a",
        "cursor": {
          "ref": "eaebba06-42de-4fbf-ba72-f9d1095542c3",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cd8c2abf-0ff1-4439-864b-5cbd1a148bbf"
        },
        "item": {
          "id": "cb572d12-b4a4-4874-b82f-a35a6344288a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e53e0afb-a3f9-4e58-a6ea-8402a3d6a247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38a7b5a-0614-4246-9e1b-fbcce15748b7",
        "cursor": {
          "ref": "d61c711e-22a5-4912-a7bc-5fbdc91e8b31",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "cc5dc04a-4d66-498b-abb2-14988d63af70"
        },
        "item": {
          "id": "f38a7b5a-0614-4246-9e1b-fbcce15748b7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "169b7b32-4e23-4300-8906-95b16c1eed54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31331f81-0dc4-47ff-b22c-f0fd881b9d2d",
        "cursor": {
          "ref": "f5ea20c1-499c-4f68-a34a-2e46e75f2042",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b4aa6270-0994-49ea-b5f1-428f2bbe8ccf"
        },
        "item": {
          "id": "31331f81-0dc4-47ff-b22c-f0fd881b9d2d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5c7930a0-0c74-4336-8de0-e2d6987d5349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229d4a13-3e18-42c4-a77a-d5cda586cbfa",
        "cursor": {
          "ref": "01f05889-c8f3-42bc-8cd6-3333559d48da",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0200897e-6577-444a-9a0f-cf46097a9375"
        },
        "item": {
          "id": "229d4a13-3e18-42c4-a77a-d5cda586cbfa",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4b4b2ba9-4884-4f86-9ab4-cec30baea55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a70656-3a1c-49f1-b6a7-6f497814f6a2",
        "cursor": {
          "ref": "32b73412-b17b-4245-b152-3a7a8312d994",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "918d40e5-8711-49f1-ae99-79c124fc2648"
        },
        "item": {
          "id": "b9a70656-3a1c-49f1-b6a7-6f497814f6a2",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "862314f4-83fc-402b-8215-51312f7d44e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238dfefe-af83-48ae-9ab7-7754c2d1b16d",
        "cursor": {
          "ref": "ef15f762-d9cb-494e-88b5-a7b2c4751f68",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "52ba6e3d-764a-45a0-9f34-89fe13b33ec6"
        },
        "item": {
          "id": "238dfefe-af83-48ae-9ab7-7754c2d1b16d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "82341b7f-4c89-43d7-b219-e716a76e74b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6aaf50-5b65-4b1c-905a-cb61e3279470",
        "cursor": {
          "ref": "d3b1db54-149a-4c53-a6ae-c348c06d8cb8",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "06537686-9536-408e-b555-84609e596fc6"
        },
        "item": {
          "id": "cc6aaf50-5b65-4b1c-905a-cb61e3279470",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "dd899d23-8509-4e60-b476-f00995aec076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1da014-fbb8-4fdb-8a80-f62ef253586e",
        "cursor": {
          "ref": "a0bce4df-b768-437f-a4f0-b343f85c742c",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6bdafbcd-db74-4d60-a15a-b7e3f78c85bd"
        },
        "item": {
          "id": "8c1da014-fbb8-4fdb-8a80-f62ef253586e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "10e98b6a-86c7-4005-92e2-04d8c6eb0848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e37554-5f92-4a29-b519-845ee0e344b0",
        "cursor": {
          "ref": "0b2f0d35-911b-401a-98b2-6a25419eaf2a",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "148a0a7d-288e-44c4-b160-161a6e7f07b0"
        },
        "item": {
          "id": "77e37554-5f92-4a29-b519-845ee0e344b0",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "97ea7db2-9337-428d-b8aa-dba4715d0288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 842,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d58bd9-6629-4e4d-912b-4d6801827e49",
        "cursor": {
          "ref": "51d476f9-8c64-415f-a9ff-97460192a22b",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "bdb21eb4-1eda-44a2-bff5-6e14a8b8f05f"
        },
        "item": {
          "id": "c2d58bd9-6629-4e4d-912b-4d6801827e49",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7844a416-af71-4587-829f-2066c2230727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 887,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ccd5bc-1769-4829-8817-0fcd4a62f8bc",
        "cursor": {
          "ref": "ec99372a-005e-4f3b-b3ab-2e2362d343f7",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1b920096-af52-4b69-a622-83326aaac69d"
        },
        "item": {
          "id": "d8ccd5bc-1769-4829-8817-0fcd4a62f8bc",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "bc84099a-3dc9-4da8-a08d-63319334d89d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcba23c0-3880-4f3c-8c39-5e4891800978",
        "cursor": {
          "ref": "3714438e-c0fb-4ff5-85b6-0494a127ad97",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1f145fc4-5f7c-4d3c-8603-19262536c6a1"
        },
        "item": {
          "id": "bcba23c0-3880-4f3c-8c39-5e4891800978",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6a956b4c-003b-4d56-8a47-ae301e28211b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c70ef2-f93c-4d75-b106-79148def056f",
        "cursor": {
          "ref": "7f4b4b34-8b14-4081-8ed1-6c1b03a89866",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "8beee757-4c57-4aba-aea0-509e9cf2675b"
        },
        "item": {
          "id": "b6c70ef2-f93c-4d75-b106-79148def056f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8eb43082-8f4e-4430-848b-0f89e890566a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97fcfe8-021a-4b53-921e-4188a54a286b",
        "cursor": {
          "ref": "57bbe2e0-10fd-4cce-8ebd-608f67df4886",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "182aa97c-965e-4263-acc2-5187c9f81046"
        },
        "item": {
          "id": "d97fcfe8-021a-4b53-921e-4188a54a286b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ef781889-ab11-4cac-9f31-bb8ade50b57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00dc5579-1d6c-4ddc-8739-18c5d6001025",
        "cursor": {
          "ref": "5d4d3def-ff8f-403c-8d67-8045e7b16b5d",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d99bfe7c-5420-48f4-aa25-8dc6f48161d7"
        },
        "item": {
          "id": "00dc5579-1d6c-4ddc-8739-18c5d6001025",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9c9a64fc-f1b1-4821-a381-01331fa0b168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c3cb11-b06b-484b-894b-a2e9c3471f12",
        "cursor": {
          "ref": "765a0ed2-b516-44df-8893-33136bab11a0",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "13a15959-d602-4ed5-b99e-163b35e7350d"
        },
        "item": {
          "id": "48c3cb11-b06b-484b-894b-a2e9c3471f12",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f1c9d8e1-652e-4533-8f75-27dd7c3586c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bfc69d7-98a8-4fb0-990c-f393fb75d6b5",
        "cursor": {
          "ref": "60eb4bed-149a-4e27-85b0-aed452b82920",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1219d186-8ce3-41c0-8d13-e37cec2cb434"
        },
        "item": {
          "id": "2bfc69d7-98a8-4fb0-990c-f393fb75d6b5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "dcf6aa16-08ae-430a-be8e-e96374b3681b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5394216-40da-4c6b-959c-0a0212e33042",
        "cursor": {
          "ref": "ab8594b4-72c6-478e-aea9-2c7ccee5552f",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4d0dfc9a-1902-450d-8fa5-a2643c4d8969"
        },
        "item": {
          "id": "b5394216-40da-4c6b-959c-0a0212e33042",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "23b198bd-ab6f-4219-ae41-ef03abde6787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f55dd7f-bbc5-4b59-a5e8-8c3e284e74e9",
        "cursor": {
          "ref": "67fdf1f2-50c7-4ea1-b5fe-6be0c1e62dc3",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "962fdd0e-c3e7-42a6-9d49-fc799414ef99"
        },
        "item": {
          "id": "8f55dd7f-bbc5-4b59-a5e8-8c3e284e74e9",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "deaff48a-5647-43e6-bff4-26bf81a30dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c2890b-0a4b-4c96-884e-c77ad50d846e",
        "cursor": {
          "ref": "e2910320-5d3b-4108-8ec9-6f63ad7c45a8",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a0176de2-9a58-4990-bb0a-40cc8f05dc06"
        },
        "item": {
          "id": "b1c2890b-0a4b-4c96-884e-c77ad50d846e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c1cae0fc-ad4d-4aea-8dae-91ab491af0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ccda5b1-548c-4819-85e7-434873adf19b",
        "cursor": {
          "ref": "745aae4a-5545-4f0e-8789-de5a3bc2f69f",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "15c33de9-0c2a-4a3b-b1da-fe9da6aec088"
        },
        "item": {
          "id": "0ccda5b1-548c-4819-85e7-434873adf19b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e944788d-2603-446a-89ff-86fd50847086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 836,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce819e22-dae2-4f15-815f-8d6363d657ea",
        "cursor": {
          "ref": "5b099199-b2c6-439d-bd53-f1c9ffaf6191",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e1f58c89-302e-4c1d-ac28-085e795d8a86"
        },
        "item": {
          "id": "ce819e22-dae2-4f15-815f-8d6363d657ea",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ee6901ee-7401-441b-b18f-7ad78d8d387b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff56a192-d310-4323-b821-6542142ccb62",
        "cursor": {
          "ref": "9c95fcd8-834a-448c-81bb-17d16101474c",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "2815e715-cbb5-4cfa-b8f9-77a27c244a53"
        },
        "item": {
          "id": "ff56a192-d310-4323-b821-6542142ccb62",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "c1469fb9-3c4e-4d90-9367-ec6d982c9725",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 999,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37eeac9d-bcea-4953-a1ab-03909fcfc751",
        "cursor": {
          "ref": "9c5954bc-4533-45f7-bb95-8e7d506bd541",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "5f1db879-14d4-43be-bcfd-e42856216129"
        },
        "item": {
          "id": "37eeac9d-bcea-4953-a1ab-03909fcfc751",
          "name": "credentials_issue"
        },
        "response": {
          "id": "18a4ff3c-e7df-4348-8838-703a59bdb219",
          "status": "Created",
          "code": 201,
          "responseTime": 6553,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "6437cbb8-61e1-4ef3-a9e4-97aa9121b0b9",
        "cursor": {
          "ref": "1b485aa7-e971-4c59-836a-28851590243c",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3348f905-4fd2-4d6b-bf7c-ff67b2f31736"
        },
        "item": {
          "id": "6437cbb8-61e1-4ef3-a9e4-97aa9121b0b9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1632b6e7-1ed8-47f4-99d2-526e0bb6eb0c",
          "status": "Created",
          "code": 201,
          "responseTime": 4376,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c406a82-3b40-49d1-ab6b-84103a95b325",
        "cursor": {
          "ref": "c9c1a6c0-1f8f-491c-b365-a5edad5484bb",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "dec01094-cb1f-4ce0-83b7-607ddfa83d87"
        },
        "item": {
          "id": "8c406a82-3b40-49d1-ab6b-84103a95b325",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "150b1a07-9041-4897-a179-8f18eba1662f",
          "status": "Created",
          "code": 201,
          "responseTime": 4678,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8216d8-7761-45af-8a4f-f070add0146d",
        "cursor": {
          "ref": "9f046fd0-b8f3-4a78-9c22-5f38538d299c",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6fd29165-32c0-4bba-b134-12d6323f247f"
        },
        "item": {
          "id": "5f8216d8-7761-45af-8a4f-f070add0146d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3fc5a443-fdff-4293-a043-fac51d5ef630",
          "status": "Created",
          "code": 201,
          "responseTime": 4210,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "733b9f88-6bba-42f5-a05b-f5d7249a9190",
        "cursor": {
          "ref": "5e65c863-ca15-47e4-9eec-ed6b2a3ca5e6",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "68830587-1ec6-4e8a-a0e1-6c8cd0d93f6c"
        },
        "item": {
          "id": "733b9f88-6bba-42f5-a05b-f5d7249a9190",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "57658f96-44b4-4308-baa6-3eaecf17de71",
          "status": "Created",
          "code": 201,
          "responseTime": 4962,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "fddaac44-9a9c-40a1-8823-3e9bb13ec10a",
        "cursor": {
          "ref": "3008c8f5-33ea-421f-a8c7-a234f5684fa2",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7d172aa2-b8d1-48e5-9aca-4e564ddb2621"
        },
        "item": {
          "id": "fddaac44-9a9c-40a1-8823-3e9bb13ec10a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7091746e-757f-4524-ac0a-dde353276ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fddaac44-9a9c-40a1-8823-3e9bb13ec10a",
        "cursor": {
          "ref": "3008c8f5-33ea-421f-a8c7-a234f5684fa2",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7d172aa2-b8d1-48e5-9aca-4e564ddb2621"
        },
        "item": {
          "id": "fddaac44-9a9c-40a1-8823-3e9bb13ec10a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7091746e-757f-4524-ac0a-dde353276ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ed1f44-98f5-424e-adc0-8e9423464cda",
        "cursor": {
          "ref": "473bf5c3-8251-40c3-b957-f9237ed22a67",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "79a76615-fc4e-4657-9b6e-526d0b719d07"
        },
        "item": {
          "id": "32ed1f44-98f5-424e-adc0-8e9423464cda",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b770fb61-924c-40ac-8f15-7db8527c89dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c546ab3c-ae3c-4b9b-a305-5a0bcf32cd5b",
        "cursor": {
          "ref": "253c0e46-189e-41bc-910a-98b99764e759",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "68c34b34-cff1-464b-b93a-fa82678f299a"
        },
        "item": {
          "id": "c546ab3c-ae3c-4b9b-a305-5a0bcf32cd5b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4bdcce6c-84f3-415b-8e5e-4de978793a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b2945d-9ccf-4fb4-a5e5-aba4717322b5",
        "cursor": {
          "ref": "747cb975-0604-4d5f-b636-0f55e863bcb9",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "49f3530c-d772-4493-90c2-bceff349ff54"
        },
        "item": {
          "id": "e2b2945d-9ccf-4fb4-a5e5-aba4717322b5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "88bd9c0c-949b-4c33-82ba-2a84fd6f527a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed243178-d30a-495e-a3ce-2fc7927e5cd1",
        "cursor": {
          "ref": "0dc075a2-e8c3-423d-ba5b-e57e4ef89543",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e449793f-6884-4705-8f1b-47c1f7986294"
        },
        "item": {
          "id": "ed243178-d30a-495e-a3ce-2fc7927e5cd1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0f4516ba-ae28-4224-b9b0-c32896f4a5a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e6c538-f07d-424a-845f-bf20e27a3f8f",
        "cursor": {
          "ref": "69625fc6-14b6-467e-8e84-edfeb6074b81",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "639b1999-82db-406a-bcb2-63b9a497d37c"
        },
        "item": {
          "id": "75e6c538-f07d-424a-845f-bf20e27a3f8f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "65b96283-5e13-4309-b13e-8f7fdde4248c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13249036-62f8-4a89-ae12-fc2b586cf87c",
        "cursor": {
          "ref": "a9490d69-bcca-4830-8db3-94254f1f4475",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ec199d44-8f32-4d49-8542-f9b2126dcc0e"
        },
        "item": {
          "id": "13249036-62f8-4a89-ae12-fc2b586cf87c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "43ff430c-40ca-474d-b4b9-8c324a3af20d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677ce92e-67e1-4097-8220-55de6c790084",
        "cursor": {
          "ref": "b41f8549-a08b-4685-8ec1-d2296b5c8fa0",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "33c55a9e-7ed7-4b01-945e-9d0818e3787e"
        },
        "item": {
          "id": "677ce92e-67e1-4097-8220-55de6c790084",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "49b0ec09-0271-415b-960e-c6dc5d67a51a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2c6c82-2fa1-4968-9e9e-cb473c47c231",
        "cursor": {
          "ref": "1cef4a58-d62f-468c-a0dc-3b85a753177a",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0550bfeb-63cf-46f7-bc53-7a2ce506663f"
        },
        "item": {
          "id": "0e2c6c82-2fa1-4968-9e9e-cb473c47c231",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5862f338-6c5b-4ee6-ab57-87b3d3b8c054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98a1399-52af-401b-b6ce-69c25d1329b1",
        "cursor": {
          "ref": "a00f950a-3a95-4aa4-95f1-19cceff8bd55",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "df3bfa49-1b79-4c50-a792-d2958a79a3fa"
        },
        "item": {
          "id": "b98a1399-52af-401b-b6ce-69c25d1329b1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "423d14a2-7061-49a8-9f9b-1ad44774fb51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb9194a-bf38-48c0-aa94-e3395a78bc30",
        "cursor": {
          "ref": "76a4d515-6afb-4fe5-857b-93d61e595788",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "862aabfa-a834-4364-bf07-e34c61f75624"
        },
        "item": {
          "id": "0fb9194a-bf38-48c0-aa94-e3395a78bc30",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f3e1a60a-c4d3-46f6-af79-508682846439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65983a46-89c3-4293-9780-a641d3866d0d",
        "cursor": {
          "ref": "b2906742-4377-4be6-9abe-5c4029afd628",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0da746ea-3f5a-4e13-aa09-1f5a5921a472"
        },
        "item": {
          "id": "65983a46-89c3-4293-9780-a641d3866d0d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6ad40abd-8e1a-453b-8a41-613aaa3fc532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916d8281-bb99-40e4-a0f6-45665bcf45ea",
        "cursor": {
          "ref": "dee049fb-8416-450c-98ad-51aced1ca660",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bf4cde02-e769-46ef-be10-70497f3e80f1"
        },
        "item": {
          "id": "916d8281-bb99-40e4-a0f6-45665bcf45ea",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d7923413-392e-43cb-9648-2fffc327e740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267b7f78-6d37-4d73-8cc0-c1ca459302d9",
        "cursor": {
          "ref": "be121c18-f322-49a4-8ad7-1bc617c8edb1",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "327173e7-7624-4e0f-9a55-2fc413e5c7f3"
        },
        "item": {
          "id": "267b7f78-6d37-4d73-8cc0-c1ca459302d9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "73ed8b65-6d48-42e0-9f48-0dfb64053a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a560274-4aef-4a54-a333-85d162ed52e7",
        "cursor": {
          "ref": "b37c0234-a9c2-438c-9893-f0a9fed0ba88",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a68e0690-172d-4076-932e-5d8f4cd2475d"
        },
        "item": {
          "id": "2a560274-4aef-4a54-a333-85d162ed52e7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "86271db4-e2a9-4646-a7ce-ac54b1db51bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c0c1c0-a75e-457f-afd8-ab1fc75739fd",
        "cursor": {
          "ref": "c439cc4b-a96e-4ac7-b958-e051fd80a3aa",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3c715c50-c396-4f8c-89b9-289b32fcab1a"
        },
        "item": {
          "id": "e8c0c1c0-a75e-457f-afd8-ab1fc75739fd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b32fa060-e035-47c9-ad2f-3dabcb8ade53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d71fa83-b111-4863-a722-3ba2d3423a24",
        "cursor": {
          "ref": "ef38fe31-0330-430a-bdf8-bc48c4da54d6",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d1b7b301-21dc-4599-ac13-f19a91a775b2"
        },
        "item": {
          "id": "8d71fa83-b111-4863-a722-3ba2d3423a24",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2354b087-4e6a-40cd-a92a-55a2840a7f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13f879c-8d4a-487f-a8e1-7f83e6beaceb",
        "cursor": {
          "ref": "fae8c58b-db79-4d01-8b2f-ee867e1c99be",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4bdbd832-20d5-49be-b6ee-b812ad54dd71"
        },
        "item": {
          "id": "a13f879c-8d4a-487f-a8e1-7f83e6beaceb",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "afad7f1e-ab09-4a2f-9af9-14659fc426a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2d6c62-ec1e-4d61-873f-868761edf51d",
        "cursor": {
          "ref": "b54123bb-8b27-4a41-80f1-b328f57d8047",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "429e7d6a-80dc-492e-bf37-334508f08f0f"
        },
        "item": {
          "id": "ce2d6c62-ec1e-4d61-873f-868761edf51d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "85e1bce8-e9b6-4e14-89e9-acecad42e4a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b861b0-bba2-4cf1-b324-23edf138c661",
        "cursor": {
          "ref": "8451eb88-4daa-4465-a551-b0ccbc77da3e",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "678d0c3b-0b69-4de4-9793-274c0a59641b"
        },
        "item": {
          "id": "99b861b0-bba2-4cf1-b324-23edf138c661",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "78dd25ca-39a7-45f8-abd0-8cab3c032ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5343cfbd-108d-4a30-a71c-381ead463686",
        "cursor": {
          "ref": "ca485ca3-ee12-4ce2-acbc-a097bdbcfc45",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7b2db0c0-85be-4d41-ae3b-8a5e0eaf92e8"
        },
        "item": {
          "id": "5343cfbd-108d-4a30-a71c-381ead463686",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "130df2f9-9e1f-47bc-8ae8-7946181c8ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59062b1d-bbb5-4d6a-b49f-863c465f7e60",
        "cursor": {
          "ref": "c59dd2c8-fff6-4d5a-a0ba-940ed7163ee1",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "776fbc7f-7144-409e-9741-7105c225a887"
        },
        "item": {
          "id": "59062b1d-bbb5-4d6a-b49f-863c465f7e60",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "79aa5412-bf78-4ff5-8b39-e6dce3594af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e464371a-57ca-4e58-a1fd-0fc462a42969",
        "cursor": {
          "ref": "829a8800-dd05-4a06-bdd1-a0c9ad344972",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "73b2d4ee-1a7b-4297-ac4a-8f871e5cb9c1"
        },
        "item": {
          "id": "e464371a-57ca-4e58-a1fd-0fc462a42969",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e807c02c-43bc-49de-b155-be0e0ae57359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a47bf5c-cf4f-4331-8a99-baea438f8a7d",
        "cursor": {
          "ref": "d1d7a319-7e31-45ab-8c69-f83a4279f8a1",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "49c8bc4f-2a74-41cc-bc65-c67e07250daa"
        },
        "item": {
          "id": "2a47bf5c-cf4f-4331-8a99-baea438f8a7d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f585e893-9881-4c35-a875-c606670f83e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070351fa-af75-4651-8c16-5b70e871c4d9",
        "cursor": {
          "ref": "e0c2a886-a375-4e96-867b-9b5f431c2bbc",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a31c5afb-0c69-417c-bbf8-32ecb3b9f52b"
        },
        "item": {
          "id": "070351fa-af75-4651-8c16-5b70e871c4d9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "93577245-d051-4676-bf18-1cfb559918d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1879061d-466a-4dd6-92b5-74ad29ad5c58",
        "cursor": {
          "ref": "8e4d9dd5-8a54-45e1-92ee-ec6a16062bd7",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "08441789-12c6-491c-aea0-f323a86402e4"
        },
        "item": {
          "id": "1879061d-466a-4dd6-92b5-74ad29ad5c58",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "753645d9-c742-46dd-a4f1-f1a71caa0ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b129cdb-7796-41af-878c-8690b41251e3",
        "cursor": {
          "ref": "50e612cc-b843-44de-a198-a436ec47a7dc",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "611ee19f-cef1-471f-8f38-a238e296b99f"
        },
        "item": {
          "id": "1b129cdb-7796-41af-878c-8690b41251e3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "44d6050a-d2a6-4eef-9ed4-ca49aa0ed49a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7943d1cd-cb32-485d-85d6-e37e5aa7bed4",
        "cursor": {
          "ref": "29d46230-44c0-4a36-b01c-0c0a21fae6e1",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8c1d95a6-6c52-4f37-9b64-1c99969a8728"
        },
        "item": {
          "id": "7943d1cd-cb32-485d-85d6-e37e5aa7bed4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "591cd854-bdfd-46be-8137-d2c2ea0dffd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6011d7-691e-4a1c-a370-d10e15a2b3a9",
        "cursor": {
          "ref": "e10c3f8f-74d4-417b-88cc-10f05d9147cd",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "147f8624-6e7d-4817-be77-8f8e47053392"
        },
        "item": {
          "id": "1a6011d7-691e-4a1c-a370-d10e15a2b3a9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f6ffe64b-6998-4714-b616-f6ba81f5c6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44021253-95e2-46c5-a179-8951128dd575",
        "cursor": {
          "ref": "ba546c35-cb85-45eb-84d0-6ed7b73bc94b",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "524d378c-9313-428a-ac0c-dc3900231ae5"
        },
        "item": {
          "id": "44021253-95e2-46c5-a179-8951128dd575",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8e902acf-deae-4b26-960e-c3974b8a4b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692c16f4-651f-4969-b373-f5f52bf15101",
        "cursor": {
          "ref": "11cf0360-733b-4c8c-acae-3c19c5ace98d",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d5ef7d46-8787-45af-be5c-450e1beed58c"
        },
        "item": {
          "id": "692c16f4-651f-4969-b373-f5f52bf15101",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2d94d5f0-e4f1-4fcc-9ea9-23e3289a4857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb927a71-8c34-483f-b5cf-b09d34f85960",
        "cursor": {
          "ref": "4b458c4a-4e60-47dd-b1e7-cbae053a2aa5",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2dc867eb-b45f-4ed9-9019-6e45e4e25115"
        },
        "item": {
          "id": "bb927a71-8c34-483f-b5cf-b09d34f85960",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "0647b9f3-61bb-4a4f-a13f-9411c989d071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7ebce7-29a6-4020-b066-69207c1b81a4",
        "cursor": {
          "ref": "8c7eeef7-7c3c-4715-946b-68c67e1155cb",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c880a926-0edd-499a-8b2c-db11c6ceae44"
        },
        "item": {
          "id": "de7ebce7-29a6-4020-b066-69207c1b81a4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f58b2d1d-6183-4134-8788-75b9b7035465",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa4f003-2e42-4427-960d-f93d1f9b296c",
        "cursor": {
          "ref": "c697308c-1910-4b15-9cce-af52e6361d63",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7e76a0db-f94a-4e44-8f66-941c09c04367"
        },
        "item": {
          "id": "6aa4f003-2e42-4427-960d-f93d1f9b296c",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "a2ce46a5-d601-4c8d-9770-4d31199699e2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 570,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f304ac6-8cd8-479b-a1f8-0a580dcef262",
        "cursor": {
          "ref": "3e31e292-f86b-4b7a-8455-f90e1bb0eea2",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "343fbfc5-a578-4659-8be3-4f377dd1b191"
        },
        "item": {
          "id": "4f304ac6-8cd8-479b-a1f8-0a580dcef262",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "88913e3a-6906-44ba-b950-765acdf40fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f304ac6-8cd8-479b-a1f8-0a580dcef262",
        "cursor": {
          "ref": "3e31e292-f86b-4b7a-8455-f90e1bb0eea2",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "343fbfc5-a578-4659-8be3-4f377dd1b191"
        },
        "item": {
          "id": "4f304ac6-8cd8-479b-a1f8-0a580dcef262",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "88913e3a-6906-44ba-b950-765acdf40fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961f2e59-d7b0-48ab-91d5-65c05afbd6c2",
        "cursor": {
          "ref": "f5c277c6-b665-4d5a-884f-a59620c67024",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3bfaec78-40c1-41e4-bbce-84d543afdddd"
        },
        "item": {
          "id": "961f2e59-d7b0-48ab-91d5-65c05afbd6c2",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "45b812ec-6f9f-4246-9f93-b5815edd560a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70356de7-0fc4-4c5f-a76c-4665de75f5d9",
        "cursor": {
          "ref": "330b2455-0810-4bc4-bbe1-38b7cd6634e6",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a34d35c3-596f-46e5-89a3-679bfd71404e"
        },
        "item": {
          "id": "70356de7-0fc4-4c5f-a76c-4665de75f5d9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "de90d6bb-2a94-44ed-aa3d-4c56794c44df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22250e03-3fdf-4988-9104-3a8453c18602",
        "cursor": {
          "ref": "ca01d7da-dc89-4c31-a767-aca8d0f42a31",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2bc774f3-1c76-440b-9a09-ec9faa06603a"
        },
        "item": {
          "id": "22250e03-3fdf-4988-9104-3a8453c18602",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3e64b729-801f-4dfb-ba42-4a4ee83fee6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3564811-6424-42aa-a826-9373d7256b96",
        "cursor": {
          "ref": "7eb52734-4047-41ef-8ec2-8b0278835a3b",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a3fae391-ade2-48bd-8968-4663c5182310"
        },
        "item": {
          "id": "e3564811-6424-42aa-a826-9373d7256b96",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "74dff775-fef0-426b-b0cc-74970506e8eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17448c6-d57e-472f-9f55-a6e663ce430e",
        "cursor": {
          "ref": "f742e9e7-f68f-4886-95f7-e3b10aaec816",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "759bead7-d323-4a3a-8257-0c1712547a47"
        },
        "item": {
          "id": "a17448c6-d57e-472f-9f55-a6e663ce430e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e7ef2764-83ec-4490-a94d-ee51a445fa91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3627ec3-006c-408c-a1e9-0f68a635a6c3",
        "cursor": {
          "ref": "0b6c339e-2d4a-44de-b4af-b53ec7b71483",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0e305345-6a6b-4451-87b0-69094d597e60"
        },
        "item": {
          "id": "c3627ec3-006c-408c-a1e9-0f68a635a6c3",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1b44319b-8953-43a7-835f-444e81916492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1feb3eef-2916-4501-a5a5-efbf0d7fd8cc",
        "cursor": {
          "ref": "9ca4c872-eb80-402f-9239-90567a511cf6",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1e414b46-07ab-4592-9e1f-1259f4b0c9f7"
        },
        "item": {
          "id": "1feb3eef-2916-4501-a5a5-efbf0d7fd8cc",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "cb7a932e-da28-40b5-97b6-f74f60bad13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01373e22-7deb-4332-aa74-7c60f605ff4b",
        "cursor": {
          "ref": "bfc62000-2701-4f21-800a-5ea52a93b37b",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "aa039f88-abf3-4877-9e2c-0711323b8c11"
        },
        "item": {
          "id": "01373e22-7deb-4332-aa74-7c60f605ff4b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f976c8f2-0b2f-4970-aea6-12986d14fda0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa9c442-7ee0-441c-b442-adfd50790d4f",
        "cursor": {
          "ref": "3d305eae-93b4-4550-ab4f-8c87dd5b5f83",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1d187cdc-6a73-46a3-8705-85b00eebb4b4"
        },
        "item": {
          "id": "9aa9c442-7ee0-441c-b442-adfd50790d4f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "00bf61ba-caa7-4a8a-9619-903c00b0f6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f98cd1-5722-4689-9e00-666b2381fd70",
        "cursor": {
          "ref": "2932e890-5337-4c82-bc9f-d1c03dadea02",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "54209165-e609-4279-b2e3-9ce6a94ced6f"
        },
        "item": {
          "id": "b5f98cd1-5722-4689-9e00-666b2381fd70",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "56d9ec06-c75b-4d6d-9682-09c495ffb572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab6d6ab-70a2-455f-b32b-53d4acad184a",
        "cursor": {
          "ref": "ae3019a4-b9b3-4b43-99de-8b26bfa2b6ee",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5af27b45-490d-4f00-ab87-71732f9d29ce"
        },
        "item": {
          "id": "6ab6d6ab-70a2-455f-b32b-53d4acad184a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ed70985d-48bd-4b01-b60a-1c3f7fb7f99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec27b8b-3096-49bb-898c-25824bb4deee",
        "cursor": {
          "ref": "b1976787-4aff-48c2-9069-5b483c939a1d",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "134ec194-1b1b-43bc-9f88-06b987669f52"
        },
        "item": {
          "id": "4ec27b8b-3096-49bb-898c-25824bb4deee",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a9eff31b-5bde-41e8-9656-7a850218ad92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e87b696-e175-4beb-b7a6-fa7b4f0039c1",
        "cursor": {
          "ref": "f2b71f11-a87a-4222-9542-ffed7b6851cd",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "60927a69-c40e-4e0a-b18a-a95052daaab0"
        },
        "item": {
          "id": "1e87b696-e175-4beb-b7a6-fa7b4f0039c1",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "450408ad-bacb-4620-b5df-41fa04270726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc54587-cedd-430a-9688-af250286ba57",
        "cursor": {
          "ref": "bc2f890f-4a33-44e0-8741-1fd2be482ac1",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d7387e16-6f59-4477-a451-8816b2e392b2"
        },
        "item": {
          "id": "8fc54587-cedd-430a-9688-af250286ba57",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3ec88d04-5a84-4fab-a397-8c9f8c2c4dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf5e816-5b9c-47db-a09a-f2c900296fa7",
        "cursor": {
          "ref": "e9248f7e-7a0a-4860-9271-5cc846a609dd",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "4c894eb6-2f8d-41a5-8e0f-79b6365f170b"
        },
        "item": {
          "id": "0cf5e816-5b9c-47db-a09a-f2c900296fa7",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "472bfaaa-3072-4318-8db5-3f210c4e4cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af36c49d-de47-4ba4-96cd-489ac1c8c5aa",
        "cursor": {
          "ref": "a09383f1-fe45-4ec4-8667-324346a5bdd9",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "59b69e24-53a0-4081-bb8a-4f4d5454f237"
        },
        "item": {
          "id": "af36c49d-de47-4ba4-96cd-489ac1c8c5aa",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c26cad25-c74d-406b-bbed-e8dc476aa892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9bf3be-ebd6-4746-9634-c4eab250a5b0",
        "cursor": {
          "ref": "121992ed-0aee-4431-a730-f1a0f3dfa650",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2f84d1c5-ae9c-4005-a948-c084ad571173"
        },
        "item": {
          "id": "ee9bf3be-ebd6-4746-9634-c4eab250a5b0",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a2ca58a6-4cd2-4ec6-a00b-0423e34ec87a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc33b111-92fc-4756-aaf2-8c4bc420de05",
        "cursor": {
          "ref": "bc1b093c-f5fa-4c25-b249-3b025496e94f",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "dff0d5f3-49f0-4170-9b27-ddd7528458c8"
        },
        "item": {
          "id": "cc33b111-92fc-4756-aaf2-8c4bc420de05",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ef483013-f91a-45f0-8db0-8847b762ca2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51effe1-448e-4bd9-a970-45850b6444fe",
        "cursor": {
          "ref": "a18b08d6-95f7-4af7-abff-46169f3f5ae4",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "259c4511-e071-442d-b67e-b151b07af584"
        },
        "item": {
          "id": "f51effe1-448e-4bd9-a970-45850b6444fe",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3fec1c59-9cad-4ba9-8cca-1f65106603d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624e6dfb-e032-47fa-86d5-4212d07fa788",
        "cursor": {
          "ref": "87c59116-2f8e-4b10-b5cf-786dc1321c36",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a8f3e7de-03a0-4a9b-8b7b-6867084d8b56"
        },
        "item": {
          "id": "624e6dfb-e032-47fa-86d5-4212d07fa788",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8c3bc66d-5067-47fd-9e98-a15d1a1830db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c62710-9e2b-4ee9-b5a5-d7fdd8ed460a",
        "cursor": {
          "ref": "f2fb7b89-2185-4eda-9c32-b2bb47d8f074",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1e84da0e-15a6-4817-b5b3-3dba9bc698d2"
        },
        "item": {
          "id": "04c62710-9e2b-4ee9-b5a5-d7fdd8ed460a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9e212b65-fec3-4615-b473-1bb4d2793a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec18dd1-f79b-4240-890b-60b4b66a029d",
        "cursor": {
          "ref": "b779e2c6-8dc8-47a8-beef-f227fd9910f3",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2f3be707-fee0-4cd5-95d7-fc5d4efb0bbe"
        },
        "item": {
          "id": "0ec18dd1-f79b-4240-890b-60b4b66a029d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d3fde0c5-ecbf-43c6-bde5-99231d6fc229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c17471-c14a-472d-ae56-2915effe6a98",
        "cursor": {
          "ref": "ba983051-a200-4dca-9115-cdc050e4ce17",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "950820f7-5df4-4907-8842-7603d4eb7bec"
        },
        "item": {
          "id": "f8c17471-c14a-472d-ae56-2915effe6a98",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "18bc4ccb-4d78-4511-a254-7d424cfe3688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86003bc-e455-430d-87fc-41df6b36013f",
        "cursor": {
          "ref": "1bf5480f-19af-4e6a-a298-bf7c6f532b2d",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ecd0324a-afbb-442e-9fec-c69bd7fce09e"
        },
        "item": {
          "id": "b86003bc-e455-430d-87fc-41df6b36013f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3a673cc1-d063-4bda-9f03-c27b028531d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5151dff9-3314-46a3-9c2f-e703fa68fe83",
        "cursor": {
          "ref": "ed26c8c5-b877-475f-82e3-e5073512f74c",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a7a72b09-c4c5-473b-8974-14d1b227a62f"
        },
        "item": {
          "id": "5151dff9-3314-46a3-9c2f-e703fa68fe83",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "659d8710-a45e-4179-ae49-315c8a3195c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e367c47-2ea7-4c10-a377-e6278b5bdcea",
        "cursor": {
          "ref": "57814ae6-b870-460b-a6be-9af2bd7969eb",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f8d8e93f-02ed-405d-aa39-2c56b52ac706"
        },
        "item": {
          "id": "1e367c47-2ea7-4c10-a377-e6278b5bdcea",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4bea1c8a-5947-48e5-9c17-90562e662b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c50e89f-2c76-48ed-82c4-e42b098b9978",
        "cursor": {
          "ref": "ee7ed526-0e15-4404-ad7e-5a800a4f41da",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "cfc1e3ae-0d86-47fc-9a0b-7f54dc58fde6"
        },
        "item": {
          "id": "1c50e89f-2c76-48ed-82c4-e42b098b9978",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5a36a29f-6849-448f-a1e9-2ee1dd8656e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae41841c-b601-46e4-83cb-61ace6d6cda6",
        "cursor": {
          "ref": "aea4d810-4893-4762-b233-045a5dac3a53",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e069b8e1-efb4-47fd-b178-b4996f374b2a"
        },
        "item": {
          "id": "ae41841c-b601-46e4-83cb-61ace6d6cda6",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1a387cfd-1e68-4e98-8e6a-0c44afc92aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da985de-1cc5-47ed-a68b-ea3a65e781bf",
        "cursor": {
          "ref": "daac0074-125f-463e-8364-61db332d2e5b",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c1a88574-3a59-443a-ada7-b892a1fd7d34"
        },
        "item": {
          "id": "7da985de-1cc5-47ed-a68b-ea3a65e781bf",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6ff39473-cb04-4938-b63e-476b89402811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9892fd-e41a-465d-89e6-a68a1a2c26e7",
        "cursor": {
          "ref": "cd742551-d246-48ee-8159-b0bc4ba4b11b",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7698d080-e073-441b-a533-15e43208e846"
        },
        "item": {
          "id": "8d9892fd-e41a-465d-89e6-a68a1a2c26e7",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "5b1fc101-382c-4bfb-8aad-5f8de7022c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 909,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641cf589-30bc-4330-a5a2-c6ef15f3cf94",
        "cursor": {
          "ref": "ce101931-da30-4c50-9a4f-7110a91d8402",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "fb3c5882-1816-44ae-9106-96ac74959d91"
        },
        "item": {
          "id": "641cf589-30bc-4330-a5a2-c6ef15f3cf94",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "60d49ea6-6f34-4e45-bba3-54610e4167d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1393ad1-55a5-4c04-80af-02efca860800",
        "cursor": {
          "ref": "58b3fb39-36c5-4e6e-a26e-98faadf1a432",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d33c5526-d72a-4f02-8dd7-d16cbd089a1d"
        },
        "item": {
          "id": "e1393ad1-55a5-4c04-80af-02efca860800",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f08979af-d2ee-4e4f-b859-16194fc5d522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a085ae72-85f4-4280-b4b7-30bed1d8517e",
        "cursor": {
          "ref": "eca24ce7-be73-4556-97fb-b536e9ea4e70",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "fc6b8c88-eda8-4e87-80a0-7db891a29a7f"
        },
        "item": {
          "id": "a085ae72-85f4-4280-b4b7-30bed1d8517e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6bb9fdb0-77cd-4012-90e6-a317f1f3b995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c4a695-7a65-4f4e-a1d0-ba12238b2728",
        "cursor": {
          "ref": "d9abdaf5-f278-48ef-bb01-330ecfc14ce3",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b133e5c4-8d0f-4293-8d44-8681bc245fee"
        },
        "item": {
          "id": "b7c4a695-7a65-4f4e-a1d0-ba12238b2728",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "29793eb2-6cf5-443e-9d07-1dd539746ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1000,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141825a0-3006-4279-b7db-382dec98b3bc",
        "cursor": {
          "ref": "5f0d5b11-a195-4f1a-b41f-94b672d5c7c8",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c15ebc9a-cab4-41e3-99e4-f5e56889f750"
        },
        "item": {
          "id": "141825a0-3006-4279-b7db-382dec98b3bc",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a5cce6d5-5bd0-41fc-a1b3-21700fb5357b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1053,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51bd7e72-5377-4b9f-97e4-34a9d59a726a",
        "cursor": {
          "ref": "9f96905e-125f-4610-8bb4-688e3ded2f08",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7977d9dd-bf7a-4ea0-ab07-cb75d7c67201"
        },
        "item": {
          "id": "51bd7e72-5377-4b9f-97e4-34a9d59a726a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "48da50ce-993d-48f8-831c-24e87f72ea36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c0a2ab-5101-4e34-9504-8415bc219343",
        "cursor": {
          "ref": "ef5fa8ed-dd8e-45b9-bef7-c803a9814577",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "33629fdc-8a07-4fb1-8e47-9ace2745cde1"
        },
        "item": {
          "id": "80c0a2ab-5101-4e34-9504-8415bc219343",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2e44e332-804c-4170-a9ac-146f96b813ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 983,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44fc1546-12ad-48c6-870b-f6f54c31a25d",
        "cursor": {
          "ref": "763f4267-2ec2-45a5-b368-224c7555d412",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1ba525bc-f318-4ab6-8ec3-5d6354d24610"
        },
        "item": {
          "id": "44fc1546-12ad-48c6-870b-f6f54c31a25d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b396d4c7-c284-4153-b1f3-0063562a584d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1416,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e63c33f-c451-4328-8bf8-9fe68fe59b99",
        "cursor": {
          "ref": "450b5a5c-cca2-4438-8785-584eab8dd96a",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4391e0a9-c751-4293-b3bf-a0a3ba01052d"
        },
        "item": {
          "id": "4e63c33f-c451-4328-8bf8-9fe68fe59b99",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4f4bcc57-6539-4c51-b1a8-891e63693502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1483,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f391c3-e855-4fe3-b752-1537c2db941b",
        "cursor": {
          "ref": "5f2444dc-c922-44ad-9da5-025a579acab0",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5cd6e5c8-6048-4a9f-88a3-68be51fbd922"
        },
        "item": {
          "id": "a7f391c3-e855-4fe3-b752-1537c2db941b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "dd6a1016-1371-40a3-887b-a5d6c69e321f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1199,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80bb3725-bfcc-4b29-a659-e3a8b998bba3",
        "cursor": {
          "ref": "8aa6b912-39ad-4d59-a04a-c7c7a164ff5f",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a54d7b2d-b5ee-4e49-bee3-afb6b39158c4"
        },
        "item": {
          "id": "80bb3725-bfcc-4b29-a659-e3a8b998bba3",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e055df23-a922-4246-9370-a302fa5e105d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df91517-8cbf-4c8d-a639-0f9829fef349",
        "cursor": {
          "ref": "b4c2bd84-a6a1-424a-93a8-c06b0bc0dcc3",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "56290257-942c-4559-b512-f5e87ec18f16"
        },
        "item": {
          "id": "9df91517-8cbf-4c8d-a639-0f9829fef349",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "587a1ec9-0c5e-4ea5-a405-269f7ad6123f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 927,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495dfdb3-1bcc-4231-9656-88a86b1ceb04",
        "cursor": {
          "ref": "cc54b183-cf6f-4776-9732-151f6923047a",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2b977701-da3c-4723-87ed-d7e723af0719"
        },
        "item": {
          "id": "495dfdb3-1bcc-4231-9656-88a86b1ceb04",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4fa9a4de-20c5-4d9f-96bb-33f4b32b691e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed78526-6597-4c37-a8ea-336d7796e5c1",
        "cursor": {
          "ref": "c9896f26-8336-464b-acbc-2b60268070df",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "718e787b-06b6-4344-b626-694023885f05"
        },
        "item": {
          "id": "3ed78526-6597-4c37-a8ea-336d7796e5c1",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a62972dc-b8df-41e6-b878-3dd4bc22f802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222d00cc-4583-44e6-b691-eb89f7656761",
        "cursor": {
          "ref": "3fccc5d8-f9c1-4cc4-acf6-1082af1e8536",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "05eded6c-9d61-45fd-b356-ad8dc6067c73"
        },
        "item": {
          "id": "222d00cc-4583-44e6-b691-eb89f7656761",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "549c89d6-e157-4e09-a15a-5c2d2a8f301c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a6aa9de-1572-487c-b985-11c646667ea0",
        "cursor": {
          "ref": "f8204a9f-d634-482c-b2bd-d4cef098d7a4",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d4116586-ea2a-4456-833b-c2c3e7e88472"
        },
        "item": {
          "id": "4a6aa9de-1572-487c-b985-11c646667ea0",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "bf6b4fbe-a228-40bc-8cf0-378ae6176e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27631fcc-364b-4101-a595-d89d391075ca",
        "cursor": {
          "ref": "2c5fd584-3f7e-4bf9-b26b-884acf13e336",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8a6cadad-8faf-486e-860a-0eb5a342a50f"
        },
        "item": {
          "id": "27631fcc-364b-4101-a595-d89d391075ca",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "de919f32-c5df-4a51-8fde-40eb1fc6a06b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79bc8d9b-7788-4b5e-9e41-ab45f8b66d5d",
        "cursor": {
          "ref": "c96c607f-4adb-434d-9ed8-6ad2613e677a",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "cce5da07-8ce0-45dc-8bc9-33adcf9afa20"
        },
        "item": {
          "id": "79bc8d9b-7788-4b5e-9e41-ab45f8b66d5d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f2dfaaf7-3ef3-4905-9360-5d9ffd027f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e703d24-f651-46a6-ac09-10d204c4960e",
        "cursor": {
          "ref": "6deffae7-4c4f-48ba-b4da-68af02bac807",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e594d91c-52e1-4ca1-ac6e-716540e0716b"
        },
        "item": {
          "id": "8e703d24-f651-46a6-ac09-10d204c4960e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "61d6f015-1666-4cfe-a5d5-0371f78d67be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e5a34b-0298-4136-bda9-7173db13bf7f",
        "cursor": {
          "ref": "36c3f289-ac4f-4a22-b6f5-2d896183dd24",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b6719827-5a11-4891-8aa0-4998705d2d93"
        },
        "item": {
          "id": "a4e5a34b-0298-4136-bda9-7173db13bf7f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d5155640-0273-4c3a-9ea5-6ec59f8be57d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd61410-d8bc-4e6a-b03c-95a67a3a2b0f",
        "cursor": {
          "ref": "030c282e-b294-4927-a434-1da84ed874fc",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4d93782a-bb7c-4f79-a03a-7078fe22f1cc"
        },
        "item": {
          "id": "fdd61410-d8bc-4e6a-b03c-95a67a3a2b0f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d9b4aea6-cccd-4598-a0c3-7d5aea505b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d04506-de8e-40cb-bae4-940a2082d702",
        "cursor": {
          "ref": "46b1b05a-c9b7-493c-af5d-3a7406e1a305",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c49d77fc-ca3e-41f6-988a-980c7ffd9d63"
        },
        "item": {
          "id": "b7d04506-de8e-40cb-bae4-940a2082d702",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "420e4917-02b2-4ef0-9ec2-6fa6a06ff2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16669a6e-0b2c-4092-8ba2-233aed783486",
        "cursor": {
          "ref": "dcda9e96-713c-4d01-b95b-116fe4d14d2b",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4859e01a-407c-4243-a7a5-e3679122ebf7"
        },
        "item": {
          "id": "16669a6e-0b2c-4092-8ba2-233aed783486",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "83f97255-6806-4a67-b726-1f22595a09c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde82f06-9e19-4c49-b714-cad786ca7af5",
        "cursor": {
          "ref": "ffeeb58a-f422-4130-8cce-e1360597acc1",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8cbdcd23-e3b6-4caf-9d36-11136ce5b664"
        },
        "item": {
          "id": "dde82f06-9e19-4c49-b714-cad786ca7af5",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "efb15fd8-42c4-4fef-b16d-cd857c963a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a706bc-2bd6-4aee-a82c-017a2e2bc0d4",
        "cursor": {
          "ref": "ac3085e1-9d6b-4331-b546-66b25315a97c",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c33139aa-3319-4fab-a3f2-078dca5d08ac"
        },
        "item": {
          "id": "a6a706bc-2bd6-4aee-a82c-017a2e2bc0d4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7da906d2-7773-456d-a4ef-d9783a3207ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dacac28a-9d7e-4273-93e7-0a80f69d2c64",
        "cursor": {
          "ref": "b04cccc9-f172-4eff-844c-3e5c304fdc43",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "236e0224-2f8e-43e2-960e-8cee16a755fe"
        },
        "item": {
          "id": "dacac28a-9d7e-4273-93e7-0a80f69d2c64",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e8d40ab4-5d43-4081-886b-228cf83cc36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ff132a-ef02-43f2-a629-4ca83363dafd",
        "cursor": {
          "ref": "7895c833-949b-4038-9204-c9a202a7ccc4",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "cf8c09b9-52ce-48b9-8f84-0ae1a62cc50f"
        },
        "item": {
          "id": "90ff132a-ef02-43f2-a629-4ca83363dafd",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "39255272-684a-4a4a-970e-9610a3753e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0947ad5-56ea-4d80-bfe3-81a931a436c1",
        "cursor": {
          "ref": "40ff4c8e-da0c-4d57-a443-2074d6b957d3",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ec14cc67-1d23-4811-863b-30e7ebb94475"
        },
        "item": {
          "id": "e0947ad5-56ea-4d80-bfe3-81a931a436c1",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ff554608-aa1e-4eed-88c3-b0b7edea4ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a35734-2ef2-463e-a7ca-ea85cf8e8563",
        "cursor": {
          "ref": "e3da803b-99d4-4cbb-93d4-1972a186adf6",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f57963c6-e5e4-4e6c-b46a-0af1bd3a56bb"
        },
        "item": {
          "id": "86a35734-2ef2-463e-a7ca-ea85cf8e8563",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "978bb3cc-2a3d-4bdf-9879-e69602c6ce6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3371d91e-ce90-49db-9131-342c766531da",
        "cursor": {
          "ref": "3f5567d5-5bff-4f4d-8d38-6e0e60560749",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9e54380b-8b3c-4f26-ae13-d5d36ffba220"
        },
        "item": {
          "id": "3371d91e-ce90-49db-9131-342c766531da",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ae65a0e6-0140-4963-9ade-ec580723b79a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7641c6-a849-402d-b220-19825d961076",
        "cursor": {
          "ref": "330628a7-7082-46f5-90cd-46e947541e97",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "193aeb56-adcb-4028-80dc-a31b09446b1f"
        },
        "item": {
          "id": "2d7641c6-a849-402d-b220-19825d961076",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f00e9601-dd56-4311-983f-828490458130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a872081-31fe-4d8d-a794-910037f7a3fd",
        "cursor": {
          "ref": "0e32b30b-2531-4a98-ad17-8645a4cff230",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4fb7e0bd-b020-4bea-b61c-d4d69dae197d"
        },
        "item": {
          "id": "1a872081-31fe-4d8d-a794-910037f7a3fd",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b45bb29b-b97d-418b-af2c-2ee730f92c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7083e9d-321b-48e6-a56d-c4d39774cf8c",
        "cursor": {
          "ref": "eb85fc1f-b769-4cad-963c-6a5ddb9f6a5e",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5fdeb531-d3ac-4a61-92ed-93683b51ced6"
        },
        "item": {
          "id": "c7083e9d-321b-48e6-a56d-c4d39774cf8c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3ec09249-85d8-4e1c-be70-460e05932f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ab2d3d-f3a2-4223-aece-0dafd1dd458a",
        "cursor": {
          "ref": "14f1c7b8-9133-4b3b-a36a-6052d1d1aab6",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3f3e3f66-9b03-43ee-94e1-17dda2ad9c6c"
        },
        "item": {
          "id": "d3ab2d3d-f3a2-4223-aece-0dafd1dd458a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "41087ce6-c154-48cb-a2e3-0927062c1684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478c5643-69c7-4f38-810b-d298cd400ccc",
        "cursor": {
          "ref": "b3e7d9f0-4e8a-4937-99ae-52b875c6f886",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8e219430-9648-4747-89e3-f9e40303673b"
        },
        "item": {
          "id": "478c5643-69c7-4f38-810b-d298cd400ccc",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "def783d3-3b40-4a7c-aff0-b9665b2322c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4fa0b42-d105-4e1b-b30e-a79d63bf5abc",
        "cursor": {
          "ref": "498c9ce2-6b19-4f17-a565-d5dbc0b903e5",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "777271ff-b7d6-4eae-8ee9-503db1143a03"
        },
        "item": {
          "id": "b4fa0b42-d105-4e1b-b30e-a79d63bf5abc",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "01fc7ddc-b4f1-4e8e-aafa-5f7dfe98923b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a30c91f-cec7-479c-9747-b3c5d3b6ec4b",
        "cursor": {
          "ref": "542433d4-ffe7-4c96-af90-0b70a4a9ec89",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "37bdcef1-ddc2-45e5-97bd-583c9d08c725"
        },
        "item": {
          "id": "3a30c91f-cec7-479c-9747-b3c5d3b6ec4b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c2db0354-a166-4865-a39d-788c983650f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45558db-f2a9-4a70-9d34-2c60bcd3da56",
        "cursor": {
          "ref": "a9cbf129-205f-4adf-a0d5-b2d48113128d",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "956afca3-df49-4926-b71d-7866196a35b4"
        },
        "item": {
          "id": "a45558db-f2a9-4a70-9d34-2c60bcd3da56",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a458f81a-9dc2-4898-ac4e-655416581de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda43f19-66dc-485c-aaf1-ea74a089eb20",
        "cursor": {
          "ref": "d372fc10-1cf4-4a70-a528-e8fa4de7fdee",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "34b3be09-873d-46f2-b335-9a4472ed69b0"
        },
        "item": {
          "id": "cda43f19-66dc-485c-aaf1-ea74a089eb20",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1b56d053-06e9-44fd-824a-f464f2b7ac55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e8c5b7-79b9-4111-b3a3-e397be5a1d89",
        "cursor": {
          "ref": "aa5e35e4-58d8-416c-ac86-442a9776e301",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0e0fe6bd-29e4-4505-a1d8-3a03a4b9b10a"
        },
        "item": {
          "id": "48e8c5b7-79b9-4111-b3a3-e397be5a1d89",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b761b2ce-ccd7-442a-914d-ffe1c5a528a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2e4aad-c3b2-4565-8da7-516fd5b9d328",
        "cursor": {
          "ref": "c295a097-ac37-4e2d-97ed-6f120a8fb860",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c3b32c57-b523-43d1-a243-5a5ce82ca228"
        },
        "item": {
          "id": "cf2e4aad-c3b2-4565-8da7-516fd5b9d328",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f1d6fefa-df09-4e1d-a0cc-920e06ad546d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f06487-33c4-4eca-bc69-d418bd4e05df",
        "cursor": {
          "ref": "eaf57311-433a-4412-856d-dafa1ddfca91",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6a55292c-3dd7-4da9-adff-cad27a92fd0c"
        },
        "item": {
          "id": "16f06487-33c4-4eca-bc69-d418bd4e05df",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a8eda5c1-f6d5-4d3d-b0c4-f0a312517ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce615dc1-3917-4715-924f-b88330421de7",
        "cursor": {
          "ref": "adfddb61-93e0-40b7-af5b-a83c2d53e275",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "fd8756c0-1513-4fca-bc59-bf674530bfd3"
        },
        "item": {
          "id": "ce615dc1-3917-4715-924f-b88330421de7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "86c4fdab-7f2f-4165-aa40-cb098a8ca19e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6111c5-1055-4899-b4a0-d00676ecbe13",
        "cursor": {
          "ref": "936f13d3-f03c-43c0-9531-bea0a4241cc3",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5261990a-1315-4308-87cf-1f443f11efa9"
        },
        "item": {
          "id": "db6111c5-1055-4899-b4a0-d00676ecbe13",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8b10849d-8a92-441b-838c-796d494cdc28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7ca102-55fa-40f3-b76a-ab7d69c238da",
        "cursor": {
          "ref": "55cf9a23-4645-40d8-8485-52b853838924",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "70fb43a0-c801-4668-90f9-08eaec632c17"
        },
        "item": {
          "id": "ff7ca102-55fa-40f3-b76a-ab7d69c238da",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ed89e55f-8911-4ac4-8e4b-937f95fb3110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb7f276-9763-4927-8529-0da3f22f8165",
        "cursor": {
          "ref": "79632272-724d-48c5-a028-d3770148e379",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7157d4ad-feda-4c10-aba8-e5ab7e237a1d"
        },
        "item": {
          "id": "eeb7f276-9763-4927-8529-0da3f22f8165",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "85b4c0a0-a95f-4b10-8d37-0fa02876ddd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a5fc43-5f7e-4569-b42c-5f84e7b48674",
        "cursor": {
          "ref": "e90bf11d-1862-4667-afc2-25260b6f824d",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4fa281b5-66d1-420f-b1c7-45f86743a899"
        },
        "item": {
          "id": "41a5fc43-5f7e-4569-b42c-5f84e7b48674",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b0a27ddb-fee2-46c5-8fef-360b81ddb294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7c902f-054a-412a-af8d-4630c5074092",
        "cursor": {
          "ref": "77c95cd9-1501-474f-b623-3a29833ddd00",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1d142420-b21d-47fb-9404-508501c53790"
        },
        "item": {
          "id": "6c7c902f-054a-412a-af8d-4630c5074092",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7fbebea1-4f2c-41a3-9bfd-6875e79bc507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc70519-485a-4300-ac2b-9fcd5baca897",
        "cursor": {
          "ref": "4379a098-669c-468f-b85c-16771d6a142c",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "238205c2-eb52-436c-aae7-511e0f0ad9f2"
        },
        "item": {
          "id": "2fc70519-485a-4300-ac2b-9fcd5baca897",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "98f4c21e-c0e7-4cd8-b574-9a24a82acdad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42dbd04d-9442-4970-9bba-96c01f1f7499",
        "cursor": {
          "ref": "20691aee-2ecc-4d79-a996-0baa733a3a10",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b1392342-38ad-457d-9a6e-76c40602cadc"
        },
        "item": {
          "id": "42dbd04d-9442-4970-9bba-96c01f1f7499",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b26e47f3-8bc8-4b0f-9eed-ac31923fba6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878cc92d-635c-4237-a7d7-b62376b10b84",
        "cursor": {
          "ref": "2a0f715b-3d40-4b11-badd-4b4ba023d0c3",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0a55195a-2caa-4fdd-be43-8a9980808912"
        },
        "item": {
          "id": "878cc92d-635c-4237-a7d7-b62376b10b84",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2170341e-adf1-4f1f-a961-4df8e31866f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fed0a08-d4c1-4b1a-a7cd-70354b948b8c",
        "cursor": {
          "ref": "f300cbfe-f0d1-4c24-9cf4-7c0aef36f5bc",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5489c680-8635-42b7-a18f-b0283db7a608"
        },
        "item": {
          "id": "4fed0a08-d4c1-4b1a-a7cd-70354b948b8c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "daa12d42-11fc-4d4f-8be4-01401ca46372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950546a2-3304-4f77-8dad-1399b0a83629",
        "cursor": {
          "ref": "71c0f820-2dca-4f62-8327-4df552e49743",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "45fe9cb5-0651-488e-bf35-72ab3705cbc1"
        },
        "item": {
          "id": "950546a2-3304-4f77-8dad-1399b0a83629",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ce87fba9-c4c1-4fdc-b1cb-c72d3a3b4027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9431fb17-a728-41a8-b778-c6f8ab961c13",
        "cursor": {
          "ref": "fb175b7e-7edf-4493-ae24-768ca411aff0",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6fd6d47b-d61d-4be4-90a5-e2847e2bfe02"
        },
        "item": {
          "id": "9431fb17-a728-41a8-b778-c6f8ab961c13",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "302c735e-ab0c-462f-81cf-2f4445dc8e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882a000e-e52d-46c3-9ba8-3960c5fc507b",
        "cursor": {
          "ref": "c2b45b47-1ad8-41e1-83bb-09aa9b1de3a1",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "02d22a8d-7e0c-4acd-8d03-07bd0af51be8"
        },
        "item": {
          "id": "882a000e-e52d-46c3-9ba8-3960c5fc507b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "05dd7750-c909-4275-86b3-39f8310306e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1fbd8c-44d3-47f9-8b3d-1a0bd7acf4af",
        "cursor": {
          "ref": "8859e2db-d7dd-4d3b-87eb-ed96ac3efa2b",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "64828995-7311-4b65-a3ee-52aaf8959650"
        },
        "item": {
          "id": "9c1fbd8c-44d3-47f9-8b3d-1a0bd7acf4af",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3f95d1d5-d7e8-48ac-a130-828caec8be68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33291161-b312-4a11-9ea1-1f0a05e9d82d",
        "cursor": {
          "ref": "3085d774-af21-4791-992f-ba1e6e814b41",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ad76f008-7616-4d40-bd82-e80b6e623361"
        },
        "item": {
          "id": "33291161-b312-4a11-9ea1-1f0a05e9d82d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1d859a4e-9f4f-457c-a4c5-d2434cce6edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b139697f-8944-4dd7-b0ba-2f8b04936cdc",
        "cursor": {
          "ref": "20d94c37-75cb-4e65-95fc-12bfb6aeb39c",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "06b5c237-437d-4fbc-b109-5c18706deea0"
        },
        "item": {
          "id": "b139697f-8944-4dd7-b0ba-2f8b04936cdc",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e3e1566a-4058-4cdd-ad2e-3ea6d5c2d250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9733a78-8258-45cf-8886-906968a49b9b",
        "cursor": {
          "ref": "6c0aea68-f6ef-4a71-8fea-b71ff6602a01",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "fc0ae2bf-7007-45cb-8b65-0286dddab2a0"
        },
        "item": {
          "id": "a9733a78-8258-45cf-8886-906968a49b9b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1b69ab56-2c6c-4513-a153-b74ddd615a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f351ae-42a9-44d8-88c5-279d1ee4b90f",
        "cursor": {
          "ref": "546bc9f4-2f9f-4939-88df-66b0627c0cff",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7c41d607-0fe2-4cc0-9393-e1c81f5161e3"
        },
        "item": {
          "id": "42f351ae-42a9-44d8-88c5-279d1ee4b90f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "af9a2d5c-6cdf-429c-95a5-618816280cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce17c2f-cb88-4f73-8b5f-29d71eb8a77b",
        "cursor": {
          "ref": "e2b9ee2d-133a-464d-8745-c4804c9ab19f",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "dcf06ea2-758f-4ad0-93b8-d0bcc9b31c49"
        },
        "item": {
          "id": "0ce17c2f-cb88-4f73-8b5f-29d71eb8a77b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a57afea8-8b58-4f05-a8c1-4d7cf3c835aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a432adcf-56cb-404b-83c4-4b74a9bfe090",
        "cursor": {
          "ref": "d25db0c2-08ec-47a4-8968-3c8b18a3eb41",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0e223470-de5e-422f-a3c2-6b3fa9a968e8"
        },
        "item": {
          "id": "a432adcf-56cb-404b-83c4-4b74a9bfe090",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2bd5f638-17bc-437f-b4ce-ee4f98ddc620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8767cf-150c-4b16-be24-25118616d39b",
        "cursor": {
          "ref": "d9e837c7-33c9-42ae-9af8-1457a56f0d76",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a645e3aa-1dd8-4e2a-b277-8f202578401b"
        },
        "item": {
          "id": "2d8767cf-150c-4b16-be24-25118616d39b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "26f16714-e41b-4bcc-8f4c-2dc03f7063d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1ab17f-0659-4145-91b4-62723a74b0e8",
        "cursor": {
          "ref": "dfad5d75-8c9a-44cf-8daf-6b936dbd7d3b",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c24ad812-7bda-467b-ba3c-27fee6b55d3e"
        },
        "item": {
          "id": "6a1ab17f-0659-4145-91b4-62723a74b0e8",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "73aa99cc-0b08-4172-81af-2bef2b8236d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f4c8ec-5460-45bd-8634-2694e14cd35b",
        "cursor": {
          "ref": "8cddb565-6969-455f-931f-86287a3c15ef",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7c6e8139-9108-4260-834c-fe3fc64f4d6a"
        },
        "item": {
          "id": "c6f4c8ec-5460-45bd-8634-2694e14cd35b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "acc9f420-113e-4fff-a0fe-cafb438c47d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d948459f-3f10-4a99-81eb-7ff2119c9549",
        "cursor": {
          "ref": "ab8561b3-6cae-45fe-bf7c-2ba76207e920",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "75a57e28-8c7e-49cc-9a58-a2fd86b5813f"
        },
        "item": {
          "id": "d948459f-3f10-4a99-81eb-7ff2119c9549",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2bbfdc31-e6d9-4677-9e67-b21262be287e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a22ae4d-604f-4ff5-bd7a-578f4faf7234",
        "cursor": {
          "ref": "d5383521-dbde-4c8e-a82d-77dbc9548a83",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "84e8a098-1232-44b6-abf8-19ff01dee179"
        },
        "item": {
          "id": "4a22ae4d-604f-4ff5-bd7a-578f4faf7234",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "79b51bfd-bfe3-48c0-b215-6cc156adc744",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2279e8-86db-45ad-996b-ed1258ba7326",
        "cursor": {
          "ref": "566f32ee-55a8-41ea-ba89-749e6a889e1e",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2468baac-5bc4-4154-b7c4-0f2b2a93b2e9"
        },
        "item": {
          "id": "5a2279e8-86db-45ad-996b-ed1258ba7326",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "b3164c17-df5e-4c6f-b015-fa9e93ce0298",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 405,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4673ef8-a2b1-49fc-911f-7139da01a229",
        "cursor": {
          "ref": "a273515d-c0b3-41b6-ba95-d933fac1c01a",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "307812e7-93fa-4776-8104-07508a2e5d85"
        },
        "item": {
          "id": "b4673ef8-a2b1-49fc-911f-7139da01a229",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5d534608-6605-4242-a75e-41c060fc7e10",
          "status": "OK",
          "code": 200,
          "responseTime": 488,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8ff9e2-9cf8-4ca3-af11-29ff4e4962a5",
        "cursor": {
          "ref": "e74215b1-8e54-4d0d-a8a1-0c855b2eac75",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2262f71c-8791-42ad-ab56-bd426b7546a1"
        },
        "item": {
          "id": "2c8ff9e2-9cf8-4ca3-af11-29ff4e4962a5",
          "name": "credentials_verify"
        },
        "response": {
          "id": "658b2fc9-26ff-4006-beb7-3362933780d2",
          "status": "OK",
          "code": 200,
          "responseTime": 2327,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3aa0f3-3f11-4494-954a-df56f9564b73",
        "cursor": {
          "ref": "1fef6a6e-6e0a-4281-87a5-7a147ada7ef9",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "30580c9b-f628-4f73-9978-3812618f7035"
        },
        "item": {
          "id": "fb3aa0f3-3f11-4494-954a-df56f9564b73",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "84426d9a-a70f-4957-881d-147204748888",
          "status": "OK",
          "code": 200,
          "responseTime": 1987,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "101e45bb-facc-49e4-82e1-cabfa4777a93",
        "cursor": {
          "ref": "82050dae-3f08-47d0-9733-3fb8945ac1a6",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "fe42a76c-b096-40f1-9589-f5327cdc6d70"
        },
        "item": {
          "id": "101e45bb-facc-49e4-82e1-cabfa4777a93",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7ec5d199-3fe2-4607-9b03-daaca50a90b5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101e45bb-facc-49e4-82e1-cabfa4777a93",
        "cursor": {
          "ref": "82050dae-3f08-47d0-9733-3fb8945ac1a6",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "fe42a76c-b096-40f1-9589-f5327cdc6d70"
        },
        "item": {
          "id": "101e45bb-facc-49e4-82e1-cabfa4777a93",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7ec5d199-3fe2-4607-9b03-daaca50a90b5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101e45bb-facc-49e4-82e1-cabfa4777a93",
        "cursor": {
          "ref": "82050dae-3f08-47d0-9733-3fb8945ac1a6",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "fe42a76c-b096-40f1-9589-f5327cdc6d70"
        },
        "item": {
          "id": "101e45bb-facc-49e4-82e1-cabfa4777a93",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7ec5d199-3fe2-4607-9b03-daaca50a90b5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d791dbc-c325-43d9-af62-1b44c9b800ed",
        "cursor": {
          "ref": "90b71f6a-72e7-4e81-9c26-812ea99eee16",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "40ea5648-79fd-41a8-991d-1ab04b800855"
        },
        "item": {
          "id": "7d791dbc-c325-43d9-af62-1b44c9b800ed",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "064c128d-4ad1-422a-8af4-611cf5627b8d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 396,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0916de87-ed44-45b8-8e24-0ef1e2ea5e4c",
        "cursor": {
          "ref": "73d078bb-79ea-447b-9bd0-3e18ed9c4d7e",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "97fafcc9-27ba-4419-a411-181560b5dceb"
        },
        "item": {
          "id": "0916de87-ed44-45b8-8e24-0ef1e2ea5e4c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5f123f16-7020-45c6-a29e-2c8dcf4afb56",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0916de87-ed44-45b8-8e24-0ef1e2ea5e4c",
        "cursor": {
          "ref": "73d078bb-79ea-447b-9bd0-3e18ed9c4d7e",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "97fafcc9-27ba-4419-a411-181560b5dceb"
        },
        "item": {
          "id": "0916de87-ed44-45b8-8e24-0ef1e2ea5e4c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5f123f16-7020-45c6-a29e-2c8dcf4afb56",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cfeff14-ec72-42ca-9e96-d64f9a66238e",
        "cursor": {
          "ref": "ce526a4b-86d3-4b33-8ad3-13dd77005d2e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9bb512dc-d0ab-4e6c-8955-d7c7288c10fd"
        },
        "item": {
          "id": "2cfeff14-ec72-42ca-9e96-d64f9a66238e",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "40331d20-f064-46d4-9701-ea066d6bbc3b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 620,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76cd348-c86f-463a-9215-d64de506b4ef",
        "cursor": {
          "ref": "bb12e90a-5ef1-47d9-8498-a23fb852c75d",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "421c1304-3333-4d3c-a686-9405126fe235"
        },
        "item": {
          "id": "d76cd348-c86f-463a-9215-d64de506b4ef",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ac302cc5-b3a4-4b6d-a3c4-29c58d0ba216",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76cd348-c86f-463a-9215-d64de506b4ef",
        "cursor": {
          "ref": "bb12e90a-5ef1-47d9-8498-a23fb852c75d",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "421c1304-3333-4d3c-a686-9405126fe235"
        },
        "item": {
          "id": "d76cd348-c86f-463a-9215-d64de506b4ef",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ac302cc5-b3a4-4b6d-a3c4-29c58d0ba216",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e4c556-0f0f-4de9-a577-4611bee24afc",
        "cursor": {
          "ref": "80666c5c-e3c3-4192-9bfb-5f628dd1c049",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "938c82ad-da2f-4d5d-a47f-681bae32575c"
        },
        "item": {
          "id": "21e4c556-0f0f-4de9-a577-4611bee24afc",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "d6711b5e-cff6-4c24-a4d2-15ee3be968ef",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 613,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}