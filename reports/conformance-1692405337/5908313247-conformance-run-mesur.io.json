{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "38f5b86d-2ec1-4819-a94b-6e982ecec779",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ce15c26f-ccb8-4c18-ae85-a766d9670134",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7bbadbfe-d694-4352-b38a-345463a7b6a1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4dfadc9f-65d0-44d0-a448-28c60e6ec6ba"
                }
              }
            ]
          },
          {
            "id": "e974b04e-0ce9-4f36-bb60-1533ce0997ac",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "13ca93d5-f309-4e5f-a657-cdb742e7e3ee",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2e535456-7677-45e3-a78c-6d1c5a4135b1"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d1da3227-6b53-452b-aa58-0fdc9cbdc7d3",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6cf0a880-17bf-4d49-8f67-d825ff130fd2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1977faf3-291c-4c43-87e7-77defc35353b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "14795716-bf1a-4631-b309-0b34551a6f6d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4297d1a3-c446-49f6-8b3b-aefae38f3994"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e99e2417-65b2-403a-b4cf-4da40021bd46",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6a608946-afce-4d57-9bf6-99f608d36d2f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "094f968c-ed63-413a-8438-f8200b164ee6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c4f4c60c-8f30-4b5b-8187-ed9afb7c469b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "640f48de-2633-40f7-838d-a53747246dbe",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "78b9b3cd-4255-4745-8520-0737f59374fc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c0d064d7-0964-4c5e-ada6-7c4b9b3b5a4a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5151042a-1d2c-46e5-bcd7-7e580f00e5a7"
            }
          }
        ]
      },
      {
        "id": "26b2579d-20f6-4e49-bc01-d5cafe741830",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e20a79a4-6634-4c66-a9b5-dc068b55bdca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "11230934-a53a-4a01-a26a-4a8439147bf3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a77614ef-cd8d-46ff-8e0e-750b0317c800",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca799a3-4766-4d1a-8d8d-e5fce046e43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8734cbb5-39c7-4949-8ef3-de097479e1bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b51549-5f31-4e62-b7c7-54f42b5df5c4",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2abadb6-b0db-4e95-8657-8d1f966c05a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29c73382-7e5b-4295-aa0d-27e2015b06ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36fad17-658d-43ed-af8a-aec642fa3a64",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecfaecd-68d6-4b53-b30f-5f1e88305cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "517cfda7-20b2-4a27-98c2-90eecfad0563"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "335b11ef-0d96-4d86-95e0-7f28fc8b5adb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "18c3a09d-9249-40f7-86b4-36cf502f9784",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e5e74a-1264-4dc1-b56d-7dea70821451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa498b4d-8562-4799-94ae-6b027d4dd5d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f08cb44-1cc1-4263-8ac6-d7f37012e8f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e8a11e6-c6a2-4444-b4f0-51523f48bd0d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bf36b315-783a-4b63-8ce5-c7180ce35940",
            "name": "Positive Testing",
            "item": [
              {
                "id": "54ad7042-6ff0-4c8b-866c-ed308bad4ce3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a3c4937-04bf-499c-93e9-db74129e9b20",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "43d3f02e-4ddb-4db9-ba6c-64fe9edb2975"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dc79cdf0-e877-49d5-8764-6122acc5c2c0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "12f67932-2117-4414-a250-57baf3b4a254"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0242a99f-975f-4145-9601-27c3e217455a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7606145a-6fb2-4f57-8967-34dc2059833c"
            }
          }
        ]
      },
      {
        "id": "168da597-38ce-4d30-a98e-d33415dad57c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7a6a29a3-27be-4529-bbd3-8464403fce17",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d180e604-ef22-43ff-b8e9-ff358f0cc5a3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5a3feded-0d29-455d-84c5-6727f37c69bf",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28651cb0-5f64-409e-b0e5-8f667ef1b86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efa0f4a1-9e47-4af1-ac6f-9bc56ca16c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ec1a18-9c0e-435d-b5c8-2e3c6e485a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7610257-9b66-4a27-91ec-8f9c1ca5a26f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b87a3b5-3477-4b61-8712-ab4e9cc75300",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd1cbc8-dad3-4595-b078-9f41986593f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d585240d-f241-46de-b828-fa1e2532d1ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610a8baa-a880-4f5a-a811-4f3ee0a2200b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ecabd03-20e2-4959-8ac9-d5a97031c978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37aac36-61fc-4493-95a0-abc7037af355",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f219e3e-a95d-4538-8547-500d659dcd35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efa10d88-445b-4d54-b881-347b63e0b0ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca19b5c3-9df6-4322-a911-b06fcf5abac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56e81047-3221-4baf-a44c-342a9b5d7a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7253e5d1-b002-490c-81ea-8034023090f7",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8cf242-f864-4575-92f2-6723b5dd97f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd085a0-7a4b-446a-b40d-afa986aacfcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9a1147-6d57-454f-9cef-e00d51127fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4fa66f5b-997c-4bd6-ba04-9403593fb335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12771976-1deb-4dc9-91aa-3a1a747edda6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448024c4-603d-4aa4-a9c5-353e1550a669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ff6794-dd4e-415c-8b21-1071364d064d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8e4c04-41f6-45db-9e88-2c1b21296253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "096c50dc-89a0-4af3-b8e1-d3336bb312b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398ec2be-148e-45ec-8fbb-b80d32bda76d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24eb031d-178d-4c96-805d-7b06f0133510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38a5030c-eaf2-4a47-935d-a4b6d6c9b965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b71eda-649a-4467-8511-1d01a2a957f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c560ff98-dc76-4337-8f07-caddc9031cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3fd8847-9fea-4218-ae03-db89af69aeea",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb8618f-848c-456a-a148-7c17e2780464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4968936-b777-4bdf-a397-9de3c835da99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb21710-81b4-49fe-a6e3-e3a87db10ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "572fc629-e7e9-4b3a-9b47-4b531c30e647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c2d9ac-879f-4e37-b89f-5a3517a6ad6e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f063d5ff-51c3-4753-934a-360ea28f529c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fdff29f-b226-4014-8749-37226d52f416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad9a8ce-dbe5-4c2f-be12-2bda67fb1dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4873dde-0a49-41d2-a163-c391bbd56d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07237412-58cf-4d6d-a5a6-3afaf5149e9e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b96e14-2108-4a3a-8c99-b5b559e3fd4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16f13f48-f43b-4a2f-b74f-ebc243c6ee6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23045335-9383-4240-81b9-2c5afdd78e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ee7f7d8-c135-42d0-aab0-85b3f87a286a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d525600-04a6-4e67-810b-5f37de99a07a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68fecc02-a216-4774-ac17-b6ed3b6827e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49166641-1b9f-4884-84b4-4f18f32f384c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f1a09f-6e37-4276-80ca-d2165d6fdb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2cc83086-3c76-4220-aac8-19f42083f0c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d5cee8-bb47-4014-bdec-8400cef61477",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b65fcad-80e8-40e0-9e90-5511096822f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db919dd8-45b2-4082-9cca-6bd40b6e3744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3766901b-f83d-4185-a021-bab55fbad0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c116721-a966-43b1-86f4-3fe9770b60bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90258200-56d5-4e5b-89e4-f398ac66cc14",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56185c66-9baa-41e7-96d9-1a9167b0c25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22a94e58-523b-46d2-bc46-2ef47633dfb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e251b2-452a-4dd6-9fb6-f41da13ee3bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8cb6d19-29b7-44e7-8154-8d5faa5da9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086e96f8-c1de-48cd-86f7-153b83c2827e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a49ea4-eb01-4c0b-ac09-8d1f3cc88a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3536a34-6371-4ae8-8700-0cdc3f76e4ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1310ad-ea2e-4688-8cbb-76567b6af192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45e5379c-52f5-44e9-8043-68556a11671d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe66cff0-7a3c-4baa-9370-ae5c213535d8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e628899-c625-4bbb-a967-ebd2361ff539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0ddaa59-0a9e-430d-81d0-c141ef390bd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f21e4b-39c3-4142-8bc5-c0d5e2a1e3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "242efb21-6bc6-49c1-bd2f-e1e2cc67b28b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89360e51-c9aa-47e3-a0f5-a7cc14c95442",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92b15c2-e762-492f-ae64-0fb094555750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c25927-fb94-4685-bd2f-e41cbcb73604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f000556b-5c91-4b8d-9362-00f731cc09da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0941112-a325-4bb0-9669-2acf8b8aee4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c02f50-6eb3-49a1-862f-34bb5baedf59",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65cbca0b-f53a-4950-ab8e-f80c901f38cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c74c562f-7ac0-4d3d-bbef-1970fcdc9323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1935efe1-f3c8-4eda-b23b-28f74f7a2114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c823ab28-c36a-41eb-a0bb-231d5bfe8eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de78dde1-284c-4a97-8590-388425a12db6",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e26ef3-0b74-46a2-80d9-1918570b425e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef6d9891-aa34-43fc-b70c-a5de68494d8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3249369c-3304-4ace-8ecf-bebb81f37195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed9d8fba-9dcd-43d3-ab67-0aec2767bf9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0481db-7ec5-44b9-8946-71f11fe4bf79",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3094112-4954-4ee3-9404-ca81dc032918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "276667ec-e020-4e88-b634-ef6321342a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436d2a89-05e7-4c5c-be2d-724ce15b1105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f0ba7ef-c961-4285-a16b-532db4863b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eebcd77b-1a4a-48cc-8b3b-500c8de6e077",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e6db06-afba-4638-af95-4686a66a43d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "494d3490-0a24-4274-a0d6-d9b6f0c947bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5694b713-e1ca-4666-beff-e313ea3e63bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6b823a9-41b5-4725-bfea-392487af473e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad165e84-d182-44fe-a57d-f4904b22d624",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8a74bc-3a3b-4cd8-86b8-e574b04d5869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d23990-4b2c-4b1e-9942-aa510b521586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0581d685-2260-4643-bd2b-f7cdb844714a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "78231316-a09a-447b-8e7d-b4f00e93e576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8cdc5ce-0c95-4519-a6c1-2c7c57c0a1a6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "272eacd2-bf3e-4c87-a218-1d88a1f40c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb617a9-d6ce-486a-88e3-5cf764a7dea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "989f76c5-6245-4d40-9917-90ec44c3771b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f223c19e-1b2f-4789-9711-904a759dbd61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e18d3d-f557-4e5d-8053-8b6e57dffee9",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff432cb-7056-4f17-b574-99dcf24a954c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38ffcae1-ee2a-4aba-ba6f-188b3d6666d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d83a063a-aa72-4b4c-9aef-5c6b5b4b3003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b73ce95f-dab3-4168-be8d-0cd7c4e4aff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa01df9e-ea20-4309-95dd-1f17b43e41de",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc91a5d-edfb-4385-8941-3f6ec9856c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ab3ed7-1bb2-4ee2-8235-c7abb88941cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3f6191-f7f4-4bc5-b252-721691d483dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6789e4f8-33b6-4726-bcbf-45f1c3bc00ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1309534b-42f7-4fdd-97fa-5309af41dc13",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc91e19-0050-4a06-9ce9-11d100c38a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b8c2472-85d0-45c6-8fec-2cf363174444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bec4beb-6e45-4950-808e-f3cc536f0573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "35a1e310-3ac6-4567-a3e9-e7934d129c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f8b6dfd-7c5e-40f9-88ef-186cb9d965e5",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75a2d9f-2bf5-4065-b23a-ed087e162558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f7aff0-d4cd-4255-b174-8805ac86f735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c34b9fe-6d29-49ba-b4dd-af77e626e96f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c130d7eb-b204-4042-966b-e1f2bf7c84b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59398520-56c1-42dc-adcd-ebab573fea1e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "273ea64c-cb6c-4ade-87ed-e9efc1edeee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b361b186-cb66-448f-b808-5a01eb634fed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88243346-2413-4ad8-9d44-063f103b4a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1000555-568f-41ef-8ff7-512520ce4734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f173bb-14da-4274-ac53-e909012fd45d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0914eb39-5d40-496a-9c02-2c51be2103e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05f7c40c-1e53-4b21-9ed6-b408d260d751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eec6274-b430-4954-b4a4-093375bb0aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fa19296-7957-44b8-96b9-a494b6e9b7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d44e48-0d02-45ba-836b-023ba6c6299e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a2737f-90a6-409e-ac0a-31b39b56c199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "292db11a-b112-42a7-8278-31f60fb73dd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a0f843-9dbc-4f8a-a9a8-8e509249a53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f67e8e7-e9d8-4f35-b3f1-52ec4a36eb83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0bb8efe-6074-4f74-ad47-0fcc7a7077da",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3dd9f7d-ad58-441d-aa6c-cfb9980a469f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fd149b3-bda2-4ef1-8720-c8b234a757df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd88657e-5ac0-4ff0-a974-470e0c6f4acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c87c4a45-4077-4dd5-93fc-e1eb48719114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5ef478-925c-4c7a-abf7-f8060cfd636a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "490ece0b-1b82-4d25-ad19-9465a514aa20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cccde57-4086-4b77-845c-049d6c52e404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e47227-3e1a-4c74-aec9-ef5748f642a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "66077e01-4a8a-4e17-ae8a-9fcdd5957b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3742ee12-a464-438c-ba2b-b0cc86fff567",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2fb544e-90d3-4b2d-bef5-a508e518e538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7865736c-4431-4d0d-adb0-502c5a1e4c7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d53c832-6d7e-40ba-a8f8-db5143ff9cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc17ee66-8051-41a3-a37e-f69f3ad742c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193dbbb3-25a8-4570-ba11-87d14b8ae460",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153b0b6d-b66b-4c2d-9712-21a7d7fb6714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a0fb7d-4fa4-4c50-a163-2f9ca40d6149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2066602b-c18b-4b64-b11d-ade9b6c4c05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c31f4253-9ef6-42bf-b8c0-ad5f87776129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b50371a8-f8f4-4ac7-a86a-175eefc19b86",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e110e7-dfee-4df8-b734-dd61ec47b14f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c98e723-b20f-437d-814d-6166141d20e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a724f602-22a6-41d2-82af-8bb7bbeb162e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "62c21e53-2959-4ff2-92c0-b893364f99e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed34ef7-eddf-4c39-8f05-feaf8766e385",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61536604-c7be-42e7-a332-ac43dcd1fb90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba51ffd2-7866-4c09-96d2-c6ae8438a636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c914a8e1-f2ae-4b9b-9151-d4fcaee15f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b74373df-b7b4-40f4-922b-33807424ed2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf1e67a-738e-4f41-bb99-80f6dc706cce",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc31460-5684-40f8-908d-5f0bd73b5d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca33d3dc-f72b-4b9a-9203-2dc646a6b850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27be5ba2-9004-486a-8ba0-6b8f3eee718d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "84ce433a-93e9-4cdf-951b-8eb757cb4ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86db0540-9e1a-4fda-bdca-22faf68163bc",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bdf292f-4be8-4b05-8470-05e0be7f524c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eac6cce1-7e7e-4bfb-8dc6-025fc861f89f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8203e87c-78b9-4121-b55b-c8fe6056e96f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "20c07a45-eb7f-4b74-a4ab-2176157e2a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f74d4e5-99d5-4cdc-93e4-f44322f3ce20",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02991dae-8227-4c3d-917e-4dfbddc6a1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a81a3e74-b672-477b-b83e-3f664863d57d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab0ec12-d816-499f-8fed-cd103ef74807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b7f0b92-59ea-4f0b-9ca3-94affc74aee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289c2d0b-f466-4d42-8d1e-e54793aaca61",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfdc1a09-007a-4a20-80c7-886fef2e5d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3825b7af-e4ce-4829-bbd1-50dc7147c584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c39fe7e-4094-49cb-a68c-39afddf6a6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a3b6889-6ca0-404b-a85d-d6dd6af5cd3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd74a40-4a15-4899-b70e-047b2767df0b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c831cfea-da67-499b-b841-1d441d1868af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fda7a46-3801-4f05-991b-d28f034a00a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4162690b-89d9-4789-980c-6d28628f932c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc451716-abd9-424f-9c93-407d03f237ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75eaa97-e76f-48e4-888e-ff784341825e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5cf464a-ca12-46be-bafd-a982bd6eaba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bd6a708-d5ca-4022-bb0f-de354f921e75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d959b838-20ad-4aec-9274-59ea53c6e534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1979070-f846-4562-bb20-3b7c13130198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89f430f-2061-4bc1-b97f-da4021284e05",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50a1afa-85b3-4c62-9049-759509fcb3c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b2eca44-5387-4c53-832f-240acff7c3e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371807f9-3cde-4896-b1ae-19c90f5a0993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0456b0d7-fc43-443c-b89d-56e784fe5adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6cde483-ae6e-4bd8-9e8c-ead121530cb1",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c1c4973-c72b-4ed0-b2c1-55a9ecc9dbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b56a325e-17d6-4959-b8a5-762f468520b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a4acad-0c67-4815-bfe9-32a17f606323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "39e97004-eaf8-4cae-90b5-f1e0f32678cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab48e19-1f4a-4cfb-80fc-14cd5a3e4b75",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04246b37-97fd-4b2c-8208-00bec3ea922b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d27366-4264-43e6-b254-ebbc0350fb23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40e3b44-59ad-48ec-8146-a646121fca59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "66b4fb21-42e0-4463-808c-08fdf5a949c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706eba54-ceb2-463b-b480-c62f1f42fb03",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8744224d-9c06-40e8-a3dc-e31b184370ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85f18b5a-a76a-489c-aadf-9ea051373379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03558190-0ccb-4d0b-98c4-f25be83d02b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c59ba471-bca7-43bb-a63d-03781e938715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b91b3a16-9861-4dc8-89f4-128972ed332f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f19bb84-ad09-449f-a07b-00f5db7fe104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68cdc816-c4cd-4d0a-9477-15fb28d02ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d30861df-d3cc-4824-9df9-0c717ff30201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bc2c5e7-cd6d-40d2-8417-7983bdfcba5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37900117-41c3-4a8d-a568-10ddb1f90a96",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea8bedf-f903-4fde-8611-df0b568440ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70513932-6e35-4a88-b224-e270395cfc0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8820560-9c60-460d-a426-fd2a56b33431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3aea242a-d12c-4847-8412-2a293171ba67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26af2351-f9ca-4cbf-b1d2-76c735167e57",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad44ced-9b9b-4cfe-a324-d05ce31c0d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f29fcbe5-5236-413b-8058-8680ca002008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3330e8c6-27a1-410b-8ebd-bca70db902f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "db43b4b4-f0b7-4722-a7f4-532c341f1217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb5ae44-55c5-470d-b101-6be083381f0d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "048cf451-dcb4-48af-9128-ee07c10e0cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f439c394-cab0-4179-869d-33da97116423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b89828-86da-4d69-abc5-2b495a69f2ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c02450fe-f50e-4b4a-80c5-14ebad61090c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81370e28-a402-45b6-9a92-0f6e5fb4df9c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96f55123-c998-4f6f-841e-edb14d5e339a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bff605b8-ceec-41c8-a7b6-e3c4d4758008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262a9fc3-4659-4a35-86b3-dec5473a30ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a64069f-bb5a-4c81-beb9-c6993b85ae86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5148e0f1-0965-4697-8aa8-2ed7d564f521",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84cdbe36-fd5f-4772-851b-67aecf07c9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00199805-5417-41d8-9214-5c2c54d267a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf89351f-bd83-45d7-a810-822fca7e51e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f6c716e3-05f9-449c-9d24-99a760b55aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91166d0f-18be-4929-9a80-7edef37afaf4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f7abdc-d686-434e-8365-bb1424425547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ff2435-310c-4b69-8a18-db3a54298ebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c8a8ae-7e8b-421b-9c05-e9921aac511c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6081529f-b39e-4da5-b578-955d9ed3c096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e5e0ae-50fc-49f6-a088-fd18e480da21",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "696e5d76-7cf7-40a2-b128-6278e5105862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d675842-c89f-448d-b178-e29b97b9aecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5f0996-d4fc-4e5b-91cd-cea226c0be2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "acfb6317-b824-479a-9b4b-46c94e96d6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f2a89e-a8b7-4a76-8e9f-46673700eadd",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5423440-b879-475d-9ce0-deff8cc70266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9286310a-cd5e-4c85-9aec-5ca23642f601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d149ff-af40-4e1f-8f07-08849b7a4b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "72ad0288-49aa-4205-94f2-ac8f05577f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e242563d-85d8-4dd8-8aa0-9a7859cf1e34",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2a2e99-60a7-4fad-b5ac-d027c077eea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ced74fb-4c08-4d02-bd03-d7c0a722a3bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78b5a76-0adb-4edb-8d64-c686576b1ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5e6d823-8e2e-4180-be23-338a3dd0bea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a5426b-517c-47e4-8f62-fb61e26637b2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3750dbe-adbd-47d3-a369-c79565a9784b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b1bceb8-9665-4ce5-8989-7ba25fae56fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba144b7-f31b-4a42-a6ad-f1c6de80a3ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a5a09bd-2dda-42bf-9961-d0fbcf29211b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98940c5e-2e9b-4d08-b39a-dc3bc877b241",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba72ee5-916c-42dd-83b6-5522adaed87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93325d55-348e-42a3-9ca7-720c3ae95c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83db92e-f0ef-4028-8aac-bd411f259a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1713dbf7-e93c-46ee-a844-070b2e219b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b1b1410-73df-49ed-a7c1-b825ef5d91c2",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8469f1e9-915d-4d4e-93cd-7d47b627b880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef472831-a5db-4446-bf16-2efa58bb2507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32beb37f-a262-4c59-a210-db1f11e8fa21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "43ae0e40-747a-49d1-9236-48c8aad684e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2a68d4-4c31-4a71-8bd8-b8661f17f74b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2ab567-8a28-4e10-aad0-bf2b40da6e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb0d856a-118e-4b0c-a595-89610c7e1b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c505132e-c742-4568-bb9b-5b8c3eb5099e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9c4f522-17d4-4923-87d3-aa9ba69ad296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f91e29d9-3e93-4c81-acc2-55e9633b3033",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9aae554-412b-4002-bcc2-e28ab7c240e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99242b8b-5f91-492e-9416-c8cdae71979a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92d3528-8efa-464d-9984-df0b752e1b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad0e8465-03b5-4489-a515-b24e9c98653f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa035631-cbd3-4fe7-85a9-4008757bf19c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "208d35b3-dd1c-4721-9bcc-96fdac82e483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16bbec6d-a74a-44b0-be1e-cf5498cf8255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7f8916-54e4-4e5f-8f97-e9378b670b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "de192735-f72c-4799-9b77-de4b528892de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8866e81-2592-4938-af3b-c623d306a0f3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3621b71-8a8b-47f1-898d-2f614caf2462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb9713fc-2744-4d0e-ace4-e4b26efb073a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "817b67e6-afd5-43ac-8ec7-bab7857a5473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e977937-0ecc-45e0-9ee4-7c2a3234a596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d01825d3-8608-48db-964a-e380fd3b0043",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa6a29d-4e12-46d1-b701-cd47b442ea97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb60594a-6814-4175-b968-4df8d082cd10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d4f326-7a53-49c3-aebb-88ea38dbe65e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca318f58-b169-41d4-add9-d2adb71157d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca2cb1a-ed2a-4411-9537-a440b3274525",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e369d353-c579-4814-a895-e5aaf7b760e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aa6c8e7-fba7-4727-afc1-7b6774789886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f183fc4a-75a0-4260-8eaa-da21838cf655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f2e6c09-228b-4d82-806e-617c9ca47e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a39787f-49aa-4256-b1df-6b2fbb852118",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b317d9fc-e255-455e-8fb5-c266b9a08b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a84df40-558d-4e3b-81a1-7a495f3805eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7b178d-a26c-402c-8435-9f345ed2391f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "73100098-68cf-447f-b541-9753a1eece7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e67f8d0-b8ee-4f66-bea4-48fa427a8d58",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2921f00b-c31c-410f-96de-1cbd5e230045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b66e0ad6-f431-4cdf-8ac0-d74c65d1824b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5bcfe9c-5215-44fa-a647-2a4999b3b5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "11f65760-798f-4c05-826d-bb51e5bae627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f723e0c1-6a26-4a35-90cd-350d011722ea",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2ed200-9bb8-48ae-815d-2e699c36f4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2b6637f-dbe9-4859-abaf-a1f0d908ec3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012cdd8a-cb79-49f7-a44a-6154aa8bb98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de571273-62e4-4e34-a9b1-3b81d86d0f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c20285-c79b-4f0d-b2e7-4c4ed9ca5cf9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78207c57-85e2-422b-90fb-e9f62dc2acfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f118b76-3da8-416b-bab9-986765e300db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14318e23-7751-41de-b1db-f3df708d503d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "abad30e7-12e1-435c-895d-97658c91a577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d3392d-5de9-4cb2-a9f1-8fcfc7078478",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "627b3fcd-3088-491b-9b5c-ae1b4d3e0541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3ef2734-3d22-47e7-9a73-5a8eff0c0924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8350b9ec-ec32-4012-af0f-602465964fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "10310949-0bfd-4735-bfbe-aec58be8220f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c328d6-91af-46f5-9b56-e70f05bd0c50",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed647af4-7b98-4da5-aaf2-881b95db4f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0709ec32-c021-4eaf-97c9-1261806468df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727a9cd3-7a06-48d4-98b4-293244a81802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "67e7274d-2542-4297-b52a-6b929977669f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e243630-b314-49de-ac00-491433b83b8b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f87fb70-022e-4de5-82bb-1513e9d380fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b9bae7d-5e8c-4195-8732-39fe5fd48a69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e3a556-1f81-46ef-821f-58415855a7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b64fce81-ec6c-4432-a0e5-07a54410dd24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cbf2526-17ea-4c49-9fc0-7a4b0d4a4e32",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cfa9695-a6fe-4a11-a1d2-e23ee189170c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1941d67-010c-415d-9a7f-dfef8ab6a29c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a15233f-013b-4b41-b969-2d4d8b43c160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6857d53-3c5b-42eb-adbf-47569a1e7730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc68e4b7-d1d0-4778-aa80-fa43cc5dea5a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18cd3d15-d912-4deb-83cb-1baabf88aa4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b65a96a-8b5f-41f5-b44b-dd97ac5264b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42ea07f-0e08-4b04-9c5c-a75050ea0bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1133e60c-d330-4634-b7ef-fffac3135006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b2f4eb7-31b4-4a76-9e1a-4a0d2ff4899f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69d73df-e428-49cc-93e9-d6dd6fdeb081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc578229-c046-49c9-af77-daa6e903a757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5519375-0cd1-408f-a096-9fd49ddbe96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba5c1703-cd03-4f4b-b589-fdb1196db97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12d2a23-0270-44df-b61c-0359535283a4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0711d5ff-e6a8-4ae9-9d0c-826a5a51da3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1f7dd9f-0809-4deb-b691-6395a006fa48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b7d7c0-4b0b-4c31-8f82-7d9b0d301acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "01d39775-32f9-4883-96cb-f35711249df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47125c7e-212c-4a94-9a31-2ec7633d9f24",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4387f26-590e-4bbf-99d8-63e27dd43c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f08d5193-1608-4301-9902-094649a27300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75430c6-ba53-4810-9adf-6507390ff420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3edcd06-974e-4bfe-afe7-c15bf20a2c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5f650a-448b-419c-9670-de4a7c66ce34",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e5806d9-65df-4484-b21a-3986a721acbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf01a1c-1f13-4853-a83e-e19080ee99d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6150e9cb-020b-4942-90bf-aef8cc14d2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "79a11434-2433-4178-894e-cceff6ea9c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8defa377-af56-487c-9e73-3b06c3417510",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dfa3b71-8ddf-4d2e-b6bb-05e41f3be733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc4031eb-e2a7-49e1-80c0-7664695d68ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d9e2bae-6f34-40a9-a3d3-12ae48e5b5e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6affcc30-60a6-4a7b-b738-e77dfb652722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6138eb-41a0-4d40-8045-b8e056bbcf50",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79615e9-e8b5-42d3-817c-8006ea004415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae8135e-d914-4e3c-82a2-c223d62019db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e98367-f524-4029-ae3c-f719e19579bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "00b1dfaa-94f7-4706-ad17-57847ea95ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e87a16c-45fd-4bdf-aa8c-487bebdbcdab",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba55490-424e-4cee-85ed-91667a52d39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b238add-ad0f-45d7-b0f4-3157878b489b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c070cfe0-3717-4057-9a56-5873ce525005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6013dc65-81d1-4bfe-8823-1c0b4a283d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4cf98c8-f61a-48b8-93aa-e8e81c050020",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e729af-e29c-4b2c-b0d6-49db0efb57fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d87a13bf-597d-4f83-8c23-2b34981bb7db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4209a8-53b2-46d6-aaf6-b4a554e9d8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "92645d76-afa2-4329-a339-291705f12bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051e0d99-4ad3-4fa7-9ec9-88b471f9d328",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e29f54a-a700-49d1-88d9-cf393adc7e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8aa4b2e-4ac0-4e44-bcb8-85c9cfd84669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6889e286-4cba-4961-98f2-456d475f6511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "13f2b9aa-a5f9-4340-ad90-19026d725374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca62cf9-0264-4b15-91ae-3bd4ae85d764",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7705bd1-a26f-42e6-8ef4-69b8a271de31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0828af57-b8a3-4ca3-b97b-e70b543a1d6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c351afd4-eff5-45ce-8952-46406e7c8568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "63c0ddb0-6d7a-467f-919e-6880f269d9a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed8cd96-f4cf-47cd-aa4b-aa1607a125d5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5354995-ff19-4483-9e5e-1e856d47d55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aad0de1-a7e4-4b71-92e0-7c83e1a9de9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce93a0e-d2b9-4a19-8e8d-a7405775e3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "25668700-6aac-48be-b0ca-1a7cbc9a3eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4dfde46-ab8b-494f-894f-374230ef0d01",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d570c5c7-80ae-4a43-8f25-eba623a338e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b8e13cf-8b54-4ac3-a2f8-62ca1cd015c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4a334b-99cd-46fc-a6b6-310178078cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29878a00-677a-4c13-a10f-60e052b4014e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6e681a-ce01-45b5-9c5a-db4688a90e3f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e567297-9c82-4137-b753-eb9a4fd28814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dbbdaf6-fc34-4264-96d3-e8b0f96af0b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67bcc948-2ea6-4c4c-9aae-da039b924c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1b0d45ed-7eb9-41f5-ad26-ba0a40736f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d9ac84-bdb0-40e2-89b5-5ec59f9b3574",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c42d716-06f2-49d7-9d67-92f7a35f4b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33936f37-037a-4f8c-9fc1-d770c451c959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8aa6b50-6e1c-4276-9c89-f84190dddafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f278c49-d669-44d2-aede-eb9bc61a1851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "330b536a-05ae-408f-91f4-059ac8fb0062",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f37c88c-b6d5-4c8b-9311-8ada0657ab7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e18e8bc6-1b35-44bf-a6c9-73a43f749c88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2216b6d7-bba3-4a8c-8de7-ea838b4eda0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d0b6d1e-46c6-40ef-88cb-aafbff6b758a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b046ab3-3cde-4eb7-b9cb-b5a2fdfda82c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6303bbfb-3c58-432d-8a62-688351ad4674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "772b2d1e-23c9-42f7-bfa3-690839b7c817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c0d1e4-f5c5-4ccc-aabc-fd9dfeec927e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d91ed385-0181-4f61-876d-3b8f240a154d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7c623b-d04d-41e0-9523-e20153973f3d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f64cfa-6498-42c8-9c0d-bb4f06140039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "607082c4-7c36-4bdc-95e6-5772e05b9c04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90fc46dc-75b4-4192-84a3-52f43bc0ff6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1ec5ea5-19b2-435f-927e-ec741c299038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a1e986a-0fa2-4fa7-ac59-637edc5b60dc",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d369ef-3fcd-414a-bd43-78d7874cf211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a804219-1c77-4dfd-96ed-3f5a04be6f5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377f4b25-ad9c-4bd3-b1b3-de4aecd3d0af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cdd8f421-a767-4455-b97a-ac25db987412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fecf24b1-e5f9-44c0-b82e-98d2dde7256b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c52f9c6-591f-42df-b775-05866b5fe8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e23d00cf-ed32-4483-b189-b10a82c86a45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ab6459-8e53-4c34-9d6b-07aeacb97c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8d58e0f-1a04-420d-ad95-310883dcc5d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8143a2af-95d1-4292-a1d0-29c129ca3ed5",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8632a9d3-e3ac-49d5-a469-5d36291f7c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0abc9b16-5bcd-4f2e-a296-3bfe2cafb3b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb391ec-3b44-44af-8a1d-28927e6cce4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "02ad9de7-1fa0-428a-9de8-054b48be77bc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2ab24535-baad-413a-bdb6-2c4e0e22789c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f0de3dce-6cbb-4793-af22-08463e27b66c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e85074-187b-4433-bce4-0be7f093728c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a49076f-bd32-44ae-83c6-4c05b2aa091e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e53651-36e4-48bb-bd05-0e27e7ee29ac",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7452ee81-54f6-4bad-93bf-cc7bb2124d2b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "727658d4-e352-4f8e-9170-074f7e191220",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0565f4ab-7064-457c-b210-416f8a064242"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "db843f94-7661-4180-bfb4-5e817f9b1ad2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3b7d380-c433-4023-b983-a143f32c08db"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "36acf34e-18c5-4daf-958b-53703f86dbff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "425195ca-cc5e-4700-9445-d4edadb79f7d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e14f460e-b667-42a8-ba03-f7065f8dc2a0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cf7a7fbc-c6fe-44ac-adf5-5af5ed89cf2c"
                }
              }
            ]
          },
          {
            "id": "b976c287-679e-497e-9975-de7b9030adb6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2b427c3e-2247-4990-a1ca-1b3123eb01c1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "54b05d58-2cd7-439e-8995-744fc0caed24",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "11edcb6f-427b-405e-aa36-48a33ea96cbf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d36c3b2d-7f90-4171-9f28-6206011e6740",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dae9c688-fb10-48de-84fd-069455def289"
                    }
                  }
                ]
              },
              {
                "id": "18ccf3c9-b516-4b25-9025-5aef79766239",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "87fb1809-3184-416a-8825-e0a624f733a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "016fded6-740d-473b-afd0-52f1fb5902ae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7ab6f20-9cdb-4ac7-a91e-4ebcfc3b7c78",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b4a82759-d43b-4187-9676-d6a096583283"
                    }
                  }
                ]
              },
              {
                "id": "052090ad-9f95-4dd9-aa6e-3988098fe51e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1740eea4-ef82-4e16-8de9-fd63a8672ed9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4513c42a-11ba-40f5-8533-ac5113bdc63f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "648cdb33-d56b-4663-9954-5cb816ab5a60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "33596937-43f3-4322-89df-f8f249efd8f4"
                    }
                  }
                ]
              },
              {
                "id": "981adedc-4f7b-4e4f-a8c6-361202c2a8e7",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a6b75d5-a0db-42ce-8d9c-177563585f1b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e952a8d-1575-4b23-af74-8dc8b6f2b899"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19df4184-1714-414e-b840-0396b7684c31",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "df6eefb4-fafc-483c-9d4c-353508c09965"
                    }
                  }
                ]
              },
              {
                "id": "a5dd7763-9b01-45b9-b71c-f6428d081973",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ae05eb9-b430-4b50-8229-467087cf6082",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "893e5735-108f-4cb9-882e-02a856f9d9df"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dcc5826d-30a9-41b2-987a-e9daec92eb11",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8fd3b0a0-7397-4992-a783-142f98c7a5cc"
                    }
                  }
                ]
              },
              {
                "id": "5d8a5c53-d300-4c55-b46a-f995c8affc57",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1cc729e-04a9-4483-acc2-3403817bce49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7207829c-42f9-4d65-9468-329676f96146"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9dd937f0-2562-46ef-a982-8487951d2690",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "63c2d4c1-8aae-448d-bc20-765c7a6736c7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3985c923-cc25-4223-9f88-798dbcb31a45",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cb44cf36-76c1-4f4f-b266-10f5b68ad6b0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3fccd7f2-e0f1-44bf-a96e-3c70b9cbaffb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d511804e-2b12-4d14-9eca-5062b4a89136"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "08448503-acfa-45bb-a1a7-6a49352c810c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "432daf9b-b3a9-43d1-a8e1-db9004b501f3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d6716293-0aa0-4cd3-a8b4-b8bee638859c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "749690d3-fcdb-4321-962f-8e3de951d830"
            }
          }
        ]
      },
      {
        "id": "784b03f8-4753-433c-a448-0faa64ca880f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d91fa82c-ead9-4e1f-b34d-a39b95ac3329",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dc158628-8b6e-4979-8814-022c73fade58",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3949f455-1959-4a8a-a6f6-6c20f21363d5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48bac4b8-7f3f-47d4-b292-f52209ae2d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d99827b-6fa2-4c28-806d-632e3e11e4ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2121444c-9363-4653-b1c5-5c7439334d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e5a5803-2a47-4f9f-bd25-49d4f10ce796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d19dbc8-055d-4fa1-b4cf-21922aa49b18",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a399d97-9f21-45dc-a506-91d35e08b868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfa85b21-1ef9-4e87-b2ce-81b967042b5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab895c7-40a2-4e93-be4e-0c67f1bc980d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fd30260-344f-46c2-82a9-62ec275c3905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a0efe9-8e4f-41c1-a330-011e1753a3ec",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "309f3992-c0ea-4202-a64e-f5d6b65a803a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0769f1ac-4853-4f4c-8aa7-b388f8628a4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f0fbaf-86c1-41fa-8b9b-34a6ba30cd9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "22a15c6d-fea2-4f97-9443-8355ad286416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d217b09-f33b-4604-b627-6731b7d9ffb1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cfc55fa-d286-481b-a6f8-eb368ef21434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "647c1a8d-f62d-4bcf-97fc-552c8abc4ba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "affa66ff-0558-45b8-981c-59796a0d78f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ef56843-a386-4b0b-b1f2-d30fad981929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62aa956-c047-4347-9900-c7d45452812d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2819ed5-a94a-446d-ac3b-9b0aa621ac94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96c2ed34-20d6-4208-be27-b87c085dca6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe26564-1ca4-49ce-be69-7da15b4ba8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7de3b1d-c963-462e-bd08-9a87252e9f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078601b3-e645-4bd8-b328-914779753412",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f10d913-4d6e-4edb-8f8c-c96e893b9354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "628aa230-040d-4ad8-b0f5-e6bdbce87570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d812aeaa-3fdd-4240-8193-d7a78d8b5cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb2b90d5-e8e2-4ff7-aea2-7fad6eea9106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b6a560-c23d-4242-a406-129d26c0bf8b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6506b8d2-b740-46d2-a403-469c937bec66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a019f9c1-32b4-4fac-bc3c-56e525e472aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e66d63-3da0-468e-928b-077974162675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd76fe7f-e40d-4290-bfee-7383ab1c0c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9358fed4-adc5-470f-b272-3480417a4cd7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1e28d6-b160-4e61-908d-f0929b4af7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dd34bf0-b1e2-43a4-a2f9-7e48030a3add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8c997f-27a7-4c23-b8d9-18aba2be77d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e9d88c8-410f-471a-89e6-bc4bdbaa3862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c1b7c7-0aca-4220-955a-d2dfc218ce00",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f5d0f9-4c03-48d1-a721-4aeb7b8fa4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a73532a8-bfc2-406f-8316-c9fb6d7d8f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f8e2ef-9de1-4c9a-8dff-e96654e7c568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2083938-2d38-495a-8e96-ea3140c1e415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7cff3e1-5ace-4aca-8c78-e00e1520c40d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a20c2769-8c29-47cb-8a7f-28d8fa1d0578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23a03a91-5760-49a0-92ee-51d3e0e9a6d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa01170f-47a2-4c68-ab72-807c458b7986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "32af877b-9383-437a-8009-c2d10a214684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7536903e-9c2d-4d18-9c08-b101aa9d7a9b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f22a9eb-aaf2-446d-9139-50ba9d5f5148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5766fdaf-24bd-41a6-be0e-bc5e94c80b9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee3951bd-a0aa-40d7-902f-4a7b56e18648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5596d244-2cd2-4752-a06c-e4aa35ae1e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684b9620-ce53-4b26-b6dd-7715b2e5eaf2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07188127-de6c-4dfe-a01d-c2b024a41a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c7d1863-3246-4e73-81d3-11d9ec6e7a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7e31bd-8720-4aa0-adbe-028b8c96d236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "11cfff07-a05c-4f36-92a1-71fe85230a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1992dd-889c-4c77-bb72-2eba3a1f22ae",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7b5af6-548e-4c90-a441-c15b1ab705d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55f1fa30-6339-417a-a83e-f10aba6b241d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59637c7f-9320-411f-a4b8-a17a71accc99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdd14a01-bfe3-4e35-907e-5bb6a4b48f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99be9abb-39f3-48e2-acdf-3c20eda37dd6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1d75da-5ecd-41f2-be22-bf8bcaefc06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b6a34e1-63df-4e48-9701-6fe7a8ad0c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1cd587-f797-46c8-ab0a-6c134482b295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "01b257c2-b001-4f75-841b-da6f4bf7ad27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d363fd-feb6-41cf-a5d9-f88733439bcb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8114b732-d605-42fd-a020-9c0f005302a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96d3804a-3938-4522-97a1-ed6dfaff0667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d2a939-2f79-4920-b171-4268d05821e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8185aefb-aac3-4c33-94d1-09e8d9632e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9cf891-03be-415d-825f-5e5bbc78688e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57cdfc3f-e42f-4261-a168-e69c063a9eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af9678fd-05ff-459e-bc00-83b2f1e33275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8049d9b8-9b57-4a03-b4d7-ac5ccf908a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd25373f-f8c5-4ad4-9312-a3d2c68b3658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67dd0a56-3105-4da9-b042-e9a03dabc95a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf08b6a8-404c-462b-a253-9562cfcb9dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd9472bb-7787-48ae-a1c5-6e30c404e961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307b53b2-cdd6-4a38-8416-2e5a24e3d43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6be36c3-e6dd-49c3-96d2-815304b1947b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4603cb6a-a0b0-46bc-b881-9557eb046a01",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3c6663-4a83-4e11-a009-ffd78abca049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49de30b9-a397-4c01-a040-3f60aec78141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a679a38-19eb-4102-85a4-70e934a30d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "63f3a62c-3cf7-424e-95c3-f82a9dd0e643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c1c08f-3d93-48fa-96ae-5ee5f662f84a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3694dd19-0197-44ce-b3bd-aedb2e128f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4b632ff-ac54-494f-ad5f-ade080d0ec65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221ccd7a-ae0b-4056-963c-526818fbc80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1aae1035-d777-4578-a373-fa7b5b57f5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f05c9e9-e51d-44fb-b94a-b7ddb1dd0bdb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47bb8a06-7d5b-483e-8bb2-af75e49b1e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89ef2324-9740-415d-a5f4-54010092771c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d305fe-7209-4e56-a5f2-794a38ebc5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c046492-8377-441c-a9d0-183d21fcf474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e60c5e2-a576-4291-a304-4a937c8490c3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f858174b-3861-462a-8ffe-f9b583ff706e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ea7019a-6642-4d49-9ba5-844a78921a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4e9602-5b74-47de-87cd-6cfd793964cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0acfd06f-444d-4a44-819d-1b0fafc41a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea427e8d-b830-4a56-8288-658135784a61",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1482ab2a-c7d1-4ead-b90d-72527d123202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b8b494-2fde-4a68-9858-118a6f18a89c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b52f56e-1e70-44a4-9282-b126087dd446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "028a044b-509d-4905-84df-f9973e8ea9bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ed103d-c02d-4bf7-ae6f-d354f64a9f7c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1c1225-233c-47a2-8080-bbb7a4b5b3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85317b7-6738-4ead-bd44-cb4194280c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166dbe50-bc47-4c57-9cff-cdd67f8a0290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18b30ac2-6226-4564-bf63-dfacabf0835b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4172ba6-8257-43bb-a726-b3f186e78e7a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99d5429-4ad9-4374-b7ea-ba9c573945e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ba0accb-a8a8-414f-adce-f7212414353a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4f7367-740f-49ce-98c9-a5d233a7b319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cbfce64-6f57-4d9f-8ab3-ddf5fa7b383d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933d6702-f65a-41dc-8a31-944c46f3eb90",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "243bfd01-bc0f-4e30-8f1a-b68501f7dd00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3972182d-e41f-4140-9084-17865a9a29aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8d1ef3-1e27-43f3-9671-7526cfb96cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f0b7155-45e1-438d-be98-c11c26cf40e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10995ec9-6a45-4ec1-b518-438572dee9a9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a562756-145b-4001-8d94-2a4bca118a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6527dad-de82-45b0-80dd-f3ba755f6489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193e6376-c7cf-469e-9390-c4c31a8228bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "966d0a8e-f8b6-4062-a7db-23f5a2213eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a85b19-a83b-4892-868b-3876b2db9173",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae13b2eb-c395-4277-b9b8-90391cd7ce63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a55ea4cd-43e9-4ded-b47b-5703fb07195c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d30e50c2-ce32-4bac-842e-d3c252cd5211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7b449dd-1199-4d7a-bdf0-ff0398086e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6461b378-8c8f-4c06-8cb2-8c9950b1c1d1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "190ac377-f722-43e7-9b3f-cc986a5bd208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "579ae76f-cb4b-476a-8390-ff1f0ba8ab59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e4f2bd-7677-443d-8ab0-8efc12b0f7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d768a9c8-53b5-41cc-837c-d201ff018811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40506a71-071b-4b2a-be09-9baf5b03c746",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d5e8ae-2ca0-47bd-9518-28394c6b859b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fc20687-b6ea-4e08-a00d-64b37311661f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13eede7d-7758-4799-81ef-330f85957e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96de147b-8ad5-4c5f-94e3-9f62bd70b527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92eda019-5ab0-4cf8-91b6-8c589d2bff1a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8becded0-6c1d-49e4-bc0b-4ed1a73cbd12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad3b8c8a-a592-4bd6-a38f-0e4e0429830c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c86b711-f783-4b2a-b324-851d8c460093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1386d52-9755-4165-b490-9be6ccbed407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcbbd3ef-bd28-40a3-9c2a-be078b90092d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb928295-af87-43d4-b7ba-67be41ba85b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b883ba5a-9828-400b-aac7-c514edc76f09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166436b4-b4fe-45db-b72d-622678451833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b139e39-bd02-4caf-bc57-74bcdcf2390c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923f43af-a2f8-45e9-82f6-58989430e743",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "012f6c9c-d319-4ba1-beb5-eef663801393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b2099c4-57b0-44fb-acc5-d3f09119fcba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b5253d-a7e2-49b4-b253-2da05e1d9835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78d87713-66d2-438e-9ad5-89110c160f6f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fcc7e3e2-3a4d-4ded-bf0e-c283d1f9bcfd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f94b252f-6872-41d9-8ad2-002875ce5c65",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03da747-770b-4074-a5e3-9fb659206ca3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "515c07df-85af-4b09-8a1e-cf9a08e3396d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8f9327-7bd0-4155-8abf-a9a0663a9c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32b77901-fbaa-47c2-a812-0ef3bc97e224"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7cfb9c21-2c73-4ab1-b37d-67349bd59976",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8fd31250-5031-4690-80ac-4a0aea7491f4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7fe53c44-a35c-43bb-8dff-e153fc08f025",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4ae70c8-45fd-42a4-bb0d-67d3f8a542d4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "60dc9b40-d306-42f1-befa-6c12bf86b9db",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b9aea033-8e9e-4764-a040-eeb8a33d90f9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f6101a7-b6f4-4b91-b48d-826c5b5da7a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3bf085f9-c817-4d1b-8112-f052df890205"
            }
          }
        ]
      },
      {
        "id": "bcab42b5-7360-481a-a8e5-4dc2b40186b7",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "4ca699c3-fc64-4a7b-a1fa-2421b7c476a4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ba30caf7-1a84-4184-9408-3d550a211954",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e492114e-8a74-4ed0-b54d-7ea7c6f17f86",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "820de1e7-73e3-41f8-a569-51cd2bd29689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77570f6f-c597-4717-a4aa-0ab0beb15943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c246f7a-ddb9-4e66-9501-02edf67ba212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6ca0b24-aa8a-4b98-a5c3-b500977c69d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58c6967-aa79-40a7-a33c-e861693141ad",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d58e080d-7933-41ec-ab05-adef3a8f79b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af8a3b12-4f7a-47c3-8698-4fe85e8e9cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da6ce15-9092-4f76-b91e-f26f48dd39a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "87f276d4-90f5-4c75-99de-fdbc1360fcac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a8c117-15c6-4d23-b045-b4c54303d6f6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14548d1-edb4-4176-a3c2-ef1e523d8529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d46a097c-d45d-425f-8f2b-22cd5329dba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6de51f-d973-4dd3-9ce0-cc4f7d3e8537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc034c90-fb0b-475e-b75a-69eff033f1ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c546c78-30d1-4b36-b891-b5321017fd3f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3100d1cd-5d30-4ce9-8c97-5f4783aabec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7a4eba6-ffcf-46ac-bd1b-15aa9caa7aa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b75d423-556a-4aa2-90d4-6adac3b7f8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d6bb65e-5bc3-4de4-a1d7-8ef378a43d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63dad50d-aa62-4a04-87c8-d42a53f33bb5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f61f8c-89bc-4ecf-a786-96b754dff5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e59aedee-73cf-4de1-bc1f-594c16532ffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc0cf262-357f-4cb6-b571-10b6cf88fe7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d4bc39d-9481-4c75-8e33-456559e7ae30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bfaeed8-cee8-4078-956f-b24f1cfcfc06",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b44e8bf-229b-4429-a34e-17041839f27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfa5f01a-b36f-426f-a8a5-f414711bc86d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44451e5f-7895-4bf2-af0f-5ce4b75bfd2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7daa6753-3cb8-41f3-9d4f-be48bd6f5ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aef88bd-0e82-459c-a95a-7c8f557d1f94",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d79dba-751e-46d2-867d-04800bb1b971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71f89e72-a91a-4b21-9c52-db037fe969d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785947d7-a8b1-43ca-9b24-3b2694b452da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3ec581a-33e2-42ac-b45f-0d6b621bd1f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "964f073f-f3ab-4f29-83d7-9848becd5783",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08a05b8-f606-47c0-80ad-4d30c05244cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a28d4d7-c8b0-4d7a-84ab-e7669ecdbe56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54df5dd7-e41d-40a1-876d-28a29791a12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf0f0e7-86c3-4602-8b0d-60addc5943c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492829d8-3594-4a89-b82b-877710055d30",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fcce69b-249f-49b8-92b2-3ebfa66b6706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5afc18b-833f-43c7-9948-5cc963ee4b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e99406-38dc-4a25-9f10-cfc68a97705f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a94073e3-2981-4a03-a34e-9838d9e343d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac20719a-4755-46bd-9bce-35cfb74b684c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e7bb14-c813-434f-9582-be8b45025f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7656cca6-3b5f-4019-9811-f506ce2e8275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4afbf90b-769b-4983-91f6-8bd2cb67df37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfee23c1-7faa-4b43-83a6-3e3ca6932728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7861c0e2-bdca-4dd9-8868-dbd47efa44d4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef971c3c-eb94-4260-9d8e-c7a20fe02c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc47462f-3cbf-4503-8912-9ae6b975c85b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286ab302-0b12-4e88-9c48-8e3dc69744c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ca714f45-dfa2-464b-8c6d-8a18b7e51d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122626cb-faf4-426d-94d7-46601508e1e2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "371e9756-f3af-4d94-bc44-f9672aaa066a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31b01623-80ed-49da-9292-1c33c1ee3ae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d848f7-8333-4450-94e9-ff0c76543812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "df79009f-7667-430e-b174-5d4952603c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349ad3be-8889-48e0-affc-14b4fffe2b41",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1b1f91-4dce-4b94-8629-040d8a36ffdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7720c8a3-c9f4-453d-a543-f88734e84a3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef07d69-bd80-4f6b-90a4-2454c09dd4a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "76c33e62-db4b-44aa-8928-19c19962d34f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0edd4f76-8616-4262-ae68-9d61c1f0da20",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2322a1b9-28e0-435e-85de-1d02dd77719f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4b398a8-c082-4b6d-a527-a16cd3a1bc69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b0ff3b-8066-46c8-9148-94a99ef5bafc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f997ca7b-9f92-49b8-a885-2112c847f140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c62869-e5fb-4137-93fa-e045091a83f3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28498f5c-6a65-418e-88fb-a7c4063895e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6147e213-0e29-4777-9443-4e27d2d06c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d24ae249-7f12-4122-b3b7-c6d01cf2bbb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ba1e12b-d1a2-40f5-9ad6-2db869f41def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020c0173-d452-43a1-b58f-f3015a4d2071",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d99b4b8-680d-48fb-a9a7-818468cbf0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "babe330f-357d-4f7b-b72e-c759a29de045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0fd8dd-2c4a-4d2c-a7a1-23d2919f0681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "21a1994c-9fb3-4985-939f-b4b6516664b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93efce7-1dd4-49ab-ab54-56687c9d586f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da79d82e-c0ba-43c6-9b9a-3b0f2fbd8019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b5f6c2-0d79-4107-9220-d4f81ee83ef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ef2e97-01e4-4684-930d-861baf6b737a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0db158ca-55a4-4c11-b359-946532dd09d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7824acb9-3220-4f0b-a2b3-df95497ac1a8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09138a1c-529a-4c8a-a4e4-504088746f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a56eb65-42dc-420d-bed8-1287f5fea03d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744ce214-8bf1-413a-993d-1b0ecf523c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "223c35ed-e292-4cbc-923e-5106fae5c647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e4effe-a6a3-4f2e-aba3-464a7823973e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd262450-b7c0-4ffc-8400-3b1f0bde26a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0acd11bc-8a69-4643-9439-14edd5f51484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513e5814-660d-4f09-86e9-99abbc00c6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa58cc43-7ef4-4244-875e-7ee902092f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d96f63-5212-41b6-8d45-d127ee913674",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1ba3de-38b5-4b9b-97ff-fbeaa9b59eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acfb660c-0b14-4864-a8c2-0f8a24287ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecdd0bc6-8a73-4a14-8d57-a283172e20ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eeefdcc2-1dc5-4434-82a8-bb4435d85bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c43557-b3cb-4ce7-973f-62bdbbb9ad83",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea577dce-0d7f-4b59-94df-be985aee703a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "140d3a4c-38b9-4977-9f66-72f71180dde2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fd6b76-c806-423e-a96b-a33b22d11b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9e0ba4e-27a8-443f-adc9-e9b6040e85e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a80773b-a545-4cf5-a361-b4db24342b95",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "914b50d5-2cdb-426c-a3a0-b4c23c1661f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27060113-1a35-402e-9b5e-5141d7d69a77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdefac0e-7fd8-41bc-854f-1d52b021b231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42ad60d9-083d-4937-9a33-5d66f418d1c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e21ce7-966b-4bea-af0e-fbe246e0d968",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3acc62b-574d-4a56-92b1-59c021010e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "003e51f5-55e2-454b-be75-f94c653f3144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9750bc2b-cbff-4938-8e4f-77e85d8dd32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86094b87-033e-454d-9e33-fa0678a4afac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249f7cc2-2433-41f2-9431-ae0bd300256d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a45a05-adb0-452d-bc81-52201186df20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "787933e3-5d35-4850-85c4-a2fbbf4030c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6faa83-b792-4cdd-a47e-8d059e2d75ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9f449a3-8f4b-4445-8cd6-50ae85987d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4054fa-0a7f-438c-addd-608fb5b24486",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0174e4a3-e741-4c47-bfe2-5b83e0af7a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36346e99-383f-44c2-951f-54da45b4a6da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc25f9a-640a-47ed-b218-93d1d9c65bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3848531-7f9d-4da9-9b42-7cf02b93a378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8fcdd65-34a4-4590-9fe9-43660116d326",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf27948-7178-4a18-9644-4199da4da627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "028b77d4-d312-41ef-8f18-b9e53d4f88d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c0736a-4772-48e0-8e0c-a17e665dfbb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f726d739-0cfb-4faa-8980-e0420243d8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59174ce9-7d60-4923-973a-08c828c76af0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3c9fbb-a1fc-427b-b594-9d0632680e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10792ba1-3989-41f9-965d-57557907a7d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6c671c-b9f6-4907-8d8e-94f323ec1681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "643349e2-caf4-4d89-afc4-d31a719e72fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebcc2aa1-c6e3-42e1-9e31-4ca4dd572cb9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df574101-c021-407f-be66-ece61d72bc00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae6b2974-227f-4893-82c8-727af201b0a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07b2473a-5d94-44b8-bab5-db10dbcd2508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52bbfe9c-a592-450b-8b01-b1f8b734b081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec0c16a-8947-45da-89df-ef3b7c1ec284",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0cc3dd-8534-4c89-87a5-795a850cce6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "937940e8-7d58-41fb-bbaf-82077f1c433a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1644abf-8926-4e53-ab2d-fee7aca87745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "716ac441-5475-445e-a95d-41eeff28d589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e116491-4e78-4827-96ab-8fb526552533",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4452ed5c-a334-4bdd-b150-60a6e015b55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe4b8e33-e8db-4899-abbf-63b58c0d5286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "387b0470-3bc6-47fa-a242-8e50ebbf2924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d9e102e-efc2-4ec0-b42f-6bdffeef7995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f3170d6-63fa-4567-8445-01af56890e17",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e00b7a5-6eb0-4e69-8457-e8633dc75054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9939fb93-b0f6-4f7c-8ed5-72a779641ebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67323ee-7e3b-4165-96b5-475a1e56323c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f8beec6-f6a4-4815-948b-59ca5a59a526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d587dca4-dc7f-47a4-b39f-53568ac62d54",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edfafe48-6d25-4ce5-8ba5-28573246e1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7aaec73-c386-4a10-9764-9c58c05e7981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c64b31-0916-4f62-bed1-ad55563361ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf580f7e-774d-4585-804a-6cb6d2319003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee811ed-7431-4dea-8676-03c1b304f35f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d4ef6e-d0c9-4dbc-b8d9-eee5ad62d28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c6b260-b564-48b2-8899-2d3e60862c96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8609b295-c578-4077-b43b-553315ac9f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b27ac031-ac85-403d-80cf-43e705f3d513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f21536-228d-4a47-a36d-4fc75eae23cc",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ec4dd6-9b10-491d-aba8-e07a3bf8eba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f3bae82-54b2-4a0e-8396-3b6818f762bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c95e6fb-2af3-4cac-97b0-e801526566e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8db1bfa2-9c4e-42fe-aa2b-1ca2f5d54c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1bc83b-1f19-4051-9041-23c137185015",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d6772e-fd45-4f48-86f2-1468f65381e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f6bb94d-cece-4949-a600-77e7cb53f256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ba8450-8453-49b5-880c-2a48a0b8c98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "194ea6f3-19a0-40b0-b096-cd9a7a8173a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b34874c-089a-47bd-b853-a7b716e84f08",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0eafa14-e899-4539-9638-faafb596a807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d30a916-302e-4592-a6ce-3b070d4c10d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab5329a-769c-4f37-a52a-a18c6fe8b956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "898928bb-bb07-49ef-b8f5-81f41bec4a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9451684c-8bd6-48be-9b20-834625ae98c9",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf49649-d91d-40a9-b552-b432fb589fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c60227-6d56-4a50-97a4-bb54764229d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350feb78-d581-4156-b5af-facf86e5f965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3590c73-a79c-4fa0-9bf4-9cb336396f4f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "afc3481a-daa4-46c2-a903-addafb6948f0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "509d168f-082c-4103-baf9-c42544c8600b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce7bb55-38bb-4c74-96cd-e88e3e1c45ed",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7dea5f4d-344f-4c09-ae24-58e90689fe0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f1a6e4-4eb8-4dbd-8d56-3a62fdd0af7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "558c6486-1981-44d4-ade8-dba292987d45"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7eb5140-cc61-4cf9-ae16-ff79c9dde851",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11c5e8ac-fa56-4848-8f86-bbcbe891bce9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e8772ce-3df9-487c-80bd-9e79a1afc4e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2af57eb6-91e8-4786-8a6a-b933e5beaf76"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3396abbe-380a-4546-b14b-db462ce9fe31",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ff0f0540-fd72-4a23-a1ca-b583ebb9fac5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "deaeb18b-b57c-4e85-bb3d-ec7f86b8917f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "70ac2bd9-9650-464b-8ecc-f3a2866d17c0"
            }
          }
        ]
      },
      {
        "id": "65ad4646-e948-4e11-bdbb-1d163a319dd3",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "253ba714-4045-49ca-87d9-48bace1dfe52",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2c426949-11f4-4170-b66f-9d275ce8365c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9c367527-de51-4b55-9859-d189030dc57f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e02753-e93e-43a9-aca5-f074d6e8639a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ecf3793-5429-4d93-828d-cc0fd8c89a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e495f77c-28cf-4b2d-8cc5-a09049433a0d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58fc06a8-c308-41c4-a36f-d6d72bdf5226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83a9a890-75dd-4128-b406-312ff6fd1ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae68fc6-3ce9-4bb6-8b0d-e602ae0b852d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b308193-9efc-482c-8f60-faff0e5206ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f13cc5fb-1c86-4d47-b37e-2fdfa3ed5213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191f67ad-ae67-41c7-bcf2-229458bb130f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48892f76-e67f-4dbf-b925-03300a05b01b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b622e9e-0e76-4b96-a988-05c97e4bd824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d577fb-f5d1-4340-bf22-629039da0c74",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa11d35-58a1-4033-968b-12cb80dc4bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d70b525-2cfb-48dc-ac53-bdfbdbf4dc44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823ca98b-fe81-43e4-b41b-8216a0ff10ac",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "066afe26-8559-482e-81a3-18f73d41dc4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54ba4c08-e91e-4291-a3fc-c02a77ca8564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d3af537-bf57-458d-8314-31232fcfdbaf",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d998c4e-f86e-4362-8a36-23149b6e84c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2334a50-e6e3-4446-bd83-0c9ecf9e47b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2906eb2f-962f-49ad-885a-ab1ad6349fa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc0eb799-2bec-470e-99b8-517ac3d4a286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b75d6da-12e3-4805-811a-9496a8679c63",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d016b5e-c7ea-48e6-8f4c-f6a2ac29e4e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bfbddb1-68b1-4540-86c3-90871bad39e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f631e4b1-a487-4543-a4c4-719bdaa12722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb69857c-bd4f-40e1-b6a6-12b08abc7f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606ca380-1d44-4222-8dd5-6304c7390acf",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f57cfe3-a0ce-47ce-8e6c-036988213cb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4af6c5af-c9fe-48c3-8389-da98f778b3d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c052b27-a552-479e-a561-883498731fd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fbea53c-e259-4566-97b0-1011100f249d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0955af9-5abc-493c-8a9f-7370ed45db74",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa1c984-0159-4c70-9556-92c49e0cdf8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f3904f7-6dad-4391-8559-5f6bdecf3090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c70fbe-c589-449b-b82b-ac0f5363831a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d519580b-6678-40e1-9c95-f65757942867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560928bd-5fc5-4f3a-9112-b8d665c70432",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6e75a6-2286-4971-9bab-69b7257dc51e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "774f2b49-bf74-4a33-a652-c1023a92527a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c021afe7-a25e-4e5b-bce8-e1bc19db652f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8097f2b-c8ba-4e77-b2e4-54abdb74d3a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "904e2a64-6297-4ca3-a726-6a7c93374100",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ed7356-20cf-4cb9-a598-0986f1d2fbdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e87cca-f6a7-43b8-bda3-abf5e3bcac0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "901322fd-8237-4bd3-9948-08369211a2a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eab9e92-5af4-4b02-8830-0afcc334ff24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec49296-cb34-4074-a5f3-4eb7edc512e3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43f15c0-f94f-445c-861c-346d027cbfe2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54936032-a890-48f1-8c5f-9b734ef1785f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ecffa6-c2dd-4cad-88e5-7229005519df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e5a701d-2f1f-43c6-a665-b515fe9f8bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7dd2cdd-43aa-4b05-9250-b925a8719d97",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a274547a-ef35-4db1-9890-959bf4ff6f45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbf78498-88ec-4fdb-8b32-a93439631329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f900aa4-f16f-48f9-812d-871a2c1f0b49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a5e903-a371-424c-bff3-a39976674aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3d902c-bfa3-4a2b-9e14-244a62350459",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3f35ee-b02f-4f77-96a0-b5c751491254",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fd08e42-1de3-4114-b4dd-27ccd53ee514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4880ae-37ee-4295-9969-0028150b7741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da0481c0-3fb5-4304-8ffb-c29f00199bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3ba977-a622-457b-803e-7574f65dcb96",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf94f6d-61e3-40de-b886-b2bc8e1f9b6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7b0ce5a-c2ef-4052-b5c1-73fb5b3d7a18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60d57a6-683d-4498-bac7-fe4cdb1b2b3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d2d6e86-0537-4393-b3c9-e1fe801c5da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d6313f-159f-40aa-abba-e79ff8376bc6",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a712ca-35f6-461f-bc8e-39733bba9a52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e85de0e-645b-4ab7-944e-4257811ed973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf94a169-d4de-4ae6-b8e1-1a6821809a67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9ec6778-58c4-46ce-9298-18d12d4e63c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d94992d-0691-42af-8d91-1b3739efc6b0",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff96a9c8-6601-4f80-9bfe-8437e6210d83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa9fa42-0bc9-4601-a301-8cf7183f667e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5c48cd-d3a5-4d2c-a2f6-12e4bd006ad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b44b3b0-5fe3-4f9e-8bcf-9147f33f89eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff53e8f-94a5-486a-9867-359d0b541a78",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e61bb26f-1325-4c4f-bcc0-6e1428ed1ece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c32683f-80f7-4047-897e-157c155dfb6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c2a264-4168-449d-830a-3bc968dde807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41f00c4e-5042-49e2-be7e-430ff0bf938b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543a985a-ee32-40f2-bd93-9762608de533",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5ff2d7-307c-424c-87f4-522b080864fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "562b544f-0964-4d8a-a46f-15648a8036a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "780d62e7-b548-4a8d-8061-d74a956f985b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "115b1920-f1c5-4b13-b9fe-58f7d0f09ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05fc349-a73c-436c-b82c-5b95ee231d21",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d47cbc-0bd5-4197-887a-b2ccd3946989",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9cf5ec9-21ef-43c8-8a93-a34040378f56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a195d800-6e4a-41f4-883a-7208246e8a1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00c0d4b9-6292-4e02-bc78-b4668128adba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e95228-7f45-4fdd-b74b-3cb92277ec22",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86d601e-9a32-4d8d-a810-7f8406241179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e077d1a-fcd0-4a43-a407-3da7a700335f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c262341d-00a7-4025-9e8a-3192ce376578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b09cbc1-37fa-4aa9-9c20-faaf6fad4105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5492cdb3-296e-4f9d-b263-41e8ddeea65a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e32424f6-cf29-4859-b9a2-c70c242f76b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35840b48-d684-449c-8eb1-365982e7b7d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "127d2e4c-3ea0-47e7-a1ef-aff7e3b41cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4abcc72d-4f89-4870-a015-052a48a8358f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81145f25-c65d-4063-9684-3a9bf86863d8",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624f69de-8253-41ef-9588-49b8cd908a12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e9bafd8-2875-4579-9ce8-cd4d73954cb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "649e9424-2cf2-47ac-b291-a07837692db4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4db364d2-0ed2-490c-bf4d-d85e5f616a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1caef11-f3f7-4ebc-a84e-88f805365b22",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b8cab0-7c5a-4e6b-8764-9db98874e2f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0424519b-404c-47c0-85bf-e5e810ad0671"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d10a1da-151f-4344-98b4-847b9747a0e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3dae5c1-f649-460b-a64f-0f8627f81ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae308f8e-76ac-4e9c-8d10-fb77dfa2dafe",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e3617f-3cff-4f1b-8988-1dccebe8745c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2213706c-b210-4114-9200-2b9485f9badc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b06ebc4c-488c-4273-908c-de84768eb621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba0e0d98-b187-4adc-8d8c-7d11fc873e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0991e3e5-ddce-40b6-9a69-2eeb4877c0c5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92204687-8240-49d8-a827-128a832d1de2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76809552-d487-4694-91cd-3b6aff6a6281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1b4d6f-f8f5-4566-9662-4711f528e31a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76cc85c5-515d-4133-bd21-f9db860bd21d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3fc0a4-55c5-40a1-9555-8c2f87a07821",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a5f319-c85f-4984-b083-0db506571cca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37a1a8a1-d356-4d73-98ab-5f9b9fc0e4b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "568cfd4c-be3a-4956-a17f-20dc70e58bd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40dcde11-216e-4af7-8c68-66d0dce017da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1983eb44-1353-4452-bdef-aa944ff765c2",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b138441-a0b0-4f8b-b349-f111f1277aef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30c3ab5e-4ee6-465d-9567-775d5ebad83e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d32dcd2-460c-46e0-b4b5-68e2a402bf99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31b58793-59a2-4784-87df-2f9146d4e601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c440c475-208b-4bee-b806-e573f45f1a0b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958de820-0edd-4150-873f-24da5723c502",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9be3d417-7df8-4088-a445-c1d59600b933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e415b94e-9930-4f56-9b14-d65b510f5488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5581ae45-4e97-43c3-a35c-01d1bc532989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc8384b-257a-4689-9aa1-8fff9cb7ce93",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef22c1cb-cec0-47d1-be17-376a308b222f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13ffb0b1-4a34-4c7d-af42-c030db274b56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "240353ca-ac57-4d50-8735-aaf215027e55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efd5beb4-f841-44f2-8b0f-70aa349eda10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2f9bda-c8de-4fa5-9ba3-4305a1b15dad",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca32b25-8e54-4492-8bc7-2ffffb09dd98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85d71931-a588-4218-a67e-3a95a832881b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec27213-7196-4c99-a61c-fe554302b632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "760f474e-898c-45e5-a351-0f55deef7ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f832bbd-e56b-4499-a64c-0ea690f223ba",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b01eeb67-4be2-4466-b675-77c738bc5d17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f3adf06-ab0f-4424-87cd-abb62b2980b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c0d1c8-5c5b-4259-b951-e333a87e5b42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4543436-381b-4cf6-84e2-64f485ce10aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0118a71-a982-488f-b199-a3c5c26a3c8e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182f637e-1bbf-4703-aba8-5eae4151f874",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28afbcfc-9216-4ac5-aa9a-72eb8a8d40ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba9c8f6-cedc-47a3-a607-531e68b1771a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08d44226-a542-4f3b-9682-429727b00973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030b3987-72fd-489c-86e3-578154e212ac",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b567c8-5fb0-443a-9d82-51266d14a758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f97e993-a39a-40cb-9573-090a47030b51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b093360-4534-4cc4-aa9e-7a4d50531023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa1ad461-28a7-4614-b6f5-003a4b0aeeda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2ee380-ecca-444c-a809-d9724b813e3d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10ee471-d4d2-470c-98c4-18e5f416648d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "973ce81a-01b7-4332-b630-09827314abdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14995246-4271-49d0-b3e0-dc1c84a99c11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bd01fe4-6cf2-45a7-bb6d-aec8bf20056d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89fa5df-6a09-467d-8242-e3d4696d688a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3210b14-e954-40d5-b59c-5dd2d0b861d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36f24dfc-b002-4203-95fb-1f05ef020150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3099afa1-8a57-4950-8847-8e4bb279b6ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e16ddd1-6e95-4fb1-bc74-0ee7534ab89c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa3c1e4-e978-4be4-b39f-5f9cc3a043e0",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e80b6b-9903-4516-8b9b-a0ffbd7fc69b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94efcbec-d7e6-4635-9e71-43144c2c2ad0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4432873c-530b-4482-a997-0e2ac21d142c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b5a2e10-c8c0-4ad6-acca-ee38b024ec4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5005a3-7121-4073-a055-d83515ec6a93",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b0bc81-72ca-4e20-a1db-3c38bf9ee21c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a1e680f-eb12-4847-8993-20c8ee88aaf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8362f12-0ae9-4cca-933b-61da30be9fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d77daa2-d998-47d3-80d9-900e163e399d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff92024-6a35-4ab9-b155-212da504bc52",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f5337c-29e5-4441-81bc-08f15568b412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d5dd28-2273-4028-a830-2e3186dc4d61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "915bab36-02ae-4712-ba17-f4a81809d640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e88b697-f1b7-4fbf-991b-36db532a2c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4f7b3a-1c16-4ddb-91e4-6511d3888316",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5905995d-f31b-479d-b026-807db0cebed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b07db38e-cfab-43a6-897f-41fc7e6edad4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1350fb-1b24-417a-a0c5-e5eacefa9847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "280a23bf-a8ba-4383-862f-d8ca95f64ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9bd09f0-ff20-4ee5-945e-defbfd45b175",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f60ed69f-0a96-41be-951f-57b80e385711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9acb221-5a3c-40b5-b2ce-42dddacd4049"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de0af6e-d502-4550-b34c-24c2e8fe7912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd964eea-5b79-4598-ac7c-3dbc4a81d058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b092fe4a-9b9c-4096-95fb-d4ad92d91577",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93564f40-060a-4f3c-9fc6-c8f91406677d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13da6311-e738-4110-b9a6-4b7fa1b1a8d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25abf4fa-3eaf-40e3-9c48-eff03ed73f72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eccf539-3309-4929-91eb-a85bc9a2b357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31cbb57-4ff8-4bcf-8abb-937239080f4a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689c413d-f97e-4825-aa8c-2c9ea144a7ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e3d1b9-509f-4209-9fbb-9cdc45728b36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ae5232-6d69-4590-b147-722964145589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aca6162a-42d3-4941-9b96-846e73832bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239bf292-d55b-4892-9f3e-b907406f1e92",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0787a56-d1db-4504-82d8-83b3853f0790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ba7ec7e-297a-4e33-a8b7-337630213c8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "592dcba1-534f-436a-8d70-dc610e8f35ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dab35df5-99fd-47f3-badb-bf29ccb50e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3c9a94-1e95-4c73-93eb-9f4a7946cd74",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063ae4eb-e3de-48c3-980b-27c0908f04c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f5973f5-2c34-4e23-a927-cba1b64c959c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4c2862-bbb1-4ca4-83f4-be684e7417b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cff8b7eb-0b8c-460f-97ee-5d5665d265c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c65df13-5435-49a3-bfe1-ed60cd176de7",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b9d387-380e-4a20-b582-9e8ed0a1fcc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bee58b8d-2d3a-45b1-8d4e-dd341ddb46e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b4f9963-ff62-4f57-91fa-e40424b7f570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b5b132-7b99-477a-8014-eafbed25bc3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f6c3a1-e14e-4cb0-917c-061ec13dde1d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f33941c9-48ba-48bd-81ce-f6aa2a51b7f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6c5004f-97a7-4413-93fc-8086142a9778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "010f5ec8-5b18-4277-a00c-004a34c18e2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0ac7e61-a6c1-484f-85e3-41d25256d35a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c46db83-5bb0-451f-8cdc-aed5cb994ca2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad3d14f-fda6-4468-afd5-d4d995e13f56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "654af6fb-9406-471b-90de-ad726ac987ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dfc86c9-63c2-4d7f-8722-ee4bf93069da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06ac2ba7-6e81-40ab-b348-7a9622d89b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc86941-62da-47da-897e-7990120882d8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b907d575-04e5-4a90-b6e3-d5c09b8a4976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83053d97-9256-4994-98c7-912624ee31d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3717a84-558f-4177-914c-a2704df3a2cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "627c1609-f614-4b55-a198-36e5c6d0a7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb19f62b-0856-4409-8eba-4ac3fbc4fe46",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91945a37-12e1-4406-be9b-4e611d18bf7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae39092-4396-4ab0-9a18-7ea956ddf855"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "314aae17-af9f-4223-bba1-21c10ce4eb69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87e5ea79-fff3-4dcf-95f3-0b3e90f5428a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2469966a-6dea-4e12-8fd6-2ab51f8b6397",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e01fc37-da02-412e-beb6-9869889fbfdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c479aaf4-fca8-4dab-aae8-e69d9c5c1c7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b631d3-2037-4566-90d7-23d4b374ff39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46e03c14-9be1-4265-a35f-acbd58116db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658d3068-c245-4260-b3a3-a7e6a256608a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "917aab89-d307-48d8-a617-a697e2c11b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e19ceb49-8ae1-43c3-a454-7e1ebc9a6a26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb420f8c-1828-40ea-92c3-5bd35a7619a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c69ef82a-ccb5-42c6-bdb8-17c33bdc54c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e302b3f-d806-4479-a586-df95e69e30e9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0d6d00-1589-455b-90f3-c8c99c53dc76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5975194d-33a8-411d-bd04-37f4b6eb4fda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f67cdb-6873-4627-8040-8139737dbae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40042f7a-b210-41dc-942d-cbe886be9481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b787bfbc-69c8-4bce-b561-d6bcbb6a7dfc",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026d1180-0589-4485-aef4-c18578fa420e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ef7a74a-9a5a-48fe-b0bd-da97f43d416c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2efd29-de9b-4bf1-8555-f2eee3758a2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c60c2dd-1004-4137-8702-5ed4cf657c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf104d7-bce4-4a19-8231-cffaeb936246",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1b400b-7a67-4000-b086-a459faba9551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "247efe4c-f112-43ef-a3d7-37b12a47983b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "032f971e-02b8-4db9-a951-e1e489578082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d12e8ee7-5b9e-42b4-8fb8-dc213682ab7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b36686d-1464-4a58-8884-0aec7ec7aa70",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7d89da-3d32-4b9c-92a4-eefada583d35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b505bca3-9665-4b05-91e4-8d66c0646e2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "344baec8-1cf9-4ce8-a647-a70204bbfcec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5450756-e0ac-4dbc-9892-2ccf5289587b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8370b33d-6000-4ede-a241-07404d970311",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02732b80-9909-4a85-b1a7-97ca935b724a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11cefc12-a566-4b52-a9dd-bd2421fc5382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91318de2-387d-4334-a041-f9efcf61ed64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2d46015-7711-4e95-a1d5-fb0e2abb1164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c29ebf-deab-4f13-a3ea-2e48e80122fb",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6770dd1a-bed1-42bb-b0dc-9c44f629b6e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0d801b6-f6f8-48dd-bc40-94d8ebadd30a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d6694ab-bab0-4766-b125-9ec384c80fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3289ea56-6eab-411a-aced-1c6ad1e39ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c67ced-c984-40a2-92d0-097cc9094c7f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a27689-4429-47b9-b1f3-cce2addf1c69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f2f3127-72dc-47b4-87a7-f96908e4a085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c8b6ff-475c-41b4-8bec-f839d0589264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "819a3611-95da-4cee-b2d8-ebbd5f765252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc88757d-cbb0-435a-a9b3-5032dcf4eb1d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e68963-5942-4e8b-8ef9-b494ff698d38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a03e73e-b0d6-490b-860d-9d2110a0f02d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34aa58f6-4dc5-4149-8b4e-43e087a01b9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10ad154e-6b43-49eb-80e2-5866082f9f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fda2e10-a9a0-4ea0-9c75-bb0ca02eb5f1",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efecbb44-5087-4b18-a6b9-0915adf19cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e028c1c0-dc54-4610-8446-5ebe5449878a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9358420c-99ed-4cba-a856-fc7a0aa6b96f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83608890-f6d2-47cb-987e-e60497b391cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1c52c6-b2c3-44a7-8404-a17fb5ca7b91",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b4256f-05dc-4640-9a07-163b7029a62f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1b9ab16-db5e-4b1d-beaf-7b41e7fa9ec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9564599-2491-4dac-85e5-a21cef9b8d7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6adc71f5-4c9c-47f3-8cd0-c71ad8823a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31beea7a-93cc-461f-8e0d-c14ae18cb334",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b37b14-4c6c-43f5-acd6-a31b979cfe17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69af3b2b-827c-414a-9028-d201dd99f7cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a385c82b-4428-42c0-8929-e940cbf25617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3090ccfa-84b6-4bdb-8651-94e4d8d6ac80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fdcf03b-be39-445b-9d7e-b24ba626faa3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c44b76-7e42-4e32-8ee8-f45ee1d089da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55882572-ebb8-401e-9046-bbb0688eff13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a0a5f9-fac4-474c-bf77-7588ce809508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4baa6029-3adf-4843-be37-928af0b8e6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd69c5e1-a327-4ee8-9763-566472e2af0c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c83573-7ab0-40c5-b931-b1def8a35495",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8610adeb-bc80-4ffd-9114-1a2b650e50fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49251d2-c195-4530-8baa-b3022217f35f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e4a7edf-f1ba-4812-b133-f0e1877b4679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a7b952-7905-480f-bac1-cf7ef0bce71d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17667baa-08c2-429f-9790-92411d2ce69a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c16e36de-2e2b-48bf-b994-c0aa124ddcea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebbaedc1-eadb-4379-aa01-932018ed8d7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dffde969-c89a-4b61-8a02-e2807a279005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b5ad29-b082-4d5b-9d1e-f02d3bc603f8",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb49f35-9cdb-4183-a18c-8183a0dec08d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9e6f2ab-5f74-4701-ace0-f8566d3d2f21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6c8a40-476d-45a8-992c-81ae4c48192a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c66b4b-7123-43f2-a8ea-81bf1c886fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82e3715-33da-4345-80af-1b782e3d7a10",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23758fed-fadf-49bf-a014-9d0989f43221",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ac74484-1e54-4889-a588-49b355c18600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "698b4f50-41e3-40a2-9d9d-259eeb436dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cff7e707-edbb-4dfc-a0f3-e08912812bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0feaff-2582-451c-bda1-de561dfa1280",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73778bfa-7f99-45f3-9653-01e4ba5f24e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2839377e-a922-43f2-92c3-d89e80b65fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d584aae3-e857-44cf-b602-2c59bc917761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c74ff9f1-55a5-4c18-8847-8f98eb292381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02043621-bee8-4674-bca1-3538ed107e59",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e64c4262-039a-441d-93a6-aa4cf5ff336f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55f0a3ce-1e80-4be1-b029-598d4196945d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74150bb7-1a2d-4198-94b9-bf3907453d47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf84611-98d2-4f6d-b48f-6868fb0e42f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34b39af-cca5-45d6-b001-982f64b5d6e6",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600f7bed-f9e0-4943-8f6f-c7a1716b9ab1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92286538-b947-4e32-87ae-30f25c21da24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67962c78-41f4-4eeb-8734-3ad18dc11262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa38bf6-6220-4c0f-954b-7ed0cc6c188b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027005d2-96a5-4a86-ae1b-e5629f33d746",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e90e29f-349b-43f1-b0ad-fd00ed3a855d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c65e301-85db-44d9-a15c-2da0832ba841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c97f0aa-6b6c-412c-97d2-811c90f9ca1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de5989d7-a3a9-4b21-a3d0-78229fc6fe7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a642dc9-d81b-4542-a329-40e965fbd257",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93852f3c-4e30-444c-94d0-9a5f200675db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4c2d325-4541-4824-b89b-31b75b8f306e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb0371d-a345-4f5b-bf98-210fbba7d3c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "160c04f3-f946-4f70-8d36-963176edf4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "107d9d8b-5b1f-4be3-bfa9-bd7399f71891",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260e99f2-f36c-4007-ac11-5a12795e8e49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c45e2547-6a00-4364-b9ec-61c558396e2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "116b984c-3e6c-46ba-b3a2-f21333b43153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ef3cd8f-f466-4eb5-8f57-dee2ee7c8cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5173e7-7030-49c2-90f2-db725b91a05c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ad2e66-7f91-4255-9db4-87846dedc1ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed5d6164-60b4-4fee-9e71-1686fc7b1fb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbdbeedd-e969-433a-918b-02aa33df5b58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f79e7be-8958-4eb3-af63-afa6e3810dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03a720d-15ea-484e-a9f8-aa4f88f235e8",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273098ac-2f34-491c-9a9a-53c243309f2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b29cb10-6747-4c44-ab73-0850e17eac6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "413d80d7-203f-40e2-8d53-2c8e3644bce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe228fde-1cf9-4f51-acc9-540ea20ae9a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c18aca-4d6d-4b36-b998-a4895d906c84",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160c1e58-fece-456b-9b09-a72a8ef2d075",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "106e47be-dc73-4c17-a105-ace4eff04275"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d52f8c-82fd-40b3-b596-45a4f4ea14df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c095c7fb-0936-4aa8-b124-df19a7513c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae4adc18-a298-4cb8-acc1-d17770871269",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3ff9a0-9cd3-43bf-ba1b-91f93d05c997",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe299757-945f-4258-9b4b-90fed6311092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7daa1a12-61b4-4275-8eff-f8b99bc1308b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d299d38-affa-4580-b73e-c523a0107f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f33852-444f-40c1-9c9b-eebe6579ed24",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c01446e-c7e7-4361-9297-b7dde4ca997b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50753807-22a8-4fa5-bc31-7be84106693f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ec7164-c2ae-4b22-8309-e972855282d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e717b425-e3c8-4e50-bc61-f3f7bf5593c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038f3b6a-e004-407c-96da-cfeba123eff5",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc7dc73-1ddc-4c80-932c-ee2c86449896",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecc91a31-b6ea-4c88-a27c-10cb5ce4a69b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e9ea70-2d38-4db8-86ef-6817f004c1f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d339f6b2-3eb0-40bd-b27f-dcd46710d927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d03511-7bfc-4a63-acc4-8bba45841937",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604fc397-c91f-4a32-8906-ebb99448f011",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99c1b3b7-160f-4f12-ba9c-837db4c83888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd58929f-ec21-4aa5-abc6-8bbd39ae3947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c380d447-38f8-4ba9-a854-79da63c679c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035472b9-9205-4739-afb0-f4c6363b4d61",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083d6efe-4e60-49ad-8f65-cd0f739d0ad1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea424f40-cda1-4bb6-98e4-54876e79e343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44401adb-2daa-4321-a5e3-2b96ce1852e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1c0893f-a295-4061-ba93-512f9a554459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba397e64-a4b9-4f3b-8a87-7a5d5a4a9f29",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42b5144-a9bd-4af8-8007-063ee8e98bdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c139a469-f915-4df5-9e4d-9ec6e6beb1be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de018f39-d1af-4f4a-9e7a-04fc89d74c25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "736e8b1b-661e-4c7a-a934-9ed6a0eb0338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faac3605-388a-4467-aa41-d1e4ac8aa64f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d93607-0129-488d-8703-dd3597b86104",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f51782a9-1ae6-42d3-b520-46cf75a801b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40bd184c-a410-4602-8212-3899781e8403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81e7552f-0237-4e6c-bf3f-227ba7112454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6fa988-15d1-466d-b859-8799fbd85612",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce117df-f53f-4e93-8f37-dd252e5bc294",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a65a5329-afe4-466d-b8ab-1ea9eef4b31b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b928c07-8660-4d06-b6b2-5d4b65210c40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc2c0833-1dbc-4b6c-9d29-3b6004713a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a58a0c-fab6-4a5a-b9f3-4ee0e3998a74",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43284c76-b2f8-4e9c-9f1b-eac02bdb5c22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e95c09b4-52ed-4e46-a313-eedfe5e69f52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f5737a-6ce6-43e0-b0dd-68f5203583be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e91deb73-83ac-435f-86bd-d8a98dca7b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4edb20-8206-4a7c-b7ba-55fef782ed74",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5d83b5-11f7-4415-b17e-2b3dffe5cc7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd690b76-295c-4379-9041-866f3c5a3d1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ae1fa4-a167-4f9a-ab20-122a21c963e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92104b67-177d-47a8-9899-5234634d0946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d453da3c-1105-4768-88fb-9158b4c8ce0f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6246972-fe95-43c2-a7ca-c229f0758cb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ff098d7-b9f8-4157-86af-54118b3f4e8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c095f788-bce8-498b-800c-9d6fe22b4e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ba74d1-bbbc-47e7-8dbd-e9b08258d2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ddbfdb-3d77-4b47-b930-8443b881c766",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb13d40-a95b-45b2-b82f-b7e96d55c442",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d14ca842-eb9d-43c2-8633-1c8a02aa072e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd17704-7e1c-4811-ba28-35cae59107a2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78aebaf3-9985-4504-9bbe-3b9a773052bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07fb16ef-1588-49ae-85e3-e397adec4eec",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b46198-462b-418a-85e9-82cceb168c00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad4b6fa3-aa49-4dbd-b43b-1b89961dc67a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60135d81-a9ca-4f04-808c-b73236b8fe09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d858b5d-634a-405c-a411-4525962ba979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e6c1b1-d160-40aa-9552-25380ca5c244",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35b11f4-1532-4768-9a8e-fcdb23a1898e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7d77822-6cd8-48fe-8184-34b0eecd47e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ec91d2-1bf3-4e4f-be49-9646f0f73464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b42da5e7-1960-4bab-9e60-2f8c5d7b8bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544bd447-6a71-4b56-aead-8831ddb52a5c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93493bbb-4493-4080-95a3-5b0863f23228",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f92d1a3-e473-4d9c-9892-1852a90f2f54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7b95ea-1ced-4b83-970c-847c9351a69b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be44e8e8-b073-4adf-9d86-8e2631da3df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a480921-58bc-4feb-a263-82b6ae51b1ae",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e2a5f0-f18b-4bd7-a115-6e7debc89729",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ce2bc7d-3c5a-4085-92f4-d4c130bd8a90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63314edf-05c9-4632-9bd9-ef17a26ac0a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eceec370-665e-4ea7-80b6-bca51b1356f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ccb29e-fea3-467b-94a9-3711342fe8fa",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8606b94-efa0-4d3a-ab39-7242d87db5c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af16425a-5a74-433d-98e8-9485de7e7353"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd2dd3f9-8b70-4e8a-b8a1-554cd6ecd0de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e1e63bc-2f57-472e-9eb0-25f50f12e3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb42c95-c573-413b-b2ed-bfad2b6d54c4",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a160b31c-e9ad-4572-b525-8838bd5b2395",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0268b3f7-165a-4247-bcb9-64ffcbb2fa57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30ffaee-2e59-4598-8080-d8e173b732ba",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ff9229b-c531-47ae-8217-71c7f73e6b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f58c90-2d9a-40dc-9609-cd1b8087c13a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b665a48-1e14-4b39-ae74-0cc2054db25d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a8ce5c9-329b-45d6-a908-04f9bfe7f5e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa85fd7-5f3e-4e2d-8dbe-d4ace023d442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5fce81a-0cdf-450a-af12-839925f8e3dc"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76db51bb-6aa1-4473-9c0c-c167a09958e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "343bcc49-8754-474c-8e54-0e3cf8f9fee0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d4b6e73-92bf-4006-b844-563572fb8447",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0d4a1112-76ce-4a2b-bb13-4105e6873e9f"
                    }
                  }
                ]
              },
              {
                "id": "42ee2b86-fdd8-4fd1-9972-2aea89ed40f3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7e8c7065-bd74-4153-aae7-61136831c9e2",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b53ac17-94ed-46eb-8e08-e269255a3637",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "301a6436-e4f8-475a-a4a3-78894b9a216f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7241d2-633f-4d8a-95e0-65fdbc14227f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3336127-574d-4869-9a0e-d452624e1eb6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e66df6c1-ccda-44d8-8c30-5f8f3b95cec0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b8a34a1-9648-40c9-a01e-e135992e34fb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8af57bc-a1ef-4b25-a13d-dcbec4c40cee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d534783c-0528-4b49-8394-78da63cba1ef"
                    }
                  }
                ]
              },
              {
                "id": "10a282ec-fd51-4994-8ba7-86fc5211ee88",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ce033fb1-fbd6-4fb1-8188-ac807b8bd6d2",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "572c4e03-596b-4297-9b71-ff059c035fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "95ab7835-7108-4896-ad74-27fd5cec45ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d4a55f-d6cb-4f27-a373-50115304ae65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b364b16-cd65-44dd-84bf-c1cf5afa6ec1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d55e2672-2cc7-4d94-9d5a-8f8b51455891",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c36a3e1b-4868-4990-aab4-1212c64aebb5",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e94a1af-0e8f-4c9a-82d0-1dd0b05828ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e65dca2a-cf88-4672-af02-2c256f3701a4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d3e2371f-bf72-4d2b-a952-4106dfe198f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c38951c-174c-4aca-821e-e2e254450c4e"
                    }
                  }
                ]
              },
              {
                "id": "2152fee5-8ca2-411e-bd38-3bc404f08608",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "deea292f-14ce-462b-b8db-68c9a63ab61b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "37f2e33e-7b9d-459e-b427-71e7ecc724f7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5b9aad2-ea60-45cc-bf1f-4dfa55c56266",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "813110f1-cecd-4940-b973-384b8db7ae11"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1834a57b-cbfc-4b10-b879-3b0b3416c28e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "804fc3d3-d904-492f-84a5-2a2016033ff9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "816762fc-7e25-455d-a9db-0122722ac69e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7cec81dd-ce62-4793-a0e1-83c16a9397e7"
            }
          }
        ]
      },
      {
        "id": "cc48a723-8f09-4a18-88ba-ed66f6acbdba",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4e15b520-7a9b-49db-9d4d-e831ecac027e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9eed0d08-830a-42e4-8a63-bf71721032f0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b124156e-e712-4014-82ac-fb77235ba8ff",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7408504a-7e8e-41d9-84ba-d62007fcb6c3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "842cf204-302c-47a5-ab58-e4fba4207965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd99c702-9174-4d29-ada1-bc167fad07b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6f68fd45-c25a-4650-8986-2e51e6633dc2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df2bc66d-f5ed-4ddc-bec5-f7c2a3ba5282",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d38b79b2-294c-42c6-8ded-b1e86ddfdcd4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d89d88ba-ced7-4251-9c0b-0f9e39fb85f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e4764bf-4af0-42c5-b250-ab3749c39cd8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82fa9883-8c80-4032-ba2d-acbf50c77d66",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0f460df1-17f0-401a-b66e-b20994afc104"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a0ffc7a-aa4a-44c0-a575-bc71ed1d82d5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "60905757-7971-4dfd-9a73-337cd501d6c9"
            }
          }
        ]
      },
      {
        "id": "cdadaac5-b3bf-46bb-83d0-0dddc5027cd5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "f2c769c6-3908-4c72-a60f-d6f2299020a1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fda4c468-1da8-4410-9894-8a24e3463307",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b2d4880c-0e8b-4d5b-89e7-27e966302c03",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de8470fa-f2e3-43be-9097-f315c7a920e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e7c04bf-788c-4635-9176-c412c4a562bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9541d5-a54d-484b-9816-4ee1671d5cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c48badec-561f-4fd1-af04-e949706b12f3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "11b76dfb-30c4-4546-8fa3-ed73d6094e58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "960aa243-0f2b-4bba-8557-0b0615a11c44"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebd72d54-4f35-4dbf-a8fe-a7aa0be05b1a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "924e919a-c12b-41f2-9c6f-9c3a3f6ed29d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "06261b01-f46d-4407-8b80-ec865495f259",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bb01dfe9-679b-48fc-90ae-f9714a24c699"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ffd9b057-96de-4871-b124-b82d6f5772c0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7b23eeb-0cfd-469f-a34f-9175ead11ad9"
            }
          }
        ]
      },
      {
        "id": "9748e269-439a-4410-8c2a-3a9dcb301856",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "47d7906d-c93d-43bb-b1c5-38b00cefe7bd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2909935c-f642-4899-a876-5ea9c35e0511",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8e490f6b-8859-4a14-817f-17fa6cd177ad",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044291ec-067c-4a14-b644-f1b4c3c8d91e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53bcbf8f-7440-44e9-ab7c-ae0f3d0e73b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c90a9d-0b91-482a-9bc8-b8a434bccffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "898207a6-a554-4dff-91cb-e960e6ba8a1f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a4f6f76-1a94-4800-8810-0d4ccf7da1f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f746b728-4359-4b7c-a765-7396d051f951"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "37cabb06-272d-4332-85ef-c4d41a30083a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e19285c-4135-4266-ba6e-45d9f932007f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8d5eacf7-142f-4bb2-90d2-f8eedf598048",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e458e771-0e3a-4133-b957-bddba31db983"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f2a52a7c-11b8-4c00-9295-8905484b750d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0de598ae-f857-4f21-9755-ed92d9505245"
            }
          }
        ]
      },
      {
        "id": "bd682fe8-0edd-4398-88bd-44da6640e4a4",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01314373-5783-4469-b7cc-396c01788711",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a4c58698-f0f3-4033-b968-1d81aa113e1c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "2e7dd1e6-df79-4e03-bc40-da69d784cf39",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "37ed9d16-f922-4dd3-b8b6-d6b84efb81ac",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aad35541-1b36-4db7-8744-a6f2f4a5cdc0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 9.73591549295775,
      "responseMin": 3,
      "responseMax": 269,
      "responseSd": 28.20031425643822,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1692405004199,
      "completed": 1692405018740
    },
    "executions": [
      {
        "id": "ce15c26f-ccb8-4c18-ae85-a766d9670134",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6c2d2673-fdc8-413c-a674-ced78b60fe8e",
          "httpRequestId": "e5337963-8056-4f14-8894-1c174af307f6"
        },
        "item": {
          "id": "ce15c26f-ccb8-4c18-ae85-a766d9670134",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "89759abd-e3ab-4043-b659-ac4e6eccc65d",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 0
        }
      },
      {
        "id": "e974b04e-0ce9-4f36-bb60-1533ce0997ac",
        "cursor": {
          "ref": "db871c71-9554-43ce-9805-c20b3259428f",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6e63e4d4-9dff-4914-809b-c60878987af5"
        },
        "item": {
          "id": "e974b04e-0ce9-4f36-bb60-1533ce0997ac",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f1e3b14e-fe71-4fc9-91c6-e6d810114e3d",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "1977faf3-291c-4c43-87e7-77defc35353b",
        "cursor": {
          "ref": "917a454a-177b-4548-93cb-80dfa0684b6e",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0971394a-4848-41a5-8745-a82e259bf8e8"
        },
        "item": {
          "id": "1977faf3-291c-4c43-87e7-77defc35353b",
          "name": "did_json"
        },
        "response": {
          "id": "34ccda87-5bdb-4b0b-86c2-a5c2b1b6b7c5",
          "status": "OK",
          "code": 200,
          "responseTime": 192,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77614ef-cd8d-46ff-8e0e-750b0317c800",
        "cursor": {
          "ref": "9ceb45d2-b90c-414a-b3a4-6aefe370b734",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a6b1d3b7-041e-4846-ac72-3fe12e2df74a"
        },
        "item": {
          "id": "a77614ef-cd8d-46ff-8e0e-750b0317c800",
          "name": "did:invalid"
        },
        "response": {
          "id": "8c198a11-79a1-4087-9eb9-ce5bd3d8f6ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77614ef-cd8d-46ff-8e0e-750b0317c800",
        "cursor": {
          "ref": "9ceb45d2-b90c-414a-b3a4-6aefe370b734",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a6b1d3b7-041e-4846-ac72-3fe12e2df74a"
        },
        "item": {
          "id": "a77614ef-cd8d-46ff-8e0e-750b0317c800",
          "name": "did:invalid"
        },
        "response": {
          "id": "8c198a11-79a1-4087-9eb9-ce5bd3d8f6ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b51549-5f31-4e62-b7c7-54f42b5df5c4",
        "cursor": {
          "ref": "8fa38cbf-2d19-4230-a625-f4fe70826e48",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "eefd9579-709f-49bc-ad56-6bd44de89cf4"
        },
        "item": {
          "id": "41b51549-5f31-4e62-b7c7-54f42b5df5c4",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "18f3049f-ee27-4178-bdc4-9e84b44bcf42",
          "status": "Not Found",
          "code": 404,
          "responseTime": 269,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36fad17-658d-43ed-af8a-aec642fa3a64",
        "cursor": {
          "ref": "d0bf9702-68ae-44a3-b45b-eba1e4c1bae9",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d19c2596-cd2a-4301-a4ea-bce1de4c4133"
        },
        "item": {
          "id": "d36fad17-658d-43ed-af8a-aec642fa3a64",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e492e084-897b-4ae3-959e-f69fdf36057b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c3a09d-9249-40f7-86b4-36cf502f9784",
        "cursor": {
          "ref": "08eae23a-571b-4009-8117-c621d9afda1c",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "07ac99bf-fcd0-4ab4-b687-3e92436410d5"
        },
        "item": {
          "id": "18c3a09d-9249-40f7-86b4-36cf502f9784",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7045d300-8373-431c-8570-e61f79003c2a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ad7042-6ff0-4c8b-866c-ed308bad4ce3",
        "cursor": {
          "ref": "2fb1ec28-53ca-4829-afe5-ddae445846c6",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "889fde28-f46d-4de6-b880-9df9fc54b719"
        },
        "item": {
          "id": "54ad7042-6ff0-4c8b-866c-ed308bad4ce3",
          "name": "identifiers"
        },
        "response": {
          "id": "6485bcc4-e253-44f5-a5cd-04b60ba5bede",
          "status": "OK",
          "code": 200,
          "responseTime": 230,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3feded-0d29-455d-84c5-6727f37c69bf",
        "cursor": {
          "ref": "f7746cae-f9d8-4a93-9648-aae3ab4bae75",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1e7054bf-6790-4585-b6c1-a92987b21520"
        },
        "item": {
          "id": "5a3feded-0d29-455d-84c5-6727f37c69bf",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "163ee6ac-347c-4421-bf99-39dae0d1adcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b87a3b5-3477-4b61-8712-ab4e9cc75300",
        "cursor": {
          "ref": "d95efffc-1ae0-481e-b122-157a3285d64b",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4205b0a5-7669-493d-8740-6011a83a27e5"
        },
        "item": {
          "id": "4b87a3b5-3477-4b61-8712-ab4e9cc75300",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2b434df4-1719-4f37-b643-acf4a2b97cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37aac36-61fc-4493-95a0-abc7037af355",
        "cursor": {
          "ref": "17f9b7c3-1223-47ec-ab64-4c5b9452ac9a",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3ff63f0c-11b6-48e4-bc28-1eb0787268ae"
        },
        "item": {
          "id": "c37aac36-61fc-4493-95a0-abc7037af355",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6f40785c-1761-4fbf-ba69-515f9e4cdecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7253e5d1-b002-490c-81ea-8034023090f7",
        "cursor": {
          "ref": "0051e92b-502a-4f0d-b0b4-a6e61aafd398",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3b7d9270-99a0-4ebc-94c8-0461efc9ff24"
        },
        "item": {
          "id": "7253e5d1-b002-490c-81ea-8034023090f7",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "edbebf89-d322-4dcb-b5af-b89789e656d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12771976-1deb-4dc9-91aa-3a1a747edda6",
        "cursor": {
          "ref": "ccacceb8-78ac-4406-a4e7-cc8596d932af",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "146bf292-ce9a-4fef-86a4-53310c32d22a"
        },
        "item": {
          "id": "12771976-1deb-4dc9-91aa-3a1a747edda6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a8294895-9990-453d-a5a0-7c8c132f9046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398ec2be-148e-45ec-8fbb-b80d32bda76d",
        "cursor": {
          "ref": "16114ae4-4200-4a7b-91a7-6d36fd7c52c5",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ca9e0d3d-edf1-40fc-b5ef-17d840119250"
        },
        "item": {
          "id": "398ec2be-148e-45ec-8fbb-b80d32bda76d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7e4cdc77-86a1-473c-9a92-d98a17135eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3fd8847-9fea-4218-ae03-db89af69aeea",
        "cursor": {
          "ref": "978851e8-7bdf-4d6c-93b2-e453d753014c",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2dc39b16-5f31-431c-b622-7d699d837af7"
        },
        "item": {
          "id": "b3fd8847-9fea-4218-ae03-db89af69aeea",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6a8d2395-5aa1-459f-8dfb-33f325bd439a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c2d9ac-879f-4e37-b89f-5a3517a6ad6e",
        "cursor": {
          "ref": "f1bb5ef5-70b3-47fb-ade5-5dd62fc408a9",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "007d1ec8-3d44-4454-bb9d-6773ee439ec9"
        },
        "item": {
          "id": "33c2d9ac-879f-4e37-b89f-5a3517a6ad6e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1f1e5f9c-d058-4e7c-afe8-761cca63bf89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07237412-58cf-4d6d-a5a6-3afaf5149e9e",
        "cursor": {
          "ref": "1f75848f-46b0-43f3-8be1-5cd9d8cae67a",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "cd6f04f8-6253-4300-a724-08580dfe64b0"
        },
        "item": {
          "id": "07237412-58cf-4d6d-a5a6-3afaf5149e9e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0eeccc1e-d534-42c3-b6a5-aded422d0cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d525600-04a6-4e67-810b-5f37de99a07a",
        "cursor": {
          "ref": "bf821951-0891-46aa-98b4-e816409d678c",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3c8050d1-81c5-420d-a61f-12042309edce"
        },
        "item": {
          "id": "0d525600-04a6-4e67-810b-5f37de99a07a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5dd230f3-2614-41fc-813b-23e7c9fff2cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d5cee8-bb47-4014-bdec-8400cef61477",
        "cursor": {
          "ref": "f10edeb7-f98d-44fb-b6f4-b47671be7ae8",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "86516bf4-68de-4750-9331-8db656a6af4a"
        },
        "item": {
          "id": "b7d5cee8-bb47-4014-bdec-8400cef61477",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6eebef39-24ad-4414-bc24-de90d24a18a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90258200-56d5-4e5b-89e4-f398ac66cc14",
        "cursor": {
          "ref": "1b4eddec-1403-4901-bcb7-56d3fd98257d",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e852fbb2-825f-40bf-97e0-9209debd8c3a"
        },
        "item": {
          "id": "90258200-56d5-4e5b-89e4-f398ac66cc14",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5cef6e96-95bf-4a5e-bd36-e4e36f553564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086e96f8-c1de-48cd-86f7-153b83c2827e",
        "cursor": {
          "ref": "71bff1bf-23a7-4c2e-a07c-412cd3ca339c",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9610570b-7f65-4d40-9d15-09aef0267c46"
        },
        "item": {
          "id": "086e96f8-c1de-48cd-86f7-153b83c2827e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "79397bff-df14-46fe-b13b-3b5da3dda6ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe66cff0-7a3c-4baa-9370-ae5c213535d8",
        "cursor": {
          "ref": "b4685667-396d-42e3-b43d-07538dc57e08",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "30fe0355-df30-453a-92e1-66cb3586e1fd"
        },
        "item": {
          "id": "fe66cff0-7a3c-4baa-9370-ae5c213535d8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4aa5137d-ce24-4d05-901e-088887fa0ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89360e51-c9aa-47e3-a0f5-a7cc14c95442",
        "cursor": {
          "ref": "fabef75f-6617-4471-8835-305ad1bbdf94",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0e8f2396-4934-46b3-8943-bd58794056a5"
        },
        "item": {
          "id": "89360e51-c9aa-47e3-a0f5-a7cc14c95442",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d614176e-c1bd-44be-9e3e-aa9f074d6fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c02f50-6eb3-49a1-862f-34bb5baedf59",
        "cursor": {
          "ref": "a25187a9-fab6-4061-b3bc-49d66f7d0c91",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b1c6a406-55b2-43e0-8cbc-f523b600a6cd"
        },
        "item": {
          "id": "c8c02f50-6eb3-49a1-862f-34bb5baedf59",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "afa56de5-a7b5-49aa-bdc0-8bd4d8a57bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de78dde1-284c-4a97-8590-388425a12db6",
        "cursor": {
          "ref": "9aebcdc7-fa71-4802-90a8-50070cf507b4",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "383f2ce3-6fc9-4b01-bc7d-5aff5e8c7e29"
        },
        "item": {
          "id": "de78dde1-284c-4a97-8590-388425a12db6",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "031ef2d9-41de-464f-9089-57d0683bf07b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0481db-7ec5-44b9-8946-71f11fe4bf79",
        "cursor": {
          "ref": "aad74279-a50c-4e81-947f-309916b10a5e",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6824eaf6-4997-47c9-9f30-b0cd9075300a"
        },
        "item": {
          "id": "3d0481db-7ec5-44b9-8946-71f11fe4bf79",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b25af244-51f7-4a25-8432-bf0e45325e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eebcd77b-1a4a-48cc-8b3b-500c8de6e077",
        "cursor": {
          "ref": "f22a17fd-fe58-4a07-960d-ab7d41b16186",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ffdcf0b6-6498-48f3-aa0d-fcca5c512de6"
        },
        "item": {
          "id": "eebcd77b-1a4a-48cc-8b3b-500c8de6e077",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7000fd95-7eb5-41ce-824a-ee6c2640d6ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad165e84-d182-44fe-a57d-f4904b22d624",
        "cursor": {
          "ref": "7b4b4917-d187-4fae-83a9-8b5a22bb8d43",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8a5bf0ae-484c-441a-a00a-75425e1700e0"
        },
        "item": {
          "id": "ad165e84-d182-44fe-a57d-f4904b22d624",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3deaf50e-fd68-42d6-b2ea-0204e28f5725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8cdc5ce-0c95-4519-a6c1-2c7c57c0a1a6",
        "cursor": {
          "ref": "e377f61b-1ffc-43fb-911c-3cdad6c81732",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "05633636-10f3-473a-8caa-bb38813089a4"
        },
        "item": {
          "id": "f8cdc5ce-0c95-4519-a6c1-2c7c57c0a1a6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7b173f59-6b8d-48d8-8070-f8d9ecba8604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e18d3d-f557-4e5d-8053-8b6e57dffee9",
        "cursor": {
          "ref": "4246df3c-be5e-458e-a414-597c299e66c6",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d604bd9c-c7b3-497e-bcc2-8231e252472c"
        },
        "item": {
          "id": "39e18d3d-f557-4e5d-8053-8b6e57dffee9",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b74c0e2b-7a8f-407e-a146-cd8e5b7b4cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa01df9e-ea20-4309-95dd-1f17b43e41de",
        "cursor": {
          "ref": "d196ccdb-85a0-4419-8f0c-d73664e488a7",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "15033022-5880-4a24-bd49-f39fc2e9cda9"
        },
        "item": {
          "id": "fa01df9e-ea20-4309-95dd-1f17b43e41de",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "cb8fdaa7-b614-4ad6-8a9e-130c43c28465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1309534b-42f7-4fdd-97fa-5309af41dc13",
        "cursor": {
          "ref": "17c774db-a342-4f54-b921-f96aac329443",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ae45e639-1732-4d41-a8a2-a78525ea02d5"
        },
        "item": {
          "id": "1309534b-42f7-4fdd-97fa-5309af41dc13",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5f675539-bd6e-4342-9e29-01d5e0039919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f8b6dfd-7c5e-40f9-88ef-186cb9d965e5",
        "cursor": {
          "ref": "b2d1d5b0-91b7-4b29-9d0d-b22178d76cd2",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7a907d09-b91c-47c5-aacb-34e71c2e09d7"
        },
        "item": {
          "id": "6f8b6dfd-7c5e-40f9-88ef-186cb9d965e5",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5174ecbd-686a-4910-938a-a9fcf9ee7d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59398520-56c1-42dc-adcd-ebab573fea1e",
        "cursor": {
          "ref": "d6ea61e9-bd82-4d14-a91a-a555bdcdb63a",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1616d165-82cb-49c8-8079-c9567af3933f"
        },
        "item": {
          "id": "59398520-56c1-42dc-adcd-ebab573fea1e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1def47f9-dfb1-47a2-bfe9-29b8fd542b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f173bb-14da-4274-ac53-e909012fd45d",
        "cursor": {
          "ref": "80e97017-928a-4e9c-9d6f-6f589acd9d51",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "fa8b82d6-c067-40ef-9ac4-9cfabb114072"
        },
        "item": {
          "id": "01f173bb-14da-4274-ac53-e909012fd45d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3af4fe25-bf4b-4ac2-954d-b73db8124897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d44e48-0d02-45ba-836b-023ba6c6299e",
        "cursor": {
          "ref": "b4ef2226-142c-4f0a-9712-f962a462a624",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "97ecc3e6-720d-4448-a01d-b0298c85407f"
        },
        "item": {
          "id": "d9d44e48-0d02-45ba-836b-023ba6c6299e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b2f64132-fe72-43d5-81e1-d7c07ee0e3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bb8efe-6074-4f74-ad47-0fcc7a7077da",
        "cursor": {
          "ref": "72ae4d3e-fc0b-4dc7-b8b9-5602e9b8a948",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "cc22c4a0-3805-4ee0-ab14-e3d1e332d36f"
        },
        "item": {
          "id": "b0bb8efe-6074-4f74-ad47-0fcc7a7077da",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "fecd80a7-9f8b-48b8-87c8-22aa8dc3551b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5ef478-925c-4c7a-abf7-f8060cfd636a",
        "cursor": {
          "ref": "d6fbffd5-5ffc-44d5-a1fe-83daf9252cad",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d847dcce-6761-43f5-ada2-9aa7dd34fc0e"
        },
        "item": {
          "id": "ac5ef478-925c-4c7a-abf7-f8060cfd636a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a61a2340-b268-41db-b317-799212980411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3742ee12-a464-438c-ba2b-b0cc86fff567",
        "cursor": {
          "ref": "e46bda3d-e3c0-4442-8416-a21178627c93",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e04891fc-094e-4ef9-99fd-9766f4b32e7a"
        },
        "item": {
          "id": "3742ee12-a464-438c-ba2b-b0cc86fff567",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b6a62ee5-0d93-478d-bc4b-680ee54c9c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193dbbb3-25a8-4570-ba11-87d14b8ae460",
        "cursor": {
          "ref": "379aa201-cece-4207-b9f3-ed40234e3697",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "508408a5-674e-4a6e-a9bd-9ab8b4e579c4"
        },
        "item": {
          "id": "193dbbb3-25a8-4570-ba11-87d14b8ae460",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "06627b28-6e75-403a-a6e8-db402d99d18b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50371a8-f8f4-4ac7-a86a-175eefc19b86",
        "cursor": {
          "ref": "62b6348f-5a01-4736-9e48-facdfc700c5c",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "974b931a-6c7f-49b3-ba74-c3f83dd4d336"
        },
        "item": {
          "id": "b50371a8-f8f4-4ac7-a86a-175eefc19b86",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "467cffb5-15b0-4bee-aa93-8ea2c69769c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed34ef7-eddf-4c39-8f05-feaf8766e385",
        "cursor": {
          "ref": "57c1a84b-389c-4768-adc0-83596a1287a3",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "db4eb6de-6a53-4925-9a73-2a3d2dbc94a8"
        },
        "item": {
          "id": "9ed34ef7-eddf-4c39-8f05-feaf8766e385",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "aa0531b5-6a46-46a7-87aa-e1d02f7fc804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf1e67a-738e-4f41-bb99-80f6dc706cce",
        "cursor": {
          "ref": "809e7611-8e65-414e-9b5b-38e695ceaa3e",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ac0ac128-463c-40a8-ab60-627a2e8b6c6c"
        },
        "item": {
          "id": "ebf1e67a-738e-4f41-bb99-80f6dc706cce",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5b1a2bdb-ae6f-4138-9543-08499809e85d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86db0540-9e1a-4fda-bdca-22faf68163bc",
        "cursor": {
          "ref": "907f2e7b-406d-4e3b-aa3a-3746337bdc4c",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d080c4c0-8826-4e70-a958-777cbd861516"
        },
        "item": {
          "id": "86db0540-9e1a-4fda-bdca-22faf68163bc",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1bda5467-06c0-4e5d-8406-2c94b9b22392",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 54,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f74d4e5-99d5-4cdc-93e4-f44322f3ce20",
        "cursor": {
          "ref": "c1ba5f6a-b400-4317-9365-52e8a9ea9c97",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "bdb09701-086e-4180-a870-8c70e0630e5a"
        },
        "item": {
          "id": "5f74d4e5-99d5-4cdc-93e4-f44322f3ce20",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "bd04a419-92a0-4e46-bc18-316af329015f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289c2d0b-f466-4d42-8d1e-e54793aaca61",
        "cursor": {
          "ref": "0aa08852-d70e-4132-a90a-a57f53f3d910",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c333e933-d12c-4c05-8a9a-2c7fc516b29d"
        },
        "item": {
          "id": "289c2d0b-f466-4d42-8d1e-e54793aaca61",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8866b51f-3574-467d-9db2-d54dc37bbe64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd74a40-4a15-4899-b70e-047b2767df0b",
        "cursor": {
          "ref": "e2f95532-52f9-4b75-99c6-ca62044db15d",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c47550e0-94be-44e9-958b-85fee61b0c5c"
        },
        "item": {
          "id": "6cd74a40-4a15-4899-b70e-047b2767df0b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c36af192-6ccb-4d24-8bf7-35ca742c42a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75eaa97-e76f-48e4-888e-ff784341825e",
        "cursor": {
          "ref": "3e6f4151-3c96-464f-a2c1-c3f7238f314d",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "7f6be74f-1a68-48c2-a70a-ab81fae0a100"
        },
        "item": {
          "id": "b75eaa97-e76f-48e4-888e-ff784341825e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d6d0a2a3-52cb-49e5-8e54-504fc8116a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89f430f-2061-4bc1-b97f-da4021284e05",
        "cursor": {
          "ref": "3f07f4ec-3c7a-44d7-aaae-9935f0799c8a",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8b1f502d-297b-447a-8cde-fb9b93128709"
        },
        "item": {
          "id": "a89f430f-2061-4bc1-b97f-da4021284e05",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2e377918-3d6b-4b03-bb31-c5f8e35146c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6cde483-ae6e-4bd8-9e8c-ead121530cb1",
        "cursor": {
          "ref": "467b0955-c55c-4f5e-ba6b-eb55b8bb9a2c",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1fe0b072-ef14-4f20-9225-ad062e4331eb"
        },
        "item": {
          "id": "d6cde483-ae6e-4bd8-9e8c-ead121530cb1",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "406f38de-ecec-4ad8-a0ec-91704b69d4bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab48e19-1f4a-4cfb-80fc-14cd5a3e4b75",
        "cursor": {
          "ref": "3eee57fc-9820-4bff-a00a-75c9714eeb25",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8a1b56d2-b4b2-45ed-af4e-bc0d9336f37a"
        },
        "item": {
          "id": "2ab48e19-1f4a-4cfb-80fc-14cd5a3e4b75",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5f0a1111-0201-43ee-9068-2dd46ab52383",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 19,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706eba54-ceb2-463b-b480-c62f1f42fb03",
        "cursor": {
          "ref": "93b545b3-05f6-4e2b-90f5-02d56005bf20",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1bb79d65-1d90-4686-bf3d-086db152e655"
        },
        "item": {
          "id": "706eba54-ceb2-463b-b480-c62f1f42fb03",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c7a5125a-cfa9-4390-a936-b0d5d8c68f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b91b3a16-9861-4dc8-89f4-128972ed332f",
        "cursor": {
          "ref": "d78af150-678c-4236-9755-c97c40152905",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "99087309-e8e2-48a8-b9ad-fc459ab641d5"
        },
        "item": {
          "id": "b91b3a16-9861-4dc8-89f4-128972ed332f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "fc4c7e25-ca3c-4e1a-b912-4942c1bf9642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37900117-41c3-4a8d-a568-10ddb1f90a96",
        "cursor": {
          "ref": "23489cc8-6366-4123-af2d-ab7e1cbdd86d",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5c3e9b45-af68-4410-b5b5-edec2b881900"
        },
        "item": {
          "id": "37900117-41c3-4a8d-a568-10ddb1f90a96",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2817e9e6-410f-4386-abb2-80e0e7630b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26af2351-f9ca-4cbf-b1d2-76c735167e57",
        "cursor": {
          "ref": "43419bee-6497-4a07-99a5-a4449fce44c2",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ecc026e7-f722-4a48-bca8-7ac47e572524"
        },
        "item": {
          "id": "26af2351-f9ca-4cbf-b1d2-76c735167e57",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4c8ac3fa-10c1-4768-8323-8113b4d2fd3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb5ae44-55c5-470d-b101-6be083381f0d",
        "cursor": {
          "ref": "969b3bf8-baff-4136-ae06-8d8ab9ff725a",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "eeac4220-8e23-45b7-9b77-0aff38bd1d65"
        },
        "item": {
          "id": "fdb5ae44-55c5-470d-b101-6be083381f0d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "fc54ed23-66c3-45ee-acde-6585e45db407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81370e28-a402-45b6-9a92-0f6e5fb4df9c",
        "cursor": {
          "ref": "ff16ce67-2c26-4b12-968d-dc000724f4ab",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "43fab287-0a9e-4f18-b63e-e4bea6346cf0"
        },
        "item": {
          "id": "81370e28-a402-45b6-9a92-0f6e5fb4df9c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b9296ea0-4761-4c9c-8b84-094574a463fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5148e0f1-0965-4697-8aa8-2ed7d564f521",
        "cursor": {
          "ref": "98aed820-5949-4a90-926d-4adb18499d1c",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a744278d-c40a-4f8e-a4c7-2479aaff192e"
        },
        "item": {
          "id": "5148e0f1-0965-4697-8aa8-2ed7d564f521",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7354b76f-6978-4fa0-a81e-576bdc553a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91166d0f-18be-4929-9a80-7edef37afaf4",
        "cursor": {
          "ref": "23592ad0-5f26-43b2-9f5c-eedc28936078",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3f19b869-a508-4c3e-afb5-8a0e72c6f8ab"
        },
        "item": {
          "id": "91166d0f-18be-4929-9a80-7edef37afaf4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5671873d-717f-41ca-ae97-10b937e77a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e5e0ae-50fc-49f6-a088-fd18e480da21",
        "cursor": {
          "ref": "2efcb25a-b062-4c5a-bc27-6c9083de336e",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "cf806473-f0e4-4c6e-81c7-80e263f62d68"
        },
        "item": {
          "id": "d1e5e0ae-50fc-49f6-a088-fd18e480da21",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9cfd63fc-6416-471a-95b7-a4c34f6288e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f2a89e-a8b7-4a76-8e9f-46673700eadd",
        "cursor": {
          "ref": "997b81ff-73cd-4a58-b241-8e17c04028a3",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9a53dc68-1553-4fad-853b-8c07346cf520"
        },
        "item": {
          "id": "e0f2a89e-a8b7-4a76-8e9f-46673700eadd",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4f3c83e6-5e15-4c05-9f1b-bab78fe7f912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e242563d-85d8-4dd8-8aa0-9a7859cf1e34",
        "cursor": {
          "ref": "767aba91-51f9-476a-95d4-5a3dcb8d1787",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "45150fcf-873a-4157-a04f-4b9ad4b8c1e7"
        },
        "item": {
          "id": "e242563d-85d8-4dd8-8aa0-9a7859cf1e34",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "28eb6e0e-2529-4077-96a1-2a4b4223bb3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a5426b-517c-47e4-8f62-fb61e26637b2",
        "cursor": {
          "ref": "1f0350cd-44d8-46f3-9076-727d3d758daf",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f2ee8b01-62ed-452e-9b77-1e1843f4de6a"
        },
        "item": {
          "id": "15a5426b-517c-47e4-8f62-fb61e26637b2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4947be3e-e2f4-4f8e-800f-1945e4d030ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98940c5e-2e9b-4d08-b39a-dc3bc877b241",
        "cursor": {
          "ref": "9dce4458-f4d0-4a15-a005-0927e55fbf95",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7745d0c7-3603-4b3a-b14b-f66ace095eec"
        },
        "item": {
          "id": "98940c5e-2e9b-4d08-b39a-dc3bc877b241",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a7493bfc-71d4-422c-b142-572b14ac5618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1b1410-73df-49ed-a7c1-b825ef5d91c2",
        "cursor": {
          "ref": "e0bcb199-0f29-41dc-be4f-1ece2515ab72",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b4a4c318-5f8b-4268-bc41-da85024f2ebc"
        },
        "item": {
          "id": "4b1b1410-73df-49ed-a7c1-b825ef5d91c2",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7ca0aa8c-a01b-470f-af3a-cd469eec299b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2a68d4-4c31-4a71-8bd8-b8661f17f74b",
        "cursor": {
          "ref": "d1ad7b6c-0789-4745-9018-95325d92beec",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3e35be0d-d52c-4aae-992e-cf559c3bb66f"
        },
        "item": {
          "id": "aa2a68d4-4c31-4a71-8bd8-b8661f17f74b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "759a843a-3acc-4c31-b753-827e55be6ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f91e29d9-3e93-4c81-acc2-55e9633b3033",
        "cursor": {
          "ref": "03ebbeb5-729d-4ff3-97df-2156d1e9fbb0",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c555b425-0622-4e7b-86cd-80eb49d3b14a"
        },
        "item": {
          "id": "f91e29d9-3e93-4c81-acc2-55e9633b3033",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "51aa203d-b75c-45ca-b4bf-cf1488d71d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa035631-cbd3-4fe7-85a9-4008757bf19c",
        "cursor": {
          "ref": "73f78af0-ac51-4ea9-bb4b-692aa1c4c1c8",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ca54eeac-f620-46bd-b587-9dac10963399"
        },
        "item": {
          "id": "aa035631-cbd3-4fe7-85a9-4008757bf19c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "924c6535-c816-4047-8112-56b562f77b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8866e81-2592-4938-af3b-c623d306a0f3",
        "cursor": {
          "ref": "9618e189-875e-4416-9d2b-d3e2cdab1647",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "aa7786a9-51b8-459e-b76d-70abc5a54401"
        },
        "item": {
          "id": "a8866e81-2592-4938-af3b-c623d306a0f3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "84742cba-c25b-4f5c-a813-132c6f0eba23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01825d3-8608-48db-964a-e380fd3b0043",
        "cursor": {
          "ref": "5fdd54d7-6449-42aa-922c-e83d4328f00c",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "683be78c-b4fa-4c7b-b31f-3f5ae96df14d"
        },
        "item": {
          "id": "d01825d3-8608-48db-964a-e380fd3b0043",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5d79504a-fef1-4147-9e26-40d2e78d392a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca2cb1a-ed2a-4411-9537-a440b3274525",
        "cursor": {
          "ref": "fa581d28-bf85-4ad1-bc6c-6c11b15cf042",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "68e1ddae-eedd-4c4f-a713-d6d934515a33"
        },
        "item": {
          "id": "1ca2cb1a-ed2a-4411-9537-a440b3274525",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7fb8308d-2634-425a-90e6-ca84da84e435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a39787f-49aa-4256-b1df-6b2fbb852118",
        "cursor": {
          "ref": "9d7dc186-843c-4914-8af5-34b4d5c5d9ff",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d65474a9-6e05-4ef5-a54f-c020b9a48c52"
        },
        "item": {
          "id": "2a39787f-49aa-4256-b1df-6b2fbb852118",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c2be89a4-0110-4c2c-8dab-f0372f03fb07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e67f8d0-b8ee-4f66-bea4-48fa427a8d58",
        "cursor": {
          "ref": "a1f532b3-86a5-4f09-bd21-993c994215ca",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "75e71697-4cd5-4966-b25c-02e0097d4814"
        },
        "item": {
          "id": "6e67f8d0-b8ee-4f66-bea4-48fa427a8d58",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "38354cfc-d823-4019-81dd-98b4458eff72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f723e0c1-6a26-4a35-90cd-350d011722ea",
        "cursor": {
          "ref": "0c0916d0-ed2d-437d-9412-413745157d18",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8441682b-b433-42b1-8444-dbfade7a4aed"
        },
        "item": {
          "id": "f723e0c1-6a26-4a35-90cd-350d011722ea",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6e44c6fb-421c-42dc-94bd-068cf113439e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c20285-c79b-4f0d-b2e7-4c4ed9ca5cf9",
        "cursor": {
          "ref": "66d3ef03-7465-48af-81ff-659802a3007e",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "56c48c10-9f5c-469c-bdd9-cfb4744fcbcc"
        },
        "item": {
          "id": "c1c20285-c79b-4f0d-b2e7-4c4ed9ca5cf9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "bf7932c8-c89f-4a16-8271-ecc6cda099be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d3392d-5de9-4cb2-a9f1-8fcfc7078478",
        "cursor": {
          "ref": "fc24bbe7-602d-4e88-8ca5-e03e8d6f9017",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f3382c26-5abb-4d9c-889b-ca0411d8ce9a"
        },
        "item": {
          "id": "59d3392d-5de9-4cb2-a9f1-8fcfc7078478",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a41d4739-36a1-4968-9f7d-ce455f9c938f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c328d6-91af-46f5-9b56-e70f05bd0c50",
        "cursor": {
          "ref": "1cb6d0c4-b80e-43cd-be14-ec279dbaaf9a",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "95937e95-8964-4bb6-9157-1ea561a3e331"
        },
        "item": {
          "id": "a0c328d6-91af-46f5-9b56-e70f05bd0c50",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "50322c70-1232-449c-bc3b-1487967d2068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e243630-b314-49de-ac00-491433b83b8b",
        "cursor": {
          "ref": "2a4e5f9c-1916-4d2b-9299-ca9d75a999be",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9974f403-ac96-46b8-bd92-ff7230554fbe"
        },
        "item": {
          "id": "9e243630-b314-49de-ac00-491433b83b8b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "36556f8d-5b93-46be-9728-53dd397857fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cbf2526-17ea-4c49-9fc0-7a4b0d4a4e32",
        "cursor": {
          "ref": "b4aedf12-a9cf-4120-bb10-95a72b102a04",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "fe071111-cd00-4b8e-9912-9282643e9239"
        },
        "item": {
          "id": "2cbf2526-17ea-4c49-9fc0-7a4b0d4a4e32",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "bc2e1d6f-474e-4bc9-aefb-8d77ebde6f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc68e4b7-d1d0-4778-aa80-fa43cc5dea5a",
        "cursor": {
          "ref": "f839e837-37ac-45e3-b4a7-6cbc1a42d105",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "200b396f-659c-4524-bb96-33136c0f0af9"
        },
        "item": {
          "id": "dc68e4b7-d1d0-4778-aa80-fa43cc5dea5a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "06d0ad0a-8940-486f-bbf3-71e0da9729a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2f4eb7-31b4-4a76-9e1a-4a0d2ff4899f",
        "cursor": {
          "ref": "d5ac88af-ef39-4f7d-b30e-65fb8652162a",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6d0cd16f-788a-4cf3-b2d4-c5e90629fb1b"
        },
        "item": {
          "id": "1b2f4eb7-31b4-4a76-9e1a-4a0d2ff4899f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "bdbc7ac1-0142-4c10-a084-459185659d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12d2a23-0270-44df-b61c-0359535283a4",
        "cursor": {
          "ref": "056cb0bc-1109-4b9c-b2f7-9fc93dffb472",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "924a189f-a146-4e92-989c-05736440e31d"
        },
        "item": {
          "id": "f12d2a23-0270-44df-b61c-0359535283a4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5a37abb5-361b-4411-96d1-f178163f00b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47125c7e-212c-4a94-9a31-2ec7633d9f24",
        "cursor": {
          "ref": "cfe0e2aa-4bcc-4801-b1dd-43c1ac4222c1",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "bfe159ad-af0a-49f0-83e4-30bbf405e6cc"
        },
        "item": {
          "id": "47125c7e-212c-4a94-9a31-2ec7633d9f24",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3cb996db-fcd5-4cb8-bf0c-e84fe9655961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5f650a-448b-419c-9670-de4a7c66ce34",
        "cursor": {
          "ref": "4569527d-77fa-42bd-a435-974b47199129",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "01b8ba24-e776-4939-a63b-7b504767bc7a"
        },
        "item": {
          "id": "0a5f650a-448b-419c-9670-de4a7c66ce34",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4f406ce1-4fd5-44b1-b5ef-b6527d8fab54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8defa377-af56-487c-9e73-3b06c3417510",
        "cursor": {
          "ref": "5c7b49b4-e9fa-4b5d-b50f-89a4718033f5",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3c48238b-f13f-49f1-91f8-c1ccd2c568de"
        },
        "item": {
          "id": "8defa377-af56-487c-9e73-3b06c3417510",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d4301331-61dd-49f2-9155-02cda50af6ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6138eb-41a0-4d40-8045-b8e056bbcf50",
        "cursor": {
          "ref": "46494906-6f9b-40fb-9818-b8fff330bccb",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "627b7fe1-82f0-4a84-bb8f-cc28696c6d76"
        },
        "item": {
          "id": "dc6138eb-41a0-4d40-8045-b8e056bbcf50",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "81f17a0d-50ed-465d-8566-b5bb5ab94902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e87a16c-45fd-4bdf-aa8c-487bebdbcdab",
        "cursor": {
          "ref": "4ae562a8-1feb-4e1c-a0a3-78b4d3b5dfe3",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "bc516287-3ca1-466e-ac95-8692d986a232"
        },
        "item": {
          "id": "9e87a16c-45fd-4bdf-aa8c-487bebdbcdab",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "bfa726f9-ce99-4fc2-a75c-3eec7d270273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4cf98c8-f61a-48b8-93aa-e8e81c050020",
        "cursor": {
          "ref": "793972b1-1b6e-4352-bddc-3aa49bc5cb0d",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "cbd30e20-fbf5-4498-a930-6fbdee746955"
        },
        "item": {
          "id": "d4cf98c8-f61a-48b8-93aa-e8e81c050020",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2f040ebb-7009-4847-8001-37116ef8763b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051e0d99-4ad3-4fa7-9ec9-88b471f9d328",
        "cursor": {
          "ref": "c2b53942-0b67-43ef-9b27-676eacb3eb93",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7ea6bfbf-13c4-457c-81d6-b54a965ffa96"
        },
        "item": {
          "id": "051e0d99-4ad3-4fa7-9ec9-88b471f9d328",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a305f1f6-d114-40ff-bdaa-02bc527c1ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca62cf9-0264-4b15-91ae-3bd4ae85d764",
        "cursor": {
          "ref": "e567afbd-8f5b-40e0-ba69-33b4c21f3520",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "67500617-331a-4ccd-a3f7-178c8237b82f"
        },
        "item": {
          "id": "eca62cf9-0264-4b15-91ae-3bd4ae85d764",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7cb1300c-c430-4fff-a98d-7ffbe2f4e5de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed8cd96-f4cf-47cd-aa4b-aa1607a125d5",
        "cursor": {
          "ref": "3a5f3a19-974d-4db3-ae80-a428a549b89a",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "db6ec031-6ec0-46fa-b6ab-a3b6c4039e27"
        },
        "item": {
          "id": "6ed8cd96-f4cf-47cd-aa4b-aa1607a125d5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "de28e2e0-8a39-4c3b-ac84-17aedd13bd20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4dfde46-ab8b-494f-894f-374230ef0d01",
        "cursor": {
          "ref": "999df524-d6f5-400b-8f6e-198370da07d6",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "19942520-872c-4350-90bf-5d5c949a47a3"
        },
        "item": {
          "id": "d4dfde46-ab8b-494f-894f-374230ef0d01",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e7789e7e-50b7-4c26-b6b7-b8eff640af6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6e681a-ce01-45b5-9c5a-db4688a90e3f",
        "cursor": {
          "ref": "0956bbf3-cdd8-4f86-9294-90cc975ac27d",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "faebb333-a79a-4c8c-800a-55888cad8580"
        },
        "item": {
          "id": "6e6e681a-ce01-45b5-9c5a-db4688a90e3f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6cbacff9-a66f-4ec8-b228-4e33a712af7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d9ac84-bdb0-40e2-89b5-5ec59f9b3574",
        "cursor": {
          "ref": "376d3c6d-3d1b-464a-af9b-6e6edfc27379",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "73b57547-3c81-4dc1-a398-04e7e9786310"
        },
        "item": {
          "id": "24d9ac84-bdb0-40e2-89b5-5ec59f9b3574",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e3a1c117-1edb-422d-8eaa-9185a12dee07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330b536a-05ae-408f-91f4-059ac8fb0062",
        "cursor": {
          "ref": "29f0a086-b6ad-4e43-b73d-3d1d4879c48a",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "14af476a-4ac3-44be-8f75-4bf404264dfe"
        },
        "item": {
          "id": "330b536a-05ae-408f-91f4-059ac8fb0062",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b70daec2-b9c7-4dc5-bd4c-7b3b7b43742d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b046ab3-3cde-4eb7-b9cb-b5a2fdfda82c",
        "cursor": {
          "ref": "0ed74d3f-c59e-4795-8aa0-61d3e7251042",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "dbf87b91-a517-47d1-8345-6668ebb97629"
        },
        "item": {
          "id": "1b046ab3-3cde-4eb7-b9cb-b5a2fdfda82c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ae4d056d-799f-48cb-953e-c49b1318a55f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7c623b-d04d-41e0-9523-e20153973f3d",
        "cursor": {
          "ref": "63ba64f3-9411-4de6-a509-d6c2d00c2bc9",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5e109ee3-06f7-4a88-9806-17b61a427d42"
        },
        "item": {
          "id": "0a7c623b-d04d-41e0-9523-e20153973f3d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d812d232-f4b5-45d4-8879-19f22b09e4c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a1e986a-0fa2-4fa7-ac59-637edc5b60dc",
        "cursor": {
          "ref": "674b7c63-e024-42c0-a858-d83132588715",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ad4255fc-43f2-460d-ae1a-af1686c5da27"
        },
        "item": {
          "id": "7a1e986a-0fa2-4fa7-ac59-637edc5b60dc",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "44f7e4ee-f24d-4815-a2e0-47d897ecdf01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fecf24b1-e5f9-44c0-b82e-98d2dde7256b",
        "cursor": {
          "ref": "cffeb22d-f8c2-49df-a0fa-ecd620f6911f",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "68f3abc2-b1d4-4577-b672-5a77f8d49089"
        },
        "item": {
          "id": "fecf24b1-e5f9-44c0-b82e-98d2dde7256b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ab70de26-0fe0-41c2-a3a4-14fe864a370b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8143a2af-95d1-4292-a1d0-29c129ca3ed5",
        "cursor": {
          "ref": "a3c54874-2d5b-4402-9cd5-56b29250f91a",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c42efdfc-9251-4e40-b94a-8cbae43c8e1b"
        },
        "item": {
          "id": "8143a2af-95d1-4292-a1d0-29c129ca3ed5",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2141032f-393d-490f-acf9-286f9ceff0e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0de3dce-6cbb-4793-af22-08463e27b66c",
        "cursor": {
          "ref": "062c01ee-1401-4882-9a97-9e1bd4bb04f9",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "92d39933-632c-4350-9b86-4deb3da69cab"
        },
        "item": {
          "id": "f0de3dce-6cbb-4793-af22-08463e27b66c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e9de0ad0-f5dd-4e4d-9084-11ea6ee1199e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b427c3e-2247-4990-a1ca-1b3123eb01c1",
        "cursor": {
          "ref": "271b3e60-707d-4a84-addd-b7e5f7f53f2b",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5a908aed-b516-4e4d-b136-5007bc8363b7"
        },
        "item": {
          "id": "2b427c3e-2247-4990-a1ca-1b3123eb01c1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4d2d366f-a58f-44b2-8268-ea12654ab7f1",
          "status": "Created",
          "code": 201,
          "responseTime": 46,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ccf3c9-b516-4b25-9025-5aef79766239",
        "cursor": {
          "ref": "c4adbfd0-5ec1-404c-9d23-16711e165360",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "66bc3590-9643-4c8d-a929-620b138ebdad"
        },
        "item": {
          "id": "18ccf3c9-b516-4b25-9025-5aef79766239",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2cda26b0-3ce9-46ca-88de-74ed3a848b79",
          "status": "Created",
          "code": 201,
          "responseTime": 88,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "052090ad-9f95-4dd9-aa6e-3988098fe51e",
        "cursor": {
          "ref": "2a89a591-7ff6-4b7e-9fc7-c934e3e518a7",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "aa604b05-a104-4f33-bdd3-b24ff116546e"
        },
        "item": {
          "id": "052090ad-9f95-4dd9-aa6e-3988098fe51e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b0eccfe3-b4f1-4f58-b87b-2e73014542d5",
          "status": "Created",
          "code": 201,
          "responseTime": 34,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "981adedc-4f7b-4e4f-a8c6-361202c2a8e7",
        "cursor": {
          "ref": "4fe8cf20-34de-480e-b1e7-c30de452ed2f",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "84c39297-09c4-485e-8f14-bd3d88e1eb13"
        },
        "item": {
          "id": "981adedc-4f7b-4e4f-a8c6-361202c2a8e7",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b03fef9e-821a-447b-a56a-376cfcb96fc1",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5dd7763-9b01-45b9-b71c-f6428d081973",
        "cursor": {
          "ref": "a1bca453-4dee-4503-b40d-01ce3ba4bb26",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6e185b5b-ec6e-4ccd-87af-057b837501e7"
        },
        "item": {
          "id": "a5dd7763-9b01-45b9-b71c-f6428d081973",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ddafc536-0405-40de-8b91-83dc89f0fb79",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8a5c53-d300-4c55-b46a-f995c8affc57",
        "cursor": {
          "ref": "73d11c10-ec9d-47d9-8f6a-adf418bafb10",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9e622bfd-0b55-4137-9490-a34d1e6bbf27"
        },
        "item": {
          "id": "5d8a5c53-d300-4c55-b46a-f995c8affc57",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "00d7dea2-4879-4cb5-9923-c4fc6deb0b41",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3949f455-1959-4a8a-a6f6-6c20f21363d5",
        "cursor": {
          "ref": "8e674b98-2f35-4b4e-82a2-8204f291aafd",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "42d53de7-2e5a-4a3d-b628-d999e89b0c94"
        },
        "item": {
          "id": "3949f455-1959-4a8a-a6f6-6c20f21363d5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "badd115b-04a5-490e-beda-b08c5f9ee798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d19dbc8-055d-4fa1-b4cf-21922aa49b18",
        "cursor": {
          "ref": "c2d49d0d-fad7-4fc9-94ba-12a1df077644",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "073231c8-667e-4216-92fa-9d5de5e2b083"
        },
        "item": {
          "id": "1d19dbc8-055d-4fa1-b4cf-21922aa49b18",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5585c90d-e224-4915-946f-6fa759769b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a0efe9-8e4f-41c1-a330-011e1753a3ec",
        "cursor": {
          "ref": "7e06e4c2-e7cd-4dbf-a86a-6cf3e4906ac6",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c3423ae0-c5a2-4575-b9d8-c2fc94adb2cc"
        },
        "item": {
          "id": "30a0efe9-8e4f-41c1-a330-011e1753a3ec",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1d825d37-642d-47f9-8749-0eeea1bad872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d217b09-f33b-4604-b627-6731b7d9ffb1",
        "cursor": {
          "ref": "56cdc037-b8f7-466e-a77f-b68a008297d2",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6bbd5765-379e-4b61-b1a3-7c33a7e8d4ec"
        },
        "item": {
          "id": "0d217b09-f33b-4604-b627-6731b7d9ffb1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "94a610b4-52e0-44c6-a0ca-d65c093d3b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62aa956-c047-4347-9900-c7d45452812d",
        "cursor": {
          "ref": "8df49e0b-1738-404c-8e7a-992cb2c792bc",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ca0fb80d-3ab1-4c07-9074-2395a49a7172"
        },
        "item": {
          "id": "c62aa956-c047-4347-9900-c7d45452812d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "671fc8c7-e2f5-4fd0-a36d-624e315714b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078601b3-e645-4bd8-b328-914779753412",
        "cursor": {
          "ref": "c574f343-7250-4626-a45c-ef36f1b2813d",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "058256d6-90a4-4e84-946d-ab66c64b89fa"
        },
        "item": {
          "id": "078601b3-e645-4bd8-b328-914779753412",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fc7c3f44-180f-40f4-b987-cdbae5794560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b6a560-c23d-4242-a406-129d26c0bf8b",
        "cursor": {
          "ref": "d0cd5436-8533-4216-b4f3-9aa1f04c907a",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8585f241-e6fc-4084-8c16-c356cde0df9f"
        },
        "item": {
          "id": "59b6a560-c23d-4242-a406-129d26c0bf8b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3fac341d-9c4d-4f55-9d79-512fc37d68e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9358fed4-adc5-470f-b272-3480417a4cd7",
        "cursor": {
          "ref": "5f97dc42-f81d-40e9-8e58-3d666eb17c83",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8aa714a4-e51b-4f60-8409-5eed31210243"
        },
        "item": {
          "id": "9358fed4-adc5-470f-b272-3480417a4cd7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b85f65ca-e724-45d7-84ff-f452660c4160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c1b7c7-0aca-4220-955a-d2dfc218ce00",
        "cursor": {
          "ref": "0a3ce9e4-a4d0-4314-8bd1-2efcca144c49",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a5288cbb-ea71-43ff-a0ab-3dd3196bc120"
        },
        "item": {
          "id": "a3c1b7c7-0aca-4220-955a-d2dfc218ce00",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2f85d68c-009a-4d19-88ec-7819a9661eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7cff3e1-5ace-4aca-8c78-e00e1520c40d",
        "cursor": {
          "ref": "593b353f-902c-4806-8f5f-60e2e95e312c",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a524266a-5a84-4f67-84b1-e28d93d331b8"
        },
        "item": {
          "id": "e7cff3e1-5ace-4aca-8c78-e00e1520c40d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "579098f6-4bf4-4338-84ae-228a152768c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7536903e-9c2d-4d18-9c08-b101aa9d7a9b",
        "cursor": {
          "ref": "3e19d24f-a937-41c5-86d5-608f30c86785",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5706edd1-f828-45af-94a2-6339d9e947e5"
        },
        "item": {
          "id": "7536903e-9c2d-4d18-9c08-b101aa9d7a9b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f7e0ecf8-0ad2-49d7-85ab-2c5bb511138a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684b9620-ce53-4b26-b6dd-7715b2e5eaf2",
        "cursor": {
          "ref": "11fea8b9-d95e-4dc7-8357-0b3e8243e143",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "4134442a-8dbb-43ca-be5e-1efb2bf8f456"
        },
        "item": {
          "id": "684b9620-ce53-4b26-b6dd-7715b2e5eaf2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "fb8ae240-d705-406b-856b-22f0147315ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1992dd-889c-4c77-bb72-2eba3a1f22ae",
        "cursor": {
          "ref": "0f00bf1e-dcc5-4cd7-b8b5-c0277b862afa",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b7047c67-2f18-443c-b305-60cf743ed0f0"
        },
        "item": {
          "id": "9d1992dd-889c-4c77-bb72-2eba3a1f22ae",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fab5322c-826e-4a78-8112-72fba56a6352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99be9abb-39f3-48e2-acdf-3c20eda37dd6",
        "cursor": {
          "ref": "80594e14-9aa0-4b0c-9aa0-a367c840596c",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ac513d9a-9437-4f79-b9b0-fe2a5284d427"
        },
        "item": {
          "id": "99be9abb-39f3-48e2-acdf-3c20eda37dd6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "321d9e44-0e77-44be-beca-bbc347b7954c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d363fd-feb6-41cf-a5d9-f88733439bcb",
        "cursor": {
          "ref": "d6f4811c-66c3-43cd-9d30-d410751bbf85",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b98d8b8a-5c48-4d7c-89ff-9839db968ed7"
        },
        "item": {
          "id": "36d363fd-feb6-41cf-a5d9-f88733439bcb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f0e11ff1-a368-4de4-9bc9-1ff3b09ac873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9cf891-03be-415d-825f-5e5bbc78688e",
        "cursor": {
          "ref": "17221f16-66ae-4ac0-9075-fd82fab8cf64",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1dc3043d-3f57-4232-9bfc-1a250151d19e"
        },
        "item": {
          "id": "ad9cf891-03be-415d-825f-5e5bbc78688e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "316a0a9b-f1c5-482f-9d85-9581b16a38df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67dd0a56-3105-4da9-b042-e9a03dabc95a",
        "cursor": {
          "ref": "e318b0e2-ce28-4d63-9412-b1749c1c06cd",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b8cf6e1e-f652-440f-a682-8bb00cf95946"
        },
        "item": {
          "id": "67dd0a56-3105-4da9-b042-e9a03dabc95a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a8eae339-6baa-4da9-a07c-971c9f6c1c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4603cb6a-a0b0-46bc-b881-9557eb046a01",
        "cursor": {
          "ref": "1c998b47-7238-46d1-9fab-49074d3a675f",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "14fc21e6-deaf-4038-8caf-83d370029b1d"
        },
        "item": {
          "id": "4603cb6a-a0b0-46bc-b881-9557eb046a01",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c368fc5d-ec8f-409e-b413-5fe8d9818f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c1c08f-3d93-48fa-96ae-5ee5f662f84a",
        "cursor": {
          "ref": "c2675fa6-e65a-49b4-9a81-065ec0009096",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "002750c9-b52c-4a11-9536-a09b62312e30"
        },
        "item": {
          "id": "f6c1c08f-3d93-48fa-96ae-5ee5f662f84a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "95609836-27c5-42ce-a22c-8671600f99d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f05c9e9-e51d-44fb-b94a-b7ddb1dd0bdb",
        "cursor": {
          "ref": "bb652159-e33a-485c-9c23-cd0e26ca251b",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4eddf347-b8cb-4223-9942-d00230596452"
        },
        "item": {
          "id": "9f05c9e9-e51d-44fb-b94a-b7ddb1dd0bdb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "aa3a150c-e962-40d2-9455-6881e553f210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e60c5e2-a576-4291-a304-4a937c8490c3",
        "cursor": {
          "ref": "20ccde2e-de86-4632-9d35-0751fb5b43e6",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "95fae491-46bd-4a50-b4d3-1b2ddb260098"
        },
        "item": {
          "id": "1e60c5e2-a576-4291-a304-4a937c8490c3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d73a7b4b-6a4b-4877-a5de-1cacc6054672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea427e8d-b830-4a56-8288-658135784a61",
        "cursor": {
          "ref": "94bb89fa-440d-4de3-80d6-490362d69a17",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2c6bc57c-9c96-4bff-9e7c-5035880095a4"
        },
        "item": {
          "id": "ea427e8d-b830-4a56-8288-658135784a61",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3fa789a9-ad8b-4b44-9607-06c50240b30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ed103d-c02d-4bf7-ae6f-d354f64a9f7c",
        "cursor": {
          "ref": "9b474631-8ca4-41f8-89de-a49eb3848f88",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3ceeb1b0-72f4-4416-8a36-683020629953"
        },
        "item": {
          "id": "c5ed103d-c02d-4bf7-ae6f-d354f64a9f7c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4beac297-1d9b-4956-9833-4f4c02ebc3ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4172ba6-8257-43bb-a726-b3f186e78e7a",
        "cursor": {
          "ref": "ca1d70e9-d9cb-4e8e-8eb2-1a647e8a01f5",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "01a01cd6-32bd-4e33-92eb-73faa7b7db85"
        },
        "item": {
          "id": "d4172ba6-8257-43bb-a726-b3f186e78e7a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "43de551f-6c2e-4de4-8b30-07f197b18d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933d6702-f65a-41dc-8a31-944c46f3eb90",
        "cursor": {
          "ref": "b30a1b22-aba5-4ba0-931e-9a87ec454540",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6dd8ad45-bc1e-4d4a-b9eb-ed9f540aac1b"
        },
        "item": {
          "id": "933d6702-f65a-41dc-8a31-944c46f3eb90",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3c81cc55-b5a7-4eea-a2f5-56807c2d861f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10995ec9-6a45-4ec1-b518-438572dee9a9",
        "cursor": {
          "ref": "d7c3bac5-b5af-48c0-8de5-89c3107a5132",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "48de305a-b8ba-4076-85ba-b1c83e5ea2ac"
        },
        "item": {
          "id": "10995ec9-6a45-4ec1-b518-438572dee9a9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0b4667e0-114b-49df-9838-f69fc8246ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a85b19-a83b-4892-868b-3876b2db9173",
        "cursor": {
          "ref": "1fbdfc0f-66e8-4048-a62b-b776bd543af1",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c131d925-f4a0-4884-aac8-b6b5c5425f33"
        },
        "item": {
          "id": "47a85b19-a83b-4892-868b-3876b2db9173",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "08d87aad-6330-4a76-9e39-b959cf8983c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6461b378-8c8f-4c06-8cb2-8c9950b1c1d1",
        "cursor": {
          "ref": "fb6cd389-51a9-4750-8f65-33d529819e14",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "31ea3bb3-7829-492e-9b7f-52cecc7db725"
        },
        "item": {
          "id": "6461b378-8c8f-4c06-8cb2-8c9950b1c1d1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f3c7f304-d80b-481d-bb09-337b85715a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40506a71-071b-4b2a-be09-9baf5b03c746",
        "cursor": {
          "ref": "5089d478-7551-484e-8e41-2786d2cce1b1",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1d3131d2-6a63-4081-b55f-9e38f33a17e1"
        },
        "item": {
          "id": "40506a71-071b-4b2a-be09-9baf5b03c746",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2a83846d-cf87-404a-8188-b1541cfaefe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92eda019-5ab0-4cf8-91b6-8c589d2bff1a",
        "cursor": {
          "ref": "b42bb9de-3ea1-4dc7-af15-d416bb2c5f7f",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "14e313cd-5dc2-431f-b29d-d0d4b13d2f64"
        },
        "item": {
          "id": "92eda019-5ab0-4cf8-91b6-8c589d2bff1a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "223dbc5c-b640-4ff9-81dc-6d4df65c4459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcbbd3ef-bd28-40a3-9c2a-be078b90092d",
        "cursor": {
          "ref": "65f87acb-3e96-4575-92f4-adfa447a350a",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "293f9432-5033-49ee-aa4d-c30675b7ce45"
        },
        "item": {
          "id": "fcbbd3ef-bd28-40a3-9c2a-be078b90092d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5aaa5bdc-cc35-4c6b-922c-0fa8bb92aade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923f43af-a2f8-45e9-82f6-58989430e743",
        "cursor": {
          "ref": "7b75abb4-079d-4c56-b057-bbc98d18a483",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9a4e0970-527c-4d29-920d-8a937ed7e2f0"
        },
        "item": {
          "id": "923f43af-a2f8-45e9-82f6-58989430e743",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d76be756-0808-4e56-a3d0-438082de83c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94b252f-6872-41d9-8ad2-002875ce5c65",
        "cursor": {
          "ref": "53e312f5-976a-4e2f-94c2-ace4e7facab1",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a11f862f-53b3-49ce-b4cc-6820daa97125"
        },
        "item": {
          "id": "f94b252f-6872-41d9-8ad2-002875ce5c65",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a5019636-1265-47d4-bd74-d314189fe166",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e492114e-8a74-4ed0-b54d-7ea7c6f17f86",
        "cursor": {
          "ref": "97adeb9a-1875-4c04-927b-e2c9cc15efca",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "11611d95-68ae-4159-b7e4-4f0ece79aa66"
        },
        "item": {
          "id": "e492114e-8a74-4ed0-b54d-7ea7c6f17f86",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "48efdd4a-f432-4b97-8d93-a65a166cb399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58c6967-aa79-40a7-a33c-e861693141ad",
        "cursor": {
          "ref": "5dbb160f-6db8-48b4-bfe9-c1cc7de6a14e",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "94c7e110-f4b1-4685-bb86-2a96edf7b106"
        },
        "item": {
          "id": "d58c6967-aa79-40a7-a33c-e861693141ad",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4fadb9ad-f7c8-48ca-aab5-b3e32246ce44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a8c117-15c6-4d23-b045-b4c54303d6f6",
        "cursor": {
          "ref": "44e51a1f-c4e3-4a04-8dd4-598b89861218",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a57d35cc-b67c-4eb3-a9e0-019304b550f6"
        },
        "item": {
          "id": "19a8c117-15c6-4d23-b045-b4c54303d6f6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fbc383c0-b3b5-4b50-a5c4-d9e5c4c478f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c546c78-30d1-4b36-b891-b5321017fd3f",
        "cursor": {
          "ref": "ca50895d-8b9e-470e-88f4-fe0f750afb30",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "99281d9b-6cb3-4dba-ac4b-dba3647da7f2"
        },
        "item": {
          "id": "0c546c78-30d1-4b36-b891-b5321017fd3f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "31d6742e-8482-4b48-8874-79e1681d913c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63dad50d-aa62-4a04-87c8-d42a53f33bb5",
        "cursor": {
          "ref": "7feae882-32a1-4ea0-a6f7-ae725047f20d",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1bc47282-995b-4059-a7ea-ff595b76b781"
        },
        "item": {
          "id": "63dad50d-aa62-4a04-87c8-d42a53f33bb5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5cf9d099-68bf-4f89-bc6f-4e2762c92749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bfaeed8-cee8-4078-956f-b24f1cfcfc06",
        "cursor": {
          "ref": "52d0655d-cf77-40e2-84da-c888c422497e",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "af7ffa21-ed34-48c2-b879-07b9cb848767"
        },
        "item": {
          "id": "1bfaeed8-cee8-4078-956f-b24f1cfcfc06",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "728b47d3-4740-40ed-987b-f5e11d8ad88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aef88bd-0e82-459c-a95a-7c8f557d1f94",
        "cursor": {
          "ref": "8783a3cd-8f3e-478e-bc90-73550218e840",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e5eb1638-c7f7-411e-9bfa-b8de8d92af60"
        },
        "item": {
          "id": "8aef88bd-0e82-459c-a95a-7c8f557d1f94",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4bc9f822-d622-4097-8d82-007462f2f1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964f073f-f3ab-4f29-83d7-9848becd5783",
        "cursor": {
          "ref": "29ef4015-b405-47f6-b934-a3e80cb2b2a7",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "465bfd0b-e064-4b94-9f1c-b1c9b4f7593e"
        },
        "item": {
          "id": "964f073f-f3ab-4f29-83d7-9848becd5783",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d5af8024-4803-4c37-80cd-9ebd74797b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492829d8-3594-4a89-b82b-877710055d30",
        "cursor": {
          "ref": "a23d70cc-9f34-47d8-8313-26c7cb820511",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "72f82305-d7b1-46b6-ba7d-a601dfe63fd9"
        },
        "item": {
          "id": "492829d8-3594-4a89-b82b-877710055d30",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "27052121-4a43-4866-87e7-18806eb8aa0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac20719a-4755-46bd-9bce-35cfb74b684c",
        "cursor": {
          "ref": "ac201487-827e-4246-8ee6-7b7df45c91a6",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "534a8e03-d48a-48b0-98ea-0c734bd84c8c"
        },
        "item": {
          "id": "ac20719a-4755-46bd-9bce-35cfb74b684c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d6ad7bbc-5303-4723-b3ae-2983325b0720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7861c0e2-bdca-4dd9-8868-dbd47efa44d4",
        "cursor": {
          "ref": "0356b6a0-68ae-4261-ba99-896af5c5ffa8",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e9fd3f94-811b-4e04-9c9e-51e718e1f2b9"
        },
        "item": {
          "id": "7861c0e2-bdca-4dd9-8868-dbd47efa44d4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b77f1d11-e419-47ce-99c8-d1f5ed30798a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122626cb-faf4-426d-94d7-46601508e1e2",
        "cursor": {
          "ref": "03cb12ee-5cfe-4ea4-bc32-0d12e96a6ae4",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f81090ec-8cbf-465c-b8dd-e8ca284d2ce7"
        },
        "item": {
          "id": "122626cb-faf4-426d-94d7-46601508e1e2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1a059327-377f-479e-bb1d-3c683f73c7ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349ad3be-8889-48e0-affc-14b4fffe2b41",
        "cursor": {
          "ref": "bed3f3f2-6738-48c9-bc58-bdc3c895852d",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "79ed7abc-5fb3-4848-835a-63d147df13cd"
        },
        "item": {
          "id": "349ad3be-8889-48e0-affc-14b4fffe2b41",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "01344a12-2c2c-4860-b9aa-80dfaa95c007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0edd4f76-8616-4262-ae68-9d61c1f0da20",
        "cursor": {
          "ref": "fdfc78d0-e1db-46a5-9161-012745c2561c",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "38f95805-2c9e-4da3-ba8c-d99a5c79d200"
        },
        "item": {
          "id": "0edd4f76-8616-4262-ae68-9d61c1f0da20",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "080ef238-9d4d-44c4-86fd-3211c0f89965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c62869-e5fb-4137-93fa-e045091a83f3",
        "cursor": {
          "ref": "dea159c3-bde8-43b9-b6b0-10d3078c8daf",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e7f60215-1e55-4b47-b178-6af7dd43589a"
        },
        "item": {
          "id": "42c62869-e5fb-4137-93fa-e045091a83f3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c9793782-7b7f-4483-9d6f-342ad5851744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020c0173-d452-43a1-b58f-f3015a4d2071",
        "cursor": {
          "ref": "3233d4c6-8f3d-42ec-8c1d-7ec1086b7ff6",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "444fa40a-f551-43fe-ad09-119d193f493d"
        },
        "item": {
          "id": "020c0173-d452-43a1-b58f-f3015a4d2071",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1b9fba3a-2107-4c59-8d0d-0a5efbdc2968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93efce7-1dd4-49ab-ab54-56687c9d586f",
        "cursor": {
          "ref": "6a047be0-e8b8-41e1-9123-4dd7f2f3698e",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "213f2a38-db2e-4897-a68c-bee260c1de6f"
        },
        "item": {
          "id": "d93efce7-1dd4-49ab-ab54-56687c9d586f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5e9398d1-e616-4c92-aded-df5a3184af02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7824acb9-3220-4f0b-a2b3-df95497ac1a8",
        "cursor": {
          "ref": "d418e625-e3e7-4584-9f73-5c476e1deed1",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "72679481-f2ab-4438-8f5f-45e7397056d5"
        },
        "item": {
          "id": "7824acb9-3220-4f0b-a2b3-df95497ac1a8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "63acaf89-d719-4724-a401-5c582702a90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e4effe-a6a3-4f2e-aba3-464a7823973e",
        "cursor": {
          "ref": "c15ae546-1170-4987-8342-82b754dc368b",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "84b47f05-dec0-4546-a3c4-815b8897b003"
        },
        "item": {
          "id": "b9e4effe-a6a3-4f2e-aba3-464a7823973e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "820efe40-9780-4aee-a778-fa5d18503584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d96f63-5212-41b6-8d45-d127ee913674",
        "cursor": {
          "ref": "9761abe3-8898-4566-af74-6540cf55dc4d",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2825c417-2674-4961-bb24-641d68af1acc"
        },
        "item": {
          "id": "64d96f63-5212-41b6-8d45-d127ee913674",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "aa7e9fe2-f959-4aef-8789-f8766f78ca9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c43557-b3cb-4ce7-973f-62bdbbb9ad83",
        "cursor": {
          "ref": "1b0850e0-fe83-4bd4-8dbd-9dd3271e41b2",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "3f266b4e-6ba3-439e-9c71-8361ad7b1d6a"
        },
        "item": {
          "id": "a2c43557-b3cb-4ce7-973f-62bdbbb9ad83",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "070b8e6e-326d-4de0-9cbd-5c4b09499d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a80773b-a545-4cf5-a361-b4db24342b95",
        "cursor": {
          "ref": "bd349ec5-f571-4e64-99a8-e4f3279da0ba",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "764ff274-e126-462a-af02-356d80f159da"
        },
        "item": {
          "id": "8a80773b-a545-4cf5-a361-b4db24342b95",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0cfe21d7-6521-41e6-918e-ec59e87ffa4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e21ce7-966b-4bea-af0e-fbe246e0d968",
        "cursor": {
          "ref": "969adf51-d43f-4c78-84e1-8ce45aba5c53",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9839f8a0-2dbc-485d-9118-4fe0ac982f49"
        },
        "item": {
          "id": "b9e21ce7-966b-4bea-af0e-fbe246e0d968",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7468f190-ee14-4697-bb9c-762f71f0062d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249f7cc2-2433-41f2-9431-ae0bd300256d",
        "cursor": {
          "ref": "50e27fde-9b3f-4cd5-b00c-30d27ffd6144",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "cc56a093-390c-49af-af74-a462297caeb3"
        },
        "item": {
          "id": "249f7cc2-2433-41f2-9431-ae0bd300256d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0d10b047-d57a-46c6-85d3-081ebe49e108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4054fa-0a7f-438c-addd-608fb5b24486",
        "cursor": {
          "ref": "06211add-c31d-4104-a614-09bb90082922",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e314de73-b5c7-4cde-870f-1b56a85e043b"
        },
        "item": {
          "id": "6c4054fa-0a7f-438c-addd-608fb5b24486",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e101dad2-2263-4b3c-8d72-779f878608f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8fcdd65-34a4-4590-9fe9-43660116d326",
        "cursor": {
          "ref": "2e5bca3e-b02d-4364-b51d-e3675f1f6deb",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ae14fcf4-1c3f-4512-bcac-4e425d0557f6"
        },
        "item": {
          "id": "c8fcdd65-34a4-4590-9fe9-43660116d326",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3dc14414-0584-4f9f-8e3e-0b98f8cb3fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59174ce9-7d60-4923-973a-08c828c76af0",
        "cursor": {
          "ref": "a72b1a93-e42c-46af-87de-00d1d261891c",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7ebc9478-42c1-472d-ac31-b3a86f6379cc"
        },
        "item": {
          "id": "59174ce9-7d60-4923-973a-08c828c76af0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8f0feaab-797e-41fc-8e01-6605c790372f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebcc2aa1-c6e3-42e1-9e31-4ca4dd572cb9",
        "cursor": {
          "ref": "69b5f32f-da05-4b79-b1d1-9ba5fccac656",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7c19593f-e04e-4290-8107-c95910ed80ce"
        },
        "item": {
          "id": "ebcc2aa1-c6e3-42e1-9e31-4ca4dd572cb9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1c8510f1-bcf7-4ca0-88b7-e7ce664d9e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec0c16a-8947-45da-89df-ef3b7c1ec284",
        "cursor": {
          "ref": "e09ed5be-1568-4bde-978b-f8ba10ed5590",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "50b6869e-e935-44e1-937c-0137378ccfd1"
        },
        "item": {
          "id": "7ec0c16a-8947-45da-89df-ef3b7c1ec284",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d33e69a1-2a52-4ecc-85d0-ad2bc44bdf3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e116491-4e78-4827-96ab-8fb526552533",
        "cursor": {
          "ref": "04e19278-6623-46e8-a14a-17deb556954a",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d09cf7c0-c5e3-4725-9ae9-1c98853fb1b3"
        },
        "item": {
          "id": "4e116491-4e78-4827-96ab-8fb526552533",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b302f7c6-6f26-448d-9eb5-3a273e4d2a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f3170d6-63fa-4567-8445-01af56890e17",
        "cursor": {
          "ref": "84aa2d3a-340a-4a4f-941b-e12099c89db3",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1ea41678-2900-4c90-b607-0f8d9b175b0f"
        },
        "item": {
          "id": "6f3170d6-63fa-4567-8445-01af56890e17",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "309cc4b9-ba11-480d-808e-498bbd1f00c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d587dca4-dc7f-47a4-b39f-53568ac62d54",
        "cursor": {
          "ref": "3dda767e-aada-41b6-b07b-4dbcc37ed2c6",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "30a4fbe2-45a3-4b8c-805c-a7fe01844f9a"
        },
        "item": {
          "id": "d587dca4-dc7f-47a4-b39f-53568ac62d54",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "232c5c8a-186a-429e-8187-0470ff3715c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee811ed-7431-4dea-8676-03c1b304f35f",
        "cursor": {
          "ref": "cfa6a63b-7595-4136-837d-2b87461b696c",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "eff6fef0-c33a-4159-85a8-8df1c6ca5102"
        },
        "item": {
          "id": "8ee811ed-7431-4dea-8676-03c1b304f35f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5906aea9-c88f-4e29-94f0-2f7b1b34fd3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f21536-228d-4a47-a36d-4fc75eae23cc",
        "cursor": {
          "ref": "08d3a5eb-5dda-43a5-88ac-bf5e2ed36790",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d1a6b64d-3ade-4f44-9050-4835c28bb8ee"
        },
        "item": {
          "id": "59f21536-228d-4a47-a36d-4fc75eae23cc",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c593a0ee-a900-484c-a582-c798fecaff0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1bc83b-1f19-4051-9041-23c137185015",
        "cursor": {
          "ref": "3a429ebe-c21c-49a6-9af1-7edf00a824d2",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "aeaa7ce0-95c6-40cd-9757-e0787acc9cbe"
        },
        "item": {
          "id": "ca1bc83b-1f19-4051-9041-23c137185015",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6e3e83a0-7137-4c40-b389-9ec257d1f9cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b34874c-089a-47bd-b853-a7b716e84f08",
        "cursor": {
          "ref": "aad994f0-5899-41f7-a7f7-ccb9d703538a",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c2e29831-2e51-40b2-aad9-26daa0d8c72b"
        },
        "item": {
          "id": "2b34874c-089a-47bd-b853-a7b716e84f08",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "35a68a75-a652-42ff-ad8c-d9ef6b489d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9451684c-8bd6-48be-9b20-834625ae98c9",
        "cursor": {
          "ref": "0b27be36-e03d-4be9-a5fc-59538fa187ce",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5aeffcbe-28a8-4699-8ae7-c1a6814ff446"
        },
        "item": {
          "id": "9451684c-8bd6-48be-9b20-834625ae98c9",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "30088c3c-cf5b-4868-b249-4ecdb1c9ce3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "509d168f-082c-4103-baf9-c42544c8600b",
        "cursor": {
          "ref": "86613dc8-6328-4944-bb20-01adbd8e5338",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2c727afc-7122-41ce-820b-984625d34751"
        },
        "item": {
          "id": "509d168f-082c-4103-baf9-c42544c8600b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "36e49b59-89ca-4b41-9ea2-780d1eb0e425",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c367527-de51-4b55-9859-d189030dc57f",
        "cursor": {
          "ref": "97eb230a-5950-4a4b-9bb6-53613254a1d9",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a0b2c67e-3281-4340-ab5c-c6c1c49bf053"
        },
        "item": {
          "id": "9c367527-de51-4b55-9859-d189030dc57f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "bc336488-c0f0-4f2a-b410-91c05832232b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e495f77c-28cf-4b2d-8cc5-a09049433a0d",
        "cursor": {
          "ref": "9427f746-6a4b-42f4-84b2-c71326f4d79b",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "8b5bdf8c-d75f-42f1-8931-9d3d56757349"
        },
        "item": {
          "id": "e495f77c-28cf-4b2d-8cc5-a09049433a0d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b05aa692-2a35-4246-a79a-7e134f72c69e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae68fc6-3ce9-4bb6-8b0d-e602ae0b852d",
        "cursor": {
          "ref": "9b44e819-c865-43b3-bbbf-76684d6ba433",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ed71cfc8-0980-4ea5-8400-0dad0db480da"
        },
        "item": {
          "id": "fae68fc6-3ce9-4bb6-8b0d-e602ae0b852d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "585efcdf-1833-43c7-9d63-9057c23614a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191f67ad-ae67-41c7-bcf2-229458bb130f",
        "cursor": {
          "ref": "941e6e2a-6561-483e-a135-7326704606a3",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4321ef55-883b-4607-9dfa-4121b5d94c44"
        },
        "item": {
          "id": "191f67ad-ae67-41c7-bcf2-229458bb130f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "aefd9496-4bba-4c32-a8a5-9f9e72f1235c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d577fb-f5d1-4340-bf22-629039da0c74",
        "cursor": {
          "ref": "8b274a64-b117-498b-a05d-caacc6ff5d51",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a9a7525f-32c3-40f3-a64e-13763186490c"
        },
        "item": {
          "id": "27d577fb-f5d1-4340-bf22-629039da0c74",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6261caba-0bf0-4ac6-83ec-95ff9629a8ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823ca98b-fe81-43e4-b41b-8216a0ff10ac",
        "cursor": {
          "ref": "983c81a5-be07-4798-95aa-883b483772ea",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "893a1d0f-bcd7-43b3-81fb-a5f86e06c4e5"
        },
        "item": {
          "id": "823ca98b-fe81-43e4-b41b-8216a0ff10ac",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "402d0882-80dd-4919-8941-7fd1b8a35081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3af537-bf57-458d-8314-31232fcfdbaf",
        "cursor": {
          "ref": "4f10e1b0-cb57-41f9-a019-9a322c67c6b9",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b47900d8-a479-4993-9d56-da84cb29b3a5"
        },
        "item": {
          "id": "4d3af537-bf57-458d-8314-31232fcfdbaf",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "209e4840-f1e5-4b86-9d8a-1354b52ca817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b75d6da-12e3-4805-811a-9496a8679c63",
        "cursor": {
          "ref": "75229a2f-9f8b-4590-9089-851b23a37c01",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9fdd6b77-ee31-439d-8fb7-65300a6f4c40"
        },
        "item": {
          "id": "4b75d6da-12e3-4805-811a-9496a8679c63",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7365fd83-0c3a-49bc-9a89-caa08124c2e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606ca380-1d44-4222-8dd5-6304c7390acf",
        "cursor": {
          "ref": "c0646e17-0de6-4309-b189-17d4603ebe80",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "48ef9565-4c38-4f2e-bc68-f23a26b7c7c7"
        },
        "item": {
          "id": "606ca380-1d44-4222-8dd5-6304c7390acf",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "806d1da9-4488-4921-af3f-53c8833f4518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0955af9-5abc-493c-8a9f-7370ed45db74",
        "cursor": {
          "ref": "6de995b8-84f2-4a37-b0d5-b7acb1b7ada5",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6d3db4a3-ff2a-40e6-b5a5-72037b389e50"
        },
        "item": {
          "id": "f0955af9-5abc-493c-8a9f-7370ed45db74",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "27cec52c-52bf-4c26-94ee-ee16088a1c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560928bd-5fc5-4f3a-9112-b8d665c70432",
        "cursor": {
          "ref": "d17a26ba-7687-4a72-b4ea-8182bd8b01a5",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1e188ca3-2918-4cfc-8614-65156a9c41f2"
        },
        "item": {
          "id": "560928bd-5fc5-4f3a-9112-b8d665c70432",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "71b7abb1-554e-4ae6-b16f-11eed3d9787a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "904e2a64-6297-4ca3-a726-6a7c93374100",
        "cursor": {
          "ref": "fe3da2bc-7a7d-4388-8596-3c1136319ab9",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "dff07cb1-b95d-4296-8e1a-833ca29422a5"
        },
        "item": {
          "id": "904e2a64-6297-4ca3-a726-6a7c93374100",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "03423d4b-28ae-4321-818e-e20741c3576d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec49296-cb34-4074-a5f3-4eb7edc512e3",
        "cursor": {
          "ref": "f2904765-bba3-4233-84c7-53313d3b552f",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "21d6d55e-322c-4563-9ed9-c1c6eefabf3e"
        },
        "item": {
          "id": "0ec49296-cb34-4074-a5f3-4eb7edc512e3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e01db94c-1fa6-4310-9d42-00c6b407677e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7dd2cdd-43aa-4b05-9250-b925a8719d97",
        "cursor": {
          "ref": "c62a86bc-8eb9-42d0-8e4b-4fdccb30dff0",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e6f6b120-0170-4060-ac72-435a5ed96187"
        },
        "item": {
          "id": "a7dd2cdd-43aa-4b05-9250-b925a8719d97",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "352367a2-a699-4498-980f-5ce7cb0ba6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3d902c-bfa3-4a2b-9e14-244a62350459",
        "cursor": {
          "ref": "c96daebb-7b73-4cbd-ba18-a147594821e8",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5531b79b-b609-4b82-9097-1ad42d1de93d"
        },
        "item": {
          "id": "dd3d902c-bfa3-4a2b-9e14-244a62350459",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "37156a5d-2254-425e-b56f-217227a0b57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3ba977-a622-457b-803e-7574f65dcb96",
        "cursor": {
          "ref": "dd5f7fae-695d-441f-bcfc-f2a447733a16",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "35a7139c-c93c-4ad3-ad9a-bfb86a7056b0"
        },
        "item": {
          "id": "ac3ba977-a622-457b-803e-7574f65dcb96",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "159ce3e4-0a9b-47ee-bc1e-d221a9eb79e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d6313f-159f-40aa-abba-e79ff8376bc6",
        "cursor": {
          "ref": "99f07a42-71fd-452f-813c-77664b84fe8f",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "16bafd57-1ed4-472f-bff1-ecdd1a701931"
        },
        "item": {
          "id": "81d6313f-159f-40aa-abba-e79ff8376bc6",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "74c78701-41ed-45c6-96b8-62dbb8624faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d94992d-0691-42af-8d91-1b3739efc6b0",
        "cursor": {
          "ref": "75f5be4e-1b54-4ada-b1c8-27ae24e8c449",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c8121e9e-6c1b-4ddf-a100-cc2c674b1aed"
        },
        "item": {
          "id": "2d94992d-0691-42af-8d91-1b3739efc6b0",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5afbe284-cc49-4813-8ea6-64d4898b9100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff53e8f-94a5-486a-9867-359d0b541a78",
        "cursor": {
          "ref": "edb11ee6-302e-42fc-b5e2-f21ab8b463a7",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f67d4575-9223-4b2e-b624-56836f1180c5"
        },
        "item": {
          "id": "dff53e8f-94a5-486a-9867-359d0b541a78",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4d9aacb4-dc55-4e50-a2ce-23060d9c87d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543a985a-ee32-40f2-bd93-9762608de533",
        "cursor": {
          "ref": "f8737e87-48a8-4f50-b99f-b6f83361ae97",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "af99e4e4-b12c-4d58-b7d1-4f1ef9185552"
        },
        "item": {
          "id": "543a985a-ee32-40f2-bd93-9762608de533",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1e17e0e9-f5d0-41f9-a902-fefb3e251445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05fc349-a73c-436c-b82c-5b95ee231d21",
        "cursor": {
          "ref": "7235daa5-8932-47bb-aef6-bc8e7e1ee4c5",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7499972f-ee2b-41bd-9c6d-8e4d05b242bc"
        },
        "item": {
          "id": "c05fc349-a73c-436c-b82c-5b95ee231d21",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "98a642a0-5b97-4f39-aa01-c43d6ca7730b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e95228-7f45-4fdd-b74b-3cb92277ec22",
        "cursor": {
          "ref": "495e203c-8dad-4b54-b77c-9adbe3b699e9",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a71b8cdd-8de1-4af7-a5aa-ca244cbae4b6"
        },
        "item": {
          "id": "f6e95228-7f45-4fdd-b74b-3cb92277ec22",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "443ae947-58a7-4fd2-8ba6-7a86ce7e18ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5492cdb3-296e-4f9d-b263-41e8ddeea65a",
        "cursor": {
          "ref": "9c4355e0-4aca-417d-b2ca-1cf1368e0557",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8ac136ec-9d83-4909-bc0e-d9d155819951"
        },
        "item": {
          "id": "5492cdb3-296e-4f9d-b263-41e8ddeea65a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2a1b7de3-d95a-43ca-b75e-08d7cce8f4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81145f25-c65d-4063-9684-3a9bf86863d8",
        "cursor": {
          "ref": "e3191831-8a33-4191-8f68-aa8d3629e3f4",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "27a29574-924d-4105-9005-bae78fce3b0c"
        },
        "item": {
          "id": "81145f25-c65d-4063-9684-3a9bf86863d8",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "619d4ae8-1aef-4adc-9a09-dd26777b4c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1caef11-f3f7-4ebc-a84e-88f805365b22",
        "cursor": {
          "ref": "37a8b7ea-b70f-47aa-a7c4-9e6e4c091a8a",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "abdb5780-b5b9-4a6f-82e2-d491947f0209"
        },
        "item": {
          "id": "d1caef11-f3f7-4ebc-a84e-88f805365b22",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c2eecefb-990b-4369-8ce5-fb27eada075c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae308f8e-76ac-4e9c-8d10-fb77dfa2dafe",
        "cursor": {
          "ref": "b498ea1b-2487-4c33-848e-c072157b2f2d",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a065ddcb-29ec-44c5-96ac-0930b00cae58"
        },
        "item": {
          "id": "ae308f8e-76ac-4e9c-8d10-fb77dfa2dafe",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4da2662c-d738-4496-8e79-b5f1ae337d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0991e3e5-ddce-40b6-9a69-2eeb4877c0c5",
        "cursor": {
          "ref": "1bdd9aa9-7391-4829-8db6-caa44542b97d",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1099fdaa-b7c6-40d8-bc3f-0819c839da25"
        },
        "item": {
          "id": "0991e3e5-ddce-40b6-9a69-2eeb4877c0c5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "efaa13cc-c343-4dac-ad2c-cfd97bd663d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3fc0a4-55c5-40a1-9555-8c2f87a07821",
        "cursor": {
          "ref": "6c4e7a43-a1c6-47ba-912e-8f3b17cb0015",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d40a2e80-f878-4ee0-9cf2-89c6353a776c"
        },
        "item": {
          "id": "df3fc0a4-55c5-40a1-9555-8c2f87a07821",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c84e9995-ad77-405d-82eb-c2c08f7009dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1983eb44-1353-4452-bdef-aa944ff765c2",
        "cursor": {
          "ref": "78fb0705-1196-4864-a397-ab2a1db43da3",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6c1bcda5-96c5-47d6-8e9c-1fd5b37b542a"
        },
        "item": {
          "id": "1983eb44-1353-4452-bdef-aa944ff765c2",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3254213b-3f94-46cb-89c1-972fb083583c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c440c475-208b-4bee-b806-e573f45f1a0b",
        "cursor": {
          "ref": "529b728d-fe6e-4cb2-b983-868916839774",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b941d6a0-0d02-4179-8cc4-769ab465715c"
        },
        "item": {
          "id": "c440c475-208b-4bee-b806-e573f45f1a0b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "edcd96a1-7fd8-4ce4-aaa4-fa37ec22a117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc8384b-257a-4689-9aa1-8fff9cb7ce93",
        "cursor": {
          "ref": "ed245c18-2fdf-475b-9a7b-85dd3a484e5f",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "fa8df4db-b9e7-4074-ba43-26b0ddbadb48"
        },
        "item": {
          "id": "fbc8384b-257a-4689-9aa1-8fff9cb7ce93",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7f4e30f7-ed25-40f8-aab3-7638fc00f401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2f9bda-c8de-4fa5-9ba3-4305a1b15dad",
        "cursor": {
          "ref": "61b2fbfd-bfaa-4b6c-afbb-440ef2caa835",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "70a8637b-557f-42a2-902e-4c162b842720"
        },
        "item": {
          "id": "6f2f9bda-c8de-4fa5-9ba3-4305a1b15dad",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "981489e0-317b-43d3-8662-a3a290d225f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f832bbd-e56b-4499-a64c-0ea690f223ba",
        "cursor": {
          "ref": "2e721b7d-d18e-4c1b-8f09-cf6fc8df80ea",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "07692f69-d6fd-4475-a3fb-a1145c79552d"
        },
        "item": {
          "id": "1f832bbd-e56b-4499-a64c-0ea690f223ba",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "dfb4461c-ff3d-451e-a113-6092e163a194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0118a71-a982-488f-b199-a3c5c26a3c8e",
        "cursor": {
          "ref": "85b248ad-3848-46e7-a4ec-ab8b874360fc",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "41cb6679-ec07-4ba8-8831-63256a7f8bfb"
        },
        "item": {
          "id": "c0118a71-a982-488f-b199-a3c5c26a3c8e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c46fc047-d04f-43e7-ac01-42a5c1fbd0a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030b3987-72fd-489c-86e3-578154e212ac",
        "cursor": {
          "ref": "09f9e926-9c6c-44ae-8754-f4e643d58cfb",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a37a2828-8fa1-48f5-bd74-9d599bd43c4e"
        },
        "item": {
          "id": "030b3987-72fd-489c-86e3-578154e212ac",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3ab2e30e-9f8a-4bf9-8dbf-23be7be6fe22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2ee380-ecca-444c-a809-d9724b813e3d",
        "cursor": {
          "ref": "9e988a92-068f-4cca-aa68-11497a6d8b74",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ae5fa957-e319-441b-a305-4519497fcd23"
        },
        "item": {
          "id": "1a2ee380-ecca-444c-a809-d9724b813e3d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "96555380-d308-4dbb-bebf-b65e65f2a341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89fa5df-6a09-467d-8242-e3d4696d688a",
        "cursor": {
          "ref": "3f852006-22c5-4479-a990-53eef95e59ce",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e8bf40bb-e87f-4af4-9f28-50d682dfc180"
        },
        "item": {
          "id": "e89fa5df-6a09-467d-8242-e3d4696d688a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "97117291-2ce0-4d4c-8aa5-53eb0e2c28d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa3c1e4-e978-4be4-b39f-5f9cc3a043e0",
        "cursor": {
          "ref": "2b3f132b-1825-4405-b4a9-6ac126f18f0a",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e6ed0b50-4a6f-4507-a501-001bc1e87fdb"
        },
        "item": {
          "id": "3fa3c1e4-e978-4be4-b39f-5f9cc3a043e0",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "27afc8d8-9656-4d45-be41-c249000119cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5005a3-7121-4073-a055-d83515ec6a93",
        "cursor": {
          "ref": "28c13eb1-1f39-4ee4-9b2c-4eadfa4ecbaf",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1d6e6b20-e457-4cfb-8a13-568233fc8395"
        },
        "item": {
          "id": "ab5005a3-7121-4073-a055-d83515ec6a93",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c5d55fd7-46f2-407e-bee9-7502952e5d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff92024-6a35-4ab9-b155-212da504bc52",
        "cursor": {
          "ref": "355c7ae1-d6b3-42b5-93f9-15c7d272ae61",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c2e33081-2147-45b5-81f8-3bead3b5aafb"
        },
        "item": {
          "id": "1ff92024-6a35-4ab9-b155-212da504bc52",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "28b88cb3-2745-4c09-b833-3c4d695c4840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4f7b3a-1c16-4ddb-91e4-6511d3888316",
        "cursor": {
          "ref": "7b08209a-54d7-4d2a-86f8-20c9d89ce28d",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7338ea36-3387-40d7-92ff-07e1a890f11e"
        },
        "item": {
          "id": "6b4f7b3a-1c16-4ddb-91e4-6511d3888316",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f584fa66-5a10-4639-b1d3-8c403c9cebac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9bd09f0-ff20-4ee5-945e-defbfd45b175",
        "cursor": {
          "ref": "b0fe3c7f-b784-458b-8c91-4796873940c6",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "bd80fb2c-9b25-41b9-b466-10e381fded6d"
        },
        "item": {
          "id": "d9bd09f0-ff20-4ee5-945e-defbfd45b175",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "99d1bf87-4c95-4765-9f18-1c804b5e658d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b092fe4a-9b9c-4096-95fb-d4ad92d91577",
        "cursor": {
          "ref": "42ef9a28-2e69-4de7-a9f7-53c193177776",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0db8e032-179e-4a77-8959-917ff7f93943"
        },
        "item": {
          "id": "b092fe4a-9b9c-4096-95fb-d4ad92d91577",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "95ac6a1a-0327-4764-8aa5-657d7cf53aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31cbb57-4ff8-4bcf-8abb-937239080f4a",
        "cursor": {
          "ref": "eeae7964-42a2-40d2-ac5b-107857efa275",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7ecaddbf-3df9-4eaa-ab15-80bcbcad8804"
        },
        "item": {
          "id": "d31cbb57-4ff8-4bcf-8abb-937239080f4a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c9ce7104-0a94-4996-ba05-d5f9f487e55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239bf292-d55b-4892-9f3e-b907406f1e92",
        "cursor": {
          "ref": "928fb3e8-135f-455c-ba6e-f72a36da4076",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "3c9c12e1-7582-4e1d-a803-f11a91b84f19"
        },
        "item": {
          "id": "239bf292-d55b-4892-9f3e-b907406f1e92",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4aa11ea0-74b9-43b2-8740-ca1121d01563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3c9a94-1e95-4c73-93eb-9f4a7946cd74",
        "cursor": {
          "ref": "5fba3110-ac57-4316-838f-00f13dfc982c",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "09836132-b1f4-439f-92d5-56a6a7fbf0b8"
        },
        "item": {
          "id": "6a3c9a94-1e95-4c73-93eb-9f4a7946cd74",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2563d0b3-f346-4651-bf9c-afb88e320441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c65df13-5435-49a3-bfe1-ed60cd176de7",
        "cursor": {
          "ref": "40cef28d-8a6f-4f3b-a2a9-208002e489b6",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "97591627-7420-4296-a5c1-f4039ac959b0"
        },
        "item": {
          "id": "9c65df13-5435-49a3-bfe1-ed60cd176de7",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f12d1ceb-e498-4ca6-8ab3-eeca63ff39c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f6c3a1-e14e-4cb0-917c-061ec13dde1d",
        "cursor": {
          "ref": "1a049e23-d1d4-42f0-a462-cdee46b8361e",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6cb985f5-8a80-4066-84d6-e6a21f7e36ba"
        },
        "item": {
          "id": "02f6c3a1-e14e-4cb0-917c-061ec13dde1d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "fd59a2bd-4de6-4da5-9914-803d1b4ec76e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c46db83-5bb0-451f-8cdc-aed5cb994ca2",
        "cursor": {
          "ref": "729d9f29-8ac7-407f-a05a-356e8317973e",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "bb3eabe1-721b-4ef0-b702-3bbf7fed1592"
        },
        "item": {
          "id": "9c46db83-5bb0-451f-8cdc-aed5cb994ca2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b2cd0d28-e97c-4ecc-a664-5b912670b0fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc86941-62da-47da-897e-7990120882d8",
        "cursor": {
          "ref": "ec6bcb6e-1d8b-4bc8-bf8b-4bd5d40bb97c",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e8ec1354-4589-4225-ac93-a3d13eb18527"
        },
        "item": {
          "id": "0cc86941-62da-47da-897e-7990120882d8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2c05ccd8-9eb0-4193-a428-3483138c6519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb19f62b-0856-4409-8eba-4ac3fbc4fe46",
        "cursor": {
          "ref": "3ec3b645-d10e-4d77-8d58-efa177ce9f44",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "09333a2a-bf60-41b8-af0e-d3f47130805b"
        },
        "item": {
          "id": "eb19f62b-0856-4409-8eba-4ac3fbc4fe46",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "552e386f-5ab2-4f46-97f7-98e4b83ffdbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2469966a-6dea-4e12-8fd6-2ab51f8b6397",
        "cursor": {
          "ref": "e986281e-d3ce-46b3-9842-177ce6027cff",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "eb1392cf-5ff2-4cba-9b68-191356ad7178"
        },
        "item": {
          "id": "2469966a-6dea-4e12-8fd6-2ab51f8b6397",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c88236f8-f473-497b-8a50-7d555b2769fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658d3068-c245-4260-b3a3-a7e6a256608a",
        "cursor": {
          "ref": "70ac4644-e287-447a-8240-3642e219f13f",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "85191668-c6b9-4df7-bd7f-61491f2e7eca"
        },
        "item": {
          "id": "658d3068-c245-4260-b3a3-a7e6a256608a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d4f53493-6f16-4bf7-9c30-b42c999314cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e302b3f-d806-4479-a586-df95e69e30e9",
        "cursor": {
          "ref": "71275f83-c5de-4e8e-af03-b1510b79c849",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b2d79748-58e8-466a-8d58-b5b10296cf1e"
        },
        "item": {
          "id": "8e302b3f-d806-4479-a586-df95e69e30e9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3113e5ff-3f69-4e1c-807b-6696d811259b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b787bfbc-69c8-4bce-b561-d6bcbb6a7dfc",
        "cursor": {
          "ref": "aa4de06e-9c80-4f99-ba43-580701c88869",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "52252ae6-42c2-4a26-b0d2-fd2ffffe8757"
        },
        "item": {
          "id": "b787bfbc-69c8-4bce-b561-d6bcbb6a7dfc",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "04b6ecba-0073-4f51-bf2e-4f41ffa5146b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf104d7-bce4-4a19-8231-cffaeb936246",
        "cursor": {
          "ref": "4eb57cce-0175-4723-b260-2383fa5f41d4",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5cef8c63-bee5-49f6-bc31-df157e146fac"
        },
        "item": {
          "id": "daf104d7-bce4-4a19-8231-cffaeb936246",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "51bf4308-1242-449e-add0-f6d500b8056c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b36686d-1464-4a58-8884-0aec7ec7aa70",
        "cursor": {
          "ref": "ef22b412-9d27-4bb7-88e5-d9a945f4bba8",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f868a227-7f9c-4cc9-be8c-d38d8d58c234"
        },
        "item": {
          "id": "8b36686d-1464-4a58-8884-0aec7ec7aa70",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ec49ef9f-faed-440b-acd8-d95ac2ec506c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8370b33d-6000-4ede-a241-07404d970311",
        "cursor": {
          "ref": "e0357da1-4824-4d09-b89c-edd5eb036541",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "fd79be7e-5c01-44f9-9f0d-6e45ede01fd7"
        },
        "item": {
          "id": "8370b33d-6000-4ede-a241-07404d970311",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7fe1bba4-a347-4545-b82b-0725509ad1ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c29ebf-deab-4f13-a3ea-2e48e80122fb",
        "cursor": {
          "ref": "6db6fd9a-7307-4490-b3c8-6784acf43871",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a1042486-0b0c-4e52-88d8-8cf5a99dd1b6"
        },
        "item": {
          "id": "26c29ebf-deab-4f13-a3ea-2e48e80122fb",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e30bb565-a7c0-4e96-b336-54067d2c27ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c67ced-c984-40a2-92d0-097cc9094c7f",
        "cursor": {
          "ref": "57e4562a-d649-4c4f-af79-a244573f7573",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b6858fd2-6e11-46dd-9c1f-a3bc0b8e332d"
        },
        "item": {
          "id": "e3c67ced-c984-40a2-92d0-097cc9094c7f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c0e55f5c-65f7-46bc-a4ed-0086ddccc679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc88757d-cbb0-435a-a9b3-5032dcf4eb1d",
        "cursor": {
          "ref": "51a55413-6a13-43fb-93e2-db8af84f3cdd",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4ecf8235-a88b-4f13-aa70-def240d30d29"
        },
        "item": {
          "id": "cc88757d-cbb0-435a-a9b3-5032dcf4eb1d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4a018a09-2620-45e8-880d-a6598729129c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fda2e10-a9a0-4ea0-9c75-bb0ca02eb5f1",
        "cursor": {
          "ref": "8b6ff544-cedc-432e-ab85-ace4d21b03f5",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3dccc134-1821-4195-9faf-8a4e571d01f9"
        },
        "item": {
          "id": "1fda2e10-a9a0-4ea0-9c75-bb0ca02eb5f1",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "28fe7aa8-927f-4c3a-a3ee-8ed6ef26594e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1c52c6-b2c3-44a7-8404-a17fb5ca7b91",
        "cursor": {
          "ref": "8d4e492b-d5ac-439f-9d73-a52ec6ee4912",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e5f7c19f-8b9d-4ef1-b9aa-efca94c3f9ba"
        },
        "item": {
          "id": "1a1c52c6-b2c3-44a7-8404-a17fb5ca7b91",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "81692eb9-2ab4-41cf-889a-78dcbcf07a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31beea7a-93cc-461f-8e0d-c14ae18cb334",
        "cursor": {
          "ref": "8bb92774-129a-4689-9143-92816a878111",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7f3089ec-eb1f-4e88-933f-fa3c5a6c17cb"
        },
        "item": {
          "id": "31beea7a-93cc-461f-8e0d-c14ae18cb334",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0556c077-6057-4d33-a411-7038c86f36a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fdcf03b-be39-445b-9d7e-b24ba626faa3",
        "cursor": {
          "ref": "d7ba7699-c7ad-4b9e-94bc-f238cb37e9d4",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b7803c41-d96f-4887-a9e9-37b75e3a282e"
        },
        "item": {
          "id": "2fdcf03b-be39-445b-9d7e-b24ba626faa3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "54cd34b4-f89f-4ee5-92e7-e4fe6e0944de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd69c5e1-a327-4ee8-9763-566472e2af0c",
        "cursor": {
          "ref": "57b1af25-f10e-4666-a847-9180cbcf6853",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2d6ebbad-d179-4bcd-a937-6e9e8595c63d"
        },
        "item": {
          "id": "fd69c5e1-a327-4ee8-9763-566472e2af0c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7addf214-bcd1-41f4-8be9-46f8b9fa0e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a7b952-7905-480f-bac1-cf7ef0bce71d",
        "cursor": {
          "ref": "98d01983-1f38-4300-9742-76aa8f68cae0",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e6bb939c-2c04-4f31-9575-47f7221b5788"
        },
        "item": {
          "id": "78a7b952-7905-480f-bac1-cf7ef0bce71d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "eb80ed22-99f3-4455-8bae-a6cbdac9edc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b5ad29-b082-4d5b-9d1e-f02d3bc603f8",
        "cursor": {
          "ref": "3ebd81f3-ba94-4691-878c-767028d82d9d",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3810f9d4-0b38-46c0-8253-ce9ffcfc5191"
        },
        "item": {
          "id": "34b5ad29-b082-4d5b-9d1e-f02d3bc603f8",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "77b8081d-eebc-4922-972f-4f414c21e5b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82e3715-33da-4345-80af-1b782e3d7a10",
        "cursor": {
          "ref": "7c32e5d0-dcbb-4e04-b325-9a9c619b109b",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7ab8edf6-f172-4750-82b8-076a100731bd"
        },
        "item": {
          "id": "c82e3715-33da-4345-80af-1b782e3d7a10",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3a4bd3c5-2a7c-426f-9e20-0c7311c8d753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0feaff-2582-451c-bda1-de561dfa1280",
        "cursor": {
          "ref": "a71f7d35-04ac-4f90-967e-abd90750cc72",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8af9d47f-c05c-4a47-bd61-50032a8d3951"
        },
        "item": {
          "id": "6f0feaff-2582-451c-bda1-de561dfa1280",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "620459a8-1fc6-47e8-b018-c468b4d56e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02043621-bee8-4674-bca1-3538ed107e59",
        "cursor": {
          "ref": "7172d680-665e-4814-88c2-b957834f1abe",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f484aee8-79e7-4052-bfb7-e146eb235718"
        },
        "item": {
          "id": "02043621-bee8-4674-bca1-3538ed107e59",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0df179fc-5c6f-46ed-9c17-9ab6abf9432e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34b39af-cca5-45d6-b001-982f64b5d6e6",
        "cursor": {
          "ref": "c44ae969-3d32-4a34-b9c8-42f370dfdbd4",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "957bc09d-fbb3-495f-a744-f3e68b4ab5cf"
        },
        "item": {
          "id": "e34b39af-cca5-45d6-b001-982f64b5d6e6",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a06e3cca-4eeb-4718-b247-c0e67e25028c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027005d2-96a5-4a86-ae1b-e5629f33d746",
        "cursor": {
          "ref": "6a9fa3cd-155a-4dc9-93a3-b6debb2e44f6",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "07ad7f5d-ad32-43f8-b147-0a2bfcb0acad"
        },
        "item": {
          "id": "027005d2-96a5-4a86-ae1b-e5629f33d746",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "217129fd-61e8-4464-9ffd-9e5c594e83f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a642dc9-d81b-4542-a329-40e965fbd257",
        "cursor": {
          "ref": "cac3ad03-cb4e-426b-b968-b07024116126",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "b8ce3a7f-3534-4b51-aee1-3885b96199b8"
        },
        "item": {
          "id": "1a642dc9-d81b-4542-a329-40e965fbd257",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4cd7a8d3-4f20-4b6c-b83f-3e872c4534c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "107d9d8b-5b1f-4be3-bfa9-bd7399f71891",
        "cursor": {
          "ref": "756645c5-cc7a-4a00-a96f-58d01423f164",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "b4a240b1-1105-4e89-a8d9-7d14eeeec179"
        },
        "item": {
          "id": "107d9d8b-5b1f-4be3-bfa9-bd7399f71891",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b57ce2b9-922c-418e-a4f8-9170162b0284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5173e7-7030-49c2-90f2-db725b91a05c",
        "cursor": {
          "ref": "7dccdb95-b69f-4bbd-be97-7e95f2e07e74",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "4d4498f5-051c-494d-92ac-07a64bc64403"
        },
        "item": {
          "id": "4b5173e7-7030-49c2-90f2-db725b91a05c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "1fda36e0-74a7-48b5-87b3-5feb4d4e2c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03a720d-15ea-484e-a9f8-aa4f88f235e8",
        "cursor": {
          "ref": "7c6807a6-4ce3-4644-9c62-1ed58af47fec",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "1ea8fda4-2569-423c-81b4-fb27f36aa380"
        },
        "item": {
          "id": "d03a720d-15ea-484e-a9f8-aa4f88f235e8",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9ae0ca36-5595-415b-95c3-7bacdda09c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c18aca-4d6d-4b36-b998-a4895d906c84",
        "cursor": {
          "ref": "171906ef-72d8-4a28-b627-b3867373a0b8",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "59c04006-e866-4781-a467-06c31b7c641b"
        },
        "item": {
          "id": "e4c18aca-4d6d-4b36-b998-a4895d906c84",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "baa7e9bc-54d8-4145-b52a-71dc38dae80b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4adc18-a298-4cb8-acc1-d17770871269",
        "cursor": {
          "ref": "80ca4703-d650-4042-9557-43ae785ecf38",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "68b29e87-621e-462b-80be-0f01dd2905e1"
        },
        "item": {
          "id": "ae4adc18-a298-4cb8-acc1-d17770871269",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8efc8bf5-3eed-4cca-9259-cd75b761b57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f33852-444f-40c1-9c9b-eebe6579ed24",
        "cursor": {
          "ref": "d62a5f7a-9153-4db1-ac89-17f43e321939",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "547efb2e-acb2-411e-95a7-a164d7489392"
        },
        "item": {
          "id": "c0f33852-444f-40c1-9c9b-eebe6579ed24",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9b16cab3-d7a4-460b-ae11-926233f618eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038f3b6a-e004-407c-96da-cfeba123eff5",
        "cursor": {
          "ref": "105e8cd3-f3c3-4ad8-ae1d-4b491a029996",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "cb0e7953-c725-42d1-b4df-9481d8e4a6b4"
        },
        "item": {
          "id": "038f3b6a-e004-407c-96da-cfeba123eff5",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "219fb422-fffd-47c8-be50-854bc29526ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d03511-7bfc-4a63-acc4-8bba45841937",
        "cursor": {
          "ref": "b668353a-600e-45b3-975f-9d492ca7f0f9",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "a1a45587-aeb5-4177-846c-d6b9096cea6f"
        },
        "item": {
          "id": "93d03511-7bfc-4a63-acc4-8bba45841937",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e81053d2-27ed-4406-8ebb-1706c57057fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035472b9-9205-4739-afb0-f4c6363b4d61",
        "cursor": {
          "ref": "e0065e5d-77d7-49fe-a499-4db2fb9c8d70",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "5f155fcb-5118-49bc-af84-105c49ca621e"
        },
        "item": {
          "id": "035472b9-9205-4739-afb0-f4c6363b4d61",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "bf62c4f0-ec7d-4d5b-b8d1-c5a21fe253bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba397e64-a4b9-4f3b-8a87-7a5d5a4a9f29",
        "cursor": {
          "ref": "0815a7ed-ef8d-4924-9e27-915d5aada33a",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e55c1258-e2d2-40e7-8376-ec70421660f0"
        },
        "item": {
          "id": "ba397e64-a4b9-4f3b-8a87-7a5d5a4a9f29",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ca53abaf-8713-4b97-bb74-3f7d27bfe059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faac3605-388a-4467-aa41-d1e4ac8aa64f",
        "cursor": {
          "ref": "bf3a7596-acd9-460e-bc18-6f081b801814",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "8980306d-ddf8-46f4-bbbd-4614720ce465"
        },
        "item": {
          "id": "faac3605-388a-4467-aa41-d1e4ac8aa64f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "04630485-1a81-446c-b16f-cd133ecf677b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6fa988-15d1-466d-b859-8799fbd85612",
        "cursor": {
          "ref": "08863c3a-e337-442d-89f2-b23439f27392",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "64698928-a678-435e-9793-22a30761fccb"
        },
        "item": {
          "id": "3f6fa988-15d1-466d-b859-8799fbd85612",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2ef8e3ec-9847-4fce-92fc-072958bb92dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a58a0c-fab6-4a5a-b9f3-4ee0e3998a74",
        "cursor": {
          "ref": "04850bd1-bbbf-461c-98f7-48d33dca03b8",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "4ad7316a-3e0a-44dc-8a5f-d1cb923b389c"
        },
        "item": {
          "id": "d8a58a0c-fab6-4a5a-b9f3-4ee0e3998a74",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "533f3adf-7c06-4bb1-a8b8-6da24d0554e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4edb20-8206-4a7c-b7ba-55fef782ed74",
        "cursor": {
          "ref": "2f534305-260c-42fb-b872-7d2df55fc702",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "78023f27-b493-44f3-a0c1-dba6a37be162"
        },
        "item": {
          "id": "3e4edb20-8206-4a7c-b7ba-55fef782ed74",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7aa39310-0962-4919-86bf-45bf572c0390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d453da3c-1105-4768-88fb-9158b4c8ce0f",
        "cursor": {
          "ref": "78cb2bb7-4375-4e38-b515-da3ea62fa0eb",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "23dea091-fc0c-461a-a006-f89976bcf7de"
        },
        "item": {
          "id": "d453da3c-1105-4768-88fb-9158b4c8ce0f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4147d342-4ae3-42a5-abf8-766716496669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ddbfdb-3d77-4b47-b930-8443b881c766",
        "cursor": {
          "ref": "fa469a8b-bb2a-4e86-ad94-a516413f78ec",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "b290a095-6451-44a5-b309-3fefb540b9e7"
        },
        "item": {
          "id": "67ddbfdb-3d77-4b47-b930-8443b881c766",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "68ce4384-2c04-47b8-8b6a-618726fcbd69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07fb16ef-1588-49ae-85e3-e397adec4eec",
        "cursor": {
          "ref": "07345b2b-093d-4e1b-8ba2-3c258440a615",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "1207ea9d-078b-4c1d-8490-5e9603c60952"
        },
        "item": {
          "id": "07fb16ef-1588-49ae-85e3-e397adec4eec",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "97479e33-e610-43c5-bc46-1420386d8f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e6c1b1-d160-40aa-9552-25380ca5c244",
        "cursor": {
          "ref": "8b5b4c3e-1e0c-4ad9-a3b7-9304c41aa522",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "5b480538-4727-4c7d-8c08-df500ea7bd25"
        },
        "item": {
          "id": "c4e6c1b1-d160-40aa-9552-25380ca5c244",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7f1dbed8-c65e-4a52-89e3-31eb8d16e236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544bd447-6a71-4b56-aead-8831ddb52a5c",
        "cursor": {
          "ref": "3c7507f7-256b-437b-a85d-b7d706e88b35",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "5e497bb1-77c7-4445-80b2-4da8770b23ae"
        },
        "item": {
          "id": "544bd447-6a71-4b56-aead-8831ddb52a5c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f58cbfc5-eb3b-4d00-a8df-aeee6447bc69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a480921-58bc-4feb-a263-82b6ae51b1ae",
        "cursor": {
          "ref": "793b521c-f39d-4ddd-9250-6a66c674c4fe",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "31de52b9-18ee-4075-882f-c0dac8e23c1e"
        },
        "item": {
          "id": "6a480921-58bc-4feb-a263-82b6ae51b1ae",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0464931a-36c2-4c05-8554-ddfa50a8eb0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ccb29e-fea3-467b-94a9-3711342fe8fa",
        "cursor": {
          "ref": "de256a81-245b-47fb-82c2-893b4954c064",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "7905df85-9160-4afa-8c1f-62388e1c87c4"
        },
        "item": {
          "id": "d0ccb29e-fea3-467b-94a9-3711342fe8fa",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "aa17d775-3591-4c8c-abbb-50aba9a1d623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb42c95-c573-413b-b2ed-bfad2b6d54c4",
        "cursor": {
          "ref": "ff153d8a-cfdb-47f8-8be5-744ea7c2d1b1",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "ba71bfc9-7120-4eed-893a-282623ec2683"
        },
        "item": {
          "id": "3cb42c95-c573-413b-b2ed-bfad2b6d54c4",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "96db65e5-dff3-40da-9512-9dcb31ce2657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f58c90-2d9a-40dc-9609-cd1b8087c13a",
        "cursor": {
          "ref": "b42095ca-bbfc-4bca-8790-6d51b83a83e9",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "ca3d98b2-6d52-4dc6-9d30-f500dff9db15"
        },
        "item": {
          "id": "02f58c90-2d9a-40dc-9609-cd1b8087c13a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "26887b98-cd5a-4a03-8bfd-17cf7bbf7fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8c7065-bd74-4153-aae7-61136831c9e2",
        "cursor": {
          "ref": "f859b06a-b030-4ffe-a747-7265b685e90d",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "ab9edb26-8073-4c17-bbcf-317dc5ae9168"
        },
        "item": {
          "id": "7e8c7065-bd74-4153-aae7-61136831c9e2",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "85f7fd89-f89d-4312-a633-f9f036e61e20",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce033fb1-fbd6-4fb1-8188-ac807b8bd6d2",
        "cursor": {
          "ref": "f34cecb2-9336-4cd9-9a09-0d19342faa7a",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "9e85a555-5e8f-4357-8267-cdc3fdd02cb8"
        },
        "item": {
          "id": "ce033fb1-fbd6-4fb1-8188-ac807b8bd6d2",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "01a39e22-80dc-4547-9db6-32b3bd308ea2",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c36a3e1b-4868-4990-aab4-1212c64aebb5",
        "cursor": {
          "ref": "3c3c0560-a68e-44b2-bbea-dcafef1abf55",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "bb37ea3c-5df0-424a-b872-eb6f527f80f1"
        },
        "item": {
          "id": "c36a3e1b-4868-4990-aab4-1212c64aebb5",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7eb94fc3-675b-45b2-9e60-d55a08baf2d5",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2152fee5-8ca2-411e-bd38-3bc404f08608",
        "cursor": {
          "ref": "5fdd2e35-8532-4c77-9e3c-3c7d988a06ae",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "f6d8ddfb-cc1f-4c81-bd38-8d61b7c50c68"
        },
        "item": {
          "id": "2152fee5-8ca2-411e-bd38-3bc404f08608",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "bc2df946-63f2-4221-9a7c-ce54141c855b",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b124156e-e712-4014-82ac-fb77235ba8ff",
        "cursor": {
          "ref": "e896726a-53ae-46d2-8711-456134c92053",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "901378af-380c-48a4-9978-0da4e7617c96"
        },
        "item": {
          "id": "b124156e-e712-4014-82ac-fb77235ba8ff",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d2cf8416-abd8-48b9-b09e-73c59c7e96d1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b124156e-e712-4014-82ac-fb77235ba8ff",
        "cursor": {
          "ref": "e896726a-53ae-46d2-8711-456134c92053",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "901378af-380c-48a4-9978-0da4e7617c96"
        },
        "item": {
          "id": "b124156e-e712-4014-82ac-fb77235ba8ff",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d2cf8416-abd8-48b9-b09e-73c59c7e96d1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d4880c-0e8b-4d5b-89e7-27e966302c03",
        "cursor": {
          "ref": "0ee28219-2d36-47af-8cb8-73240e825ab2",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c37ecfdd-3a7c-4599-b4eb-affff2e688fd"
        },
        "item": {
          "id": "b2d4880c-0e8b-4d5b-89e7-27e966302c03",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5557daf6-a398-43b9-8d1b-0b515ccae07c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e490f6b-8859-4a14-817f-17fa6cd177ad",
        "cursor": {
          "ref": "726f4d9e-e56b-4006-a9e6-78b58d9fd0b9",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "8d6cc921-6186-420c-abeb-c8f4e0ae57f0"
        },
        "item": {
          "id": "8e490f6b-8859-4a14-817f-17fa6cd177ad",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7fc38d48-344d-4bb0-abcc-d285be75eb17",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}