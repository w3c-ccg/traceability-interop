{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "253f7f65-a7a7-417c-8d01-e76e723de77e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a948db8d-207e-4d45-9f21-ad6974bfa30f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a2c97916-f553-4b9f-ae17-53efce364170",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5d8a8168-d7e1-446c-b7ae-e32b28a383a4"
                }
              }
            ]
          },
          {
            "id": "b44cec27-f8d3-4e70-b08b-03caed7fd071",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "45a5c8ce-cd8c-419f-8965-402ab32c4a40",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a8e6f400-050a-48c9-bd71-43e03dafb0c0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "26f71e78-2dcc-47a2-865f-595938244c93",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e5b7d108-49a1-4a1a-9632-40a24cc460b6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b61b73db-81b3-4005-9255-0502ad025f86",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "76a84ea5-b5e4-42b7-8a23-302f69a06274",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5f1df618-dc42-401d-a792-6687d0f3f590"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d82d93c0-3bec-49d9-8761-4069d224ab66",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "de4ba7df-e984-443d-89e5-b163ac6231fa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "32d67362-272a-4a99-9382-e302ec89cf70",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a640beaa-5805-4134-8e53-c9cf8c6a820d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "789e08af-e35c-4f2a-8f4b-bd6e426ef1c1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6815b90e-cc52-4abe-b205-ba4e75263bdb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ed352be-ffcf-478b-87b3-89742c27eb3f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8b26ae9f-c854-4d94-924d-86a9b8f52657"
            }
          }
        ]
      },
      {
        "id": "0512421e-7cab-4099-9b58-178f57fb5701",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "0721c6a7-47ad-4054-b7da-405733d3cb2e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7a08f0f1-691c-499c-9af3-7170344d8f60",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b23f180a-32be-4f5c-aeef-a762da96c804",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "033d5d60-4c73-4d89-9dec-0ce8d35ba038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a7adade-8182-4e4e-8ca1-06b13a035016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a9b146-0ef4-45e3-9445-852b66e0cd8a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c8ec1d-3993-4bc2-b248-7f2408f9c139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f8b9484-7e06-4354-8172-bbe89135e26d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb03a2a-327e-40cf-b476-ed51e716d598",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0353549c-38ff-457d-a01a-0d3a2446e872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "57bfe3a3-dc8c-407d-8139-b268fe53d2df"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7ce43291-8ddb-4746-b4c0-8e1ecf4fde5c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b74f6ff9-058a-4204-b84b-1c288975381f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a4b109-8891-4bfa-afcc-99b926187014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58f156ba-e718-42d7-980a-01e471e3ed57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32674495-d687-49c1-9d6e-a928e5a69133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "257f0345-655e-49aa-b7d7-5b9e646306df"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a2807c25-9a48-43e6-ab2b-633f275b64df",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d22a8b37-8384-4e50-90d3-80158b6a634a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0312b3ca-add1-4409-b133-836daf5accc9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "40020f5e-d0ac-4752-a697-bb368b100be3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b465c52e-2140-4f83-95b5-a5ca8f081b08",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b7d78062-bff5-4a75-ab0b-98dc96592ff7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b3dd322-e7ed-4742-a470-baef52a3cbd1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a2164404-60c8-4575-bd59-1187e6a25883"
            }
          }
        ]
      },
      {
        "id": "c6f4463f-a89d-49f6-bfe2-db6e2e492fa4",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "75378d85-4483-4c23-94fc-c723b8f0625b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0510be46-a946-4cde-a801-904af71e1e96",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b7e6caf6-7a7b-410c-a9ba-f7284bc79ff7",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea855bd-6c56-4ac7-9b13-b6e6d1097b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f356f8c2-7668-4eee-8a7c-a6380fcd6ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169db90e-6854-476b-8825-51d95f63311b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a126d5b0-dd2e-4a84-b2d2-133d04810ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e84a09-d689-481e-8192-0e00753a01e9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e136a1-4b78-4fb4-b14b-20dc993d54c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0368ad3-e68f-4204-aadd-86523fec1f6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906780de-805a-4beb-8061-7cdae0e56bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0e0ba26-06c1-47fe-ae33-f0ef95741724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4cf50c4-dc45-4089-8e06-7d0a4bdab932",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e798481f-dfdc-4ad0-bffc-95c9a9dec818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30d2f371-5e02-44da-a195-f961544a3fa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c263ee-0cb5-46ac-a740-bb6afbde3596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e976ad8-8f46-42b0-9ffe-f1395328a2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9767edd2-50a8-46ab-b3df-fa8df544b461",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c880b509-ad0e-4a42-850c-cadfc492cff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1fd6b8f-f1b3-4d94-94c8-efa061e88e95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad17182-898a-4210-a655-633d4e8c2abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ecfa2f5f-72b4-4037-bb7f-cc165bc85190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6145a592-15fe-4f46-b17b-3d9d4f649629",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb888bb-2da3-4e98-a0f9-4749598f9272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "705f1d4f-ceb1-449d-b5d1-b773f730af0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ff9510-2d88-4829-860c-757f14d38b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62de966b-a972-4cc4-bbf9-648af79c809f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4bb96e-1ca2-44a0-af1b-e6003f284ab5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db7adc4-96d7-48ed-a9f0-7e30ddb8f0d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4e60af2-ab96-4c34-b899-e510e6df8f99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39da8972-1bdd-4d55-be2b-8f9205f6c59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf871803-e215-497e-a065-a5020430624e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede87ffb-0258-41a2-8a95-ca34bbf8f27d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f190d41-d6be-4286-b604-4b5b1ab23c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dd0b09a-730e-4f60-80fb-a63bbfae4c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d9951fe-e5fa-4964-a496-87b9db1d0e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e11b8603-3eb0-40ee-b36d-c87997bd4f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2daed177-3cc1-40b7-9623-6d29b17a7e51",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69652db4-5ba1-430b-9fb8-2a069bcad1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb3b5a08-910c-431f-863b-69a99075af18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4bb486-f288-401b-b649-66d02860798a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "735d28a8-e018-4843-8193-e20394e96f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cfe13c7-e37d-4679-ad5e-9db09306bb12",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aaa6bd4-9158-4d9a-8921-456f6dca8ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4b67551-3bfe-4016-8a95-bdf72614d21c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289978cc-4ac1-43d8-b305-536f7e17fbbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "297ae4e6-d5e0-445f-8077-a91fb115720c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b411d44-bc76-4343-80d4-22d1bae0d334",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ccc0c40-2807-440f-9112-8e2478c51d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f3608f3-0c22-4e21-ac32-dac77784101c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902bfa33-30eb-401c-a562-71a6013b8c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48f4e5f9-1ce9-4441-a265-7fe6d7f36bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c646b43-7599-4683-833f-16238832cf76",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "135befee-7a39-40fb-9d52-6ac10dde51b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "821bb6c9-98ec-4f51-81d0-cd3c7bc37a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d49c78-e46c-47f5-926c-1e85539d387d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28ccc253-175b-467b-9fe1-8fffbff0baf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e028650-4aaa-473b-9c8e-07b3da11aa7f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef42a90-c1ba-4a89-8f38-fc790bd987d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3cec2f8-c3f1-47c5-a9db-c6970bc5b765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b8fc47-166d-4102-b3ad-6cf177cea7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "217555ce-a937-4458-857a-3cfccb7724bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a18d119-4be3-408f-9903-8adfd755b3ff",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e448a556-c8ab-48f1-a7a6-101352680b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64fa9e8d-c535-4e98-b859-a36ab81847da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c72c565-de3e-42ea-a2bc-c207f05e8062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f0b014d-40d8-4fed-9431-efdb25ad9909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5489eb-76fb-4c8f-9aae-9e5591d4bae8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b65717-e8b4-473a-b909-fb89a57c6e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88b9b75b-c708-4c31-a5f7-77f8eac9f8e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184d29f0-1a24-49d5-b59b-08812fa276aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16056b8d-d834-4ae2-ba2d-1cb85ac1c993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820da8eb-7c19-423f-a811-608bea2e50dd",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20df8b24-c961-4ee4-b230-18187ced9823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8097d89a-a16a-429b-a1bb-ea22aad04a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3cea39-4f2f-4e0c-b33e-00df6ce1f7a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99e19f96-9d52-4682-9011-770cd2f62f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33830c25-db92-46af-9a2b-ac568d782ca2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35951982-59b7-4929-8998-0fba30928fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17140da8-e629-4c51-8cd9-e6e5d0c1d187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478d719a-23e1-4f82-9cc8-1e70f7df94ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4712b719-20d5-4434-9ca5-4f423345ac03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d036148a-c4b9-44c5-abf9-df23fea41f93",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3c1d03-1663-4c08-a9be-082c8039131b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde257f0-e3d0-455c-a1ec-91e553aba615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2258ca7-8b48-47aa-90f4-49c01aabf6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1348eaa1-f156-4ee5-a5ca-18a682582c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d295f48c-e8bc-420b-a250-2977ceb4c0a6",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c32ce99e-2275-4bff-8262-e6d904804806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dc6127d-42a2-474a-82b3-891992394a1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2961767e-54aa-4f8a-ac64-a83590fc5ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "366554d4-bdf2-43b6-8111-628c4ef315e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66288d1f-78f5-4bdc-8315-90d6febccff3",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aae7f98-029f-445f-9576-617d787f5bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "378973b8-02b2-40f1-9866-c50351b30e50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b59a11-4783-467e-af31-f6653f24db91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c5be625-07e0-4a8a-b8ff-58c7bdc88e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2a2d82-4d47-419e-866f-ce261752e54d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26fa80b7-4f0d-4af5-93df-1b60bf6037bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ad6169f-e8df-447e-90aa-0a790a7ff157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88766fbc-1583-4e03-b20d-4573abf59307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad8e8580-f26f-4360-a62b-20bbd4e84bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271ec318-1c38-4d24-b319-6ee0d5bd26cd",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5f9148-3b73-4f34-b28b-7b631d17bd1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "869cca69-fcd0-42d3-9103-7d4742f86dea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "961a17af-bb62-460a-be4b-d53f7a26c64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80d04309-319b-4b5d-b82f-f5e8ae3f38f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e953042b-0712-40b5-9ac9-ad03071503bf",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4a86f1-f997-4f01-9a77-2ad9249a49d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef2f36ca-5101-4ac2-9624-d2693df9d0d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d25238e-3161-4a9e-8d39-d41650705616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b062b814-aef8-4119-aa7c-96bd88248534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2113425-615e-4b79-be17-d5b6148a8bcb",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "543a57d2-7102-43a2-b8fc-ee35c478eebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf032a93-1781-4e97-beeb-5dcb3f2762d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6284f347-814e-4812-a1c6-68cdf04012d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e2b6f17d-0e24-4d7c-809a-bc46b9eb553d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a9fb66-54d3-4b78-bc74-6068e52338f4",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e419ac39-2812-46ee-a253-50fc6df3ac8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc95fc47-41f3-4ac5-af92-97f14877c87e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1270ff7-c172-487a-b38f-a879d8cf8b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f600ee7-6299-4cdb-bde5-d03c707c2d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ee92e2-d7b6-4405-8656-486269043539",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d270f535-61cb-4742-8882-799541df6cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "950ac839-022f-413b-a80f-fe90ddca2b70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0ef635-3103-4250-8705-5612e79129fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b44cffaa-b9a1-49ce-aa9d-c88113c22a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b511253-ad9c-4661-bbf9-0e7c5f2411c7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a39cb46-1f41-4787-a11e-8a7b42c1461a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "719421dc-d1ce-43a7-9300-6a5c277e2018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2fb770-97f4-48bf-9113-55f89be9c146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0441310e-dbb4-4d6d-86b4-d397c1e8783a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c4ff38-36de-4f93-815d-a8475ea7a4c3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c57295e-0bc4-4f3a-849c-3523ab9b0ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c44ca7-bf5f-493e-aa3f-253c547571d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bbffd89-dfc7-48c6-baa6-74194e080ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a8cfcab-a152-43de-bc2b-cb10d1430eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1944f1-2c8c-4d9c-a90f-a0664e4641e5",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd23c3f-00b8-4361-bf19-8f953ab4881a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37027c1e-9d91-431f-8512-becd94b4cfbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "889addf4-6e7c-4b90-8683-64949df37fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "331275af-7091-4590-9888-bc045c4f4ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77528c6b-3117-4f25-9e84-29ef5f7ed27e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb3c0b6-9beb-42a1-90cf-14032153dcb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57f86d72-9335-4073-bb9a-46e874e46940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef29792a-975d-435b-ac0f-532833fedbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9aeed698-354b-415a-a026-17e790983bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85cba0a1-e480-4220-a110-8322bf9aeb86",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b96dda-36a0-4b8c-a26d-b0d03bede576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38a0e8de-1dab-4a2e-a266-c1a4724a2226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ebbc106-1911-4707-8ac2-577e2ef7c997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cdbc989-5977-4cdb-9cfe-b39601987a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a483ae6e-b85e-4434-b270-cf3b39379c47",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef7c0ca-b546-41d0-b4bb-a38e02719374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "738d37dd-d3f3-4fdc-b1e1-f6e6538007ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d88c11-90a9-42e3-ab53-305427b061a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "08d4444e-8ca3-4b51-983a-974f91a7644f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af32ce7-7dd7-417c-a8c8-26bc48a08ce6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "681aeaab-3e6b-496c-a0f2-15d16afd89fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d63a456-e3f6-4212-a7c7-29a74174f00f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60316400-0ae9-4741-b3c2-7f9e88829083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6482447-05f9-4828-a58e-054d920cb078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ef6c19-902e-4aab-a2a8-a08c3b582ac2",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931f0d2b-9aff-44d9-97fc-cf06fa43e3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ba8e2c-728a-47ac-9c96-0c3653d3cf35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ff4cf1-e1cf-425e-a312-783303b41a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3554626-4539-4274-85bc-6284ddf45d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d148ee5-8664-48d7-ba4b-b306db31fc50",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f06b072-2729-46ed-aaa9-07cf61d7efa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d0af566-ed3a-4a8d-bc7e-c88d287ac02e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3280f3e-9935-4c01-9725-36a8d5253cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a4650e6-18e4-43b2-8bdb-755c1d530eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45fff8fa-fdf9-4fe6-9baa-6339ac124ea3",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4252b3fa-f58e-4987-aaee-93001bca03b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cd09b2a-c75d-41d3-ac90-1bd51b2d7016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0210475e-a9be-47e8-8753-54d7edab9287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4c6e82e0-afab-4e53-a0a1-1f78d72470a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06c5732-dd8c-4f5b-8ac9-4cdc54efdee7",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db7fc243-80a3-425f-bc69-80903217d2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cdaee1a2-6166-4274-811d-a1fd30d279c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "094a5458-523f-4ea6-970a-7a75df940700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ad12b67-bcbd-4c32-b4cd-45127f5c5728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce39632-e286-4172-807d-1db35e86bd44",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68207ef-cea8-46e7-b8c6-bbb29b2dcd24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40571f06-31de-4065-ac71-7b2383bd06a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e138f1-4e30-41fa-bd61-27c88a64868b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7cdc8b8-5f98-4e67-afa0-115482428f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25fde2eb-edfd-4a0f-b89b-e86d473a076b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e913e44-c441-4f53-bd5a-bbb33993f471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf8f47f6-bea7-4371-8930-9567d89caa14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c5a752-2c28-4ce2-84a7-3408003ad9b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "79377200-e048-406f-a98e-4cffc709453b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8452a39-c919-4f03-839f-79a43fa7a1b2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39f9a95-e372-49b6-ac0d-76536745ced5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4dd909d-dcfb-4d70-9b98-5411c106635b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55edfabe-c640-43c9-ba0d-a1dfbfb08a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "37f0cade-8eac-42a8-9043-c0bf765a52fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e897acc-58ce-4dcb-bb2a-f3812305813f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a109b14d-2e2c-427c-b616-63a1452efec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fa47cb3-0d66-493c-a07d-fcc715a36a69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b9cbba-cd56-4815-9905-a6af10b79a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "894ff785-3421-4bcd-9a54-3db82c82cb55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03dc5d5b-dacd-4662-b409-daef7df90152",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd81ef5-8943-4e3e-bbf7-1f59eccf6268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bb483b7-e1e7-44c3-b1b7-226152487fe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8961d33-4dc8-41ef-82ce-9c6155a0b51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "31ea0e74-009e-45b3-9ee9-ea08ba78a360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd38c22-6fab-4f34-945e-5ea00e3ceda0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "711f5875-aca5-45df-a403-62d8cf9074ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48f5abaf-be42-420e-8cec-0c0c177b8948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5be58f-8271-41f5-9982-60ca5acc5790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3684edb2-fbfe-4135-a56b-fcfbce4754a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c7fefb-533e-4417-98d6-5c819a7c2cfc",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59fe7f19-321a-4faf-afc4-3d9d61196a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b8d1bd-56f1-46a2-a71e-2c2f25c94cef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941c4589-ee1e-41a8-96e9-e4b0c2c94280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0fee04b-a08d-4ef6-9f49-be95a7a22abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9301e81c-7c18-4091-95cc-206c6b15ec71",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0fda34-a223-4ff3-b21a-f791c737af81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eafb7469-5e52-4eee-8235-b40c2614d2bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0983c602-9c69-4ce7-9673-29375b88e367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8e398b8-6a26-4246-86f3-fdf482947e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82c296d-fe9d-42e8-ab89-829027eff0f8",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e209689-e4fd-4ad1-9257-500dd2b692b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3e3d170-bc30-45ac-bb55-cd137282c51d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f56d9e9-0733-4d14-859e-4fe59a06c37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "582991bc-0573-4331-b27c-75472d2f8cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e27d541-6336-48df-8807-9e18c59ff508",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9738f53-f7c4-4a81-8843-6bf2536dbf22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a78d7a3f-0963-49b2-9989-2fd365ba3527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f06690f-078c-45ea-a578-f7d9456bbee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b459b2c-6af2-4167-84f9-a3c94ccad147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b09382b-d26a-47ad-b9a6-1d3c5acec763",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8eb2a2d-e6a3-4236-ad9c-4a0b2cb72c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a80c6f-cc56-43ac-993b-b1aa6926ea5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14097be5-2659-4371-97b7-1e44fd81058e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "13eda7d1-d401-4221-8e24-6879ea4cb686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1eb7a33-8dbd-42ca-a986-9132cb95775b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f00c33a-066d-447e-854f-4d959a36d705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "829ffbc0-29f2-4819-8d7d-e6262e8986f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e40eb95-b5e0-4305-ac56-c4091fcef16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff70a772-ca6d-48b7-8d08-c25a3b792113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1edba0c-7f6e-4ac2-b6e2-033bd9d6f4ff",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "592d4c39-1581-4ca3-8354-bf12f35faf98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fc53ded-6f1a-4b11-9a18-a318149ff696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef6fbee-c58d-4763-b7c8-8aec5ed523c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c343b6e-107f-4593-a45b-a6d593ed18e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd197c5-072d-4955-8cb8-200220c13873",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5917d10c-5aa2-45a2-8994-a7d7c0ed0eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afc24080-818a-4e50-a7a3-32432c5a01eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9966105b-b0f7-453d-b88e-6123fcfdfad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1535de6e-e22d-4c56-999c-55097ff16b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01fe754c-1102-4030-a4a3-884a231714d7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f773e100-4dd4-4ff1-b497-0691cc262b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "612cde75-fed5-4b06-9c12-6641788be086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16799f7-ff4a-41b4-9277-f8858aecc603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "064c8abf-d213-4cd8-bf0d-8b765d9927d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74167cc-3a86-49cb-830f-4bd27e6a865d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5585f459-e5c3-48b1-8a89-e7825f064818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc9ae5bb-9832-4085-b302-213f8b4442cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8cb2b4-cb14-49ac-b6ed-51577812787c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd13fcb3-75b0-42fe-8197-ddf783f0cfd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33619acc-8329-441e-8966-a1fa5d21561c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c977204f-8088-4e6f-9ced-9d95020dc2a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dd9b203-b5db-48b2-afd5-8706a032f578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44e0b6a-b437-4ce4-bc38-efe850224da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4086b04-fd13-4e3c-8d77-503851543479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc1fb15-210c-4618-96b3-03f02be16e02",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68406cc-bbbc-48f7-be10-b1da7bb01195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79ad1fa0-ca34-4c4f-8f91-d8881d4c02b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5764327-a09d-4cb2-a865-430ed9a522dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7afbf6f-cf16-45b4-953e-ec4d8a21d9e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87941f29-5962-45a6-b5cd-fe6027596f19",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ae618d-5659-4564-8581-cd6436cdf1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95afb13e-343c-48ba-907b-54295430767d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c60d9750-add8-497f-b454-f911233355b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1192da7d-21d6-445a-8266-d9f24ae61f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cfd0158-71a9-4240-8b43-0eabef2e51a4",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bea7d80-60eb-4bca-92c9-9305a511f5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "228096bd-7c65-4bd6-9750-b4d1e02fda34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5026fc2c-984f-42b1-8113-b2d6b3d5c7c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "acef1dde-1e70-4da3-89aa-4973c385272a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c3f616-b1a8-4a46-9d88-4152af3ae6c1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecaf4cfd-710d-48aa-9332-9f559ad7e20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a0971d-3c9c-4c22-80b4-8ebbac5ace96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00795981-ac88-420b-8eea-5214c5ad23ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "64df68e2-9d6a-4fa6-b204-733d61602b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81e88e8-6d9a-4703-8bd1-02305f0951f1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "234853ca-9e94-48f0-b177-61eb203e3082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efecba4a-ff79-4cf9-9bfa-2fc21cc8fc52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f261bbc-34b1-4eb8-b997-18865fcb28bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd7d0e97-c74d-48de-9d5b-aed38e0fc139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd87a402-8a90-44aa-bc42-603091ea7713",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c241c790-7f1a-4746-a4ee-a12ddc045a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53be1d84-dfcf-4ccd-a1f2-abae0e207704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9318089-e68a-483d-b5ee-035c91ad8b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c223fd9c-b0ca-49a2-9081-edff2dcd60ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6895a2-ce11-4576-941f-c57aae780b18",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb8fd75-c258-4b2a-adae-0866d2f88efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33c79981-d713-46b7-83a9-a71d6a9a52fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4311fa-836a-4367-91e2-5e57fc5fb593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "df733f01-b42e-4bcf-8274-57e478f3d985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a45fd37-4aac-4af2-a833-f3c71622452f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4e9046-e873-4dbb-b4f0-6d639c4e11e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15ea6e32-8f6f-4eea-b232-7fdf66b78841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed847fcb-f913-488f-9bbd-636e2b887f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "84635820-8c8f-4e96-8f1e-b7d58114f0b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671c5466-6d0d-402c-9819-7b732fb5a3ed",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e162c322-a702-47f5-835f-ad9e72589673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc2f44b5-abd2-477f-af82-dc3677778735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1acfab5a-ccdc-4e6d-866f-5e0991825c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc84fdc0-dcff-46bf-b9ae-303fa48b333b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0813e08-f9be-4ba8-9152-1de58369c5da",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "328dd153-55ec-4374-9b67-31ae1074c3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b376d710-6958-4802-b828-9297e5dbc997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d113d8-075d-4728-848b-c4a0ed6490a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c8b30e7-4de8-4e53-8bf6-1e870fe635f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c12251a7-9885-4936-86c5-631de24c11c8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1252648b-949b-4c03-8ddd-9eb6f1fb68e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f98bc0-2cbe-4d14-abd2-a355b56725a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1bd351-ce01-4f57-9ff0-7a06772d4e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7315c685-dcc9-447d-a8f5-bf21b0dc45ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae894d37-2a2a-4605-8d20-27f159d36fc7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b753a1-34e0-4a03-bee3-2f5ff13fa7d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74c45ad3-13aa-4001-a126-55831afee3c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd778f61-1f47-4b3d-be84-8e7f5e9c9bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa20e113-94de-4789-a3d7-b26a5310256d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f47d19e6-4f60-429b-9e52-9a02e3d2e032",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bccbb82-d840-414b-be02-891f80bc6f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f9fbd14-fcda-41e4-9207-8eafd37509e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b43019f-524b-4d9c-a7e9-f9d4cec90de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "780ac0c5-111b-40ad-b991-0eb1bfa9aa66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd1f86f-2a98-4237-af2e-b5ebfeae95df",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ba91de-d4b2-4c66-b71e-4774e6b77a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd3a0208-459b-4308-b86e-a7b971afc56a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ade0a58-da0b-4fd1-9858-7c4dcc34e4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "77225176-0081-4d94-b025-eea0a7f30abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec19d47d-724e-48e9-a79e-3b3ccdb62891",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7bcb50c-9908-4a9a-b9c8-61e86f41fe07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd4d1ca8-2a3f-47df-ae10-f176aa0b1326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821106a0-63b3-4621-a7a4-bdd3b2ec2497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "84579d64-0d22-4b03-9fd6-9008460b04e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34a8e03-09c0-4c0d-99ca-40da66e9251f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc59d272-2c1e-4c88-937e-81c137b1eea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "919332da-1069-4e33-8491-6b44800a1908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a7efaf-51aa-4481-99db-003d4b81095e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "412636eb-2218-400a-914b-01600c0147a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2afda3e8-da51-456a-b7be-72bc91d56763",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4684a42-62e5-42b4-bd72-469765074e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48f68978-36ca-4d69-98b9-c1bb197f5225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ec7fc0-89ee-4dc4-83cd-6c57b4e32fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d8ad4a5-5aa5-4dd0-a78f-93ac468afae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861c2148-f4ad-458c-a84e-2244d09ba1ea",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef698db-6624-41a7-965f-03f335bf946d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbd19592-88f3-4f5f-8df6-577a98e9e4e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5f055c-91ea-4d58-b388-e4073010f108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "997c914c-d3dd-4547-9e4c-cb9bf9836b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ebd835-46f1-4102-8e4d-d069091c9aed",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6c0ba8-2e05-4502-9407-ec4c0cd4ee0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "318a9de9-523d-4fca-8788-2d36b3078c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df75fd4-89de-48e6-a277-59d5d3f052c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b99cc11c-0684-4b8f-948c-bb667f6aae6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1900b5b-47c0-49c8-ae82-478f56cd0187",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0da5568-16a3-4ca7-a52c-3be8a9b8ced6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4903670-0457-4ffd-97a5-6ad7a0c62818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbee5b64-0c62-462c-8b83-aec5b3d8b9a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6af3636-96ae-4b41-83f9-ef6501b37e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70940f0d-3c4a-433f-a8ae-2788d95e150c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5beadb66-8f13-4a67-9229-d5b1b19e5601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "737ce0c0-4723-4234-98d7-286b82153821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "341bfdeb-a8f1-4ed1-b1c0-da8d0979843e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "adda5b5a-903e-4897-9f0f-8954f8da5950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd28c07-6ca9-4463-91b5-8297234a4c43",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e56237f-bcb1-4b96-8192-7631f38809cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17d091ef-d53c-4d3e-a98f-e1d19edbcd98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7958f1e7-156c-4c68-965f-76221484db49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c56e1c0b-1df3-40d8-980b-cc2e0638bae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326776fc-d845-429b-b3fd-72d991ca8782",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0dc9d4b-8212-41db-aa64-05f31774780a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6142b089-18b0-445c-befc-8e4be6890e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d6abd1-d312-41e1-9d0e-83f264543e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2557460d-a143-4b92-bfbc-415c0188b32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622d520a-0cba-4140-ba03-97b4adae3701",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd45677b-ca4b-485c-8cea-d0e514200b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "259ca38c-8078-49f6-a9e6-f15888d6ae42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b474a14-6dfc-485b-94b5-32ef24825866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9f4ea98-6803-4209-9d19-abbf53892100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37e38e5-8eed-4405-ae2a-40276f13b053",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ae9f82-67f0-43da-bc32-1b6a2050cdcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3384940-83ff-4387-8867-a0a7a4219d90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a18f13d-bb64-45ba-9b83-053732870623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f520165-80aa-46f7-9243-ccc704bb67f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85aed0a-03cd-4069-8b86-3c7117bdbf35",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5c55c5-410d-4027-b665-e9d7494a2c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b475b338-79ab-4051-b5d4-60a89cd1a01c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740f840e-deeb-4ede-a6f2-56a4dac0ded3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b12dcb0a-9dd6-4146-9014-855a317c3157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdbe1842-d6af-4b07-b8a2-bb04374a60fc",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad717fc6-48c1-4d40-8cbc-eced8a2a569f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1511f489-a8e5-46cc-9157-3d59499989df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71cdc239-4704-4535-8bab-609dbef73a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "128885cb-dbae-4b99-8d36-186ae1117aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1c664f-22c5-4837-bca8-908833ad34d5",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a527dd18-9a02-400c-b915-683b166620ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "377c3f0b-00d1-4085-8be4-5644b21fbd76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2174cbb5-c383-4bd8-b148-f126d54b0b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1be3b0b-be46-4d80-bfd2-8fcd1073235e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef83bb0-646b-4b08-b426-0ea7d630b7b5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff03ed7b-b8ed-4326-ac3a-f651ab278b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fb04505-8def-42f2-adaa-bb35f81632e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8437412d-6bd1-43a7-92e0-85185f227bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e5a5f4b-13bd-46cc-95f6-67cc9f09758b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8858b3da-3d93-4db7-8c33-2298171c19b0",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ada4dbe-c9d9-4a10-bd40-7ff72cbf032c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b70c9b-b648-4fbd-9310-3b4a8905456d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee1e37e-0d19-4a97-8cea-e9577ab81f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e0e420b-769a-414f-8f9b-df9e1af098bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b46239-1b72-4062-8c6b-16086e0ae6d1",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "014c07eb-c297-437b-ba1e-2f087b801b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cdb9c61-68ca-4478-86f6-7e55d408acaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ec7c62-a3e8-438c-be37-a3c332c200ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30ca313c-a9ce-4961-9e60-26f307b0cecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9919ae-b423-415b-9035-0abad6353bfb",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d1819a-992e-42e8-9a23-c177e95150bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ee153b9-eb18-487c-84f4-dadf3b895d81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8b40e2-ee4c-4ebe-843e-cc52f88c5889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "463b9a25-1c8b-46b8-a690-1849683b9be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e3052e-4e3b-4771-acbc-7346f56ef061",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14da5fb8-3937-4010-b3fc-32cf76d1afb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d542aa1c-7f27-4c56-887e-e34ba11408bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "058a5817-03cc-4289-9883-76c7b40299fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2f26c3d-458e-4d98-9aea-f634da63ddbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231e6b86-24b5-4f8a-a7d0-166f7527e6c1",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9805fea6-e236-48c9-a144-41eae6334d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2019f46f-0681-4bad-9682-241d0d2ce021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c7f2d2-fbf5-4360-939f-3b1354d6761f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "34593263-0e4f-4fca-8080-b3408b3417d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914c82c3-8165-468e-b411-ae63d89d5bf5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c36654-cb99-415b-a9c0-c858bbb27c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08e00ad6-9bc1-471b-846e-5960c10c7a6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2d8dc3-fb03-4217-98a6-b694d4b151f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "12b2bcd5-a4c7-4078-988f-32c81cc2001b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18567a3a-3362-44a7-8c06-d4a729a7ae6a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d906323-9af4-41e3-b8a3-0ee3bf742026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eabeb14d-5655-411f-ae17-814bcac759e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea22cb9f-82b3-4725-b7a5-dfd1312d0d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "07d4bb68-89c3-4ab2-b5be-f15ff0863800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40866cf-ded6-40e8-9f8c-965456f1fb89",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eff7ab5-e4f5-4557-8db2-2bd26b080f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cdf1c1c-9ca4-4cd0-882f-812fdb9c5197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7418e2a1-e4e3-449e-9fbf-d985fcf53486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "38057d30-eb63-4839-be18-5186d59f67bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42eb10eb-b1df-4950-aec7-e0263281d57e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bdf0644-54c4-4bea-b256-94c8f64e6384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a77a34e3-e835-43ab-a443-498ad18a4d6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0aebb4-4785-46ca-bfc0-d633d759dc53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "edbc23ca-b115-4b1b-ac34-c15426b2f84d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e964641-cc43-4d37-9ce0-f38aefd137a1",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99258a0-b46a-4051-a9d2-ee715f01deda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "85bc0f77-369b-4f5d-b419-2b07503cf71b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7eea466-580c-4925-a088-d7437882c2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cdfbdf21-4e21-48e3-8d9b-62e4b04cfc04"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8a9bb9e8-5231-4615-8542-382142aa270f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f5b3323c-dc45-4ea2-9c32-7ea207823fa1",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41db042-595f-4ad2-9c38-2ab06027a405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e5c5d6f-2843-4117-9f4b-0432c6b37e0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c77b6e-5ac7-43a6-950b-b41a58f8e878",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6df3d74-ff4b-4e6e-82f9-6591c7900ab7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8eeb7e2-6df0-4f23-b73d-80bfc3cfdc89",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de8e0048-66da-4c77-8197-a26fd4d036ea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e0a309a-f393-498a-9654-1c3ecaea111d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b97f50f-eca0-4e79-8d36-e1ddd13cd52a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c54d73c1-21da-4b3b-a62f-9a7a003ea97f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5b8c923a-1d8f-4683-8374-351ce7d26971"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9234c6da-c2fd-460b-930e-23bc58937b65",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bd38585e-4f87-4509-bc43-61eabe64dcd4"
                }
              }
            ]
          },
          {
            "id": "7077b33b-702d-4ecc-8687-f265dfd0ad77",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2f220558-09c9-4869-90db-5fb790bd271b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "de8e0ab1-4f01-4250-bcbd-497eabc5ee97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e6720c6-2ab1-405e-b44a-60b0ec917afe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18a2ea35-1763-48a8-bfe1-dd611d21a60e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bc3da850-62f1-4a48-aa58-87a9264476bf"
                    }
                  }
                ]
              },
              {
                "id": "71f32135-9651-431a-848d-fe627986f59f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca6c801b-2f85-4e18-830e-ddc35d79338b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad3cf1a6-c66d-4619-8dea-e396d278215d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c32dde4f-5346-4f72-9417-90b66ed03c1b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9d801a51-de7f-4c2b-ba16-c9b4071acb12"
                    }
                  }
                ]
              },
              {
                "id": "7e8f9c7a-8d57-41fc-bf52-50b66c92d6b8",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d65198c3-15de-437e-a8a0-edcf54f94eab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "406c954f-f3ab-4609-92ff-7813605ebf8b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4b6c418-6302-490a-a315-44f250d0b64b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d478fa43-7ce6-4bd3-b63f-3741841038ef"
                    }
                  }
                ]
              },
              {
                "id": "d3d4881a-0f1b-4fa9-9c94-2c588bcb2b1b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e1a7b69-37b2-4f4b-a41f-051a7f884376",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8225ee92-378b-40f9-a947-5c1ddde001cf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "015a71c0-aad8-4a4b-8051-bda828643e60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9bfa2165-f388-4770-81a1-5ed4eec5bc87"
                    }
                  }
                ]
              },
              {
                "id": "f30bfd01-4b26-4873-8531-4ba650715ab9",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa540f46-992e-48a0-bef7-249e916497c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "282cba33-3791-4388-83c3-7f5deef58abf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8810b4cf-0632-4217-be00-8b8071c9a75d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5e9b1f03-9733-43d4-b3a6-f07d0baea158"
                    }
                  }
                ]
              },
              {
                "id": "214fb200-9cde-484f-9d1f-c2506ca03d36",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e82ac019-d214-4a30-ac57-758e7fd6a268",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3277a69f-2820-405e-abff-b4f8b64bf348"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0abd2900-76ca-43f1-b641-23e8c70c1bd2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "41ce8465-0123-4271-b63d-f5f1513c9486"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "80ba0bef-77c2-4de8-865c-7d241abb9d9d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d844cf66-e63e-41c0-83eb-3aa93a817e2e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a34ae418-f634-4b43-b4d3-983b516511c2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "77be0fa9-60cb-4d39-802f-2903b0962284"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "691499fc-340f-4612-a453-6caea3ee4eac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f10806eb-f745-4ef9-8814-fa8ce6157b73"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04ea92ad-d852-4e93-8dfb-8493800a5d05",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5746a952-d3e2-4207-8a3b-a61b5272bef4"
            }
          }
        ]
      },
      {
        "id": "7bd1307c-80ce-4f9b-abe3-a7bb2d64e0c3",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7a380ce5-31d1-402c-ae5b-6b0d2de36bae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5fb40f54-fdd7-4fdc-a863-51c1c78db506",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b5d7070a-3145-418f-85a5-5271ee071efd",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2730a825-9df1-4aee-b3cb-8d3c7eed7a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2bef88f-1745-4a01-b647-e1130dc77717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22de801c-013b-4d92-b23f-7d100bcb2edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "33ddf337-fe85-40e1-b9af-9ad05d4d49f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68fde0be-4b96-4c3c-94fb-109cd582b314",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02939797-52c0-4310-b79e-73c597c0c682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "211104a7-445b-4af8-8793-bc44b63e4eb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4446920-daa3-44d7-992a-da656eae036b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f8a8b39-3085-43dc-95c6-20f4293a9964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5169844b-19ea-4104-9622-11d59825bed0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd1aef0-4d0b-445e-afc8-b922d318467c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7447173-5d27-4ce2-bca6-0d1ce072420a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7890a0b2-1421-475f-8ea8-9763d95f6039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e07d56df-dd0f-4685-a239-c344043add04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a85d42-8837-4ac1-a11b-0fc83550f0dc",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13edb17c-df25-451a-b73a-0e6cc8ce5d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "111ac731-36f3-4e69-b87b-314214171dce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c150f35f-95ae-411a-b8c4-119b1240793b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a3c7d63-ef6b-47ed-a433-ba0e79694597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d0f862-7814-435c-8e11-a280605999c6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6c152c-fecc-44a1-9d55-c04700a71109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e4e7618-1f76-4cea-9fd2-b3304314f75d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0b0c01-0df5-4bf5-b366-dbc7f861a848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcd5a92a-1471-4080-b1fa-695be0d9e645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb509a6-8383-4336-a9fb-5589b896132d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f3cfd4-0a75-416d-82e9-42844e3135ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07cd1bd3-5182-4de5-a8ad-63c4df3ab501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54ff20f-4cbb-45ae-a2d1-2d5be013d94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e45e216-3abf-4f7b-bb89-6e9be0c27a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe652b2-c0e7-455c-9f15-42dfe340b546",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd549475-a5a3-43b4-a482-4de4560b0eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20bcbde2-1d1a-41c5-849d-563582bdb459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc8c5b6-c928-423c-bf04-a45daff94261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "681d17cb-0102-4d34-959a-d2f74d116968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3f3362-02a6-4b5f-98b7-1bb78c822551",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc0ab53-db15-4f83-87d4-f40667366a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62e32ab0-e49c-4440-a747-9a6e12dd76b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc34858-590f-493c-8ea5-5aeb3e6e6689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b215950b-b4a2-4423-9c46-d158701f54a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c969a52c-ddcf-441e-9f5e-da5c8bdc51ab",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "398dff0e-2da3-47b0-973e-c64e576f0c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e46c27f-f8e7-4bcf-9374-5503a8556579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3e07dc-1fc0-40a9-967e-b8464abed728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f7de276-ff66-4be4-96c2-3c6df122156a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b323f2-4887-41f2-982c-f6882cd24741",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "928cb035-e656-45aa-aff1-95ec633457f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa82ad5f-5048-4143-b4c3-8208e17430a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e20e200-c501-49e1-8430-2802a0368212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "808fc3eb-3013-44c3-adae-3585588149cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9940942-6d81-48b2-9d3f-ac3427eff73a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4680eddb-f78c-4013-b925-e55e03bc88a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e4a4818-9a15-447f-b3a4-719c9ec05640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d27a55-15c7-45c6-90bd-fe841eb98156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a018de88-3dfd-4f79-b1d7-704ac99c5e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8205ba-f752-41c3-957d-03ecb60541e6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45eb44b8-1cd3-4868-8a82-84d7da43a933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9696fdd5-3b4f-4de1-ba26-d439a0fab584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe4b3dd-6b19-45b9-b2df-37b4ae79a10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cccee124-c248-4dbe-8058-b940c95718e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca4fefc-e0e1-42c2-ade8-d2d62419661b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "704703c6-ed1e-4097-a25c-cf8613855bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "101b75d5-93ea-49bd-bc94-5505e8272bbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d611fd04-1241-4c54-a3e5-ff41f0f05493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "866b4a0e-1011-4c00-ad8b-311e64e1fa92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ee768e-7597-4735-906b-af714cb58b23",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32aa945-7685-45a3-8629-fb15d39921fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf9f43e-39cb-442d-bfce-b6d277a9b794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "230dfb35-2647-412d-8a23-45680ffbb20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "97c765bd-e27b-4f79-abd0-7847acdf6d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1514d215-b076-4842-8e21-75e8f32ed331",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a56e8d9-afbf-40d5-948d-107520ae795b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec29ece7-c317-4073-ac77-43f769d2e981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee57ac70-06ea-4f65-8f92-8919a25f1736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5bb8d0f-bf13-4b2c-bc3e-6a6b5b6b1558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ae1c66-4637-4b47-aeb6-cce6c6aabc61",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a48388e-e3b3-4177-9a14-a9cf54488082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a0fcd1e-3c28-4141-918e-e9cb00e0568d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86db84c8-5e88-4bb9-aaee-5ca47a7c259d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed407ba8-1dee-4147-97d4-8e6b827a6198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58949fcc-a8b8-4f8f-add9-61dd0d03858a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd70d106-39ca-484e-81df-82542bb0d9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52c23fcd-14f1-4ef4-9304-b26f18e950bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6c6f4a-a258-47c1-8297-288fedc0b80f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "549307ce-7ba3-4b2a-969c-efa846d05eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfdce737-1c76-4b83-82de-38cbb3d2f18f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e87ff6-099d-4dfd-8533-f5c621015c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5742e79-8a7b-4974-af6d-59c7598a50e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "135cb0bd-83a6-498c-8d55-4baed609937e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2681e83f-20ff-41ad-ae31-27339738491e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ae12e3-f454-4822-9e22-87a50d0d853d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "400decb2-131c-4780-a431-44eefbe0d4ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c368f427-547f-441a-93c9-dabbae42e0dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15a50d8-f8ab-493b-9dfd-950726702cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f58ccdf-f813-4954-bc73-27739f0415fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf8c604-f3e5-4660-97b9-ab5f5e58a1fb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d0faec5-3d14-4245-a64f-0df0b3382cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7443c6f-b45e-4a4a-9500-788edc7c79c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4481e81-be64-4572-8e4a-cfee0eade134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1416b2ac-6b85-4d35-aeaa-3343be28c065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb7387f-f236-4ebe-b5f9-6a57bfac2767",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "958928e8-a364-444b-bfe1-efe221664d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bb35aa8-7e5e-42df-abc8-15d7e292b2c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812c33db-332b-4e9f-aa2c-af5c2de7aced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b77737c6-3b9d-44f9-9b51-7b2d7f8c4e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a1cdda-10c3-4bb6-a72a-49bbf4478d93",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba11454d-6737-48dc-9093-c81612fa0c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c618149-1bc5-4552-b722-c952869944ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8db9ced-eeaf-4571-a0ff-e84270ac4733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c86f1419-4df6-48d2-baed-e8b42954af51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb45f2c8-2472-4f3d-8e7c-988cae14c886",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93eed4d6-89db-4a0f-a8dd-b4e6d3b2a590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c00904d-db21-4eef-bd19-f9958045d6a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901a079b-a75a-403e-bab4-067e65b1c4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ddb2faa-c37b-41fd-b325-3b43dfa0911f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326f376b-a3bd-4b8c-972e-6cd3aae432c6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "698c2038-20ca-4892-a249-654b6f54de67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab959538-33de-4fdf-84cd-b23b3e3ab56e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1586f21-dbe2-4411-9084-0b1ada4fb185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61c3823c-543c-488a-a04c-5d4a74868374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8b6ec6-9051-4b1e-befd-33b9ab693fd5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd23950-e685-426e-96b3-c8fd3cbf70ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e6bf5c8-482f-48f3-862b-7ed35206b1d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c638cc0-5dbe-4a2f-a4c0-b9006ac17871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7535d3e4-9333-461d-ad88-d8d172c7f890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6752cf14-a04d-44d3-a7c9-287d3b119936",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c928ea-f3cb-45c4-a7e4-e5241d27c715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e23a5a6-72cc-43d5-8ebd-d9a91ef9dc99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543ff7ff-36f5-4442-a6e8-1f7e4b40c0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c12c341-70b1-44fa-a542-148c73819cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb92c73-51d4-4771-9461-d8d2c841895f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "947e1832-337a-4624-9106-3f818fb17756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4112023-a0ca-4376-ac1b-90dd7019ece4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daed47b4-e729-473d-a932-3c9516f32768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7399a6d-bd5a-4a97-ae42-300b6ad9a6c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b99cfd-6615-4ccb-b344-8089b4d33848",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2241e9e1-303f-4614-9043-3b822b83a322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df9b32f2-1f06-4eba-9d92-21a76085c393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d30011e3-6408-4a1d-bd88-e01d76530625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfe1f540-cf0d-4397-92c5-5dd0f76b328d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19892e9c-6fe5-4898-9586-4557d513ce6b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1708cd6a-057a-49b5-a20f-122ef8d8c713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a908e1fc-5e13-4a45-8423-ff2367cd99ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cee4c0d-3ac6-4eca-9d18-84f0663d00a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed9c6b2a-2495-47a0-bf08-0daa6c059cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "506ff05e-2e2c-487f-98fa-07e55e923ab7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99296240-55e0-4d33-bb59-8203b7b8ee8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4672f7c5-12af-4cb1-973e-8eda4576bff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf817f4-584e-44ef-975b-aef787cfca8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5969b395-8cb7-46a1-ad9f-b07e5f2bbf6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d20dcb7-4cdf-49c9-b119-5271b9f03551",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed71707d-50ab-46d0-bce2-d9798d1e41e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9dfc3b0-2fe9-4b11-a078-f39780dc30bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5404860-a726-4940-ac3b-deb0125d411f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa9b08a7-f193-4582-9e0c-404af30d81f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee391e3-77a2-4c28-8df1-8303b3547b77",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c2ccef-ef33-4c6c-99bc-2f2801762864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae068a04-f622-4a3e-afd6-abc97d7ffdff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa06997-e780-4fbf-995c-ff3898aa6a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "096c1b04-e64f-4b1b-a909-76c2ec8516f5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "461a5268-dd45-4928-97cf-80e0b088603f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "81722867-7743-494d-a45f-ee5b42fb8852",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639cb7e0-045e-410d-8ca6-becf14ebd9e9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f90cf418-5499-4465-bf23-913927fad4ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c7b049-ed10-4c81-973b-29d040a8a9ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ea0cf71-2b9d-4e94-82b1-0103ad61fe95"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bbab53a6-98cb-449e-9f43-e7aaf2d2b8e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27424b93-1aa3-40e9-948c-1e17c034ce51"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "934c2ad0-ec1e-49cc-becf-f131c0e7a7ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4fe21226-35b4-4cb1-a64f-f2a7b2128b87"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "07ddc580-0e48-4252-8727-5128410d0614",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b6dba31f-40cd-4114-a555-68a044ff4a7e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0b9de503-b100-4762-8add-b7a6ffd20d72",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "78e974b5-3ab5-42b7-a9b2-27aa432eb028"
            }
          }
        ]
      },
      {
        "id": "363855e3-bc38-4e17-bb3d-8d6c63aff2c8",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "9fc274cc-b369-4bca-99a8-8e247fc65f1e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "153995e4-cb4f-42ad-9c51-af036b73fbc9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cc223d1c-d4ca-47a9-ae0e-8516b9cfa13b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fea5cb2-f4f5-473c-ad60-8864ae6f8406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a740bfa6-9c17-4225-8550-9aee9aea9161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0d1248-5b94-4e74-b54f-9fa11224880d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "60a6d40d-b72b-4ebe-a3b1-8a4cfd813435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b76a1c-dafb-47cd-b15d-6236bced825f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4ab872-ef6d-48c6-9834-9cb9684e853e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ade1bd2-6ea1-433b-ae87-8cf6884e83bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1851a519-fcae-43a8-b100-e5f0a865ec82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c7d3557-a4e3-4afa-8312-90f40c743283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5978f7-139d-4819-a89b-99f10e884501",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccad2ab1-3ca0-4272-b917-8055acd5d2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e1e9389-661b-4498-9f33-8270c02f26d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14ee1d3-c077-4172-9276-acae419211d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ea52018-5686-42d4-bdcf-0b06e857c331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "281a701e-bcca-46ca-b674-6d6f95c865e3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d779e5-fae0-45a6-bb19-8d0bc0ddefeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63370210-0325-48d6-a367-a146131d7445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b044fd0-bb1c-4efd-83da-bbbb9d1bfb40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "75b0e241-be9c-4d8a-b81e-28641b067cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c143cb9-65fd-4a82-a594-8be864af17d1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8bc4fa3-7f80-4a24-950d-53c1d69633b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b81172-8029-4d00-91c0-e6d5009a1e90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af41195-6ba7-4360-940f-7e1ad2e0431f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "36ed59b6-c0e7-4f38-b40d-636d029fc62c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1920cf23-9b7c-453a-bc4b-42baa5ef0509",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65af0060-98b4-456d-bda5-ecb6edd799eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3c14378-cdc9-45b6-abab-76a53baaef37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0222f3-7da4-4af4-aa83-e9a290d54d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c12e08ad-247b-45b9-b1f8-a8d0d3666215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b158e7cf-3ec2-41c6-8f33-6ecb6f833451",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b385a8f-90e2-46ff-9cc9-1da284cc9960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb675e06-99db-430d-ac89-bb4d023da198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39bb8eb-4495-4c40-b3fe-eb2f6fea58bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4737450-6fff-4138-8efb-b70579236750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77af6686-d984-4edc-8d13-3a17b65de35c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3a446f-232f-4907-af85-04ea5b185c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8afc36a3-ad00-422b-8d48-18a3a837b549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5af61b-2c85-471e-97cc-98cc6e7b436a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebc0682f-3978-4806-849c-1c40c3369914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95dc89d-38d1-44b5-ba14-fc59f7df5602",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "673b5cdc-31a9-4d1d-a0ef-47c9f3182da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c02a44dc-ae59-4431-b21f-63fe0e2bcddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3dd3ec8-28c2-45e3-8c3a-98e90bdad913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b87f96c5-1721-4c70-b02d-5b16ca4dd841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1967129-afaa-4ab5-b5d2-73d116e402f5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7edb71df-5e27-48b3-988e-d1045cb60d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf27856f-a833-4d9e-bf64-dac31bbb0f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4089fa-ab0c-49b3-a3e6-25409e7a3994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c77531c-6079-4c8e-9a10-1784f15faab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccaa9b35-64c0-4077-be33-3b23598c0bea",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ea3446-49a9-4dc9-adaa-b7733c33fff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45fbe636-3c7c-4cf5-83f0-62ea81cb6fa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e98e564-c9d2-46f1-a980-69e16be7e580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9292805b-81ec-473e-87ad-d3e1dbf5ca8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c6e8cf-8c57-4398-afab-1f724e90d2bf",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc064940-a427-4d3d-8052-92fdd07c72fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2dc63da-e613-42ed-97ad-b8595f0c24ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a9a444-339e-4b3a-8266-73fd935a8d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8b9a39c9-9132-4df4-972b-6539cd191910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25129f7-f567-421c-97dd-290ec0848129",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec916ef-b21f-42dc-bf95-68b8c15a6900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36c5273a-7d68-4a4e-bea5-5a56c540033c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c1cd26-e893-4452-ad1c-8b98eb80b555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffea1b5c-b35c-4d01-9753-46f9ceef0b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4e254e-894a-48bb-a831-7315bbd174dd",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2660f016-84ae-497e-a131-cd634c691ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "692de012-db8c-4bd2-a7be-01ddac68298c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dec8352-a792-458f-a0d2-8c53bf5ae5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f5c7bea-3997-47d8-8145-e5b806905f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa3e22e-8a80-4052-b813-b3545ed915a3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f25eef-2a95-4cf3-8598-1a9c281d81b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04ad5bcc-3c14-4071-94d3-4e8c8fbc2122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5096245-0a53-49e8-aa1d-3a07f003c6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "88d003ae-5b32-4ed7-b3c3-cf04f9f0e5af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a6bfa2-127f-47e0-83cc-c27bff3e772c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1e8016-8acf-423f-93bb-788465d0e419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaff1813-7a5f-4ece-952a-7f3d64c38ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47b33ab-ba08-4876-afec-599c83840443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "25b57dab-7325-4ed4-9e02-b48bb0c672e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa27e4cd-1573-4156-b37b-b41a50974e5f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9888e601-3545-4c3c-a62a-35e3c0072676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffb9a1b1-dccf-4ae7-a2df-649328e02165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a80b8879-0fe5-4261-8645-782b7208067d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "24fca7b3-1272-4a1b-8a7a-4cd75cea45c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cfa277e-d85f-4fe9-89f9-6aea90ba1b2a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc75aaeb-8c9d-4c95-aadf-661743dd45eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "666e24d4-a7da-455a-bb13-6001c93ca4af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23fe9203-51c5-4cdb-beff-376bd5a92833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "944c228e-575f-496a-96a2-9c83d277c2ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a13b5a-57c9-4edd-96a7-7da0496ea99c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fbb2bad-cd07-4b14-869b-321910cb0e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97529358-4d18-41b3-a285-507b12615b96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038f71ee-55d8-484c-b827-43fe979c99dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94b78b2f-629b-4972-afcc-e63080c4bd86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d05ad081-7c04-48ec-b64f-5f82c91dd4fa",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e80703-5c4b-4a7d-a370-7577c8231e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de327ebb-9662-42f1-a5ba-c70d8a5891e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3f0b91-9c0c-4f4f-9ba6-1342609b5aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4154ca18-4826-477b-810f-8d17b9497dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729e8021-9456-439c-9971-b81108250e59",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "509f1d32-25b3-4546-9982-a65999bfec3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c928bb63-4df1-4117-9848-434a0aed6092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ab4a19-9a6a-4654-8f1d-65b074a59989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "710e1ee2-775b-499e-a31e-d3a484565f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c581d15-4c07-4da8-bcf6-3c2a5c94ac55",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28029951-c2a6-40c8-9da6-43b309234ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ee9c640-a02a-465e-bd17-865a17bb2aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82be7ad5-4a8d-4464-8c2b-a71165bcdccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8f51796-1150-4db3-8e8c-a445aa0e43bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14dd3be5-7d4f-45e2-91b1-c7913920737e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa0fb72-2d4d-4d2f-80f1-1b6db769035c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe0e754-457e-467f-9e6c-c7df2d57e9b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38761a7-4aa2-450c-8f48-ee302c9caebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "898b60e0-6259-4724-8fde-29cd08d52643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866454b9-9a18-467b-8d67-cecaf39a35d7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "488bc6c8-43f5-4dca-8f1f-9690b85a52fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0bf0934-79e5-45fb-ad20-cbd441658495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258c78cb-136e-4ea6-a2f8-318d623cec39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7339c42d-119c-4fbd-8168-c66d82d7cca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942bce6d-95b4-4650-9825-41dc0fdf5610",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5798ba7-3a5b-438c-a94c-b892d476d620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6b45647-d723-49e0-ae5e-b6abed66531c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f15758-60c4-4bb0-8ff4-d2743ea4e630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdaf3cf2-79dd-4f1a-b77b-2957b7ac067c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec89824-6fbe-4af1-9f46-ab70323bb110",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f62801-f9d6-4dc9-9917-5a9146da5374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6d82fce-9974-43f2-9bc5-381fa2883738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f30672e2-0c99-434c-8166-990e36ce1b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "629e40c8-9a37-441f-b758-1b167fbd7808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e37fd9f-6081-40d0-9bf8-ca54d6dbb869",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd665824-2b7d-4294-a048-58a2ba9d7b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeed1654-ec55-4f4e-8864-1506228e9460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0135c6e4-e859-430a-a32a-384ca5f8023a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f73485b-2944-4c86-9767-4b8cb024141d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6588f1fd-da75-4f83-9c78-91b761d69425",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3ec9ac-1390-4c09-9dc3-19a82c6acfb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91c6cb6b-c984-41a2-bb31-d65b4708457c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1961ca-9b27-47f2-a451-3febb1b3d24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16e648fb-f584-4070-825a-14b262aa85af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b15d421-8b85-4855-b53c-21262aa50a9a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff830f37-602e-4ad1-b6c3-dab3a69de747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4962ed6-17d0-4b9d-890e-cf1c499d73a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a203363d-38e5-4373-8bac-564091f8e332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34f2345b-6c77-4f8e-909d-1b752b3194b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c04290-adae-4d30-aa37-50a21e811d0f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf85cc0f-6892-4cdc-b2c3-655b73b41101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac33e71e-bccb-4258-b9bf-bc45e702865e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2336c3-a22e-4fbf-904b-1a43cfd20f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6b01dbf-039f-43e9-8d0e-2350dab9f418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90aaae8c-c428-45d5-b769-9b3ec22c2bf8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b231c05-d645-4f1d-8781-127793cbc821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e86252d8-87d9-4bdd-8b40-f587975c131b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f979ef-2bcd-44ee-bc27-6482414ef81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa84684b-d6f4-4151-ba9b-0f264657b794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84aab821-5741-4bba-9f6d-523741cc251f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d437a75-7dc3-4d24-840a-e9abc2a7cb93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4a70b10-d625-4882-9323-2032435b2654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea4800c-a51e-41d2-a0f7-bd6a20e902e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00efdce4-0b79-4249-87f4-fd3e93094dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75347fad-86cd-47d9-a18f-9410cf11f1d4",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d9ea930-a380-4e1d-8bff-fe4a7ce642df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56e5badf-1a8e-41b6-b8a2-6f130251bee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e0ea0c-0cbe-45f0-aa25-2965c1b4f380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be85a591-af03-4cf7-bbdc-f885d5ef27f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b23268-0821-4324-8ca3-29507e3013b2",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c38b05e-c4be-4c4c-876e-b82450e955df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e0508a-820f-49a4-acb2-bfac67defb66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268dc25a-4621-439a-9306-274339511448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "056ecb9e-6dff-4003-890f-9da34f33ed48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef602db-af64-4803-972a-51834bdcf743",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e770a32-9687-4412-9f11-fb90e7df7d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f43d759-40cc-4278-a7ba-49167148a8d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0dc6528-8fb6-4796-9c83-073579af993f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1c0fc5f-7801-477b-8e5d-525976b6792d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650edc6e-a121-49b9-be95-887555a3fe66",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6968a45-2e0c-4a03-9415-ffe582dcf9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ed71ee-5704-48bb-be63-3514915f58cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbdb32ac-93c4-475f-a2e0-e0143b8e70b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94c4dc5b-78dc-4679-8ccc-20015a5d81e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16137f27-0670-4f7b-8396-bafcbc724de4",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59bf1398-f224-4811-aeb8-d164b029b325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e435cbc-73f6-4e78-8a89-c7c8a73b0941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621c2ca0-5b24-4cd4-888b-e458a13d9148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "319ad1c9-655e-4dfe-9040-0d97b1d65b1e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3924d7c2-6eb8-490b-bddd-751f892ba420",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "26e074dd-fe37-4770-9d8f-3dde3002aef9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e67fc6-1476-4162-b632-1044a08ea776",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fddbb7e5-f3cf-49ac-a4cb-93a730720dc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3877cd36-1a83-465c-97e7-72fff79836a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "671178b1-65b0-4c05-bdc2-89fc5c6c63d3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "525c49fe-5690-475f-bb6b-fc56ffaf38fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1bcca34-d70c-4402-b578-22c61276ff16"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d4743d0-758c-4b7e-a3b8-0a8a6f77005b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dcbbeb01-c432-4e34-9178-245526b01c41"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b29511da-cf35-40f5-9d46-1eb87239f981",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9b1cd53c-8490-434c-ba98-4ed469db26e8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "035aba9b-bec0-4633-b29b-e26bb2a24b25",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "64112ffb-8783-4a77-886f-ba5db49b2ee9"
            }
          }
        ]
      },
      {
        "id": "26b8dd16-b85d-4c20-a558-c897c6053247",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "cc0787d3-febe-42c4-ac63-9d21cfc2135f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dc7c9ec6-5347-4860-8aff-814403095b51",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "51375280-778a-4807-8e64-52de458ec5ea",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab8c490-1799-43eb-bc36-f1243b207cec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fd008c7-95d7-417c-b269-9c9a1ef97e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a9766e-18d5-4613-8b9e-a9fcb0e727d0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60b1faa-d0a6-4fff-9bb8-b9b59fc383af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4925930f-3672-4850-80cc-d546b00e387e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd07f7a-368f-4602-87fd-6ef40a5fdb4a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "360d8b00-e0cc-4485-a25f-7ae1797ae69a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38df48f3-9b62-45c8-9790-a62060d08922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c32363-ece1-4eaf-a4ce-3f30b090fd25",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79009ac5-06f8-4ab9-90d4-99fef66f8b35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c26e27c-4fe1-4618-b963-afe4a92d997c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11997a7-202b-475f-bb97-cee9b2180bf1",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22fda75-2851-4895-af82-9b101647d2cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ed7e75-717e-4cdf-b88b-a0d07169cd77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9fe1808-fe77-42fb-b9ea-7bcf59f65f70",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f168281-1ea6-4819-9516-98f8a984c28a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a2f5d35-bf23-4513-bd90-6da2c5c0796d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106c4d81-2b75-42ad-b166-4d9d2293fa2a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c3379f-a445-4e2b-9b3f-f647b11162b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3473e73d-5d2f-43e8-b79b-c2a5b5896ebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f4bc22-e33c-486b-bce4-54e3d4a76dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0e5c3a9-a88f-4360-a675-4902bc68b684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e789a9-3937-4cec-89f8-1ebee39141d9",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d67c96-fed8-4999-8e6a-c044dcc674e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b04cc5a2-3938-49ae-809b-b14aab8c8a28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e2fc9b-cddd-4c8b-9f76-5fe1057b4419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98ebc3ee-30be-42bf-9c85-1f8a66363739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd6e13a-0392-4bbe-b396-60b0b66c05a8",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1978985d-55a8-4614-b6b4-456d86dd9849",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6855c286-ff12-4994-b025-c0643b26b537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "716e24d8-1188-4805-b495-3f73effd69bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a141a43e-687a-4d38-9c2b-be5d938c202c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eacfa7b-adc4-4d23-94c5-fe58e1beeea0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3abb1fd-d5a0-4afc-b948-c3c694503fb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72c76d85-938a-4977-b136-a0b8f55a5ef5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e3d14c-6ae0-4dd5-baf3-dd15e39f1e3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17fc1f51-6a1e-49d9-b6c2-13e249e1d842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f882308b-052a-40d6-a95c-6e2f608fc79f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ac2c44-cc97-4b1a-8484-d076db99d6f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39c56011-0ecf-4d63-913a-7051b81bbc02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0989ff52-421e-48a0-a767-26c0e1778120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b8e60cb-5641-428f-9320-53aa63d076d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e2c673-da14-4d22-a669-7c283c666f96",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe5fc14-feb7-46cc-ac04-e03ab2000ba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b2157e-d67e-4f84-8fc3-ca4c834a8640"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ccc15c-6df9-43e9-a4a3-4f8b42acc4eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2372d8c9-c39b-4b51-a61c-a9fb27b818a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848c5365-d4f2-4f49-91c1-abe3b4c2561b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbcd7de9-2c7b-4ed6-923d-8dff9c75b028",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd8bb0b0-8725-4a21-9e2e-9d7b773501d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "472d75ba-1796-4b75-b93a-6bf4aab1b2c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f59e5458-28ca-455d-a1b7-b3a640914047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9979ea81-caad-4b7c-a7e0-ee7e44989388",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c3b6733-0850-4058-8607-d1ad5d7ed840",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc387e46-81f7-4f23-a7ad-99a616679197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc10a4c3-d8b6-48f4-9fd8-6aefabfe8bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d0b50d7-817d-475d-8e80-000d0733685d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09212270-4452-489b-b15a-fe23e5b95aba",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e3757d-16be-42ff-921f-a43a7dabe82a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a632f35-e772-419a-ae48-b24fe246799c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f746b77-d591-41fc-b0ae-d4dbd81e737f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc09c9d-a23e-410e-bade-f841976c8fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4308d0be-c4de-415b-b531-bc69dedb8f73",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d301633-7279-4ac5-adb7-f3945f599c8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b8a9dbd-f917-4c47-ae2c-e8f1bf4aea8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13195f9-2c6d-4bc3-94ec-bf07b0d4774e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4abd578b-49dd-4a2d-81d3-e5e028d13497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b856a2cf-4e9d-4aca-8faa-94ca773d1b7f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354dd374-dc4e-44f7-bacb-cf5688431833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73da18fe-99e0-41a6-8c08-baa8e2f032a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e2f0e8-7476-4858-ba73-922252450d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "094a81ad-e30a-427c-a585-8eb812dafe18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972d88dc-1c8c-4e5e-a2f5-016bd76c6105",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fdbc155-dc0b-4891-aa08-315b198542d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c7e7dda-4a95-495c-83d8-a358074dc0a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ada5a2-22fe-412b-93bd-8d27a34aead3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3a7bfda-922d-40fa-803f-498854f607ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced85cc8-d26d-4e73-a503-e193f58c5f0f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c51dc68-1924-4e68-b189-0a625a86967a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5031910-3a87-4387-b48c-b0c8fdcab2ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0c5523-68d5-498e-8adc-1ef4313411e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad4ad23e-9fcc-4701-838e-5d793aa4237f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eaa9f4c-464a-498d-8aa3-0100d240d2ab",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b6ea6e-d0fd-40f5-959f-dd82287bfc35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "520378e8-b942-4822-8477-a3e32506382f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8201a2d2-031d-4d01-872e-2b6d6235ff0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe09efb5-4fad-4336-acbe-2258da35eafc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97490143-fb3c-49bf-8792-a84d0f1f65ce",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e45884-dee0-497a-abdc-6a0c8ac6a335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb92fe9a-7144-4881-a20f-9551d8d2041d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09858906-6aba-4bec-a42b-c3e2282da23a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b2e4ef-047b-4caa-80cd-56a69c977ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f60cd6-299b-4da3-b0e0-c1f4dd47b90d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269bde1c-ae93-498b-8dd3-1afd2bc21298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "978958c4-c24f-43c0-880a-926488e12971"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff17d62-11ce-4790-910a-0d808a6e33e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c16b5b9-4726-482d-9318-9183b75caf46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0669f76c-f0ab-43d2-8a56-899f3ee7b09f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c88c8d9-6e3e-4008-af8b-82c04bcbe020",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "845ef46d-593a-4d6b-9eb1-f6abe6133f91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74327494-6582-45ba-b796-ed3eb0231afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28a7503e-aaa6-41a5-b067-4a80e5fe9553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17fbcdf6-8be3-483a-a157-8a31fa3b1844",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418e40e5-ea6e-4dce-8abd-08c219d7154d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15f4b722-04eb-4468-875a-afa4571b05b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cacb3d0c-a08f-4cba-b3fb-86f064a4d0c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9111734-292c-496b-b9c0-47d15ff5bad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a055af1e-ca52-4cff-b70e-9bf9e0a852e7",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a80bd13-02f4-461e-b70c-935fd0b4b793",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d947434-272b-4ef8-8e2f-e5fadfaeefdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "245c572a-9866-4a44-ba0d-f7689a1ad5bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd02811a-1b76-4b16-aaa8-c43da2eb5198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2323672-fed1-41a1-a04f-5c9d2faa11b5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59648516-2b86-4b3f-af32-954325f01f6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2fd7b41-7b49-479c-836e-f9283a6f64e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede0ed4f-bcd4-4e8d-894b-db681144cab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a497e925-d1ed-4f14-838b-61bd0b328035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2a8a0f-23f1-4c87-aa78-ed392b0005eb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575de8e2-2684-42ab-a4a2-0faab8802cfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f01a51c4-3db7-4bde-83e2-a42a753a7768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70bfca2-ce48-40c5-a30f-63558783980a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d51fba8-9187-49f5-9679-9f0fb114c4c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5b8ac6-ae46-4a8b-afe8-c8e0489deff3",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d742399-4391-4c2c-85dd-7b87aa2a02c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1882718b-1a80-4d5e-8da2-dc014b1c2eff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9562589e-72a3-496e-b34f-6c6a80480505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f200b6d4-bdbb-4181-a508-a2a1622beb50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2332dd4-14a6-4727-9a4e-2354e594e15a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6158ffb6-991f-410f-9ebd-efaad6670e7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "420a27c7-ea38-47c2-9354-8cc677f0e3ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b915d239-67e6-4063-a416-86a317a64359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bb70727-0530-4641-8aac-b513a9863a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e5a1aa-2a49-4cf3-8ce1-121b38d713a5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0acaf97-3c29-432d-a016-5a0323c72dee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e911d528-2132-4b9e-9bf5-6171b0c7c324"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "010b88d1-9207-47f0-a4f8-30ef1a4b2137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b95a0d2-b0c2-4d78-acba-bc36c0d5401a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecfcefe6-d311-4730-abcd-05f293db3604",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5482a413-21eb-4022-aea7-c9dc5386d547",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2ac4b89-f791-4f83-98c6-87fc26cf26df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36433af1-a65a-4be2-8e94-869c976583c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44823f49-a62e-4ad1-abdd-264e04ae3e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30edafd-9623-499a-a904-b2f5d1744a3a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de9c4ba-b095-49cc-88f3-fb55f573c9bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72013b87-7566-4063-a9ad-6122aaef4ff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb6292b-4c81-4f82-ae22-c5ee6c795884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bc650c3-1b80-49f8-a303-d4b6f0330f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0026f283-bb57-41d7-837a-e2ebe6a3c4a6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e736095d-34f5-4c4a-80ee-3c3edcc08dc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33216291-d216-4a85-816c-835821aa4799"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64fa055-759f-4a1a-b3b9-fe2da6d4e451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "301e3e96-c48d-4bd2-8769-3f7736e60057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afac5b4c-d1c0-4607-920e-5e917bf9fbd8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3fab9a-31b9-47a7-b24e-0b8781dfcce0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be330359-7a28-4157-9f66-ccc9f0f67799"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ba4e57-6b1e-452e-bc0c-5be6198cdc3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b3f5387-901d-46db-a239-4c6d57edf8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1836694-f205-484f-917c-9f184b2cbe0a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5bde85-b990-4b3a-b8be-55e2473349f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56619fe6-382f-4026-a707-2bda89825930"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d99451c-8e84-4e0f-a81e-7ed3b7cf57ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac4273c3-22e4-4514-b7ce-6d28035d2979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1459b2ef-f21f-403e-bcfe-797fe277b9dd",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d250361-6dbb-4b13-8ca8-c5d78c3b83da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ca2e24-a3ad-4e02-9554-2c018e247383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e663a5-3dcc-4816-b6b9-2d941c3d751f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f51b7831-6a14-4662-b3ab-e3afcd4d6e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6734764d-a586-4684-be72-e5ad49cbc023",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae33349-79e1-4788-92a3-336493c8ef62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "920be66d-6357-44c7-b914-ef8302e1762f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41550008-f7ee-4289-a54c-fd251dc66218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59d4ada5-42b4-44d8-ab25-eee812396a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b577a9-a087-4474-87eb-99d1dd84e357",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b5547e-56d5-4657-8cd8-7b75dcbd16b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ad5471f-e510-4513-b2dc-1f7e025e4198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b9c90b-10f4-45ae-b622-a2ffdfc840e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f05756-d51e-4865-b7f8-40e929a1fda2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97bed86b-d120-4363-9547-3b4c4576250d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bff8ff8-31ff-4093-ac7f-9cd933309231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d418f8e-f864-4a1c-85e1-add17901b989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1582008a-9476-4c96-a490-c8b201460636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16c9e132-2b3e-48e1-b3e5-113bfe1bb88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e288ac-e15c-48a0-afca-656f17db6d09",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19313cce-d26c-4f79-b8cf-3a74b3952ce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d161c77-7d0a-4c2c-ac46-80f09ff2a23f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05abf168-348d-472f-a993-13e23c3a5b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8548d26e-8b00-4fb0-babf-0f2b6e0eb7fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c378b1-7974-4e2f-b317-2f457fd5cbaf",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae6a6f0-0e80-4c8b-810e-8d0188ac62be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63a3ed68-04b0-4371-9356-2072977730d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6e7f80-7dd0-48c5-bb91-81fb9b1cf35f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8583511-106d-4c6b-8c50-d3b717167ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150bc8ad-7373-480d-a3aa-ef6433067734",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eae8f61-1ea6-4060-84b1-fd00f581f78a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe1600ce-725e-43cd-a526-407adbb163b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a24c14-fe08-4796-b92f-4890dc191a05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b57893bc-c0be-43c3-b7f7-e3922c4e50a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31cbced2-6bbd-4fa3-be2e-53b584626b48",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c98fd3-56c8-48b6-bb33-e0d1eaf53657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00399972-41d6-471e-8c99-b416a4400b49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b61d259-848d-4d97-a24a-10e93eac3cfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34e3663f-5ee8-4d26-9d83-790af6747983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f37f23cf-81e9-4b94-b5ff-74717ba47d36",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac245b3c-4df0-449a-b129-d2c03784c1f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5d05c3e-5234-4f70-8f3d-801ac6d33b31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f6c31b-bf69-45da-8b91-147da6679499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "472e5ea0-58c8-46fe-a276-3bea2627fc4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1243558b-ceab-49c0-9b97-f8baaa4c1864",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8beb3d-f9e3-4ba4-a4e7-d835a0f56ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cf161b3-00fb-40e8-8f1d-be6bd6f3b407"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56dae10e-d48a-492c-89db-f04b7ee558b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b72a046-7baf-4bde-949e-6101f0874568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a73348-30f2-4a5a-8a3c-683c4740b0a8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7641c5c-1bc7-4597-975d-98c86ebf6c1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "874521fb-5804-4254-b832-f5d94743a086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8472f80-3213-40a2-bee6-564d84167072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e8e3c7-eef4-4d0c-bbab-40283ce6b212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf770d4d-aa3b-4d21-861b-c277721b317f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1714c0a4-19a9-40c4-ac2f-6bc6e2732c72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a45fe45-ad90-4d07-9628-3e2be0106f7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6679895-a572-4372-90c6-1fe876aebaea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9af2a6b6-4ccc-4623-8790-4c778ff18c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07d1b24-f556-4a53-8d34-69c1e60e1f1c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3f6a54-a3da-4ddc-b218-e87ca78aea17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c1bd6a-0086-493b-b19d-ce583e1118eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8424dfb-ced4-40d9-bbc9-f2d2effcc13f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10ace318-3aca-4418-91d9-416c65d6a88a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752eb435-1aa1-4db7-bd9a-595b77f2dac5",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00102c5-5d6e-45e8-a8d4-af3285c765d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "674a416f-caa1-4cdd-a297-81066b5fa034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea418ab7-db80-472c-b9b9-c01e2535c8d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "496fcb5a-5ea8-42bf-bae3-a3cbb223129b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931b1afc-e4e0-41da-aea5-daf3a28c0a83",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc94e56-4809-49a3-a75a-f5dfc2851cba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38c8e770-c35c-4624-a451-b06350e55e22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4f5965-7368-471c-b24e-d898913979b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94672356-ed3c-4abf-a8fa-107fcd0b3b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32389acf-b06d-4518-93cc-db50b66aa209",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5de5d8-43e1-4008-b52b-fa72f4dfbc9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "797bcccc-5029-42d6-ab63-8c161672382a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5960d7-dd7a-43d8-91e3-da1ab8f1de0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba7ce99-f6a1-417e-b386-854dc9fb72df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7daf1e25-a55e-4eee-8b3f-1c9954baf5c5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5ff738-d540-4460-9c69-7c10654d107e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "792592f3-2147-4594-85ee-74bb9c5983b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "509ba4b3-bfe4-4fe5-91f8-8c89df220a8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a79b24f-b5cb-4046-940f-29fb03b79c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c70593-2651-4d25-9e80-69c32916002e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f114646-bed9-40cc-a875-e3a7f570c4bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa224411-6a8f-443d-b54b-d1b6ef31ad61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4caf4923-bee9-4238-a4f1-491929ce63f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac28ba5b-c2ca-4590-b838-53c58a00bcfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e758985d-0aac-43af-81b0-b2c7b968ac60",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7565747d-86a1-4f4e-9abf-fe0706c789b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b9ed5a-80e7-4d02-848a-634bcb74eaed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05c4963-52ec-4056-99c8-2fa89bdf65a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "159c419a-4c6d-45f9-9c19-590c21c1d135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604d5bf0-1ea2-4498-b39c-a7ce9c200374",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e645b4-b841-478c-8f50-9d1818a99580",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf395f10-6657-4303-af0e-4b979b407be3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6958ba-42fa-41b3-b6ea-83f2361d7c90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07e229af-a8b4-460e-b3d4-2d81eb9398dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1d8ebb-7b96-4dca-81e3-1f4e1d877932",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27843d93-489c-47dd-a2a7-bb81b91a0031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ae83e80-6b52-4cee-a002-4e5c382ac733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5aee24-2b7f-4b78-a360-90cefad0832f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0f9d471-8f4d-4549-9056-8c20b6d2167f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803938b2-85fb-4bc9-88f5-4292355d9ad6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4927088-5541-4bab-a8bc-eb6184ca97ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa0fcc1d-25ea-411b-ac7e-5f20f9b1a11a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "395ce99d-0462-48a3-a70d-273ab154fe2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94cda55e-5416-457b-b1f5-d4be84207328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535ede75-70f7-434b-b121-1277cd6c2bf2",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c700222-0618-45c3-bd82-f0f388eeac55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e00b702-1472-4e06-b171-e4d671107322"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfdfc44a-c100-428c-bf62-70caa8769172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a227642f-cce3-469e-b82c-9c0b81294993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28f0cda-aa77-4728-8951-7c23d97766a8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a3f18ab-2b64-4414-b20c-66b90d449697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79282000-23ff-4506-b21c-50af95be81c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4de6f7-db56-4139-b716-310c2cb71134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "088db83f-0e10-4165-a800-c65304fac2e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6343e016-5698-405c-9217-b62395d74fba",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c540ab7c-ab0b-438a-a759-a492b1f9aa94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08d7a840-b8be-42e2-8315-b5c68b2b6d44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0d5b50-2f2d-415f-a9dc-3ff3a69798a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f538134-f5d5-407c-a5b4-2f04b343a4b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0a4a22-92d0-4546-8e0a-5dfaab368804",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92eba774-45b4-45a9-a860-97cc4852dd95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5d15ddf-83c5-4a74-8d01-83b8e8ca8c55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c038adc6-d14f-4918-9168-396b12d1d5ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f09b720-7d06-4cff-8044-f3a8afb34330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c162c0-4653-48cf-a04e-c5710c6e4f79",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd35270-42b1-4862-86d4-ddaae58d3d8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "431331c4-2c3e-4c35-8ccb-5ba5cee1cc87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54df72a7-167f-44b2-abb1-511662392947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d31758cb-2822-4cb1-82e4-b338ac7f6810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd1e44e-49c1-4dbb-9233-d56967657403",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c225b9a-15d5-44ae-8898-c54b8a61a137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f37092-bda7-46b5-b3c1-68928fc54b0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d72270-89a5-4c6e-a6fa-15b2705bcb7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe53a997-0bb3-45fb-82e5-8dab1fa75146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2178d5e-0525-42a9-b000-022c34fee1a0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3126df6-ab4a-4b43-abfd-906a198ef6bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32ef184d-048d-44b0-93f5-d28bf94315b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c9f8a4-276d-4c4f-a63e-e0a3b66810dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77125362-fc9b-4d15-a040-392a92054806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee280c4-fd70-4307-8290-5d0e5b20711b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9c8b7a-f9cf-4bba-af28-9b900827b529",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2e2ec94-dbfc-44a1-baaa-c910e03c946a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7238e90c-f90f-45b7-8c72-9fc974d83f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dff0cfb8-e5c1-46bd-b006-ae8193538f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f0e5d0-06ae-4ae3-a9b7-2e5c57721e65",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e47bb1-a386-4220-a669-79de41565e0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e8fe763-68dc-4e37-b3f5-26321e0bb026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d7c8c4-8747-4a06-9e81-155e5f427cdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf8ccbce-f938-4d5f-ba44-5d0d803e1564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b54f54-40de-4ccf-9c7d-7817da5f4a9f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5c0a40-de24-4ac5-a1f2-ab9abc19cdbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4f8c78f-d6b2-407d-a1ec-a5c976dfd5cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7ad8bf-241d-4766-85d0-ca84777f71e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78b97563-8217-4970-9654-fa6785d4a217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71f72ca-fbf1-41e4-a392-2ff5c60acb13",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766df2da-8b60-45ba-8203-fbb200474133",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8467b0f-fd54-4dd1-9038-905da89f3444"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6d261c-d0fe-41b2-93e6-e5c3d264aca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15de1abf-28dd-4e32-9a12-58f50425740e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a37d205-c49f-4ec7-bfd2-27767b2f3455",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a06a7e4-4a78-4522-bbc9-64dded2c8859",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76b9d84a-fd3e-4807-a633-57b7a35ad5b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f87cf5c-28dc-4e44-b7f0-33f35af8808b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d48b5f-c4ed-4a69-9c85-8ded56ceead3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3898d1a-6036-46a7-847f-37bf47b9053d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7415952-008e-4a7e-a35b-0ec56790189d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1a6b4d5-77d9-4c9f-b773-43e124dfe0ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1626391e-a7b7-49a7-aa3e-fcbef3583e32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "180ac8ad-5476-48b8-a5e0-7b530c543511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94dacfec-401e-4a3f-840b-246d37847309",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f9f416-5dc2-48dc-8a4f-10635d9f23c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1945d6a1-789e-4de8-88b9-53d3a54ad0a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c009e74-39a8-4b7a-8025-ff770532150b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebaf753e-f749-45ed-ad4f-a13a1f1556d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44612bec-175c-4d78-bedc-f8a66cbd5deb",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b445814f-40fa-4eb8-b7e4-e2982cf98292",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d35973a0-6f19-4db6-8759-eede9d4a7d53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8be1a4a-832f-46fd-8df1-2e8507f8e66c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a80dbcf-fc99-4d82-8879-cb2d4349eeb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "578065e9-1c8a-4636-8590-9b2d70b66f21",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ed2ec7-f7ff-4412-bd24-251e180068a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2593c93a-768b-4c93-b934-79d6c64fe32a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e0a68b6-3039-44d4-ac02-684ace3bbbf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bd940c0-f1bd-4694-a642-625fe008bcce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1adda09e-b488-4840-9516-81b2e9c6562f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd472f2-c564-4031-8e6c-1b92576fb19f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38b6ef4d-d194-4379-b12c-756695d01859"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7793a9f-7143-40d1-aac5-a2168ceea75e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3fde06f-57c0-4892-a7d2-4e43fe7c7038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e0671d-0aa2-4dfb-b97a-5c6d442eb6c6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10266da-b148-43c6-8e9c-b70d11b17839",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9691c3e-8dec-4764-ae59-ff160e964743"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e55af8-9707-48ea-a271-f9381da9fd00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf85d4eb-5667-41dc-a0c4-b74de6bed9d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4838a55d-c7b1-4b21-bdb0-5f5fc6748ae4",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77d2f50-f83b-4c8b-a95c-44950779c88a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19ba6c6d-22f1-4ddc-afbc-af2b52d5a5db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "395ef659-84f4-401e-b96b-ec9df729e172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7e9ed9-df4f-48da-b9dc-0fe43aa50637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2bd076a-7369-40fc-80ca-25faa23f5c37",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52d7ef7-d979-4395-b671-07c8b0e71c1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ecf8770-29ac-483a-b8bc-18d615893ed1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e43f3df-7baf-474b-9228-914ae89b3128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a983c530-13aa-42f5-b71d-66d75e843634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b4ca57-813b-4391-85aa-16b3a1497185",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e744c2a-17c8-439e-9c1e-f8e1bf1ab5c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "001eb874-a35c-4d32-80ba-e73007498272"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1748e93c-1bcd-40f8-9385-f47333c33722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7b66af8-9cfd-4b7f-a0fd-fe1aab8ad93b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7bbfdcd-bb03-47ef-a5ef-5bed6a6efb05",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2385f7-ff1c-47d5-a314-3d9e4499fd71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f788869e-ee47-4551-875c-f03608ef5200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba85b507-98c7-4157-a87c-0eccb61691a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab58b93-6598-4873-b252-d3be745f0bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c46a11-0a6e-4d48-93f8-2ebbec9d95a4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f34bc1d-2114-47f9-bb7d-5561b1b7a0ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fe61f30-3c7f-49b6-9189-b9b34e233e07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f271f65-62c8-4bd0-b603-5daa3e9d92d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97072a7c-ffc6-4efb-b7fc-4928ee0f1515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4888bb03-0363-4c91-8d2a-a41d98933bb0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b74ccc-5a69-4200-bc42-5687fe93ef23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88d26c21-fb34-4ae4-99a3-48bb7c413b2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a2b7ff-b792-453d-8ec1-4c3c996ac7cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eccbdad8-ffcb-43e2-bcd8-67fb29ae6f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4fdf6b5-84db-4321-be97-03f1d16ba489",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57286d9b-d8e4-4895-b06c-b8941d4ba360",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba5d7d0e-75b1-4781-b581-032ed0d0051c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb099fb3-6e3c-489b-8b70-3b527f9b16f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90a114f4-1349-4e8b-bb51-1cccc196e0f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e22db3e-98bb-41fc-b2d6-84796d27bcdd",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b038dc4-4e0b-480d-a424-25bcdc2020d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31fca313-7729-400b-87f0-ebbcd1298389"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf91fe1c-6585-4b87-9d37-94799f0c3aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4431ba0-8b33-4744-943a-565fce388837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec712f02-335a-4be5-80dd-a26c426308ed",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6485c2-a2ea-4a93-8be7-698db514878c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75fe07e3-4410-4252-aff2-5ac82e671a28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6efd03-835d-4c78-b6bb-4aa970fb1920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dc967fc-7d08-473f-b0cf-09c89599f34e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48336e3b-a550-4dfa-8ad5-ee69cd7a5f46",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed4e504-2690-4858-b246-a9d3ca344c3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "723f3855-8d02-429a-ad62-377a253317df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e3b2d6-7a09-4dff-b247-9f5f8ce97594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f57856b0-3e93-4b61-b1c4-438e1be56e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ea91bf-45aa-47bb-99b5-1725af7adb6d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4984cdf8-49ce-4372-823f-b38f358c23c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaba14ae-2e9a-44b6-a5a2-0720607cdc5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05d7732-a0f1-40b8-877b-eff8f2373d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53524a52-0150-4263-b516-f94558dd009a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3b76f1-9583-46ef-a0db-71fa4e2b09e5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00092837-3970-4054-b321-72aa53539153",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d671dbfd-496d-4b52-91ee-355dac360a32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8697d24-8904-41b2-a07d-e3f16a492289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae938604-f2f7-4844-84eb-dea28b5d1364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87fea19b-0d8d-4b97-93f5-deb5310e6924",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f44a8d-b2b5-4ba3-81a1-6c6b100e211e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1131e6b0-0c90-4214-8e07-1b9fdd82d70c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32c7a17-cfd9-48db-b43b-fca72e8dda4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d42746d-a95a-4f5a-b9bc-dcb594d0b7d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2820e326-c93c-43c2-9d55-5c51e57da296",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67126ee5-9b38-4ffa-98e6-2f0ab5533189",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3eb10764-94bb-4c54-92fd-02c4532c88cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "788631e6-cb79-42ec-bb5b-bf881a2afaeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d95a4d6-1f64-40f0-a63c-0d3476ad4fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992a91c5-6ede-4046-a8c5-42da7d191b15",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca57f9fc-eb2c-47da-9923-16cbab119e87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b38e1dd-ca30-4a47-b186-467a08853448"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7f9e35-795a-44ef-a498-d62bd7da308e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b1c798a-7520-4f56-8e02-21c6a5194b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12542e1c-4d72-41a4-b4b6-b4e26c477fa9",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a6f4dc-7b4c-4086-b43b-170fe5eb4849",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f347ccae-0d7f-4262-9654-c171c5414548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ec974b-bd3c-4e04-aa80-c3254a0c8d24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08294789-46fe-472e-b06e-c5a2392b3888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "226b8ba4-baca-4eb9-8136-16a01de088f2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4103993b-10ff-4244-8f03-59e8509358cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1eecf33c-8a94-47a6-a2f7-c823d2c123bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02db277e-efc8-4d30-b7d2-63f075d511f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb6d64f5-cd50-44e1-a751-96aeceab7826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99cc7fb7-5205-4f85-8f9c-8e49135c5684",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80004e23-43e3-48f9-b57a-41382b763d69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78689fe2-615c-4f8d-ae38-03769a10a346"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93dc413-1050-4dbb-8919-8f843a933103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28deb92a-b3cf-4336-8fd1-d24cf1d797c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f054e20-c604-46ca-8138-951600849002",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f0f57b4-d775-4998-80ae-db5a349c08b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9838d7d8-c4a0-45c8-b0d9-90f06406addb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c9ca98-ba8d-48c2-9e9a-90b0af06c4ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c5514b7-ab90-46d8-bdb4-7103ed122a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49c3993-9cda-4198-9b60-0401a0391a16",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d743117-af9e-480c-bc12-66eb5f11bc18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4484ea6f-5b44-4d89-9021-470e491f318f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a66459-8f59-40a1-9dce-2a365a1ef0d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5781645f-2d45-4190-8d91-7136b4fc96a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ac07f3-b50c-492f-8e62-23ac377d96df",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3378766f-7d27-4b5a-aab6-f620d5aebdaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29a3f8e0-7333-48eb-8322-fad8fb79e668"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21001a00-1107-4461-a759-e72a5f800975",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eb1b7ed-6e29-465f-a4fb-5c5ad66fb11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e53814-4ca4-4b22-a807-8a3471bc9160",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0cc390b-a40d-4247-8bb2-ec9e29b4ab6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6abc81c-151c-48bf-b231-858b26e26910"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa3c922-fa06-4d30-9d3e-2c7d7a19586c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f278ca81-e136-444d-84e9-8110088572b5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f3110dc-ce8f-49a0-a33a-7b7d9dd915c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b6ad981-b9c5-4f3c-9962-6e2fde67349d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aecd378a-705b-49db-886f-767d13f4868d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "032a0c79-65c6-4b04-850d-46b01d05489a"
                    }
                  }
                ]
              },
              {
                "id": "a2284ece-75a8-411a-8f9f-dac600006443",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bf226176-e60a-486f-972c-5c0314757921",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830a173e-8ba0-40cd-bfe2-0ce941ed221b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6b802d22-ab91-4296-9e7a-f034107b5108"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bdfcbae-42d7-41da-91d7-79aa443b78e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6fb0da07-3b69-4e3f-b2f4-2c2e2f8eccdc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6880d68e-5175-40e3-9c08-5227823eec88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2593fc3f-4b13-4ef2-b0df-701a983853ad"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c41979e-c313-4df2-a784-d3c87a98bd16",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04eba529-4b94-43d6-b9a6-e0791c43167c"
                    }
                  }
                ]
              },
              {
                "id": "35b13093-e161-4532-940f-4255e8b2a15d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a7ee2b3b-5a90-4d7e-9119-84a31507f149",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0843bc-7d17-4a23-a08d-d191a88704d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "17674a0d-bfaa-4ee1-a0d9-596b9c7840c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b98b97a-5b7d-4dfe-a8a0-1805e48b07e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "081f3f03-cb8d-4595-af91-15214c0eed3b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4f57f9dd-2aad-4796-a675-bdd35ce5a9fc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d8d33e3a-e7b2-4d36-9e24-a1486f3d3ff7",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae92981d-a075-4542-ac00-ae892a3b5a66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "65553435-080b-4b63-820a-ec856034e4b0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "564c5e92-7963-437e-949e-74f094c363e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a23699ed-9254-494d-9ba6-ba350e30472d"
                    }
                  }
                ]
              },
              {
                "id": "c45364d3-08c0-4d79-89e5-1413f0f994c5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "086f6a62-a757-41b4-8c4c-4697fd8bfe32",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0a449611-ca21-4f8b-9996-c0d6edb99c85"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f143c486-cbba-4c2a-a704-9de54711d0ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8008cf7-0407-45ea-91a1-cf12afb4a16a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c72c41e9-4525-4265-a8f2-b7ab9eef3cff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "aab9d537-f7fd-43e0-a1bb-9d7f6f2d6953"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0386d75a-bade-4518-bb08-80a0d785255b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f9a55f61-bf10-4b15-b8d2-7482f1cf4c12"
            }
          }
        ]
      },
      {
        "id": "3c23ed41-f438-47b3-b6c4-f50eb28348f4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c8311939-276a-4c71-870d-db9f94c92e7a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "637a0ff7-9996-4fe3-9fd6-1bb6653c7edd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "30e35c9c-ac6a-40fa-90af-a3d26b98c0c3",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ac38dc-cd43-474d-8de2-4cc714369a5f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8605659b-84b5-48f3-bc25-589f602ee208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c447288-cd15-4210-849c-3d3181c05832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec0bc777-7d8f-424f-86fb-e049d4116c39"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a12e8c1-e32d-4068-ac9a-c8304839bbb3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d305b86f-2c51-4a9f-b605-922b90c2cb07"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d7ad2007-4f9a-4d9a-83d0-dc38b7438783",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f412d8b1-fbad-48b1-9c51-b1d87545006a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1be9eee7-f5b3-4750-8460-5c2318a15f4d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c028048f-dd2e-4bad-83dc-72f7135bbedb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d864787a-060b-4642-b0f8-fc57039c8bb6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "820095dd-2884-49c3-9b4a-163aa43f86b5"
            }
          }
        ]
      },
      {
        "id": "6bab61f3-dcb4-443a-a2fa-ffb8611aa977",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b69b46d4-b07e-4f13-ba1c-2201dd76a6cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "24995384-458d-4c89-912c-43a569c02881",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2b419c83-7a2f-4988-a5b5-d9a446a860f4",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6872737-f41b-4d75-a373-4291aebe15f5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca3ba845-5ba8-4b15-8779-edf5d0e5ae6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff62852-c863-476c-bfc7-20b6f4d0d62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17a1f76b-d0c6-4afc-b1c4-0ffbe2193ca8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3443f6c-0a95-482f-984f-b84086549d79",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22d9dbe5-cf04-4422-b648-d9f37ae040d8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd321883-bed1-4c4b-82ac-f8686c5d796d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae8c30f1-f0bd-4d85-827b-b8de2983b847"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8f4d108d-65d7-469a-a32f-26a049cdac8f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3f77fffc-30f8-4a37-a3b5-bf5d88e6ebb8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04ac2ade-24ba-4020-bf75-74552d4868e8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aebf1c41-093d-49b9-afd6-c11bc592520b"
            }
          }
        ]
      },
      {
        "id": "5bdeb5a7-9e63-498a-b26a-e5b1b45c521a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "578a8631-4419-4eb4-bc22-d2eac722b51a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d911ae75-a412-4ba9-896f-2ac518456556",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8a965d58-d95a-4181-a9df-751bdc35d916",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec7e82c2-0c51-4f6f-95c1-57e631ba24d1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c7694de-dbd7-4f9b-92e7-14530c3cbaca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee93df11-f50c-476f-8aac-87ed2cba59d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1b42075-05bf-4e62-bcec-0210ed17eecb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99344222-5a72-4bf8-a159-a5f42d00b2e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32dba36b-51f0-43a8-b027-43911e5452d6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5bde30f3-eec3-4e05-9953-bd6e9c9e072c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b27362ce-dbb9-450a-86b9-c5b4f3ad9cc5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a8e6f30c-5694-491e-b750-a271375ef511",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6996979f-0120-423d-b552-44fec77ec295"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e36c8632-e097-4911-90fa-3f1ddcdc8ea2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4f0ececd-4f1b-4b44-a18b-ee56a6820063"
            }
          }
        ]
      },
      {
        "id": "fbffa13b-972f-4c20-87c6-5f79e70eb0c2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d737c2cf-2c17-414c-8fc1-960117314908",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9d8ef198-2779-4657-82ab-674833adc0c5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4afaa6f9-23af-4e85-b77d-0fb85c306a61",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5acc4f8d-4753-435c-b8f7-49d6ee8e5259",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3456413b-3c07-4820-b18c-8eae31bb345d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 331.63380281690127,
      "responseMin": 7,
      "responseMax": 6342,
      "responseSd": 785.7374080125799,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1692405018228,
      "completed": 1692405127450
    },
    "executions": [
      {
        "id": "a948db8d-207e-4d45-9f21-ad6974bfa30f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2aba90e5-737b-4493-ab81-4001ece7af1a",
          "httpRequestId": "6d0d8e25-7b62-4b2a-b0ea-40596c760d21"
        },
        "item": {
          "id": "a948db8d-207e-4d45-9f21-ad6974bfa30f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "12daec73-3cc6-4365-bf31-2b94be1ce508",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 0
        }
      },
      {
        "id": "b44cec27-f8d3-4e70-b08b-03caed7fd071",
        "cursor": {
          "ref": "7921e149-11d1-4299-9a41-6bfe58630199",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6a41056a-3c6f-48cf-8a8d-73e482e6f16e"
        },
        "item": {
          "id": "b44cec27-f8d3-4e70-b08b-03caed7fd071",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1d03a663-148a-4b61-a354-420517c4fa88",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "b61b73db-81b3-4005-9255-0502ad025f86",
        "cursor": {
          "ref": "6844d6f5-b002-4a11-997a-d0392eadfa8b",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0cfccb46-194b-49a0-bda6-786a86801099"
        },
        "item": {
          "id": "b61b73db-81b3-4005-9255-0502ad025f86",
          "name": "did_json"
        },
        "response": {
          "id": "7fdfbefd-e1e5-4388-9e9d-2cdac0a9c666",
          "status": "OK",
          "code": 200,
          "responseTime": 1275,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23f180a-32be-4f5c-aeef-a762da96c804",
        "cursor": {
          "ref": "c974305a-6766-4ee5-a676-a36f5f66366b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c6e1d258-0f9d-46fc-ad37-8284b4d98a94"
        },
        "item": {
          "id": "b23f180a-32be-4f5c-aeef-a762da96c804",
          "name": "did:invalid"
        },
        "response": {
          "id": "3d2deae2-aa2f-4811-8bf8-fb4d759824bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23f180a-32be-4f5c-aeef-a762da96c804",
        "cursor": {
          "ref": "c974305a-6766-4ee5-a676-a36f5f66366b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c6e1d258-0f9d-46fc-ad37-8284b4d98a94"
        },
        "item": {
          "id": "b23f180a-32be-4f5c-aeef-a762da96c804",
          "name": "did:invalid"
        },
        "response": {
          "id": "3d2deae2-aa2f-4811-8bf8-fb4d759824bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a9b146-0ef4-45e3-9445-852b66e0cd8a",
        "cursor": {
          "ref": "475fddf7-3264-4d43-b368-501e65dae9cf",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a3630263-2c69-4ca6-b8b0-897ecbe0129d"
        },
        "item": {
          "id": "26a9b146-0ef4-45e3-9445-852b66e0cd8a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7a0d86ca-4e97-4a3f-b295-1bb691763957",
          "status": "Not Found",
          "code": 404,
          "responseTime": 391,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb03a2a-327e-40cf-b476-ed51e716d598",
        "cursor": {
          "ref": "ef9336d2-a4f2-4cc0-8238-54eb7cd76029",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "80f0a38f-418a-4060-b1d0-7a8ed627a85e"
        },
        "item": {
          "id": "8bb03a2a-327e-40cf-b476-ed51e716d598",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "815b8510-2c5a-4165-90f1-e5be2efadc1b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 401,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74f6ff9-058a-4204-b84b-1c288975381f",
        "cursor": {
          "ref": "11a5068a-9320-4b1b-ad0e-b0d85a0295ca",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ffd21f9a-1146-4208-8ce6-dfbb66f2baa0"
        },
        "item": {
          "id": "b74f6ff9-058a-4204-b84b-1c288975381f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "392a8983-a423-4501-bb09-65fd4d1ca619",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 99,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22a8b37-8384-4e50-90d3-80158b6a634a",
        "cursor": {
          "ref": "713f04a7-f4ee-4247-b0e4-0c9e179f5e60",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9279d17e-5455-4477-896c-bd6184867946"
        },
        "item": {
          "id": "d22a8b37-8384-4e50-90d3-80158b6a634a",
          "name": "identifiers"
        },
        "response": {
          "id": "023cdd74-6aa5-4b43-83e6-cc241db18569",
          "status": "OK",
          "code": 200,
          "responseTime": 1085,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e6caf6-7a7b-410c-a9ba-f7284bc79ff7",
        "cursor": {
          "ref": "b02a1de1-3ee7-4a90-9414-ca81383825a6",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "86e106e3-fb7d-4739-b402-78ce317ff2ac"
        },
        "item": {
          "id": "b7e6caf6-7a7b-410c-a9ba-f7284bc79ff7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c5a23dbb-df89-46ed-9d05-a304ea018fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e84a09-d689-481e-8192-0e00753a01e9",
        "cursor": {
          "ref": "afbcafad-14db-4066-b02a-925a53b1c48c",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "73c5533b-9949-4377-b61d-2ddf55a0050e"
        },
        "item": {
          "id": "66e84a09-d689-481e-8192-0e00753a01e9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a8bfc840-a218-40c9-a7eb-1b7d94984b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4cf50c4-dc45-4089-8e06-7d0a4bdab932",
        "cursor": {
          "ref": "82d9d71b-8233-44dd-b1f3-b5a26cc7c309",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a95cb518-aa09-412a-89d9-a038c435daff"
        },
        "item": {
          "id": "e4cf50c4-dc45-4089-8e06-7d0a4bdab932",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "76155319-8caa-42d7-b58d-7f4925de321b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9767edd2-50a8-46ab-b3df-fa8df544b461",
        "cursor": {
          "ref": "94e6506a-7a2a-4910-ae31-8633d1e31eb4",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "46cc1285-247f-4370-a448-0994082821ef"
        },
        "item": {
          "id": "9767edd2-50a8-46ab-b3df-fa8df544b461",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9d1e630d-9614-4a35-b140-3ccbb46d3e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6145a592-15fe-4f46-b17b-3d9d4f649629",
        "cursor": {
          "ref": "ae563c03-0b10-42ab-9f22-c8e6be081752",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1f15a139-01e9-4298-8ab6-b602034b29de"
        },
        "item": {
          "id": "6145a592-15fe-4f46-b17b-3d9d4f649629",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5f671cb5-d57f-4ab3-b046-a791d798e3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4bb96e-1ca2-44a0-af1b-e6003f284ab5",
        "cursor": {
          "ref": "f63165cd-cc67-4d99-a099-416fb984fe0b",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "00e8781d-3e34-4b48-96f4-c2e0e95e0f29"
        },
        "item": {
          "id": "ad4bb96e-1ca2-44a0-af1b-e6003f284ab5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "eee3daec-ff6a-482a-a2d4-21f344d24ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede87ffb-0258-41a2-8a95-ca34bbf8f27d",
        "cursor": {
          "ref": "d0d03d06-3026-4291-b5e5-6cdc7942b44e",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "dab40b29-85e2-40de-a23e-226e72702c72"
        },
        "item": {
          "id": "ede87ffb-0258-41a2-8a95-ca34bbf8f27d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6f998ca6-1209-41e0-9e67-babffba06793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2daed177-3cc1-40b7-9623-6d29b17a7e51",
        "cursor": {
          "ref": "1283ec49-4558-4b39-853b-d13ac9a40840",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "43997a30-ce23-4f22-979d-7c8f1dd36487"
        },
        "item": {
          "id": "2daed177-3cc1-40b7-9623-6d29b17a7e51",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e3226ae3-c1c8-42b9-8768-de63db78f9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cfe13c7-e37d-4679-ad5e-9db09306bb12",
        "cursor": {
          "ref": "aba155e3-9b38-4d3d-9f0f-4e504c82673e",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "31cb5c6e-1f5e-49c6-9f47-68bf4420d274"
        },
        "item": {
          "id": "9cfe13c7-e37d-4679-ad5e-9db09306bb12",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "996d46d9-073b-421a-b18a-bcf0f0ae73f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b411d44-bc76-4343-80d4-22d1bae0d334",
        "cursor": {
          "ref": "2c5abb28-9fe3-44c4-a6d7-76d1e1c26bb6",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "03f49597-2d19-490e-89a0-e3b81002a02d"
        },
        "item": {
          "id": "2b411d44-bc76-4343-80d4-22d1bae0d334",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ada41286-5c44-4e28-a944-182b74e5cb1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c646b43-7599-4683-833f-16238832cf76",
        "cursor": {
          "ref": "0e95fe26-86f3-4d8b-a7a9-26b250d73939",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2ec92910-9f97-47aa-b8e0-8ee7356862ea"
        },
        "item": {
          "id": "4c646b43-7599-4683-833f-16238832cf76",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "872430c9-2a59-4d7b-a8a9-1e8018d9f9ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e028650-4aaa-473b-9c8e-07b3da11aa7f",
        "cursor": {
          "ref": "0e8b58f9-bed0-43ef-96d9-3c12c0236be9",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "cef5f76e-f126-4d0e-83fe-d074d697db51"
        },
        "item": {
          "id": "1e028650-4aaa-473b-9c8e-07b3da11aa7f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a63c4d24-d85b-47f0-ae39-6d7a98b544de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a18d119-4be3-408f-9903-8adfd755b3ff",
        "cursor": {
          "ref": "d0fcbae3-8382-4b85-8b93-84b2d6d6adcc",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "cf9d7256-72c7-406d-8ff2-0986e3fa3a0f"
        },
        "item": {
          "id": "4a18d119-4be3-408f-9903-8adfd755b3ff",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "be8a02c8-30bd-45aa-9d61-62365e7a6edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5489eb-76fb-4c8f-9aae-9e5591d4bae8",
        "cursor": {
          "ref": "622fb4ad-3a5b-4732-ba41-862d4d423a2e",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "946fda54-479a-426b-afe1-5d10a7cdcc0c"
        },
        "item": {
          "id": "2e5489eb-76fb-4c8f-9aae-9e5591d4bae8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "db23b85e-c783-4344-9b3b-8cfc3ed9b782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820da8eb-7c19-423f-a811-608bea2e50dd",
        "cursor": {
          "ref": "49d2ddc9-c8e8-45ea-a205-56ac092c4f9f",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8e493f5f-c4f0-434d-a825-a6eabce790b3"
        },
        "item": {
          "id": "820da8eb-7c19-423f-a811-608bea2e50dd",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ad2402ca-dbd2-4bb0-9960-e27f642686aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33830c25-db92-46af-9a2b-ac568d782ca2",
        "cursor": {
          "ref": "c6c40bb9-c53f-4b80-8fd7-e3b358ff44ff",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "673e2b18-53a8-462a-9ca8-22326bc8a12c"
        },
        "item": {
          "id": "33830c25-db92-46af-9a2b-ac568d782ca2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "cf23e6de-c332-415a-8fd7-368620a8dbb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d036148a-c4b9-44c5-abf9-df23fea41f93",
        "cursor": {
          "ref": "e88f6036-8ced-458d-a7a7-1b351bcd8363",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a0eb59dc-cd2f-450a-837c-2e754cea3d5c"
        },
        "item": {
          "id": "d036148a-c4b9-44c5-abf9-df23fea41f93",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "fb85eab9-b8cd-4db8-a372-0eda0270484f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d295f48c-e8bc-420b-a250-2977ceb4c0a6",
        "cursor": {
          "ref": "dcfa07cf-6d6d-4619-b87c-cde9d093b70f",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d1c2fbc9-ac2e-45b4-9fb6-483667ac6cdf"
        },
        "item": {
          "id": "d295f48c-e8bc-420b-a250-2977ceb4c0a6",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "51ca563f-b88d-4135-87c2-303c3e665a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66288d1f-78f5-4bdc-8315-90d6febccff3",
        "cursor": {
          "ref": "49840bbb-859d-4f0a-a476-c209303c3595",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "acbcb224-6aa3-490d-88bf-e051ec9512c5"
        },
        "item": {
          "id": "66288d1f-78f5-4bdc-8315-90d6febccff3",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "002650cf-0d63-4747-afaa-0e34e6a93988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2a2d82-4d47-419e-866f-ce261752e54d",
        "cursor": {
          "ref": "12fa060b-b4c9-4fbb-9e9d-57359c520a48",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ee900a1f-7256-4900-9452-360da44595ee"
        },
        "item": {
          "id": "6a2a2d82-4d47-419e-866f-ce261752e54d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1881ee1b-9a6f-4f48-b53b-080cb9091122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271ec318-1c38-4d24-b319-6ee0d5bd26cd",
        "cursor": {
          "ref": "d6e4b3d3-e4dd-4765-aa5c-dce800e7416f",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c1ef4029-cac1-4533-863f-08e3bbe1d135"
        },
        "item": {
          "id": "271ec318-1c38-4d24-b319-6ee0d5bd26cd",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b54446f7-703d-4045-9f95-b257ac852dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e953042b-0712-40b5-9ac9-ad03071503bf",
        "cursor": {
          "ref": "3c2d670e-afb3-461a-8b92-b965b0fc16e2",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9e00ed1b-2711-410a-9847-f5132436e1c0"
        },
        "item": {
          "id": "e953042b-0712-40b5-9ac9-ad03071503bf",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "68a55b93-aebb-4073-b8d3-2c952b2160f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2113425-615e-4b79-be17-d5b6148a8bcb",
        "cursor": {
          "ref": "4951d910-8c07-4d01-a440-7e555e6995b3",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7cbab0cd-5bf1-4545-9ed4-8022ec4b38e7"
        },
        "item": {
          "id": "b2113425-615e-4b79-be17-d5b6148a8bcb",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "cc31877f-073c-443d-84ba-e3d6be527603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a9fb66-54d3-4b78-bc74-6068e52338f4",
        "cursor": {
          "ref": "63635689-1d36-40ed-a56f-68f02d71ecd2",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "10c3a04d-1c21-4bf9-a11c-ec7e71455e1d"
        },
        "item": {
          "id": "78a9fb66-54d3-4b78-bc74-6068e52338f4",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "8f4ba797-14b0-4606-83bb-8a3e29010e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ee92e2-d7b6-4405-8656-486269043539",
        "cursor": {
          "ref": "1333ae28-e939-475b-a850-d497d5c864b6",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5c4704fa-c7bf-478b-8fab-ad21aeab76c2"
        },
        "item": {
          "id": "e7ee92e2-d7b6-4405-8656-486269043539",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "14c2815e-6075-47c5-ad6f-692ae0de5988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b511253-ad9c-4661-bbf9-0e7c5f2411c7",
        "cursor": {
          "ref": "b51b4f4d-6f36-4d90-9dbf-fb2155cf921b",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ede9c805-d602-4b43-adf8-9ff0f9657afb"
        },
        "item": {
          "id": "0b511253-ad9c-4661-bbf9-0e7c5f2411c7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "dbf2e7fb-760f-4ab5-89bd-ea05d4c0d766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c4ff38-36de-4f93-815d-a8475ea7a4c3",
        "cursor": {
          "ref": "41849aa5-2695-4aba-ad65-15dc928bbded",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2768197a-0f96-4d4c-a8ed-6d63295dc910"
        },
        "item": {
          "id": "43c4ff38-36de-4f93-815d-a8475ea7a4c3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "85d448b9-d41f-40f2-a754-dd78797fa1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1944f1-2c8c-4d9c-a90f-a0664e4641e5",
        "cursor": {
          "ref": "01226f5e-a61b-45bb-8fb4-6b63482f9ff6",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a5289403-ad95-4d06-815a-51e5d64b0948"
        },
        "item": {
          "id": "eb1944f1-2c8c-4d9c-a90f-a0664e4641e5",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "da23fa3d-a771-40b3-821a-8a7826c1cc79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77528c6b-3117-4f25-9e84-29ef5f7ed27e",
        "cursor": {
          "ref": "7780953d-ca72-41ad-a782-0dfe5741a8c3",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3df197be-4999-49e1-bfa8-a072e20a9f5f"
        },
        "item": {
          "id": "77528c6b-3117-4f25-9e84-29ef5f7ed27e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7df7339c-9196-4c35-a36c-1d3c5b3e1a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85cba0a1-e480-4220-a110-8322bf9aeb86",
        "cursor": {
          "ref": "e4da665e-26a9-46a9-b2ef-465aaf359cae",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "498f2dfd-2880-4486-88f1-0bfa29be4881"
        },
        "item": {
          "id": "85cba0a1-e480-4220-a110-8322bf9aeb86",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7b018d6c-8e2c-4c45-a650-694a0ed681ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a483ae6e-b85e-4434-b270-cf3b39379c47",
        "cursor": {
          "ref": "0c369ae1-fa7d-4128-a306-47f42631b31c",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "dcfed95d-c3ea-4dca-86ce-cfb6efd01fb9"
        },
        "item": {
          "id": "a483ae6e-b85e-4434-b270-cf3b39379c47",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "25e9d208-c9f2-4f1d-a6ee-52b2b007a357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af32ce7-7dd7-417c-a8c8-26bc48a08ce6",
        "cursor": {
          "ref": "ef03fa61-f587-4129-9c1b-a19e4a11e6b6",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1b7359a2-58b2-480d-8ae6-e75373a95be8"
        },
        "item": {
          "id": "6af32ce7-7dd7-417c-a8c8-26bc48a08ce6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "878e2710-93c7-4374-ad12-6aa652c3e2f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ef6c19-902e-4aab-a2a8-a08c3b582ac2",
        "cursor": {
          "ref": "4d576e52-cbb4-4b06-9b23-6faf1666b6ab",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b8165014-2170-4f95-a5aa-d2bfae154a19"
        },
        "item": {
          "id": "e3ef6c19-902e-4aab-a2a8-a08c3b582ac2",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7daa2301-d233-415e-ba63-2bc65282a776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d148ee5-8664-48d7-ba4b-b306db31fc50",
        "cursor": {
          "ref": "73fbc8ee-9f4e-4f04-a1d2-0b38fcdae178",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f997a767-36d1-48da-b3be-e2537d2a8f7e"
        },
        "item": {
          "id": "5d148ee5-8664-48d7-ba4b-b306db31fc50",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1cf22f8d-7d2c-4ea1-91d9-97539d6a270c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45fff8fa-fdf9-4fe6-9baa-6339ac124ea3",
        "cursor": {
          "ref": "df96ea88-a75d-490e-b537-2ed43cf8ca0e",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "92e1ccae-fb91-4f2e-96cf-008386ab0e34"
        },
        "item": {
          "id": "45fff8fa-fdf9-4fe6-9baa-6339ac124ea3",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ab23e982-0ede-4ba6-8a22-0cbcd952ffab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06c5732-dd8c-4f5b-8ac9-4cdc54efdee7",
        "cursor": {
          "ref": "83f17e94-ffac-41ef-938f-b2786fc29273",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d4ebad34-e355-452f-bd12-748fe1b9e064"
        },
        "item": {
          "id": "e06c5732-dd8c-4f5b-8ac9-4cdc54efdee7",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "15e0b4a1-fafa-4cbb-aa3b-120661145f4f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 651,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce39632-e286-4172-807d-1db35e86bd44",
        "cursor": {
          "ref": "3a9bd4d7-578e-4f34-b853-6232e54902e2",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c2c82cf7-e5f9-4353-9dac-4b0aec4abe52"
        },
        "item": {
          "id": "fce39632-e286-4172-807d-1db35e86bd44",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "304984db-b9b1-4bee-b98e-433df98904ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fde2eb-edfd-4a0f-b89b-e86d473a076b",
        "cursor": {
          "ref": "de6d2234-02cb-4085-92ca-7862878f7f69",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "71a3b609-deb7-4285-826b-4b6b030c7678"
        },
        "item": {
          "id": "25fde2eb-edfd-4a0f-b89b-e86d473a076b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5fbe1518-a82f-4bfc-a81e-7ea59d4968c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8452a39-c919-4f03-839f-79a43fa7a1b2",
        "cursor": {
          "ref": "546b1252-fa9d-4654-99e5-978728bad67a",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ec5036cd-6bd5-4216-b220-d2e2d27b6fd5"
        },
        "item": {
          "id": "a8452a39-c919-4f03-839f-79a43fa7a1b2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "0306c351-387b-4462-a092-d2dfe0c0b865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e897acc-58ce-4dcb-bb2a-f3812305813f",
        "cursor": {
          "ref": "6b0147a2-4bdb-4f27-b43e-1a6e40044381",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "212a646e-7be3-425f-9b19-3f7804da739d"
        },
        "item": {
          "id": "2e897acc-58ce-4dcb-bb2a-f3812305813f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "46b68768-e423-48c8-9a4a-048940358094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03dc5d5b-dacd-4662-b409-daef7df90152",
        "cursor": {
          "ref": "d4bbabd4-011e-4de1-b9c5-5f9ee3dc1416",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ba57eef2-4bb2-47c2-b546-5b8e0fe589e9"
        },
        "item": {
          "id": "03dc5d5b-dacd-4662-b409-daef7df90152",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f2a84732-5a5c-4ae2-b127-a4600631b782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd38c22-6fab-4f34-945e-5ea00e3ceda0",
        "cursor": {
          "ref": "2087038d-df71-490f-a45f-41eb60e27666",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7520336a-9e03-429b-a5aa-2ef2dd3750de"
        },
        "item": {
          "id": "7bd38c22-6fab-4f34-945e-5ea00e3ceda0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a7c8980e-ef6b-40e3-9645-ea2b940869dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c7fefb-533e-4417-98d6-5c819a7c2cfc",
        "cursor": {
          "ref": "678d4056-3c9b-4372-929e-9d9132ba041f",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "552ac044-4ba1-48bf-8061-7b78bbb157d4"
        },
        "item": {
          "id": "a0c7fefb-533e-4417-98d6-5c819a7c2cfc",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c451ce6e-bfe7-42e8-a3e8-64a3c6e6a514",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 611,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9301e81c-7c18-4091-95cc-206c6b15ec71",
        "cursor": {
          "ref": "adf3d180-3936-40d1-bf40-23ed31540815",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b441f76f-7c51-4a4b-8273-3b3cce6ec0cf"
        },
        "item": {
          "id": "9301e81c-7c18-4091-95cc-206c6b15ec71",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0b7fa1f2-8b9a-433d-b506-38bc884cc69b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82c296d-fe9d-42e8-ab89-829027eff0f8",
        "cursor": {
          "ref": "468fa250-12f4-4fae-81c2-cdb429ee1e89",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "31a764ea-54c8-4083-9bb7-9e63dc29ef84"
        },
        "item": {
          "id": "a82c296d-fe9d-42e8-ab89-829027eff0f8",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1f48fa4b-b041-40af-890e-7f1777c5970b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e27d541-6336-48df-8807-9e18c59ff508",
        "cursor": {
          "ref": "1c20b8e9-7ad6-4db2-bc16-39055e138803",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5b0d7c58-161c-4060-befa-208868665189"
        },
        "item": {
          "id": "7e27d541-6336-48df-8807-9e18c59ff508",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ab03dea9-ca1a-4864-a4cc-bb7a7bb7116e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b09382b-d26a-47ad-b9a6-1d3c5acec763",
        "cursor": {
          "ref": "ff21c4d3-f953-4f9a-a524-1f67af5733e6",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "be62a648-cb46-4a76-a3a0-21b3f4543c4c"
        },
        "item": {
          "id": "7b09382b-d26a-47ad-b9a6-1d3c5acec763",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b9c956aa-4b4e-461e-8630-1292b34b72ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1eb7a33-8dbd-42ca-a986-9132cb95775b",
        "cursor": {
          "ref": "420ec0be-8f73-43a8-ba4b-6052bb40ac97",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "606f0c2c-b164-4f11-b1c7-fd6823ec6a1b"
        },
        "item": {
          "id": "e1eb7a33-8dbd-42ca-a986-9132cb95775b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "deb36406-0f69-4c25-b7f4-b80f681677e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1edba0c-7f6e-4ac2-b6e2-033bd9d6f4ff",
        "cursor": {
          "ref": "2915569d-7586-4e1e-9541-b56dc70d2b6d",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "39599e98-640f-4ea2-b818-277d83e97c4d"
        },
        "item": {
          "id": "f1edba0c-7f6e-4ac2-b6e2-033bd9d6f4ff",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6480d875-088c-46ec-ab96-a1b0f6c557b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd197c5-072d-4955-8cb8-200220c13873",
        "cursor": {
          "ref": "ac262b22-464c-44be-a11c-f10aa82717b6",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "96322e92-60cb-4eb0-bb73-3450a5bcbb1b"
        },
        "item": {
          "id": "9fd197c5-072d-4955-8cb8-200220c13873",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "18d1b408-9c5c-4a2f-8788-9a8fa6367199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01fe754c-1102-4030-a4a3-884a231714d7",
        "cursor": {
          "ref": "0a58e984-c7e1-41fc-ad98-f5da5f4f526f",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "545b0099-dfe8-4188-84d9-4c3322d6a070"
        },
        "item": {
          "id": "01fe754c-1102-4030-a4a3-884a231714d7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ccc5db28-e5e7-48e5-b621-d670196a147b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74167cc-3a86-49cb-830f-4bd27e6a865d",
        "cursor": {
          "ref": "7a84799f-0abc-4b63-a02a-6a3146bdc32a",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "24d8ada5-4677-4944-b830-f39d1d07369b"
        },
        "item": {
          "id": "f74167cc-3a86-49cb-830f-4bd27e6a865d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8353efc8-10a3-4a09-a533-46b14c83cf76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33619acc-8329-441e-8966-a1fa5d21561c",
        "cursor": {
          "ref": "9e6f9fc2-1859-4826-b9c1-2259eefce468",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f33b3558-51b5-4e80-a474-cb5caf0e044e"
        },
        "item": {
          "id": "33619acc-8329-441e-8966-a1fa5d21561c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a58ca39d-dea1-4c9c-93d2-9afbe844d955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc1fb15-210c-4618-96b3-03f02be16e02",
        "cursor": {
          "ref": "98204f1b-9eda-45f2-ab0e-afc8d7713804",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "498d159d-81a7-4f1b-ac9d-d8500eced2a4"
        },
        "item": {
          "id": "3bc1fb15-210c-4618-96b3-03f02be16e02",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "49b933b4-e5b0-46f1-a2c4-95679638078f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87941f29-5962-45a6-b5cd-fe6027596f19",
        "cursor": {
          "ref": "9c0d8037-43e3-4435-aabe-50c478a72b9d",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a5934b6f-210b-4eaa-bc5f-80a2e95c4146"
        },
        "item": {
          "id": "87941f29-5962-45a6-b5cd-fe6027596f19",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "8d4a18a4-780d-470c-93da-3517a4c7a3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cfd0158-71a9-4240-8b43-0eabef2e51a4",
        "cursor": {
          "ref": "68aef956-f046-4f88-aa26-97aad2e2fab3",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "bfde98f7-a572-4038-88f3-558bb9074e9e"
        },
        "item": {
          "id": "4cfd0158-71a9-4240-8b43-0eabef2e51a4",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b715c34b-c771-4b5b-acf7-d4537cd0e2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c3f616-b1a8-4a46-9d88-4152af3ae6c1",
        "cursor": {
          "ref": "9655b120-9d4d-4f73-ae76-d047f6fbc4f8",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6b057ed2-5464-457d-9b44-a6a4b4c473d9"
        },
        "item": {
          "id": "79c3f616-b1a8-4a46-9d88-4152af3ae6c1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7f319454-4a19-4af0-8d71-58a4f7107161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81e88e8-6d9a-4703-8bd1-02305f0951f1",
        "cursor": {
          "ref": "72e5cc07-6efd-48a4-ab22-5191cb59b7e5",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "cc937a52-350d-48f7-b372-b17fb69d11d5"
        },
        "item": {
          "id": "f81e88e8-6d9a-4703-8bd1-02305f0951f1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "052f591c-c31f-4367-b6c4-efd9ed390e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd87a402-8a90-44aa-bc42-603091ea7713",
        "cursor": {
          "ref": "9935874f-3837-40d7-99f5-3f153162f3e8",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c1c8a48d-255d-48a9-a232-706ada34d867"
        },
        "item": {
          "id": "fd87a402-8a90-44aa-bc42-603091ea7713",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a203b862-bcef-448d-83f4-c04db45aa15e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6895a2-ce11-4576-941f-c57aae780b18",
        "cursor": {
          "ref": "64b7db4b-c472-44f3-9e4e-4178433bc09b",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "392e9879-a58f-4e62-a3ac-5be77b98c45d"
        },
        "item": {
          "id": "ac6895a2-ce11-4576-941f-c57aae780b18",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "39604643-0fd4-4ad6-a066-39dc052ff8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a45fd37-4aac-4af2-a833-f3c71622452f",
        "cursor": {
          "ref": "39b75789-a193-4825-8dee-19ba4e385bf8",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a8e9c63e-6e30-4e1b-b00a-52d7b0e8c1c6"
        },
        "item": {
          "id": "3a45fd37-4aac-4af2-a833-f3c71622452f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c8b6483e-88d4-4833-9bbe-776c16357311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671c5466-6d0d-402c-9819-7b732fb5a3ed",
        "cursor": {
          "ref": "50e9a964-0157-4793-a956-10c0604847a7",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "abd54691-5ed1-4778-989c-d56a5efb6eeb"
        },
        "item": {
          "id": "671c5466-6d0d-402c-9819-7b732fb5a3ed",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5fe9910d-9cef-4186-a8aa-db89416e2a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0813e08-f9be-4ba8-9152-1de58369c5da",
        "cursor": {
          "ref": "0781d8ce-4fea-4ef1-b04f-e9249932394f",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c0eeb361-8cd2-4049-9cb2-a4eb4a26f4ba"
        },
        "item": {
          "id": "f0813e08-f9be-4ba8-9152-1de58369c5da",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "0fb33437-e8ec-458c-8b88-c8f131155743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c12251a7-9885-4936-86c5-631de24c11c8",
        "cursor": {
          "ref": "d1afddc8-b315-4543-b694-0436f142d79a",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e55bda1b-9627-46e9-beda-c71980568958"
        },
        "item": {
          "id": "c12251a7-9885-4936-86c5-631de24c11c8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f6d5dbed-4461-4ff2-8a9f-6260b0b3236c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae894d37-2a2a-4605-8d20-27f159d36fc7",
        "cursor": {
          "ref": "31e9abab-81e6-4c87-a74c-451870a7d374",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "52f0d8cc-25a9-4bda-882a-53594cf57260"
        },
        "item": {
          "id": "ae894d37-2a2a-4605-8d20-27f159d36fc7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e992e375-472c-44a5-9454-24187db047ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47d19e6-4f60-429b-9e52-9a02e3d2e032",
        "cursor": {
          "ref": "b58fadd2-80dd-409d-a967-28bd51f1cfc7",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b104875c-e922-4758-b129-8bdb15142e0c"
        },
        "item": {
          "id": "f47d19e6-4f60-429b-9e52-9a02e3d2e032",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6d708369-711f-483a-a60c-fa35046bf4b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd1f86f-2a98-4237-af2e-b5ebfeae95df",
        "cursor": {
          "ref": "c93f38aa-6a46-4afa-b09e-808f0a719185",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7f78698d-461f-4444-9359-47e194adfd6d"
        },
        "item": {
          "id": "0cd1f86f-2a98-4237-af2e-b5ebfeae95df",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3c051c91-dcb9-4107-a1ed-65f186abffdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec19d47d-724e-48e9-a79e-3b3ccdb62891",
        "cursor": {
          "ref": "96cbcf84-9e9c-42a2-bdd4-a6628e98abde",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "441bccdb-7e26-4f26-9348-b89a99a80bfd"
        },
        "item": {
          "id": "ec19d47d-724e-48e9-a79e-3b3ccdb62891",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a1fe980d-e4a9-4af2-b115-4c65ec580576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34a8e03-09c0-4c0d-99ca-40da66e9251f",
        "cursor": {
          "ref": "085f7490-7000-4fd4-9a95-54c353570a48",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e442f63b-c164-4716-ba35-267e60a733ed"
        },
        "item": {
          "id": "b34a8e03-09c0-4c0d-99ca-40da66e9251f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "57f6b833-722f-47dc-8d90-c4a655cf12a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2afda3e8-da51-456a-b7be-72bc91d56763",
        "cursor": {
          "ref": "111e68a8-9bb2-4386-a768-6a47e1e8a13f",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e2d0bf50-0eb4-45d3-8320-075036987527"
        },
        "item": {
          "id": "2afda3e8-da51-456a-b7be-72bc91d56763",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d94d3a81-f209-4247-8cce-584fcd886f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861c2148-f4ad-458c-a84e-2244d09ba1ea",
        "cursor": {
          "ref": "698fd42c-7166-4447-a8c1-efad3275228d",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ebe5e053-fafd-4d40-b5c6-29a1e784dd67"
        },
        "item": {
          "id": "861c2148-f4ad-458c-a84e-2244d09ba1ea",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e09b3c02-e2f2-4089-be36-f9edf661eb6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ebd835-46f1-4102-8e4d-d069091c9aed",
        "cursor": {
          "ref": "b41819b0-62a4-49d3-8409-1f3f1278d4b3",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ce96dfe9-e5c8-47e2-b7ef-5ce83321d136"
        },
        "item": {
          "id": "d3ebd835-46f1-4102-8e4d-d069091c9aed",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9d8bc834-3a87-45de-a98d-3b5c06a7ea0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1900b5b-47c0-49c8-ae82-478f56cd0187",
        "cursor": {
          "ref": "c8ca3ef4-8202-49eb-a472-df3560cd6865",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "24fde349-8c47-48d1-922c-0ff77de3b4ce"
        },
        "item": {
          "id": "d1900b5b-47c0-49c8-ae82-478f56cd0187",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "234fffae-b8e4-4649-848f-5351d7ad1774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70940f0d-3c4a-433f-a8ae-2788d95e150c",
        "cursor": {
          "ref": "89496d2d-caf0-464d-8c14-08cae0a4e6e5",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8d42d917-536e-41df-8451-eb6759fc0422"
        },
        "item": {
          "id": "70940f0d-3c4a-433f-a8ae-2788d95e150c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "24cb5bb6-6ff8-49ed-84d2-c608be7b8cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd28c07-6ca9-4463-91b5-8297234a4c43",
        "cursor": {
          "ref": "7256a3be-0c05-4f76-949d-b0f7ec853275",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5526ee1b-0236-4723-9b66-cd86c28c8a59"
        },
        "item": {
          "id": "4cd28c07-6ca9-4463-91b5-8297234a4c43",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9a9cf732-48dc-4f67-bc3b-3e2a872306d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326776fc-d845-429b-b3fd-72d991ca8782",
        "cursor": {
          "ref": "ed6e1297-c3f6-4b81-ab9d-eb2c50b1443f",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "78f3e6f3-4688-400b-8a65-d10808d6b0f5"
        },
        "item": {
          "id": "326776fc-d845-429b-b3fd-72d991ca8782",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4403b184-c934-4e3e-8dca-a4e2a9e3895a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622d520a-0cba-4140-ba03-97b4adae3701",
        "cursor": {
          "ref": "61bbb659-9987-41d8-85c1-3fc1dc636753",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ab9e9a0c-7ca3-4345-9fef-734c6c279a04"
        },
        "item": {
          "id": "622d520a-0cba-4140-ba03-97b4adae3701",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7eff35d1-b09c-43c9-9274-fe0c3d22e933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37e38e5-8eed-4405-ae2a-40276f13b053",
        "cursor": {
          "ref": "c006a283-85ff-43d1-844f-151de763cc54",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "478b665d-47b2-4895-9bc1-ca3710411ec1"
        },
        "item": {
          "id": "c37e38e5-8eed-4405-ae2a-40276f13b053",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "8b369f88-2f40-45c5-8e33-e012b421fd90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85aed0a-03cd-4069-8b86-3c7117bdbf35",
        "cursor": {
          "ref": "613ad3f0-1747-4e62-bef4-918538e558d7",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "368c5636-ea6b-440e-98ea-335c166b8074"
        },
        "item": {
          "id": "b85aed0a-03cd-4069-8b86-3c7117bdbf35",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "3644d303-d5fe-414b-a5b7-bce3c00f4b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdbe1842-d6af-4b07-b8a2-bb04374a60fc",
        "cursor": {
          "ref": "4956cde7-a411-45e3-b215-593119c6d450",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "bf3efba1-0a70-41f4-80f0-b4c58fd750c5"
        },
        "item": {
          "id": "cdbe1842-d6af-4b07-b8a2-bb04374a60fc",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7f4e79ea-80c1-4212-8125-b256fec0c7dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1c664f-22c5-4837-bca8-908833ad34d5",
        "cursor": {
          "ref": "8e5e532e-b232-46c0-a98b-559856cfae27",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4db9316c-0b90-4c3b-9e56-eeb11c9391f7"
        },
        "item": {
          "id": "0c1c664f-22c5-4837-bca8-908833ad34d5",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "87242ca2-1c36-4c08-bcc9-c99beaae037d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef83bb0-646b-4b08-b426-0ea7d630b7b5",
        "cursor": {
          "ref": "ff306dfe-a5e6-4522-b208-3f8a054f7fc4",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d2f3d454-bad8-4295-860d-b1fb28271117"
        },
        "item": {
          "id": "9ef83bb0-646b-4b08-b426-0ea7d630b7b5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "81962c61-af65-43ec-b718-8639892ccd7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8858b3da-3d93-4db7-8c33-2298171c19b0",
        "cursor": {
          "ref": "c63e25e1-e4d9-4b7c-9250-291fe2cb6430",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b88be78c-7a9c-44ff-834a-ceafb92b811d"
        },
        "item": {
          "id": "8858b3da-3d93-4db7-8c33-2298171c19b0",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "36cba919-b67e-4d10-85be-12e748d32ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b46239-1b72-4062-8c6b-16086e0ae6d1",
        "cursor": {
          "ref": "3848ffab-a356-46e4-b99c-395b156f7c1c",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "196ceca3-a6f4-4b3e-a48a-4eb072dee220"
        },
        "item": {
          "id": "51b46239-1b72-4062-8c6b-16086e0ae6d1",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0349cf70-6401-4e90-8a31-25a211cefc6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9919ae-b423-415b-9035-0abad6353bfb",
        "cursor": {
          "ref": "2665441a-e708-4a8c-8047-f5f06bc58df6",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "11775021-85f0-4356-b71c-d08f416a4071"
        },
        "item": {
          "id": "df9919ae-b423-415b-9035-0abad6353bfb",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "79a7da2a-2679-4b2f-a51b-ead891d476b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e3052e-4e3b-4771-acbc-7346f56ef061",
        "cursor": {
          "ref": "79406980-2baf-417f-9bbc-a4647bac5264",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "516d2297-8492-4b6f-9d1c-76090c95ff71"
        },
        "item": {
          "id": "69e3052e-4e3b-4771-acbc-7346f56ef061",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0d277e1f-0d1f-418e-97dc-3a973b9e5409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231e6b86-24b5-4f8a-a7d0-166f7527e6c1",
        "cursor": {
          "ref": "0e11a8f1-c435-4523-9624-b464f09f74c5",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "da3ff9a4-0bea-428f-9ff6-87789ea5c21b"
        },
        "item": {
          "id": "231e6b86-24b5-4f8a-a7d0-166f7527e6c1",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5a71c2bd-103b-4acc-806f-70ae4d8cd49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914c82c3-8165-468e-b411-ae63d89d5bf5",
        "cursor": {
          "ref": "9cc90639-a73a-479e-80e1-d6d238e00b03",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "20c2ee6b-cbc9-4ac0-916d-bf4c1504a9ac"
        },
        "item": {
          "id": "914c82c3-8165-468e-b411-ae63d89d5bf5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b97530e4-fa16-4cf7-a798-3b631cde7b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18567a3a-3362-44a7-8c06-d4a729a7ae6a",
        "cursor": {
          "ref": "9216f400-a262-410d-8454-ff867c51a113",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "284ef476-02cd-436e-87b4-8b43fe42fb13"
        },
        "item": {
          "id": "18567a3a-3362-44a7-8c06-d4a729a7ae6a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "bf385d97-a0b7-4d1c-a65d-6fb5eeef933a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40866cf-ded6-40e8-9f8c-965456f1fb89",
        "cursor": {
          "ref": "5ba5713d-e866-4f5a-8f6c-d80e2f435fca",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "bce0fffb-6042-45e6-bdf1-29dd8c72462e"
        },
        "item": {
          "id": "e40866cf-ded6-40e8-9f8c-965456f1fb89",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "064ca272-0807-40c0-aa29-951754dfacd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42eb10eb-b1df-4950-aec7-e0263281d57e",
        "cursor": {
          "ref": "452fe8a1-d82a-465d-a1e1-bb6eba90ccbd",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a16c4403-496c-4af2-b74a-88f26ab4b3b7"
        },
        "item": {
          "id": "42eb10eb-b1df-4950-aec7-e0263281d57e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d8045464-ec30-425b-a548-ddb4b36d47bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e964641-cc43-4d37-9ce0-f38aefd137a1",
        "cursor": {
          "ref": "65c73c95-88a1-43cc-8970-8395d56e7054",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5139873a-24f5-4669-a76d-5d1fa498428b"
        },
        "item": {
          "id": "3e964641-cc43-4d37-9ce0-f38aefd137a1",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "28bd56dd-1677-4c09-a439-5b4a10604404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b3323c-dc45-4ea2-9c32-7ea207823fa1",
        "cursor": {
          "ref": "b56203ad-8c6a-4413-91cf-91a1bbaa4cf8",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ac7048f3-8de4-493c-b21e-9aa642402fcc"
        },
        "item": {
          "id": "f5b3323c-dc45-4ea2-9c32-7ea207823fa1",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c8f60c8d-7284-4a4e-b4ce-476d502d70d4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f220558-09c9-4869-90db-5fb790bd271b",
        "cursor": {
          "ref": "1ec49955-5ce7-48e4-a9aa-9ee9fe0512b4",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e73f77c2-8c91-4c5c-8d96-72eabbca96b8"
        },
        "item": {
          "id": "2f220558-09c9-4869-90db-5fb790bd271b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "206bc120-3caa-447e-9dff-7e9e25740212",
          "status": "Created",
          "code": 201,
          "responseTime": 6342,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f32135-9651-431a-848d-fe627986f59f",
        "cursor": {
          "ref": "fdc160b0-0ff6-461c-9789-3d5521dd6f24",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c18867b5-9421-41d1-9696-d599dcbaec11"
        },
        "item": {
          "id": "71f32135-9651-431a-848d-fe627986f59f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "30471247-d4a3-47f2-b2ab-29ee3bbdba77",
          "status": "Created",
          "code": 201,
          "responseTime": 5790,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8f9c7a-8d57-41fc-bf52-50b66c92d6b8",
        "cursor": {
          "ref": "e82c308f-3eb1-419c-9090-bd9b91852a2c",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "cf14d4b5-e150-4294-b1bd-830919f63f33"
        },
        "item": {
          "id": "7e8f9c7a-8d57-41fc-bf52-50b66c92d6b8",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c0b3989e-4c47-41f6-bdac-52a94f2f4199",
          "status": "Created",
          "code": 201,
          "responseTime": 5651,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d4881a-0f1b-4fa9-9c94-2c588bcb2b1b",
        "cursor": {
          "ref": "2727b4b7-145d-44f6-95d6-40555a8fbcb1",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9e14f231-64f6-4223-aa0f-e3ba6983614e"
        },
        "item": {
          "id": "d3d4881a-0f1b-4fa9-9c94-2c588bcb2b1b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "cb0b212c-1f45-406d-8b8f-4db5ac8c08e5",
          "status": "Created",
          "code": 201,
          "responseTime": 6310,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30bfd01-4b26-4873-8531-4ba650715ab9",
        "cursor": {
          "ref": "65d56f1a-7f25-42aa-a037-cbaf62761aca",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "cc90704b-6f39-4e63-a1ea-172eacedc459"
        },
        "item": {
          "id": "f30bfd01-4b26-4873-8531-4ba650715ab9",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "58e6bb5a-b7c0-478f-bb6f-e0ad662c0b3b",
          "status": "Created",
          "code": 201,
          "responseTime": 6123,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "214fb200-9cde-484f-9d1f-c2506ca03d36",
        "cursor": {
          "ref": "5093057d-f14e-485d-8f80-1ae92b696acd",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "58413f52-274a-4f5d-9c4d-acb51edd940b"
        },
        "item": {
          "id": "214fb200-9cde-484f-9d1f-c2506ca03d36",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0b869ce3-506a-4e8b-9a39-7051dbb2c0a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "b5d7070a-3145-418f-85a5-5271ee071efd",
        "cursor": {
          "ref": "c932fa8d-9440-4db2-98c9-4061e37f8a8b",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "fe4d9f5c-ebb1-4b11-b235-43bc1a0a67a5"
        },
        "item": {
          "id": "b5d7070a-3145-418f-85a5-5271ee071efd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c7de4a26-b1cb-4405-a329-9e2e44683664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68fde0be-4b96-4c3c-94fb-109cd582b314",
        "cursor": {
          "ref": "1eb6e876-0123-4ec2-b85c-8cae9b9d7b81",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "784d2a29-e67f-48d2-9151-627333ded3c8"
        },
        "item": {
          "id": "68fde0be-4b96-4c3c-94fb-109cd582b314",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b801485a-27d3-4c5c-99e8-7ec69c58bee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5169844b-19ea-4104-9622-11d59825bed0",
        "cursor": {
          "ref": "0d112ba1-bd74-4a39-a50c-1ed0b0eb5d9b",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "67895aa4-e5ed-486b-8b0d-62fadae44730"
        },
        "item": {
          "id": "5169844b-19ea-4104-9622-11d59825bed0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "abedf0ca-10d9-487b-8533-88bf5a824976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a85d42-8837-4ac1-a11b-0fc83550f0dc",
        "cursor": {
          "ref": "e8de8d3e-57dd-48c0-be52-8aecfc0613b6",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5bb2a05f-cfaf-434a-9a44-76251018bd14"
        },
        "item": {
          "id": "f8a85d42-8837-4ac1-a11b-0fc83550f0dc",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6042aa7b-b2f1-496e-a257-4612216c73a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d0f862-7814-435c-8e11-a280605999c6",
        "cursor": {
          "ref": "55c4091c-c84c-49a9-8a6f-e1bd267a6e41",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7c5d2783-9585-4371-8cb5-251f72b2252b"
        },
        "item": {
          "id": "91d0f862-7814-435c-8e11-a280605999c6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4e303550-740c-4e35-ae82-9a145c340ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb509a6-8383-4336-a9fb-5589b896132d",
        "cursor": {
          "ref": "8531b8a5-f49a-4624-ab7e-375adbfeac48",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "41dee87b-38e7-46f3-8c1e-9275e4ae9287"
        },
        "item": {
          "id": "0fb509a6-8383-4336-a9fb-5589b896132d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "02cda880-8255-4b70-b1e9-38ae163c22dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe652b2-c0e7-455c-9f15-42dfe340b546",
        "cursor": {
          "ref": "7553a675-4bb9-44ac-baef-5e14dd74beab",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b1cfa935-8fee-465f-81a6-baf6fa376f8d"
        },
        "item": {
          "id": "dbe652b2-c0e7-455c-9f15-42dfe340b546",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "24a056c1-00d5-474f-8395-3b5b36f99893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3f3362-02a6-4b5f-98b7-1bb78c822551",
        "cursor": {
          "ref": "9ef4df68-d1a9-472c-96cb-7b5646bf31d9",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "406cdf30-ae65-40ef-b546-7f313ce34f71"
        },
        "item": {
          "id": "4f3f3362-02a6-4b5f-98b7-1bb78c822551",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a392753a-b403-4abd-8bf4-5e9650d82e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c969a52c-ddcf-441e-9f5e-da5c8bdc51ab",
        "cursor": {
          "ref": "d48670f4-77ba-4773-a91f-8e4292285a02",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "54cc92e6-f48f-415d-8d08-d057f0feb041"
        },
        "item": {
          "id": "c969a52c-ddcf-441e-9f5e-da5c8bdc51ab",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c4e49621-5608-49b9-a860-9190d3b589e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b323f2-4887-41f2-982c-f6882cd24741",
        "cursor": {
          "ref": "9900d4c0-63da-4740-bd72-9cb88a3842a7",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b7b65485-2c0b-42f8-8051-bc33dde51043"
        },
        "item": {
          "id": "73b323f2-4887-41f2-982c-f6882cd24741",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8f465c2c-44ba-4dd8-a865-3792a4ba9b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9940942-6d81-48b2-9d3f-ac3427eff73a",
        "cursor": {
          "ref": "b58a9d53-b6c5-49cd-91e0-c86f43279f71",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "74016f0c-83e4-4397-8a8e-8350305b287f"
        },
        "item": {
          "id": "b9940942-6d81-48b2-9d3f-ac3427eff73a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0782cd1a-e418-4de0-a83e-d707f026191a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8205ba-f752-41c3-957d-03ecb60541e6",
        "cursor": {
          "ref": "f84688c5-cb98-4af8-89bc-578970c72078",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "fbddbce7-518b-43d2-ad1f-d00fa120cb21"
        },
        "item": {
          "id": "5c8205ba-f752-41c3-957d-03ecb60541e6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "dfd6b0a3-8630-4b0d-8cef-6e7a8003fd75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca4fefc-e0e1-42c2-ade8-d2d62419661b",
        "cursor": {
          "ref": "d573790b-18b1-41bf-86e9-bfe2d6c0928b",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "fb1c46b7-edeb-4392-b38a-0f557253babf"
        },
        "item": {
          "id": "0ca4fefc-e0e1-42c2-ade8-d2d62419661b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3481e521-fd00-4698-8fc8-f0e6aa68e981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ee768e-7597-4735-906b-af714cb58b23",
        "cursor": {
          "ref": "0dcb3316-f3ec-4fef-8246-4bd007f5639a",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4472169b-60db-439c-8e45-23d85b2c967c"
        },
        "item": {
          "id": "12ee768e-7597-4735-906b-af714cb58b23",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "521d202b-beb5-4434-8f32-2aca7b1fb8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1514d215-b076-4842-8e21-75e8f32ed331",
        "cursor": {
          "ref": "8dad1095-7fca-48fa-a90a-c6e362d46c37",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "eed33c27-bc2a-4198-9d69-7850e0971700"
        },
        "item": {
          "id": "1514d215-b076-4842-8e21-75e8f32ed331",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "481bed0a-6f37-423a-ba5c-4d2c35b9e7b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ae1c66-4637-4b47-aeb6-cce6c6aabc61",
        "cursor": {
          "ref": "40f7e65f-84b7-4db6-90bb-e9e899f436e2",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "3117712e-8d59-4a2b-af5f-a13aeac47ffd"
        },
        "item": {
          "id": "a3ae1c66-4637-4b47-aeb6-cce6c6aabc61",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f7702a9e-9dfb-4d96-91aa-3e6b7c372a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58949fcc-a8b8-4f8f-add9-61dd0d03858a",
        "cursor": {
          "ref": "242162c8-82a1-4178-848e-dfb13386dc22",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c6c6ea2a-8cd5-4b40-a48b-54e6f42f95ca"
        },
        "item": {
          "id": "58949fcc-a8b8-4f8f-add9-61dd0d03858a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "793a9022-8173-46ae-9a86-fac307976e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfdce737-1c76-4b83-82de-38cbb3d2f18f",
        "cursor": {
          "ref": "ed4035b7-968e-4d36-81c5-126b1ece608e",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "65b1725e-e5a2-43c5-bd61-7ca5ec240f72"
        },
        "item": {
          "id": "bfdce737-1c76-4b83-82de-38cbb3d2f18f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "419b30ef-451f-4c22-976f-178256dbe7b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ae12e3-f454-4822-9e22-87a50d0d853d",
        "cursor": {
          "ref": "ed5a071b-bb96-4fbe-bf71-4bbdf5de848a",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3b9d00d8-5dff-4441-8ef0-88f0ed51751d"
        },
        "item": {
          "id": "99ae12e3-f454-4822-9e22-87a50d0d853d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "aa93dda2-291e-437c-a58e-dac83b0d7253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf8c604-f3e5-4660-97b9-ab5f5e58a1fb",
        "cursor": {
          "ref": "f935739b-2900-46d0-a72d-2ea9355bc436",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "49ea2b4e-db9e-4804-8cee-1c0fc014c1c0"
        },
        "item": {
          "id": "3bf8c604-f3e5-4660-97b9-ab5f5e58a1fb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "193fe308-6963-462f-a2f4-781079d858ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb7387f-f236-4ebe-b5f9-6a57bfac2767",
        "cursor": {
          "ref": "6bc922d5-a6e9-4cac-868f-fc55aff88e00",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "777819ea-d7f5-4201-8571-e7b9c4b03b95"
        },
        "item": {
          "id": "2bb7387f-f236-4ebe-b5f9-6a57bfac2767",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "de5dbf47-b159-4912-bb69-01f91301c986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a1cdda-10c3-4bb6-a72a-49bbf4478d93",
        "cursor": {
          "ref": "5c8f1c87-e775-4011-984b-f86f71a410d2",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "266a5ce5-9239-49a8-94c6-6d73e4c1b02b"
        },
        "item": {
          "id": "e2a1cdda-10c3-4bb6-a72a-49bbf4478d93",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "58d0b4a5-fbc2-41f9-97cd-b01034c61da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb45f2c8-2472-4f3d-8e7c-988cae14c886",
        "cursor": {
          "ref": "e2786744-47e2-4690-8019-a84274a1ee0f",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "40879c1f-9cf5-4531-9aca-378c6a7894ce"
        },
        "item": {
          "id": "cb45f2c8-2472-4f3d-8e7c-988cae14c886",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d9df70e3-8259-4b06-9c58-c5b9c32672f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326f376b-a3bd-4b8c-972e-6cd3aae432c6",
        "cursor": {
          "ref": "8ffebaf5-cbd7-491d-afcd-98a64a9248ec",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "77fca1f2-893d-42b0-a129-828f8194f620"
        },
        "item": {
          "id": "326f376b-a3bd-4b8c-972e-6cd3aae432c6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "bb54ed05-dc68-4912-8947-02e5e1f75448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8b6ec6-9051-4b1e-befd-33b9ab693fd5",
        "cursor": {
          "ref": "2a27c977-cd5d-46e1-ad2a-861fe6c74dbf",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "85210bd4-1e4b-4fcf-a68e-9ebe4fdb798a"
        },
        "item": {
          "id": "da8b6ec6-9051-4b1e-befd-33b9ab693fd5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c6dc2e11-8af8-49ec-9c47-bab9b627419a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6752cf14-a04d-44d3-a7c9-287d3b119936",
        "cursor": {
          "ref": "32cba3ab-b94c-49ff-8546-990fc6668650",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0f7a7f68-9a64-4988-9fe8-28635d8c0696"
        },
        "item": {
          "id": "6752cf14-a04d-44d3-a7c9-287d3b119936",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5f0d43fe-b9dd-4e78-b818-b00fef7f58cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb92c73-51d4-4771-9461-d8d2c841895f",
        "cursor": {
          "ref": "67af159e-4c2d-438b-ad16-30f9b7b8985f",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "91d33538-e181-4c31-a450-32f54bc0fd8d"
        },
        "item": {
          "id": "4fb92c73-51d4-4771-9461-d8d2c841895f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b1d93590-ebad-41b4-9953-9cb9a969a783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b99cfd-6615-4ccb-b344-8089b4d33848",
        "cursor": {
          "ref": "f0cda9d5-c893-4a60-b2ad-6500bb36ec59",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a8f48318-2e3f-4836-af69-1d266424d584"
        },
        "item": {
          "id": "77b99cfd-6615-4ccb-b344-8089b4d33848",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d42b5cc4-d5d3-4107-b42e-af671a481e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19892e9c-6fe5-4898-9586-4557d513ce6b",
        "cursor": {
          "ref": "12a1e230-0ae5-44a8-aa32-6a92d5337ab6",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "bb8175d0-148f-458b-9548-fa2f549cc807"
        },
        "item": {
          "id": "19892e9c-6fe5-4898-9586-4557d513ce6b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "11053775-e264-4ec5-a64f-00b90abfdba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "506ff05e-2e2c-487f-98fa-07e55e923ab7",
        "cursor": {
          "ref": "3320fdef-55a4-425f-ad31-7e294848a1c1",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e33e390a-827b-426f-b313-674cfc42fa5b"
        },
        "item": {
          "id": "506ff05e-2e2c-487f-98fa-07e55e923ab7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d219fb04-0d84-4681-ab2e-7b94f384942e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d20dcb7-4cdf-49c9-b119-5271b9f03551",
        "cursor": {
          "ref": "1ec616a7-04c1-4886-9554-e593abd147b1",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b390c578-6296-4ff1-842e-87a0ccb884cc"
        },
        "item": {
          "id": "0d20dcb7-4cdf-49c9-b119-5271b9f03551",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8ecf25bf-1016-426e-966f-d7b77b18b655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee391e3-77a2-4c28-8df1-8303b3547b77",
        "cursor": {
          "ref": "bf121f33-610b-49b6-9e1a-fa0709cd08a7",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "967b9ebc-366c-49d3-90f0-6eb75160f73a"
        },
        "item": {
          "id": "4ee391e3-77a2-4c28-8df1-8303b3547b77",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ebd5b9c6-c7a1-41f5-a040-07d20c20467c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81722867-7743-494d-a45f-ee5b42fb8852",
        "cursor": {
          "ref": "5741cf49-8936-4643-ab94-147539fc1a7e",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "cb850c4c-6d0f-4fa5-a1fb-95243a8bc4eb"
        },
        "item": {
          "id": "81722867-7743-494d-a45f-ee5b42fb8852",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b4ed67cb-982a-49ab-b8c3-5844f0641b7f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc223d1c-d4ca-47a9-ae0e-8516b9cfa13b",
        "cursor": {
          "ref": "4c0780b9-2cd8-4568-9a8b-b28a071f0673",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a6ab882a-42ff-4d6a-ad2a-20ff9d138c89"
        },
        "item": {
          "id": "cc223d1c-d4ca-47a9-ae0e-8516b9cfa13b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d14cbfe1-de65-46a0-ba56-772f92721be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b76a1c-dafb-47cd-b15d-6236bced825f",
        "cursor": {
          "ref": "4b1829cf-a23e-4226-9ba5-b120c9640332",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1178de00-1b41-4ef2-9b60-1d025d0909a5"
        },
        "item": {
          "id": "c4b76a1c-dafb-47cd-b15d-6236bced825f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6022bc79-d5eb-4d46-92db-3792adba6f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5978f7-139d-4819-a89b-99f10e884501",
        "cursor": {
          "ref": "3effe965-0ff4-4d31-92be-d9c8f432d27c",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "15df7c2f-a5a0-4aba-96bb-1aae8faff684"
        },
        "item": {
          "id": "1c5978f7-139d-4819-a89b-99f10e884501",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "20e74baf-4b4b-477e-97bd-8b8393376f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "281a701e-bcca-46ca-b674-6d6f95c865e3",
        "cursor": {
          "ref": "b0d37d6c-c063-4969-9fcf-0effde7924aa",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "29487675-c39b-4566-bb2c-3a526be3ffee"
        },
        "item": {
          "id": "281a701e-bcca-46ca-b674-6d6f95c865e3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3cc95220-6118-4146-9b30-59711e915422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c143cb9-65fd-4a82-a594-8be864af17d1",
        "cursor": {
          "ref": "c22006e1-8ec1-4117-8aba-2615298cfe8f",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8fe2fe3a-6ef1-44a9-abbf-90c826a49c16"
        },
        "item": {
          "id": "9c143cb9-65fd-4a82-a594-8be864af17d1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "145d0cb9-e3c0-4b55-9b16-2cbb8ab3545d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1920cf23-9b7c-453a-bc4b-42baa5ef0509",
        "cursor": {
          "ref": "2e182a7e-d04e-4db9-bebc-9fdc2231bba4",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5f2e34d0-9f57-4a9c-baf8-3577f73c41c4"
        },
        "item": {
          "id": "1920cf23-9b7c-453a-bc4b-42baa5ef0509",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "35acbffd-bdbe-4c7e-af69-d81bdb456f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b158e7cf-3ec2-41c6-8f33-6ecb6f833451",
        "cursor": {
          "ref": "5ff17f49-c4e1-4e66-b62d-ce2a2615b7f8",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c316e0a4-61ac-44d9-b3fa-1ebdf4d1df32"
        },
        "item": {
          "id": "b158e7cf-3ec2-41c6-8f33-6ecb6f833451",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3c86cda1-5624-4f57-bc8e-bd65b222e703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77af6686-d984-4edc-8d13-3a17b65de35c",
        "cursor": {
          "ref": "07275131-e98b-4989-a0df-6dacc4252f0a",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9c4dcec0-b773-4fc2-b1f0-62a634ca1084"
        },
        "item": {
          "id": "77af6686-d984-4edc-8d13-3a17b65de35c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3c0f512c-24d8-4343-8a5a-c3b46f0c20f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95dc89d-38d1-44b5-ba14-fc59f7df5602",
        "cursor": {
          "ref": "ac6dbdd4-7a21-4b84-8a4d-93ae19806a56",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "88a03a9f-2350-4359-a2b4-0c133e5c5e2f"
        },
        "item": {
          "id": "a95dc89d-38d1-44b5-ba14-fc59f7df5602",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5ff69e15-2835-410e-8718-e791a7fdff4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1967129-afaa-4ab5-b5d2-73d116e402f5",
        "cursor": {
          "ref": "872e5e33-fd05-4932-a230-f197a473bca0",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "55eb15f0-1933-4187-9dfc-2103e6389cdd"
        },
        "item": {
          "id": "f1967129-afaa-4ab5-b5d2-73d116e402f5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "74c42ae1-de8d-47d5-952b-406f24f4f2b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccaa9b35-64c0-4077-be33-3b23598c0bea",
        "cursor": {
          "ref": "4502230e-8565-4dea-95e4-8a6aea00b9bc",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "962790e0-4e35-40af-b06a-dd49b57121c7"
        },
        "item": {
          "id": "ccaa9b35-64c0-4077-be33-3b23598c0bea",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7ba17a7f-5ef2-426f-b7ff-30c2efb27d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c6e8cf-8c57-4398-afab-1f724e90d2bf",
        "cursor": {
          "ref": "f13627a8-94b8-4afb-bdc5-3c278346d58f",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "edc7e59a-7eb5-4eab-bd65-5290d6efb99f"
        },
        "item": {
          "id": "39c6e8cf-8c57-4398-afab-1f724e90d2bf",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ab59cc9b-fc94-4a09-897b-9d8c7a975491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25129f7-f567-421c-97dd-290ec0848129",
        "cursor": {
          "ref": "dcfbc146-b396-4b12-92fb-9570326edb6a",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7e244748-3615-42aa-99c0-cf33c5e1052f"
        },
        "item": {
          "id": "c25129f7-f567-421c-97dd-290ec0848129",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "12c8db99-eab3-4e5e-9745-358f13cf0fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4e254e-894a-48bb-a831-7315bbd174dd",
        "cursor": {
          "ref": "0ee09492-4620-4884-bbb5-fd65cc4d5aee",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "fd645c18-3bde-4e7b-98e8-0a3c12ac02cc"
        },
        "item": {
          "id": "fb4e254e-894a-48bb-a831-7315bbd174dd",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "80441b31-f0c3-4438-a6e4-a8f5a2887dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa3e22e-8a80-4052-b813-b3545ed915a3",
        "cursor": {
          "ref": "618850a4-bdc2-40bc-be6d-1de042701b95",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "551f83e4-97ff-4d41-ab25-af53d4eaae8c"
        },
        "item": {
          "id": "5aa3e22e-8a80-4052-b813-b3545ed915a3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "708ebcc8-30f4-4297-94ca-6e4675055351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a6bfa2-127f-47e0-83cc-c27bff3e772c",
        "cursor": {
          "ref": "7993bf5b-911b-426b-8ad6-a9dca266ac6b",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9077d842-149e-4c16-8a62-751dee1f659b"
        },
        "item": {
          "id": "16a6bfa2-127f-47e0-83cc-c27bff3e772c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4c947bb2-6b7b-4fe8-b4fd-47150c5ec087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa27e4cd-1573-4156-b37b-b41a50974e5f",
        "cursor": {
          "ref": "d1f6377b-37c1-467a-8546-36b7337f5469",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8e54f7b4-51b8-4193-9ac1-3b60a1a333f7"
        },
        "item": {
          "id": "aa27e4cd-1573-4156-b37b-b41a50974e5f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bd3f2aa6-76a8-45e0-8bb3-d19eae749707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cfa277e-d85f-4fe9-89f9-6aea90ba1b2a",
        "cursor": {
          "ref": "c28334d8-8d78-45b0-ab96-0bc9ee87b5ea",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7ea8264f-b58b-4700-b4c6-d7ef6fe8b4bb"
        },
        "item": {
          "id": "1cfa277e-d85f-4fe9-89f9-6aea90ba1b2a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a2ac6251-17cf-4916-b66e-b30e80f8152a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a13b5a-57c9-4edd-96a7-7da0496ea99c",
        "cursor": {
          "ref": "91f7461e-f407-4961-b922-6e2fb93a8bb2",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e4d73864-dafd-4fbb-a381-743e3c28d03e"
        },
        "item": {
          "id": "e8a13b5a-57c9-4edd-96a7-7da0496ea99c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8f9a42e7-ad6a-4589-9f90-4233cc835e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05ad081-7c04-48ec-b64f-5f82c91dd4fa",
        "cursor": {
          "ref": "7c8d5112-497a-43be-ad2f-f754a677a924",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "bf61bccb-1228-41d4-9b63-c0720b7e4895"
        },
        "item": {
          "id": "d05ad081-7c04-48ec-b64f-5f82c91dd4fa",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ea3beaa8-0776-49ef-97ed-beb798454b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729e8021-9456-439c-9971-b81108250e59",
        "cursor": {
          "ref": "f5cfa852-92cc-4298-bd7b-c5750f5ec4e7",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a04ebb76-2b4d-476b-90ca-a32fa8c5314e"
        },
        "item": {
          "id": "729e8021-9456-439c-9971-b81108250e59",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9bfe44d8-5a91-4478-8efe-95d78cb0ebaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c581d15-4c07-4da8-bcf6-3c2a5c94ac55",
        "cursor": {
          "ref": "98575d69-7d84-4d49-a91e-fd40dc5c7f24",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "dd8976e2-e62b-4d79-aceb-089b6c0d75ae"
        },
        "item": {
          "id": "5c581d15-4c07-4da8-bcf6-3c2a5c94ac55",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9843695d-9f67-4b54-a979-fcaf7848aa5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14dd3be5-7d4f-45e2-91b1-c7913920737e",
        "cursor": {
          "ref": "6d704847-9783-4b62-aca9-5dad67e2b1ab",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "19ca3d18-a396-4efe-89f5-fd6940a2fc3a"
        },
        "item": {
          "id": "14dd3be5-7d4f-45e2-91b1-c7913920737e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3c3422fd-4cf8-40cd-9b25-44a1902f724c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866454b9-9a18-467b-8d67-cecaf39a35d7",
        "cursor": {
          "ref": "de0d1ab5-bd06-4412-9e3e-daaf57d298d1",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "86dfad34-bec5-46d5-87dc-25294023796c"
        },
        "item": {
          "id": "866454b9-9a18-467b-8d67-cecaf39a35d7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6eca4f0f-9f08-46fb-bd46-1993f3c87df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942bce6d-95b4-4650-9825-41dc0fdf5610",
        "cursor": {
          "ref": "3028a3d8-ea2c-4f2e-a306-efd6b697823f",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8c1f44fc-f12d-4270-8649-2e89754cc09c"
        },
        "item": {
          "id": "942bce6d-95b4-4650-9825-41dc0fdf5610",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5fd32bd8-73e8-42ac-9dde-b45ac68b6930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec89824-6fbe-4af1-9f46-ab70323bb110",
        "cursor": {
          "ref": "5ebd88cf-45c5-441f-88b3-03f38f1ebe8d",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "271b46b1-1f80-4047-b788-f4594ad095f2"
        },
        "item": {
          "id": "aec89824-6fbe-4af1-9f46-ab70323bb110",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7074ffab-8e27-4992-b8c6-c8e0311baf21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e37fd9f-6081-40d0-9bf8-ca54d6dbb869",
        "cursor": {
          "ref": "f178c4fb-516d-4ac9-a214-523e45a120e5",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5a2ed30b-32fa-4a41-9125-9a8e85e5500a"
        },
        "item": {
          "id": "3e37fd9f-6081-40d0-9bf8-ca54d6dbb869",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a15003b3-3b90-49c0-a1a8-5fde6a270673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6588f1fd-da75-4f83-9c78-91b761d69425",
        "cursor": {
          "ref": "0e553c45-fe62-40f8-a20e-1f0431f9a6d4",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "5661c8eb-6be0-4db2-9594-c8128d033759"
        },
        "item": {
          "id": "6588f1fd-da75-4f83-9c78-91b761d69425",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ffbe9569-99a3-4fdc-88f1-8be28045e41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b15d421-8b85-4855-b53c-21262aa50a9a",
        "cursor": {
          "ref": "c266602b-69ee-4fc4-86c0-e885a2fa4d54",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2bf5b692-81dd-400b-8238-59e378c0de6f"
        },
        "item": {
          "id": "1b15d421-8b85-4855-b53c-21262aa50a9a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "20d2e405-7f65-4329-98af-5cf832c2122b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c04290-adae-4d30-aa37-50a21e811d0f",
        "cursor": {
          "ref": "a43b4bfe-8e4b-408b-b68a-4c7c8aeaec9a",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b55dcebe-4905-45d6-a080-737385862892"
        },
        "item": {
          "id": "41c04290-adae-4d30-aa37-50a21e811d0f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0e6bb977-1cfb-482c-88ee-0a8eeb69f1ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90aaae8c-c428-45d5-b769-9b3ec22c2bf8",
        "cursor": {
          "ref": "bb4e5b2a-32ae-49af-b606-eb9e0d04ef0e",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2eeeb642-3935-4db6-9a97-1e2ed2c62d94"
        },
        "item": {
          "id": "90aaae8c-c428-45d5-b769-9b3ec22c2bf8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f01d03cb-b331-4eb5-b07d-b6ee9a3169ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84aab821-5741-4bba-9f6d-523741cc251f",
        "cursor": {
          "ref": "636499b3-9870-48e2-82d2-513fe01a424a",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "57a4248d-2238-4d3c-9078-60befcf5e3c3"
        },
        "item": {
          "id": "84aab821-5741-4bba-9f6d-523741cc251f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "5fc81f81-2318-406e-83e2-385f4441f3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75347fad-86cd-47d9-a18f-9410cf11f1d4",
        "cursor": {
          "ref": "a4e51e7b-32e5-4f5d-a508-9421985b8952",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7e92d09b-4c93-46c3-8158-3f89973feae3"
        },
        "item": {
          "id": "75347fad-86cd-47d9-a18f-9410cf11f1d4",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7d2bf6e7-51ae-45cc-b56e-ca6310830674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b23268-0821-4324-8ca3-29507e3013b2",
        "cursor": {
          "ref": "50a0809f-bd55-498d-81ce-d1a44bb222ef",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "59438227-e5b2-4c19-b1c2-51549278fac0"
        },
        "item": {
          "id": "43b23268-0821-4324-8ca3-29507e3013b2",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "7be9ced3-684b-4989-b524-a21eb903012f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef602db-af64-4803-972a-51834bdcf743",
        "cursor": {
          "ref": "810acd26-03ae-4d4c-b8f7-3df104e39127",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "838f076f-8f23-4dcb-b28e-e51c89b76258"
        },
        "item": {
          "id": "4ef602db-af64-4803-972a-51834bdcf743",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "bed9f29c-1fb9-4738-b4d0-238f5983ca1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650edc6e-a121-49b9-be95-887555a3fe66",
        "cursor": {
          "ref": "77a7e5f3-1f89-415d-984f-277b4a47b317",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0f4d2296-0c04-4263-8d98-148db881451f"
        },
        "item": {
          "id": "650edc6e-a121-49b9-be95-887555a3fe66",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "830f9c19-f020-48d7-972f-6e0184dcdfba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16137f27-0670-4f7b-8396-bafcbc724de4",
        "cursor": {
          "ref": "e12fc837-3d32-4f67-b821-36dcd34fd541",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e3e2322d-5a5d-4031-a604-b0891f425b51"
        },
        "item": {
          "id": "16137f27-0670-4f7b-8396-bafcbc724de4",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "bbbc13ce-46b5-413b-b8a7-5e7bce30cdce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e074dd-fe37-4770-9d8f-3dde3002aef9",
        "cursor": {
          "ref": "dd53204e-7d41-4be0-82f5-0e8833532b2f",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ecb737d6-48bf-475e-9d5e-50f5cd8f659d"
        },
        "item": {
          "id": "26e074dd-fe37-4770-9d8f-3dde3002aef9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e784ab0a-a6af-491f-8cc9-bd91323b093b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 86,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51375280-778a-4807-8e64-52de458ec5ea",
        "cursor": {
          "ref": "27dfffe8-7c75-4d0f-a072-5b7f6df7ff81",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "04ea4122-fd22-4175-a333-eff12fa2d30c"
        },
        "item": {
          "id": "51375280-778a-4807-8e64-52de458ec5ea",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ff7a6ada-f95d-4306-a3f2-00da9b9c9f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a9766e-18d5-4613-8b9e-a9fcb0e727d0",
        "cursor": {
          "ref": "5eb2e387-f49a-40bc-9a9c-e2dec5307b0f",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "31a35cfd-6d07-48a9-9f60-08686e9688ed"
        },
        "item": {
          "id": "06a9766e-18d5-4613-8b9e-a9fcb0e727d0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0f1e2478-64c0-4f4d-a95b-bc294f5ad670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd07f7a-368f-4602-87fd-6ef40a5fdb4a",
        "cursor": {
          "ref": "1e99e9a7-25fe-4257-b10f-acd61fdd113e",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "821488f5-4b5c-4694-8e08-e0edb119b830"
        },
        "item": {
          "id": "2fd07f7a-368f-4602-87fd-6ef40a5fdb4a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a64a4d85-b77f-488d-ab75-4b1f20dce4a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c32363-ece1-4eaf-a4ce-3f30b090fd25",
        "cursor": {
          "ref": "8807771e-b203-4c3e-a652-5ced35227fbc",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "002090bf-7834-4b7a-90dd-736ae346e27f"
        },
        "item": {
          "id": "b0c32363-ece1-4eaf-a4ce-3f30b090fd25",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "81bfd90f-609f-4b18-9310-2d0448116688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11997a7-202b-475f-bb97-cee9b2180bf1",
        "cursor": {
          "ref": "032ed83b-beb7-4254-99f8-5c063fd8100d",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ee13db43-f8b4-4c4f-8e05-7a8a344531eb"
        },
        "item": {
          "id": "e11997a7-202b-475f-bb97-cee9b2180bf1",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ec1d8774-0bc8-4d7b-be4d-249cd6ae7461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9fe1808-fe77-42fb-b9ea-7bcf59f65f70",
        "cursor": {
          "ref": "6c65fb17-f344-428d-a591-4f736a1f9986",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "810226a2-0143-45a3-a632-3ff70b6d801f"
        },
        "item": {
          "id": "c9fe1808-fe77-42fb-b9ea-7bcf59f65f70",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "776d4187-ad3f-43c9-aea3-d27b9dcadafa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106c4d81-2b75-42ad-b166-4d9d2293fa2a",
        "cursor": {
          "ref": "7e51f5c4-6378-462c-aeaf-0da32833acab",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ed46aa1c-bc59-465b-8ca7-394b548a5965"
        },
        "item": {
          "id": "106c4d81-2b75-42ad-b166-4d9d2293fa2a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2028adf8-672c-4e9b-b9f1-e75074435bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e789a9-3937-4cec-89f8-1ebee39141d9",
        "cursor": {
          "ref": "8bad1697-1903-4f39-8bd1-817f064233ca",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8d84cd83-ec91-414b-af15-330ce2dcc8f6"
        },
        "item": {
          "id": "30e789a9-3937-4cec-89f8-1ebee39141d9",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "03997139-4693-44b0-a2cc-4a66ea6219e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd6e13a-0392-4bbe-b396-60b0b66c05a8",
        "cursor": {
          "ref": "a3ea6efa-6713-4593-920d-7b2e4158dfd3",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b1a46752-cf75-439c-bc96-bf4fd20ffa36"
        },
        "item": {
          "id": "0cd6e13a-0392-4bbe-b396-60b0b66c05a8",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "87a5ccbc-18cd-4b28-8387-fa1c86f80297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eacfa7b-adc4-4d23-94c5-fe58e1beeea0",
        "cursor": {
          "ref": "b0562286-4573-4b31-98c2-5690d3860c9e",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "be122bae-99a1-42f6-bab5-5bde547083bd"
        },
        "item": {
          "id": "7eacfa7b-adc4-4d23-94c5-fe58e1beeea0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "27739352-6479-499e-a638-5665a8b9e50b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f882308b-052a-40d6-a95c-6e2f608fc79f",
        "cursor": {
          "ref": "82bf424b-5dc4-4f77-953b-aaca40e5f8de",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "83950229-752f-4c1a-8e32-7a211712375e"
        },
        "item": {
          "id": "f882308b-052a-40d6-a95c-6e2f608fc79f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d6ab5e5e-4481-44c8-b387-715d810c8297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e2c673-da14-4d22-a669-7c283c666f96",
        "cursor": {
          "ref": "00b98dbe-9203-46be-a11b-004c3347b2e2",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "295e796f-bfbb-4d13-8062-7dfdd4d2094c"
        },
        "item": {
          "id": "a4e2c673-da14-4d22-a669-7c283c666f96",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f0edca23-e1b6-48bd-99f6-12e5c7545d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848c5365-d4f2-4f49-91c1-abe3b4c2561b",
        "cursor": {
          "ref": "be428dff-d888-4312-b282-2fabda06e934",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3f87746d-10f9-401c-aace-225712a79fc7"
        },
        "item": {
          "id": "848c5365-d4f2-4f49-91c1-abe3b4c2561b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "62710472-063b-487a-9353-cf0aa5b9b51f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9979ea81-caad-4b7c-a7e0-ee7e44989388",
        "cursor": {
          "ref": "f72b3604-3179-45b8-b65d-12c66ffb949b",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "56bc111c-26ba-4f45-80d2-434d1ce33744"
        },
        "item": {
          "id": "9979ea81-caad-4b7c-a7e0-ee7e44989388",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9daf6087-9fcf-44d1-a38d-e61880679937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09212270-4452-489b-b15a-fe23e5b95aba",
        "cursor": {
          "ref": "35f9a70e-d102-4f9a-a42d-32e59194739d",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9164681f-4602-4578-ad96-ef90d96d2878"
        },
        "item": {
          "id": "09212270-4452-489b-b15a-fe23e5b95aba",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c76cca8c-26e6-4a34-ae15-cd4c6d0f44bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4308d0be-c4de-415b-b531-bc69dedb8f73",
        "cursor": {
          "ref": "00d14ed5-6ab7-41a4-947b-196279059397",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "07aae846-e172-4088-a17d-c20e3fad1af5"
        },
        "item": {
          "id": "4308d0be-c4de-415b-b531-bc69dedb8f73",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e08ecab5-de6a-4eb0-8afc-55a6d00459d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b856a2cf-4e9d-4aca-8faa-94ca773d1b7f",
        "cursor": {
          "ref": "611d7d07-96ce-4e8c-9dd4-a8cf7fd33dc5",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "46583394-c8d2-427c-877d-e539d9a0965a"
        },
        "item": {
          "id": "b856a2cf-4e9d-4aca-8faa-94ca773d1b7f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "90aae9bf-0517-449a-ba47-7ed2ad300688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972d88dc-1c8c-4e5e-a2f5-016bd76c6105",
        "cursor": {
          "ref": "e710ae59-2fe3-452e-b9c8-d9c7bae84582",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9d1c1170-5e15-469f-81ea-64d3a2f6c9d4"
        },
        "item": {
          "id": "972d88dc-1c8c-4e5e-a2f5-016bd76c6105",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "80284e2f-6bf2-43a1-a87e-d9fcfd15fadc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced85cc8-d26d-4e73-a503-e193f58c5f0f",
        "cursor": {
          "ref": "1f2b8cd3-95e7-4a4b-91be-5a98eb3a6adf",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "843b6ae8-1015-4a87-8099-e5abf2228a8a"
        },
        "item": {
          "id": "ced85cc8-d26d-4e73-a503-e193f58c5f0f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "65237b6b-f755-4f4c-ae29-387d12cea7df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eaa9f4c-464a-498d-8aa3-0100d240d2ab",
        "cursor": {
          "ref": "f9f7b473-51e6-4518-93fc-a73faea1f95a",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e2d366fa-1695-45bf-ba74-61a8962a0a89"
        },
        "item": {
          "id": "6eaa9f4c-464a-498d-8aa3-0100d240d2ab",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "767476bb-6345-4cbd-ad57-b204d80c1c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97490143-fb3c-49bf-8792-a84d0f1f65ce",
        "cursor": {
          "ref": "4889f88f-e006-4dd0-b1fe-c95b8bb24b14",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "58d3f017-e6cf-46ec-96be-f52d2f988eeb"
        },
        "item": {
          "id": "97490143-fb3c-49bf-8792-a84d0f1f65ce",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "01d64d37-4af8-4052-b307-ca57ed3dfc3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f60cd6-299b-4da3-b0e0-c1f4dd47b90d",
        "cursor": {
          "ref": "850f6276-d440-4287-9640-80b4cd958d0d",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "06d449fc-48a3-40ad-a435-1ccc5cde2ca7"
        },
        "item": {
          "id": "a1f60cd6-299b-4da3-b0e0-c1f4dd47b90d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1a205c56-30c1-4550-ad2b-f95912b91971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0669f76c-f0ab-43d2-8a56-899f3ee7b09f",
        "cursor": {
          "ref": "7786288f-1b0c-4252-88b1-826ab642297f",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "6a79a853-5a20-4273-a5b6-4c3c66da2221"
        },
        "item": {
          "id": "0669f76c-f0ab-43d2-8a56-899f3ee7b09f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "973a1cd0-b64a-4764-ac3b-929b0c0d67bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17fbcdf6-8be3-483a-a157-8a31fa3b1844",
        "cursor": {
          "ref": "e22da9ff-819f-4384-b3f3-c38673f8a0f2",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "81bece25-5945-4d10-9661-15b6fb7c8233"
        },
        "item": {
          "id": "17fbcdf6-8be3-483a-a157-8a31fa3b1844",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "278c1ce7-ece2-451c-868d-443b77730067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a055af1e-ca52-4cff-b70e-9bf9e0a852e7",
        "cursor": {
          "ref": "16130bff-8208-4625-9eac-44a942a33e42",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "47d7e89f-d5fa-4a2b-881f-00e716ef744d"
        },
        "item": {
          "id": "a055af1e-ca52-4cff-b70e-9bf9e0a852e7",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "56103d6d-1d17-41b2-ae5b-b360a75c376f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2323672-fed1-41a1-a04f-5c9d2faa11b5",
        "cursor": {
          "ref": "32c7e754-d21e-495f-8427-51792f338bae",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "bc96dcc4-9694-4309-8037-55755d6208f4"
        },
        "item": {
          "id": "f2323672-fed1-41a1-a04f-5c9d2faa11b5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5097e5d8-7c0e-4f49-a800-db4207552976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2a8a0f-23f1-4c87-aa78-ed392b0005eb",
        "cursor": {
          "ref": "9eea6606-65f5-4dbd-adde-760985119c96",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1d9b0ae1-b67d-49f7-89d8-b2648df53d8a"
        },
        "item": {
          "id": "ba2a8a0f-23f1-4c87-aa78-ed392b0005eb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3b096b43-3322-43f2-9c7c-bd0a25daf518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5b8ac6-ae46-4a8b-afe8-c8e0489deff3",
        "cursor": {
          "ref": "00bd0a3d-71e9-4022-9f55-fea87051e3dd",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b2c1c5f4-44ba-45aa-94e5-fe5757f389a0"
        },
        "item": {
          "id": "db5b8ac6-ae46-4a8b-afe8-c8e0489deff3",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0be25c78-18b7-477e-b571-d1f1c0a31af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2332dd4-14a6-4727-9a4e-2354e594e15a",
        "cursor": {
          "ref": "ddc70151-edf9-4d8b-8f58-f31bff1d6fa0",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5e0ece7d-a98f-4767-8206-46ca5e5896f9"
        },
        "item": {
          "id": "a2332dd4-14a6-4727-9a4e-2354e594e15a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a752dcf1-2f1d-4bdb-9a0e-c88c8461ae43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e5a1aa-2a49-4cf3-8ce1-121b38d713a5",
        "cursor": {
          "ref": "489549a4-efa8-4938-94b2-b191af9c177e",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "33f8ae3f-5aab-45ba-a417-463b1f1920c7"
        },
        "item": {
          "id": "11e5a1aa-2a49-4cf3-8ce1-121b38d713a5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "22c6cf05-76ee-40ba-9999-6fc359d4eca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecfcefe6-d311-4730-abcd-05f293db3604",
        "cursor": {
          "ref": "a6331814-d3ec-406d-830b-6fc67f5c3bb2",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9b977170-612c-4a73-b10f-bd9d12fce7e1"
        },
        "item": {
          "id": "ecfcefe6-d311-4730-abcd-05f293db3604",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "46154b6f-a552-487d-8e5f-01f80b27a236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30edafd-9623-499a-a904-b2f5d1744a3a",
        "cursor": {
          "ref": "58534871-d204-4394-a08b-f40d4988061a",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "27fbf7bb-776c-4ee2-8c7b-3e2ee22b4a93"
        },
        "item": {
          "id": "c30edafd-9623-499a-a904-b2f5d1744a3a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8b6faaef-a2a7-49da-a275-53ae3a1c1255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0026f283-bb57-41d7-837a-e2ebe6a3c4a6",
        "cursor": {
          "ref": "4482ee99-f8df-4c63-ae21-00e94e1cd31b",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "af06b4fe-386a-452f-97b1-71fc86726396"
        },
        "item": {
          "id": "0026f283-bb57-41d7-837a-e2ebe6a3c4a6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8b0d39a7-4874-49ba-a868-d6c91e525e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afac5b4c-d1c0-4607-920e-5e917bf9fbd8",
        "cursor": {
          "ref": "ff53a642-df0c-44cb-b3f6-233029976c7d",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e9188587-9891-413a-9f8e-944b887f032a"
        },
        "item": {
          "id": "afac5b4c-d1c0-4607-920e-5e917bf9fbd8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0f635ff0-9487-4186-ba0a-c8083e056396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1836694-f205-484f-917c-9f184b2cbe0a",
        "cursor": {
          "ref": "280aa103-85da-4678-b87e-244801120feb",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "4e849499-d7e8-45c0-9404-cbfdcd84593a"
        },
        "item": {
          "id": "b1836694-f205-484f-917c-9f184b2cbe0a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9d3d144b-3a47-4d11-bfd2-5a4d38ba2a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1459b2ef-f21f-403e-bcfe-797fe277b9dd",
        "cursor": {
          "ref": "c94fafa7-4bd3-4ae4-b03c-e2cc3cc90666",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3fe0f38c-fb99-4b4d-bf47-9841722abae8"
        },
        "item": {
          "id": "1459b2ef-f21f-403e-bcfe-797fe277b9dd",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c93c4312-a2b0-4ed6-ab17-af45ac49833e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6734764d-a586-4684-be72-e5ad49cbc023",
        "cursor": {
          "ref": "a05da690-2ab3-44f2-97a9-0266c5ad1bc3",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "fa0cf701-d3b6-4420-bcf3-ffe4aa3d59c5"
        },
        "item": {
          "id": "6734764d-a586-4684-be72-e5ad49cbc023",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4aeaf07c-a239-44d2-8de1-89a71d578268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b577a9-a087-4474-87eb-99d1dd84e357",
        "cursor": {
          "ref": "a1605e86-d344-46c7-8965-441b9f6fda8b",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "78559510-e5f7-489a-9d7b-ce64c83fca48"
        },
        "item": {
          "id": "88b577a9-a087-4474-87eb-99d1dd84e357",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5fce8c33-c7ce-4b69-adec-c527a4f9a95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97bed86b-d120-4363-9547-3b4c4576250d",
        "cursor": {
          "ref": "26470242-6340-4eb8-baea-cbcaa233bae3",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "fcbfb3f6-56f8-4100-bdc9-c030504c058a"
        },
        "item": {
          "id": "97bed86b-d120-4363-9547-3b4c4576250d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e672e489-b5a4-4932-843a-793a55207d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e288ac-e15c-48a0-afca-656f17db6d09",
        "cursor": {
          "ref": "0b20c583-426d-45f0-8764-a310fe6b0ff7",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "488b78d0-be4b-46bb-93a9-c810f950dda9"
        },
        "item": {
          "id": "05e288ac-e15c-48a0-afca-656f17db6d09",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5ce7612f-e507-444d-b29c-6bc7b908cb71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c378b1-7974-4e2f-b317-2f457fd5cbaf",
        "cursor": {
          "ref": "adf0c356-c445-48c2-922d-fcc4d09d27da",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b5b0463c-9e94-45fc-a9a0-9892e0bebb5d"
        },
        "item": {
          "id": "64c378b1-7974-4e2f-b317-2f457fd5cbaf",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1c096635-d5db-46e6-9d99-dbf04108d4b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150bc8ad-7373-480d-a3aa-ef6433067734",
        "cursor": {
          "ref": "a583fea4-f5df-4ffe-9749-c38aacb8aad9",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e4fd2279-7ee3-4214-85cc-0f11f5f88a77"
        },
        "item": {
          "id": "150bc8ad-7373-480d-a3aa-ef6433067734",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "76d9a451-602f-42a7-bae3-a7d4a8b76ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31cbced2-6bbd-4fa3-be2e-53b584626b48",
        "cursor": {
          "ref": "b39d657d-b1d8-426b-a6c7-9316fb93b036",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e2bcd5e5-264d-44a8-8c89-97f9cd3b29dd"
        },
        "item": {
          "id": "31cbced2-6bbd-4fa3-be2e-53b584626b48",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1317c2cf-58f5-4c5e-a512-c05e6b0697d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37f23cf-81e9-4b94-b5ff-74717ba47d36",
        "cursor": {
          "ref": "78241c38-e6a8-4d74-9622-c23539bd96bd",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "38b0272f-ca90-4fdf-aa30-8a78a2348ae6"
        },
        "item": {
          "id": "f37f23cf-81e9-4b94-b5ff-74717ba47d36",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4143527a-3074-4786-8aa1-a3f5657b8ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1243558b-ceab-49c0-9b97-f8baaa4c1864",
        "cursor": {
          "ref": "93b3d58f-8c1f-42f0-98ca-5a0c32af9045",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1f111406-db08-4b96-a73e-ae89eaadfd86"
        },
        "item": {
          "id": "1243558b-ceab-49c0-9b97-f8baaa4c1864",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "090c1e29-c34b-4c02-8c57-41c8c62cbbfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a73348-30f2-4a5a-8a3c-683c4740b0a8",
        "cursor": {
          "ref": "eab428d2-9616-464c-b333-54125fcef6e9",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a063a499-bf08-415f-95b3-67d6bf01fb85"
        },
        "item": {
          "id": "87a73348-30f2-4a5a-8a3c-683c4740b0a8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8d93b81a-b865-410c-8193-e7916b53306c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf770d4d-aa3b-4d21-861b-c277721b317f",
        "cursor": {
          "ref": "aeb941b5-34d2-4019-afb2-639c64d4cc64",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "df26b27c-2a35-4f36-ba69-ce35691ad1b4"
        },
        "item": {
          "id": "bf770d4d-aa3b-4d21-861b-c277721b317f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9fb98274-8970-4348-9c83-8ece3126f7f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07d1b24-f556-4a53-8d34-69c1e60e1f1c",
        "cursor": {
          "ref": "0b8a6c61-de88-4e1b-9dde-7c378a8cbd35",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f7ced9eb-3baa-4420-9690-a5db9d3bb65b"
        },
        "item": {
          "id": "e07d1b24-f556-4a53-8d34-69c1e60e1f1c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ed9c2618-41c6-4928-837a-0a52a11621a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752eb435-1aa1-4db7-bd9a-595b77f2dac5",
        "cursor": {
          "ref": "9ed4155a-6170-435c-9087-7cdcc17b14ac",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "15d96667-bac5-49f8-ad0e-b0b405e73305"
        },
        "item": {
          "id": "752eb435-1aa1-4db7-bd9a-595b77f2dac5",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2c715551-3f52-497a-823b-1c797b41717c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931b1afc-e4e0-41da-aea5-daf3a28c0a83",
        "cursor": {
          "ref": "53be1df4-6978-42c7-ac89-6f4e85bf2066",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1f1fb05e-8538-49b0-9653-06e822151b55"
        },
        "item": {
          "id": "931b1afc-e4e0-41da-aea5-daf3a28c0a83",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a69affd4-d0a7-42e3-b658-97b13383f683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32389acf-b06d-4518-93cc-db50b66aa209",
        "cursor": {
          "ref": "f5d2c69e-90d2-4806-baa0-a624e6ee504d",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c6ae3eb0-1404-4027-a8c7-11de72e10145"
        },
        "item": {
          "id": "32389acf-b06d-4518-93cc-db50b66aa209",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "46465684-7040-47b5-874b-904fa5a39ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7daf1e25-a55e-4eee-8b3f-1c9954baf5c5",
        "cursor": {
          "ref": "c049e068-7bb5-4ea3-a709-f92411b894fa",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a5337663-f90e-45f0-887f-ffc59c8899e2"
        },
        "item": {
          "id": "7daf1e25-a55e-4eee-8b3f-1c9954baf5c5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a279d44f-2b6d-45d5-bfdc-bbc43fd3b44a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c70593-2651-4d25-9e80-69c32916002e",
        "cursor": {
          "ref": "0352f550-724b-41f2-be49-513b57be4601",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3ef027cd-baa6-4dda-ac88-254104a86dbf"
        },
        "item": {
          "id": "63c70593-2651-4d25-9e80-69c32916002e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b280fb0a-3562-42e9-8ea4-3bf0b58d0c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e758985d-0aac-43af-81b0-b2c7b968ac60",
        "cursor": {
          "ref": "d95e46d6-61c2-4724-8473-3152eba74de3",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b43ea94b-f9ac-4d59-b24b-3be3fb964e96"
        },
        "item": {
          "id": "e758985d-0aac-43af-81b0-b2c7b968ac60",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "50e7739c-2e4d-49d4-a13d-694b18ef6ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604d5bf0-1ea2-4498-b39c-a7ce9c200374",
        "cursor": {
          "ref": "a21da6df-3dae-4750-a36b-fd14cbbc73c7",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9dffb8c8-023d-4168-ace5-b6519e4b9401"
        },
        "item": {
          "id": "604d5bf0-1ea2-4498-b39c-a7ce9c200374",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d9c2a32f-0b43-415e-8615-73efc03cc50f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1d8ebb-7b96-4dca-81e3-1f4e1d877932",
        "cursor": {
          "ref": "5091b2f6-5644-4c36-98d5-6e6dc0b10278",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "be150be2-e580-456c-bdbf-d7f4cc01cfbb"
        },
        "item": {
          "id": "ba1d8ebb-7b96-4dca-81e3-1f4e1d877932",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "19a64c30-9af5-45a1-a544-f2d4b63ab99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803938b2-85fb-4bc9-88f5-4292355d9ad6",
        "cursor": {
          "ref": "47368d23-8946-43b8-b093-84888f05bdd4",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "53428bf1-6145-4399-8af7-d52cba695304"
        },
        "item": {
          "id": "803938b2-85fb-4bc9-88f5-4292355d9ad6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "50031680-824e-4cc9-b7cf-708b0ed3c2ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535ede75-70f7-434b-b121-1277cd6c2bf2",
        "cursor": {
          "ref": "55508dda-deed-452c-a850-fb0b1813092f",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8a0521ed-f868-48ef-a2c9-3969aa320a8d"
        },
        "item": {
          "id": "535ede75-70f7-434b-b121-1277cd6c2bf2",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c5c793aa-2cb2-43dc-b3de-b19699a2813c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28f0cda-aa77-4728-8951-7c23d97766a8",
        "cursor": {
          "ref": "b88d8ade-5cf2-4653-a2de-6186bb609ad3",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "262f869a-2ce9-4a2d-bb5f-5a9596c58ed6"
        },
        "item": {
          "id": "c28f0cda-aa77-4728-8951-7c23d97766a8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "881999b3-3cd4-4ad0-94d2-cac74c083423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6343e016-5698-405c-9217-b62395d74fba",
        "cursor": {
          "ref": "e8c0e16f-1513-4ffe-9277-172fdb5d092e",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4f8c8822-387c-40a5-877f-2b565d2aa502"
        },
        "item": {
          "id": "6343e016-5698-405c-9217-b62395d74fba",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b11d9372-0d23-4daf-bf61-2b5ba577810c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0a4a22-92d0-4546-8e0a-5dfaab368804",
        "cursor": {
          "ref": "a45b7ea9-0d57-4791-a965-0cde52528413",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e0fa303b-8a6c-4724-af18-b048d4d5f725"
        },
        "item": {
          "id": "ad0a4a22-92d0-4546-8e0a-5dfaab368804",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a20cd02d-cf43-4f01-967a-0e0630982423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c162c0-4653-48cf-a04e-c5710c6e4f79",
        "cursor": {
          "ref": "034cc0ba-f255-4856-8c09-1c1c1d9b38f1",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "21355923-c936-47c6-a6f6-e6735cfb4e16"
        },
        "item": {
          "id": "e6c162c0-4653-48cf-a04e-c5710c6e4f79",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d8e18a9e-a246-4a15-9661-c9a92d138c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd1e44e-49c1-4dbb-9233-d56967657403",
        "cursor": {
          "ref": "8e425c5e-e90f-4e1b-b47c-1a062dffe5c0",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b8ed11a2-0b1a-4b35-86e8-b597171e703b"
        },
        "item": {
          "id": "cdd1e44e-49c1-4dbb-9233-d56967657403",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ccd5c066-a4b1-4e0e-b62d-c6f8330d9a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2178d5e-0525-42a9-b000-022c34fee1a0",
        "cursor": {
          "ref": "51adcc3a-1f56-4b5b-aa5e-a5a3ab293906",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "64a311aa-cfd9-4056-b684-2e63b031dfe2"
        },
        "item": {
          "id": "d2178d5e-0525-42a9-b000-022c34fee1a0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2a2da7dd-3771-482e-8fe2-acd33494c0c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee280c4-fd70-4307-8290-5d0e5b20711b",
        "cursor": {
          "ref": "f4059c75-c854-4e01-a095-e0d4c29e7d51",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "505e9f5d-3c83-4606-a264-369054313cae"
        },
        "item": {
          "id": "fee280c4-fd70-4307-8290-5d0e5b20711b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d15d5048-c5c5-46a3-a47d-71eddb62ea64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f0e5d0-06ae-4ae3-a9b7-2e5c57721e65",
        "cursor": {
          "ref": "b8ea8d20-83c3-4710-ab03-cbd4b131ba5d",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "17add6ac-89e8-433b-ba91-00ed95e929b7"
        },
        "item": {
          "id": "81f0e5d0-06ae-4ae3-a9b7-2e5c57721e65",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3fa61709-142e-4c85-a48d-478254ce9bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b54f54-40de-4ccf-9c7d-7817da5f4a9f",
        "cursor": {
          "ref": "9a8c744f-c72b-4f15-95b5-8c98f542caa1",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0a5dacdc-37ef-4f5e-993a-2a0176426557"
        },
        "item": {
          "id": "46b54f54-40de-4ccf-9c7d-7817da5f4a9f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "be7b3f4b-33d1-4ddc-acbb-c1ad123750ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71f72ca-fbf1-41e4-a392-2ff5c60acb13",
        "cursor": {
          "ref": "27673549-a2a6-40d7-ae65-5ea573039e4e",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a03f6e88-c8ea-4999-9fbd-b7ff6e72bd8c"
        },
        "item": {
          "id": "c71f72ca-fbf1-41e4-a392-2ff5c60acb13",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "01c1e9ca-f203-466b-bce8-95063ac1b932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a37d205-c49f-4ec7-bfd2-27767b2f3455",
        "cursor": {
          "ref": "a8e2dfbf-e8c4-4a2e-a73c-81f9d02cd5f1",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "77f24f18-6bed-47c7-97f8-19c83cd84cfe"
        },
        "item": {
          "id": "2a37d205-c49f-4ec7-bfd2-27767b2f3455",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a36270b1-b306-45c4-a0de-651ad4d20c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3898d1a-6036-46a7-847f-37bf47b9053d",
        "cursor": {
          "ref": "bd372044-746d-480a-9d04-ac0359066c6a",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1e5b1013-4e2e-40d4-b6b1-e1303bf35830"
        },
        "item": {
          "id": "a3898d1a-6036-46a7-847f-37bf47b9053d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "29ebd334-2f2b-4518-bf39-04b74cf17139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94dacfec-401e-4a3f-840b-246d37847309",
        "cursor": {
          "ref": "e03c2f12-bd97-409f-95ab-462b434faef2",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "adaccf02-bf00-45a0-bade-565c619f7853"
        },
        "item": {
          "id": "94dacfec-401e-4a3f-840b-246d37847309",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7c86f8de-6285-419b-adab-2196936b30fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44612bec-175c-4d78-bedc-f8a66cbd5deb",
        "cursor": {
          "ref": "2c0810dd-7d36-4c5e-ad0a-6be3b0ec6f37",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e2717662-40b5-41bd-bd41-7a2328447a56"
        },
        "item": {
          "id": "44612bec-175c-4d78-bedc-f8a66cbd5deb",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ea8b4313-5e76-4829-8cb4-181a4bd4293e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "578065e9-1c8a-4636-8590-9b2d70b66f21",
        "cursor": {
          "ref": "fe8ee17f-35e6-4d26-be72-73d1c1c37415",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "a965a423-0620-4ed6-afdc-9fa083406f9c"
        },
        "item": {
          "id": "578065e9-1c8a-4636-8590-9b2d70b66f21",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "55b6125a-8864-48f5-9e04-174b82c3b0ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1adda09e-b488-4840-9516-81b2e9c6562f",
        "cursor": {
          "ref": "ee534f40-b34e-447c-8c16-8c18a962a667",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "d16076e6-4ea4-46fb-819b-4ab9792dfd62"
        },
        "item": {
          "id": "1adda09e-b488-4840-9516-81b2e9c6562f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c1731b2c-2ff9-41cb-a00c-88689d5e8f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e0671d-0aa2-4dfb-b97a-5c6d442eb6c6",
        "cursor": {
          "ref": "0edf2a62-eac7-4947-ad35-0a0c55910e27",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "c9de95f9-a9a1-4e65-a7e9-228ea4a83f12"
        },
        "item": {
          "id": "c9e0671d-0aa2-4dfb-b97a-5c6d442eb6c6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1cf8356b-886b-4914-bfd5-5de53b3b7202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4838a55d-c7b1-4b21-bdb0-5f5fc6748ae4",
        "cursor": {
          "ref": "54bd41d7-040b-44e5-858b-88292fbdde17",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "c2cc42ca-b3b0-444d-b428-dd61edc2ceff"
        },
        "item": {
          "id": "4838a55d-c7b1-4b21-bdb0-5f5fc6748ae4",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e5d1f87e-1aac-4349-971a-fca93896d532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2bd076a-7369-40fc-80ca-25faa23f5c37",
        "cursor": {
          "ref": "ba33ce49-b769-4459-af72-4076a233c2d4",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "b248c155-8ecc-48b9-b795-fe0971738833"
        },
        "item": {
          "id": "e2bd076a-7369-40fc-80ca-25faa23f5c37",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5c7348b1-8c14-46a9-baff-5f8f16725366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b4ca57-813b-4391-85aa-16b3a1497185",
        "cursor": {
          "ref": "13a9cc20-c501-4c93-9c70-1a94a6a2999b",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "e62dd94b-27ef-48c4-b6ba-a2ead7522bcd"
        },
        "item": {
          "id": "57b4ca57-813b-4391-85aa-16b3a1497185",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4aabaa09-2a83-4d7f-b7ff-ab5bcd8b5663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7bbfdcd-bb03-47ef-a5ef-5bed6a6efb05",
        "cursor": {
          "ref": "ec7b5af5-e219-4e0e-8a4a-96439424f751",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "c0d57ea2-0b54-4602-9976-9901741cc085"
        },
        "item": {
          "id": "a7bbfdcd-bb03-47ef-a5ef-5bed6a6efb05",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ac54cf1f-ecfb-4f80-aa61-db55723ecb07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c46a11-0a6e-4d48-93f8-2ebbec9d95a4",
        "cursor": {
          "ref": "1fd6a983-9ec6-4a54-a57b-e424f35846ba",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "4643ce63-c053-41bc-b6fd-07e401ba103f"
        },
        "item": {
          "id": "d3c46a11-0a6e-4d48-93f8-2ebbec9d95a4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "58eb8372-9e2e-4e9b-9b48-adfb26b6dde3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4888bb03-0363-4c91-8d2a-a41d98933bb0",
        "cursor": {
          "ref": "aa8a1cb3-57be-42ab-8295-bbb86840b141",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "642f2664-5a19-470d-8387-b513185c61cd"
        },
        "item": {
          "id": "4888bb03-0363-4c91-8d2a-a41d98933bb0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "67aa9043-3a0b-4650-ae0d-5a1cd94d77f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fdf6b5-84db-4321-be97-03f1d16ba489",
        "cursor": {
          "ref": "6aebe79e-6fa4-4fb2-9d65-d8432b95f5ea",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "d427234c-56ac-4829-a95f-a67b4b9d8ce4"
        },
        "item": {
          "id": "c4fdf6b5-84db-4321-be97-03f1d16ba489",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4b026665-aa11-4bbe-8e20-48348904e72c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e22db3e-98bb-41fc-b2d6-84796d27bcdd",
        "cursor": {
          "ref": "f5f09d31-2b79-4886-9b1f-4e739d7b9d99",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "a6337b37-404c-4a8d-b8a2-67a7f3670f94"
        },
        "item": {
          "id": "0e22db3e-98bb-41fc-b2d6-84796d27bcdd",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "77511ceb-2f24-4298-8f0f-7ee9cf31de5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec712f02-335a-4be5-80dd-a26c426308ed",
        "cursor": {
          "ref": "3fb7b9de-ef97-44c9-99a8-278a6ee380ea",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "5a5350ba-f316-41e3-9f56-a00a09c7f734"
        },
        "item": {
          "id": "ec712f02-335a-4be5-80dd-a26c426308ed",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4bd4d44b-350e-4f25-a6b5-f213d7325cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48336e3b-a550-4dfa-8ad5-ee69cd7a5f46",
        "cursor": {
          "ref": "ad44e713-e279-414e-9be5-a734a81bbcfe",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a03a4982-9cf1-4b87-9a04-170e04c285cd"
        },
        "item": {
          "id": "48336e3b-a550-4dfa-8ad5-ee69cd7a5f46",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "481404bb-dd2b-42fc-828a-dfe743bf0c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ea91bf-45aa-47bb-99b5-1725af7adb6d",
        "cursor": {
          "ref": "8416788e-d701-4bdb-ae8b-cb6f9107a556",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "95464e29-f9e9-4532-8f9b-4df62c20869a"
        },
        "item": {
          "id": "c6ea91bf-45aa-47bb-99b5-1725af7adb6d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4af8dccf-7113-47ed-bd4a-aee1fbc948ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3b76f1-9583-46ef-a0db-71fa4e2b09e5",
        "cursor": {
          "ref": "e9e0d460-0bb3-43d9-8fcd-587ca12d11d4",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "496c6cb0-6097-4be9-a29f-388956f07f17"
        },
        "item": {
          "id": "cf3b76f1-9583-46ef-a0db-71fa4e2b09e5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a9ba4761-9d22-4299-ab3d-489b6ad5bb38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87fea19b-0d8d-4b97-93f5-deb5310e6924",
        "cursor": {
          "ref": "c581c83e-0f3b-4932-8728-383cd7ae0dde",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "81ec7fb4-5c85-4235-a914-bc8bdcf2e3a8"
        },
        "item": {
          "id": "87fea19b-0d8d-4b97-93f5-deb5310e6924",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0cce62e9-4205-49d4-a0ac-2f3346a3fba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2820e326-c93c-43c2-9d55-5c51e57da296",
        "cursor": {
          "ref": "77cbb944-8215-4e1a-b1c7-d17bfb86c6cc",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "b2fe58b4-946f-4f0f-a265-d64da3ad37fd"
        },
        "item": {
          "id": "2820e326-c93c-43c2-9d55-5c51e57da296",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "65563f19-98f9-46d4-ae97-179a353a5209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992a91c5-6ede-4046-a8c5-42da7d191b15",
        "cursor": {
          "ref": "2ea02437-2785-4e77-9e01-2dca30a5a87b",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "2bbfc83e-f178-4ee6-b2ad-f37d612c292e"
        },
        "item": {
          "id": "992a91c5-6ede-4046-a8c5-42da7d191b15",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3f5e6e59-efd2-42c7-849e-9834bf924f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12542e1c-4d72-41a4-b4b6-b4e26c477fa9",
        "cursor": {
          "ref": "e917602d-ab1a-4e71-97cf-98bf38118173",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "13be6d31-d987-434b-af3c-51f32bd380da"
        },
        "item": {
          "id": "12542e1c-4d72-41a4-b4b6-b4e26c477fa9",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "38ac65f8-65fd-4db8-8e6c-cde4834ecffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226b8ba4-baca-4eb9-8136-16a01de088f2",
        "cursor": {
          "ref": "ba9060c1-79cc-4f32-ad5f-516f039787f9",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "bdd04094-cfde-473e-aab6-74141ac412ca"
        },
        "item": {
          "id": "226b8ba4-baca-4eb9-8136-16a01de088f2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "cc764897-94f5-4922-877e-e0c257a891d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99cc7fb7-5205-4f85-8f9c-8e49135c5684",
        "cursor": {
          "ref": "958adbe4-3f1f-44ce-95a4-4f34d683b554",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "6624c711-3f72-4f2b-8ecd-92529472b5d2"
        },
        "item": {
          "id": "99cc7fb7-5205-4f85-8f9c-8e49135c5684",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7fa01232-cf7b-4a6a-b862-bc8e9313abf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f054e20-c604-46ca-8138-951600849002",
        "cursor": {
          "ref": "58e056ee-ea5e-4304-8e49-c4b4787d343f",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "5afe862a-85f0-41a4-9fff-c4cf15f9e73a"
        },
        "item": {
          "id": "3f054e20-c604-46ca-8138-951600849002",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "00970595-f988-412a-88ee-65ef4e52a1f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49c3993-9cda-4198-9b60-0401a0391a16",
        "cursor": {
          "ref": "8fd2e21f-366c-475d-a417-b4b8c01e431b",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "1af1bc1f-048c-45db-a4a1-f332ae032a85"
        },
        "item": {
          "id": "f49c3993-9cda-4198-9b60-0401a0391a16",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "026af90e-14ad-47f2-b036-c9f8670eeefc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ac07f3-b50c-492f-8e62-23ac377d96df",
        "cursor": {
          "ref": "8e5bb50d-2fcb-4505-b4e8-59aa12b1c82a",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "25e73afd-e9e9-4be5-b33d-29ecd365e93a"
        },
        "item": {
          "id": "f8ac07f3-b50c-492f-8e62-23ac377d96df",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0803af25-44fc-47ff-b49e-edf1d0347c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e53814-4ca4-4b22-a807-8a3471bc9160",
        "cursor": {
          "ref": "e244c57d-3aac-4642-b773-762be4220e55",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "640e63b1-a6f1-4f97-bf58-a28302956104"
        },
        "item": {
          "id": "32e53814-4ca4-4b22-a807-8a3471bc9160",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c0fccf47-3633-42b1-90d9-2d934b7dc5fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf226176-e60a-486f-972c-5c0314757921",
        "cursor": {
          "ref": "30172750-55db-43ee-b99e-076e54958541",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "3146bd14-d0fd-4d76-87ba-5a391d4a6a76"
        },
        "item": {
          "id": "bf226176-e60a-486f-972c-5c0314757921",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "bddf55c0-fd8b-42d5-bfbb-5e93b2fab228",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ee2b3b-5a90-4d7e-9119-84a31507f149",
        "cursor": {
          "ref": "3d29a9cd-f616-4f90-9de4-ffa115ea500e",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "3f6c9c2f-2f23-4f1a-b3f8-8a4b107f1c20"
        },
        "item": {
          "id": "a7ee2b3b-5a90-4d7e-9119-84a31507f149",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2181c6b0-871a-46a3-a1fa-9060e396820c",
          "status": "OK",
          "code": 200,
          "responseTime": 161,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d33e3a-e7b2-4d36-9e24-a1486f3d3ff7",
        "cursor": {
          "ref": "a50abce5-7dbc-4046-b167-49fef7233172",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "aa047c6b-206d-49fd-89b1-3c78442664e9"
        },
        "item": {
          "id": "d8d33e3a-e7b2-4d36-9e24-a1486f3d3ff7",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8e4b7257-e97b-4169-bdf9-6c76bbfe9de3",
          "status": "OK",
          "code": 200,
          "responseTime": 1709,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c45364d3-08c0-4d79-89e5-1413f0f994c5",
        "cursor": {
          "ref": "f5063851-d7b6-4670-a402-f101fcb82328",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "b9858e8e-4b04-48a4-bd7c-ab19c8ff3f9f"
        },
        "item": {
          "id": "c45364d3-08c0-4d79-89e5-1413f0f994c5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e89f472f-5f02-4d64-81ab-3852b042bdc3",
          "status": "OK",
          "code": 200,
          "responseTime": 1302,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e35c9c-ac6a-40fa-90af-a3d26b98c0c3",
        "cursor": {
          "ref": "5a2c8c2c-6a3a-489c-a838-2e21db389c81",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7d78f54d-5bf7-4363-b755-0d8cb177ecb1"
        },
        "item": {
          "id": "30e35c9c-ac6a-40fa-90af-a3d26b98c0c3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b8a9cc6f-cfc9-4fa7-af38-d97f7f64fd3c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e35c9c-ac6a-40fa-90af-a3d26b98c0c3",
        "cursor": {
          "ref": "5a2c8c2c-6a3a-489c-a838-2e21db389c81",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7d78f54d-5bf7-4363-b755-0d8cb177ecb1"
        },
        "item": {
          "id": "30e35c9c-ac6a-40fa-90af-a3d26b98c0c3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b8a9cc6f-cfc9-4fa7-af38-d97f7f64fd3c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b419c83-7a2f-4988-a5b5-d9a446a860f4",
        "cursor": {
          "ref": "beacda5f-51b2-44bb-b240-d95e9dce1f14",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e2d2d78c-279f-42e6-b5d0-82cc1f19ef62"
        },
        "item": {
          "id": "2b419c83-7a2f-4988-a5b5-d9a446a860f4",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1cd542b9-ff2e-4b80-998d-f67afd1f6dbc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a965d58-d95a-4181-a9df-751bdc35d916",
        "cursor": {
          "ref": "9d4689a5-176a-4580-b59f-a598cc49e438",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "8782b54c-a61e-4bd2-bc67-6f2c929d579d"
        },
        "item": {
          "id": "8a965d58-d95a-4181-a9df-751bdc35d916",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7004280e-9bda-4465-810c-705b686d1872",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}