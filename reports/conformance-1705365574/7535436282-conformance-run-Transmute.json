{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "bc994299-094e-4d40-9030-dc40d131ca12",
        "name": "Clear Cache",
        "item": [
          {
            "id": "515760f1-8bdb-4904-b6c5-c0f3147b6db0",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "beae3f9a-4575-4b94-92b3-267f7a7ac25a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "372bc5d5-5f14-4ee9-a3e5-48fde8e76ef1"
                }
              }
            ]
          },
          {
            "id": "4456aec4-affb-4c33-8a60-0e61c160a49f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "44c232f6-7b74-4fb2-9db2-5f600fbd2ef6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f8ae50a2-5f2a-4433-a5ed-53c6ec37ccf1"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "aeaad1dd-d5ef-483a-aa43-69f5cb5e589e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ff820141-be1e-4d95-ba59-4cbdf6bb3bd3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "36ed130d-9bca-45fb-9ba4-25e879330f2e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "580e350a-603d-4ff2-80ed-4f7968bf34db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b253c6a9-7fab-42d8-ba03-9d9ee05446b2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9608d2c7-a906-4f3b-bf4c-82a7509e5c1d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "34ad675a-961e-4a78-bc81-c807e6f895af"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "adaf505f-1d3b-426d-9957-fd600b66e2c4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f9197c72-1029-4029-b7cb-a8a4f29a3fd2"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44d130d5-b1cf-4db7-863d-a86d9895a74f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "5982f52e-f208-420e-8fee-2be27e232d0d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d5e74017-0357-4e4d-8fe7-e650bf5a0ff9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2ecc38bb-e437-451c-9a0c-9facd51fd202"
            }
          }
        ]
      },
      {
        "id": "1b2e1b90-48e8-496c-9b19-6c1ddd426683",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "0bb6363a-70ae-4622-87b5-9471268e2616",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3df0d322-f90e-4a67-ae9f-56e927da7dc0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ec35cdbb-1183-4ee8-97da-40178e863e41",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08da047-ca92-40a7-9b25-1241a3504f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5f10dd6-df60-4a5b-9578-8fc7331e8d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4611aee-8d0f-47cb-824c-39fbe803451c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbf476d-d6fb-4f71-92ab-397c9da4f61d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "77d254fb-28e1-4823-a76b-bfdfae12b6b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7554ea0a-907e-45a3-80b7-d8083155ba53",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa91dbc5-6cc7-43fa-9d4b-0e9504d370ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c301dee-55de-4b08-b7ea-fe719c99b646"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "389e4ad0-865b-46dc-985a-7233c5215d0b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cf32487d-3be2-4a1c-9d60-7c3cde3a4d4b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c206ee5-a285-4ed7-82ad-ef68244b56b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b61534bc-358b-4e6e-b4ff-fb654db08579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2634b6-1439-45ca-9b17-41ddec51db5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c52c66b7-db81-45e6-8363-20aad38d51b3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "154560c9-8324-44c9-aea5-e271358e6f0d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b0aa4786-1af8-4cb5-ac53-76397fa1b278",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93e10bc7-66b0-42f7-8f7c-edfb86ae96e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "04f81b0e-e5bf-4b0d-b5ef-2f1b53bc843b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "313ef57f-2e06-4385-9015-d5f05b8eebf5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b68ceaf6-d4e7-42d8-8dc7-f701bae1165d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d05d7edd-8627-42fd-a904-f34ac7b64f1b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "70b73cc5-5c18-43ba-a77f-e35ae36e8974"
            }
          }
        ]
      },
      {
        "id": "8b8ad9b5-b028-46b8-b00c-1d8404f640f8",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6906f3e6-4be1-433e-8849-dd5bc5073bf4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "302c42d1-8b8b-4fe1-91ef-31f88a128077",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "69615869-d50b-4d1e-9a29-0443ec2bf487",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4d073a-c9b6-4595-9453-b36741ee0370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93cfa098-f47f-4f1d-a21f-d67329eeebb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7425f3d5-9276-4ef7-b04a-aa7038c46573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbb9c565-dbd5-4958-8533-a571db2ba2a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2ea35b-495a-4c7d-b6a5-c35675c76cf4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b245a217-a8d5-49ef-a115-e76ee6bb5331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0e9f510-11aa-4734-8a31-464841288708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43676691-5b21-4bf5-a952-6a2ce3024118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6d1ee16-435b-4680-8bcd-9f7ed0dcdc3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3e6500-634c-4cf7-b1fd-1a92f54c236e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d378ef-0125-43f9-a762-98225cf4d18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97152feb-6a8f-43a1-aa54-08d408e11c71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a9f3b7-2ceb-4710-a12d-c8afe7a87e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01de0223-0af9-49a3-9570-e4d2ce9dcfca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22b25f4-b48c-4aeb-9707-43269341b441",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b38dfc9-47bf-4803-9a41-ad72d8fa899b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f49354a6-2421-4899-807b-9a92ef206ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75dedd2a-268c-492c-ab92-0449c3433a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "915c8999-45fc-4d0d-86bc-2aaa4e95ca90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e666b0b-ac2c-4661-9e22-77c2f2ce62e0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "544635f3-843e-420f-9d80-1f9af5ce085b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0bc9135-7208-4923-baeb-ad005ba01669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee625e6-c388-4a87-8c31-2020d8fc6458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7455f3b-2b9f-4744-9725-f72851f7e68b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8143122-4c81-4579-b674-b091bd9514be",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5826849-4206-431d-a57c-9ebdf063e648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b966542-fa10-4f05-bbea-bc04a72e9636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f6fa73-d903-48de-b850-5b3b94f5393a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6eda43d4-29ae-47cb-9a83-49055ac24c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99b19a5-57b4-4c4f-b031-7278752f3ece",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2004db3b-897f-471d-8d98-faea5878a8ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c62e01-c73d-454c-88d6-79daf9ac415b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87046d86-43ac-48f3-9e4a-32bcacd90272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9bc9c1a-e59c-42e3-b5b9-5157e7310f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9bc25fb-3d5d-420b-8c63-53f5b64a95d6",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c13429-448e-4379-a8ad-67fa25219f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa316273-3a6f-4ea2-b9fc-e277092280ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb8bb1c-8b79-43fb-9a93-7ed18b23c05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90c3bec5-b78c-49ef-9f55-7d9d9eed169d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66ca47c-f981-4ead-9650-2ef0c728bdce",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d5f740-aeab-42f4-98c2-ebe49863c947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5750944-55c6-4a91-92ff-56d1e1f0004a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d05bb33-e2cc-4a85-ac25-ffb0a77439e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7adcdc4-f306-4719-8196-512813b98414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d76c6f-3beb-4d86-80ce-50c8d75f8579",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9223924f-5622-4368-b774-31c3a66d0717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a6a7822-40cb-4876-8b5c-5a339e56920d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373dfe50-567e-44ac-bfcd-15c7dc27a042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72a1c4cc-1028-4425-9899-48c42e03e4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83245811-3143-47d2-b7f5-5b7c4df76a63",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f19f1e0-c95c-46f4-bfcd-ae3dcfc3f1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f938c12-474d-40aa-892b-9ada95db5c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84be7263-0326-45af-b8d0-c44e0c789081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8007a791-a256-4aa3-9d68-b6c47610c6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e8354b-a20c-427a-8d2a-526100f6efa2",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3efc4a2-7e39-4c02-a2df-e074805b05a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a1f0e7f-0a54-4518-adfa-a5d96245c8b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d9e8f2e-6551-4318-b6ba-1ee64c639a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "021befe1-f4f8-4ce7-b11d-cba30cbeb111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4bb97b0-0639-48c0-9a59-86ee68421abd",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d664030-9321-4ee0-9a42-21be14901ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83abac2c-cc71-42e9-b4b1-867aa59a9044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16a1a6e-6eea-464f-b0f6-daac228c5221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8120fef-758f-4d4d-9f74-f33e2d631b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7451e28-4e64-4848-8d80-8b616b6539f0",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9aa812-b3db-402a-9f1a-558ad209e875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd5e6817-7acb-487e-9922-819f07a24d78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4db5b32-80ff-4ae6-80b0-c0fe1a350dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddee1260-6594-4d9e-aa91-50ba70eef3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929af481-6340-41b2-b720-34ad93c42dfe",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ddafd7-6234-4f33-be53-359a868312ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b23ae738-8faa-4d6b-b50e-00b3fa45de93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f07ea8-42ec-42a1-8cee-0919c9cc6e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "beaebac8-a957-4d22-b80f-baab82baeb3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44aa1a13-b44e-41e7-8a29-227a2f1160f0",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97edc388-ff1b-4255-b8a3-9c7950d6b9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8dff243-ba15-44d4-b916-1f30853b3b58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320cff63-8a09-4dc4-8587-0d05fb370ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9132b8f-80af-4d28-8de3-feda628a6c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad361a2f-bdef-49da-820f-5c954d702c73",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa0c80f-aa1e-406a-a589-85ca2e2d8080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "485affae-53c0-4605-913f-4d66b9822fc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9bfc56a-41ae-489a-a10e-468196346990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63001684-b8a2-41e7-8e22-db36b2538900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9dc97e-14c3-415e-804f-f6681297e7d2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aee77a7-d741-4485-a6cb-e32cadeb748b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acddeffe-1fe4-468c-973b-ab5d6da7f9cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5bf23d-3458-4970-90bf-bb26f6eb5112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6eb10adc-17d2-4d59-9d86-9e9cee388691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53c3aaa-8ecd-4792-b63b-c7cc65b17747",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70bc89c0-386d-4c83-950f-ebb4f7f12a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75131ac5-e936-4e7d-a2a3-8a446b667a0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7adef00c-46bc-4979-8e29-724670a57119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c26cbf3c-00dd-4a3c-a409-518b96dbfa50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6331374f-1bde-4b08-84d3-0dc7e0252888",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04ad335-0a6c-44ed-be24-e12b81c05909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e19f85-a65a-46c9-b6b9-41c36a3f1ea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c74383-37e2-4c64-884d-c9f892ccb9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e62a2438-0efc-4b3a-92ba-cac210743353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9755f12-942a-446a-bda4-713aff014c73",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7baa76ab-914d-409a-81e4-99dfd39c9998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "039125ec-453b-454a-b034-b30ca12cc431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b4f73e-50a8-4024-8a76-34851bf02840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f892dc56-dd39-4736-aa06-84f9cf61d134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5567ff-76f3-4b00-90bb-96ef33299b0d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c21f1d-441b-43e8-9a43-b678bb9e2a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfa529e9-8170-41d8-8746-620dd8bcb237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68eb1d78-96b3-45e6-9533-3744c83fc1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "797ec4ca-6a1b-49ed-8a81-48e9a519165d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ddcfdfb-8cdc-4d41-b55a-20945442518b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "222d589b-1bbb-406a-be91-e44deca732b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6b2253c-5564-490e-8b6b-4515948edaca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd877ac-3309-46c0-b8c3-a7b92f5f581f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e76f2558-d45d-4369-adb0-e6d6abe1e87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9a1ad1-69a6-4b17-80b8-1e4d763e8ac2",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "573e7bfa-28c4-4045-b00b-96be48c3ead6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d82e42d-a7ce-4c08-92c0-59660232e643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4039ea52-7388-45ff-879a-ba6e8cf7679e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9708889d-8b2c-407a-8c82-8a7658e8f933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ab09fd-301a-4f48-bf45-f2fb1190fe29",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbbf10c7-9602-4248-a153-312a5a71ce42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51dc14af-c0e1-4e37-baa7-889aede75dd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5a4d7f-73b5-42af-8e6f-3c7996c9b868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bde9fecc-8934-44fe-9a37-f7e57d34d0b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9678f359-7a47-49aa-aeaa-ab1278f205df",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43514b88-bf34-43b3-8063-460de41a5096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ca9c21-3ef3-4c87-8d0b-2cddd40a97fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ba290f-d959-4054-b2ca-703c17a0135d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f62ef35-0d68-4433-b6ea-b0a3274ae543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf88f52-76e5-4de8-a1bd-e58289c63a86",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a03207-48bb-4c83-a24c-4d836b94f826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bc99edb-15b7-4194-9b65-ce1516ca9f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757eec3e-ca04-4a89-8cd4-1d4a7e4ea40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcf93a4e-4edb-47ab-8d47-a2f68320f9ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0822022b-7a08-4bc1-b3df-438a53c5c08a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b326799-fbb4-4092-9a59-c288d6ecda1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aecd6548-3078-464c-b8d8-94e7c7058e13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ad11c7-ceac-4613-9ba8-f421cec6cc0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e97bb8c-233f-46c4-9488-91dc6543d712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2287fc4-1484-4237-9efd-8718de409351",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88910aaa-eb76-4ec7-806d-b6b55d3e35cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73368773-8b2a-49f4-9503-de139d27766a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d46ae4-ffb3-4cab-9197-ed4b5d1ef1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "650b7e16-1452-4f4b-94a6-cc4b0b219cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b18424-31c4-4dcb-aca7-42efca86b4a2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2a5f26-2680-4ba0-b2ea-dba791ff9a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72a2f452-021d-436a-b64c-1589094c605d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "369952fb-2876-47d6-b16d-7e4ca214debb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "48cb41dc-a923-4251-ab14-691e37f05846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "883a1b3a-89cc-4cbc-9c23-197f07c83fcf",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "045b741b-faf4-4200-95a4-fc4e66034e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c36478db-30be-4d3e-b059-8fb814677299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d828e1-dc0f-4c9a-9256-43e855ffb909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "418f3d4f-fc60-4a89-b5da-6a28bad3db05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0744d2d0-d8db-44fc-9b3b-bf44e562c5b1",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1097422c-fc00-4ee8-95bb-15d8f4a68c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07ac324c-207f-4565-ac29-d1bbbc916228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa004622-4efa-4a3f-bc96-0d9f15741a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54033f1d-a03e-4007-bf62-d2f07decca25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664fe6a9-ac4f-4ae2-8ec2-2d5379381caa",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c7efc7-9984-4ded-bae6-6fd11edcdca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3a9b78e-5907-43ea-8a6e-4e91fb1e8929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d5e54a-7bf3-4038-b8fc-7195b2b60ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aedbf631-62c5-4f6f-ad55-443ddab22a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d1fc34-0ede-4cbc-9777-25bf146820d1",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c755331d-03e1-4a4c-91b6-97e36b8afad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e487e39d-1e0a-412d-aee5-d1aeb2c37f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcae92d7-5827-4fff-8a77-9268cb493c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "19262796-ee2d-4177-a21d-59a77a31803d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6a9c0e-3a33-41fb-9873-de63c46e8485",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4a387e-9179-4b2e-b2cd-1f11fc25413b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b15c48c-5ada-4424-ab06-55b83bd0b2f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70e297e-5b9c-431b-8d1a-b3bc5ceff3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6cdaf127-9ef4-4d32-9242-c55a9e4d2376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2146eb9-5d86-4944-a02d-fbd42cf0b46e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "003b096a-aab6-4e42-8c51-29c34487f111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3e6f5024-4606-4fe3-b732-28e26c1191e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6c09e8-bd11-40b9-859b-508a97dfa096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9ce8ff1d-7b6b-4cb5-849d-62b733484016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e43004b-9b8a-4c8c-b6d4-3b7ef1736975",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29b8236-c347-4bd0-8f99-6bd66632f420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "116007a3-5509-40c5-b39a-1b9487b0a15f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96093804-e9b6-4ef0-ad1f-876e9d72ef3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b83e5830-599d-4542-b510-5ce911374d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd7d1b7d-3cca-4eb8-b7cd-bf2ea8e850a4",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2457ce66-7eb0-4d91-9a75-14943da68428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf3f0ee1-dd0e-4359-af9e-3066f51a2bc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6835d4be-5f36-470b-b934-9d7e892858ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ea8bd1f-59ce-43f6-b919-fada46f599b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00000afc-9cf9-4a52-a5f1-5b68c63cfc1c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ccea09-04fb-40f0-93c0-6721bd0f0bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a09dfaac-884d-4300-b026-c2fc3b806bae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732a709e-43c2-47a8-bdcf-17f0e8374552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "33151b1a-6eb6-4a47-96cb-244ee92d8596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a537ce-2916-4e3d-ad95-fe3f841b5c04",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df62d58c-2117-4b46-8f6f-c28c142fab52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cb79fe2-db7f-47fb-9135-b222b271a568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15c76c5-92b6-4a44-b482-326910da51db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c10e004b-ee7d-4ad9-968b-160d62c69e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521c1517-6aa1-4318-86fc-5a1311778091",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "070e555f-0b25-47a0-9322-f677868419b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9747510-47a0-4377-9bdc-6229ebec278b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e926ae-e2d3-4cbb-b432-0d6cd192fd5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d7ee3b0-0b17-4bc7-b9a5-4af867101fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f97f0e1-66df-4afb-b228-2ff912499861",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4222291-1f00-4794-be8b-bbda0f6530d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "441f6f91-4315-4b4b-b387-56cfbcd1657f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aeb72a6-ec95-45f8-a165-a7ab0178f10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1fa3036f-3d7f-4a17-842f-e3b1ef251a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3862238-57f3-4476-aa9d-497fe87ef179",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4dd51c-b274-49b7-949c-e28c65173790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b913894-d8d5-4d5f-8724-928270fdd307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107b705f-e43b-40f7-8b1a-831876b0ee90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bee11060-948f-4f03-9449-a7835ea3de08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c668d38e-e598-42e5-89b2-1b0daaae6fba",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f44300-160d-4ed8-9ea9-6be6c4e536b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b1d6d2d-f26d-4084-bea9-7993fa7c6f58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1e5267-3fb4-410b-b3ce-1c07382b7321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a4792bd-0a47-4fcb-a18c-6c2201af5f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e067b5-337c-4581-b8c8-e644705b3c91",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a5ad7d-f7eb-4334-84e8-4d731e0aa235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4447cd16-67f6-4c53-a04f-9351b21f19c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f413d88b-fd2b-4440-b498-9da9a0b77244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3d0280b-141d-4be9-8470-51b6afe2b929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ec6851-b0a7-4280-8f75-1551d69cca34",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c43ab3-9c36-44be-a7ea-5de849dcae03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f84a7c-e7ac-40d8-86e3-0708ba493394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e396e8f3-6c18-4d69-9564-1e0ba6e3f912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a116c85f-aca3-4e59-87a9-95942c8a8abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd106be-102f-4264-ae17-8850272928e0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6425ce79-30c8-4001-a266-a89b53c13c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb0ba78-fb77-4c10-9efc-7110216ddcd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c4c9a6-5013-4afe-a087-ea8ba0f5f1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b145d5d-11a4-4124-bd75-4f0c70ffc47b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20a37d8-256c-4270-99b2-3067a7ab1b3c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8749774d-64a8-458f-8b8c-9a59209f75f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc62b006-c939-4c9d-81c5-9adeda989604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc11ba4-2b5e-4e42-b03a-d2056134c5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "72312727-f6c0-4e21-9beb-8a6b17618cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4fd9ec-6279-4c13-adab-4234aa49396c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a336d898-4fa7-4b28-8d06-ba9ce849ac72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c9d73a5-a015-4364-838b-7e2714e05536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f772d653-b1ff-4aef-9155-7fa9ae7ed196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2c954cf-df0f-49b7-a078-c2e764db3e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1581d9ae-6ecc-4451-8d0f-7d8cfcc733c5",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e8e374-615d-4bda-a68f-f2be9719f519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94bf7af2-e866-43e0-a68c-9d71aa4563c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab04d402-c66d-4ed1-aedf-69af8a6bf5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eef68168-e850-4b2b-b4d7-934197c74086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21621a7-1995-4435-b6dd-edc6fe23c363",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92352949-8798-4c63-a1f9-49d46fdaebf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d19f7d46-a2a2-4604-8967-db10bbee3a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5421af-d57c-4d4b-ab66-476abd96256f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d81fa54-8e07-4fdd-b964-dd8098b46131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a93b299f-3c49-4507-8371-c2bd694e68ac",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9188a8dd-ffa0-43ae-9e72-6d6ed13a579c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "246a91d0-a136-4822-be74-4a7f897dc274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1dd9622-a129-448c-a5e6-f5accf1c2b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c4c5031-7687-4da8-b6bd-e5ea582dd636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8e578c-19f2-4a83-b057-5b88545016a9",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04218038-0944-4292-a71b-57c462959f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56f60c56-ebca-434e-af5e-6723215700ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2186a679-83b0-410b-a4fe-31d5e11b42b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "089209cc-7eb9-49d6-9753-f21c251251d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e65c840-412a-48a3-84c3-7fe4c671530a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "993197a8-1d23-46db-8d42-f8569564676f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ca3cd13-13eb-415e-bf0d-66523dcdd3bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea8ab1f-dec1-4cc2-8117-fc3fecf99ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce63c34f-f38d-4b7a-88f6-ed96ce1873d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "991a8fa8-0206-4203-834d-ed6fb7c3e0ad",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd0be0b-bda7-4500-a255-4e0530f977bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7f39fcf-2c50-46ed-ae99-f29755c6fea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c198b5-c890-4ad7-b18c-cc2b5e762312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0307946-0334-4eb1-84de-effd917ce327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476b9c12-68de-4b22-88c0-d77730a6718d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13070292-d0c8-4525-a7b2-c0cff11caaf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a649d4f2-fb8f-4fd5-8db0-78f0a6930599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0133ca-bab3-498a-8438-b5232ae05803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5db89733-a190-49a2-af73-b38591bdb0ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80912203-01a1-434a-b25c-2fd5f0611dd1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "164bf11f-74d3-4706-b954-b5def0e92450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d82d8f1-fda5-4223-b895-d1349447c235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c921fd-f7c6-45f5-b561-7cc978e1ec84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9780986a-05cc-4136-bf6e-255f5d3e75c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717d24ef-8c06-4031-bd10-1d6db28e37d0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0acb7ed3-d26c-4632-b628-1829aea59d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3e0bb60-974b-470f-ad1b-dd4193bd41a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eeb58d0-408c-4ba3-b847-15b7e036aeea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6399575e-d964-48c0-b5db-55b6e75390ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d406da6-ee67-4406-b93b-fbf17445921d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3fadab-78c9-4839-a7b3-0f4b69dc4f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "800807ed-d588-4d76-b151-135f67a51159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e35b715-b121-4b87-8a1b-7da6be13c6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "efbb1da1-01e7-4701-90bd-2264496c341b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c79e24-749b-445e-84ec-96a4396db750",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "100b83eb-10dc-4f5a-af89-7b7ac1aa1e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c4c8e2d-fdc9-4b7f-b485-2c1466ee888f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f8d83d-9efa-4102-ab82-c1f34b22104c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad6ba7e4-7fc9-49bf-a3b7-94126a4be2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e2ce69-b0ee-438d-bbf9-b8389be42e64",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83311ab2-bb77-4f8d-97a6-30a6b05b217a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fd339d3-fe19-4555-a481-b8bfdbdc4a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0233df42-c406-4514-a989-fce4c7c924e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f774301d-6ee6-4e7e-8542-7d05b9cf9aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d751a82-456d-45a4-a201-d061a6cd5f2a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5663b61-d779-4b09-a761-31a5d9cee44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ad49b9c-e859-4806-a23b-ab3d77825deb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d557ec-adf7-49e8-b82e-007ba0519100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b284ea8b-5463-40f2-9a6c-bbfc11c94c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd34ef13-2c89-48ba-9e17-d0fe71c165c6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "128c0174-9a1c-4daa-a58d-346bfa95b9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3523f98b-ab57-4d50-91d5-823e79f91c36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8b2028-15e3-4b76-8931-d97bcf7c8cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "09ee10ae-cca9-434c-b956-ba97957f3449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9291096-4f5c-4ad5-92bc-d7c674f13969",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53a9bd6-e861-4e16-b67c-35a3e5683985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae3b5621-3bf9-4483-b028-7b5661fa8c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca61a9a-3200-4326-be8f-9132dc41e360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a220f329-d42c-4ee8-a160-5ae8765a2330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15b3153-79d6-4019-91e1-c5e4e598d4b8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "067a76a2-2167-42a0-b7b8-45361fe3b9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8cca1d6-eb60-42a7-9c74-5620db6827fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23dd4da1-a5eb-473a-8853-da9c48785e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "890ebde2-0450-4384-a4f7-1c6d664e2d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c4acd00-82f2-4edc-8350-0324cbe20165",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2791807a-23fb-4661-b075-91375d7d6c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e7192be-ee71-481e-a253-81fa8e0b6ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91fa12c5-5b5a-4b04-8ead-490bdaf0bb71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e03ac93-1337-470e-aaea-93cf7c3434bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c43567-d9a2-4ccf-abbc-f46084258f31",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4075a0-5dde-4745-a89a-e895dec9f2e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea972cc4-3014-41fc-a6dc-be06ec0e57c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8e2965-38f2-4593-acdc-b8e367ac90bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "61eaa6e9-8682-4154-8304-d8704ed8ea6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f34b4d2-2741-4345-b60d-83175022030c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1981c3-ecec-48d1-8039-237d2f3b4131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf5f1e28-2008-4c2f-a60d-1c920ed03c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be8a79bc-a903-4b23-9454-5de8241732f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4555e04e-1ab4-4c36-86dd-f0588acdbcd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752616df-5ab9-4d2a-b370-09add90dbf32",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5cb0a35-e7db-4329-99d1-c95f55058cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd00c658-925f-48c2-8b26-f79a4e336ac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774c7992-69fc-44fe-a095-04afe8da370e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0dfc4f7-37b5-4436-b786-0524eae75161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27446e01-c4b5-43df-8e42-d149d6932ba5",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "262e91d4-4c63-4287-861d-cd1d8ffbe232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01d5ca1a-da7a-40a9-9690-968d19910262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbaacde6-8caa-4b0d-965d-b96732a3c910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f03f480e-b473-4a0a-aa9f-62d34a60136a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a10f6524-32f9-49ab-b26c-f365973757f2",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae2b730-c485-44b3-bd94-2f5f840a2076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68c74ff3-a0e0-4d8c-a123-1a30c45010b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ed901a-e7dc-4fad-a83c-61c00de79bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a4de029-2ccd-4b19-8e36-08e34641c217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d34374-a7d5-4aa5-8bd7-95578cf6e82f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e6b83c-df4f-4a69-bd64-0075edcc90a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef85bab7-577b-4b0e-b5d0-bb5fbb533628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd6d10b-db1b-4f14-a0b9-3e9511acdd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5574109-8642-4094-a3da-e542fff22196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a49765-2b7d-4345-99f7-f9691d3b555a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec18553-b87b-4a63-adee-6dc74f472458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca9b04cd-ccdf-4885-acdb-e2ce120e07f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb1dc78c-8d07-42ff-8c06-1788a5fb04fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b7445b0-a025-4f05-9742-505ae9f9a2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f66f35-6ad5-49be-a1ec-ae800e5ff5ff",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9311e2c-bc72-4c9f-aeef-b9448606a41d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aab1f64d-33ed-461b-a8b0-1db12d27161f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44be7be8-7db5-4903-8aa5-2a39a47fc7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "14f29259-6fa1-4b38-9114-0a232bf71444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5159be2-014a-4f44-9cfa-b0fb498b896b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0027869f-698c-442a-8a25-4664c7bd385d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9116aa5-3321-4a9b-ba03-ca08d91b4e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e41a1a-ca84-4e7f-89a4-862a84581b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cb6077d-15aa-4c16-9ea5-8daa5479cde0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da51dcc-682e-4850-a9ec-b3f928cd80c7",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "438aca80-603b-49f7-8e41-ae9a42d260c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "592cc6a2-42a8-4f8d-9d49-3fab47b8777b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed65a00-9b14-4526-9465-383b8177452e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c76b12b1-c2a6-4d08-aaef-56b0ed28bf0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c5cd7c-a3db-439c-9b95-8e9b9bbe5c38",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0cad7e7-ad7c-4329-b6ac-4c3c087a5e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faead860-6d43-4a74-bdfa-a689a00e6996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62d3421-eeac-4d82-9d21-208f6d224910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43d53c6b-dd76-48c7-bb2e-838c50d5488c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f35537b-9301-42d3-af8c-3f23182e9095",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cfd5a85-0da0-4463-8580-76bb598af34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88919528-35f2-489b-8f29-faba60141a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b130e3f5-fbfd-40ba-a372-63525fd2b2ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80de45c8-2f31-46e8-9f83-efb635b6eec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ff1c50-7a69-49ce-89ac-8774070c50c2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "732473e9-9506-46dd-a407-d56bdaf3f0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42e3d12d-0185-4f52-88ed-47c34809b9df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42584bf6-7fbd-467f-8edc-57143facf19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbc06dcd-cdd3-4488-82fb-9d96228828c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc1cdd2-4eba-4b7f-a150-e0e76e9e75cd",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49ff95d-b9e4-4d00-ab58-b8a23adaaa94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14e31858-c4c4-451e-b305-d1c5d8f7496e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03fb7ce8-0ad0-4171-a1e3-760d9b4788be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1988974f-9cf6-41f2-ad46-29198ea55f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be68acfa-b20b-43d1-93e4-a63912e56b68",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f56a9f55-5185-4839-b08d-d600836ccb40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9790e59a-8451-44f7-a5c7-8274058f82c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4b9706-c2ad-459f-84c2-5241568ea4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3bc204a-aa2f-45c5-bddd-6acdda1b3d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e897e5-bebf-4e65-8350-5d587c8cc5b7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82ce1ba-ffbe-468b-9b39-c2d11b208118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ea42753-27bf-4b8b-9770-9269529ebef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13e9bbc-35a6-4f9c-899b-523d4ba184b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2fecf81-d7c3-40bc-9900-321d33703872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ffdbcb5-f4cc-4284-a765-fb8ad4099d55",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "911f5e87-ef3d-4f8a-ad72-dcd3354d856f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3f7c9cc-8b21-49a5-8c70-2c8a9f424083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6041686-9b69-4abb-bc98-fcdf61a13bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba234ce-ab12-4d0d-ac32-d7627f684373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169a224e-3cdb-4fae-ad84-630702e9dbc4",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17f0beb-6026-4de5-9706-c54f08501f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8573d42b-5e6d-46d6-8b78-3d7de3dc2cd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "457a3aae-082c-4259-a23e-338fb044ed57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c5080b8-9c49-470e-8bb9-37cac3e35db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72584ae-b73f-4f21-bd84-fc65e3d6b086",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0b9b4b-b20c-41a4-9c83-fe7a8d093d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ef9141d-6600-4708-9f17-7635978412f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ac64ef-b2c6-4d5d-978a-a04932e403a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6dd339d1-4088-4013-9a6d-154dc5b6b25a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80aad50c-cb45-4ce0-8aaa-6f37a0b2775c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcff3baa-f704-4eeb-846a-6e2ae2357778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f0f25e-688e-4900-9b87-abc1f9b6658b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b82dcb68-f53d-4e04-be31-1c2dccdbf9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1279981f-0e2a-4ebd-9522-30a6faea90c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e5abaf-3426-4df4-8279-aecc8531d035",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6675c9-b986-46b8-8cf7-a6a8af787f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4ff2c62-35cf-494f-a430-d194267859b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e71e68-c9b6-4f36-9b52-3452ecee5a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "951e7581-938e-4e46-aa0e-abd67b05db32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb80e9d-2433-4d2c-853a-d1eb00d37204",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3442ea12-9036-43de-987a-b935c209fea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c5f4e0f-ffdb-4579-9bb4-cc32bb9ffd70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1265b64b-33a9-45ec-b05f-4000183949ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1748273b-539e-4bef-b59a-834ca26cc7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45de2f7d-91cf-40bc-bc54-2d3723115192",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff29be8-e42c-4f91-af14-a4b2b6658027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd25e696-c21d-4e8d-94f6-0c7101067023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb9b32d-cce0-47c9-9820-449f60dcd7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b614b6d0-a33c-4290-a32f-763b85223180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd7f6f2-3c75-4b09-8264-c76f0f91e8c4",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "888cdcca-8238-4571-a7c3-102a6fbd73fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4c4a036-ea7f-4e85-8b93-8be5176107a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e79d6ad-0c6f-4e1e-82d4-7f827437f756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2aa34c07-b6c4-4ad5-9fac-588870f3c46e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1f814a-0816-430b-a696-890f55a5f8e8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "416d2420-c5b0-4ac7-b36c-b0446348a14a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d20788fb-9f19-4d78-82a8-06319da9b418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ed52b8-7649-46ad-8d63-fd1682ac52ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "73e4d645-4c7c-41fd-9f65-2b0bab4ff264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd7f682-ce35-455d-953d-9b5ea41124ab",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0864177e-1258-4c24-bf0b-5944bf068e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b2431d14-f143-4f6c-b917-7527cd43a0da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b578c86-c830-406f-9a7f-08fc2fe07aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a252c969-c378-4563-b5e9-3eccd18744df"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4011d743-cd2c-4ed3-b23e-401bde00e2c2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "07978455-1f91-4116-86ac-32318ea5aa71",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd891ca-de8a-434b-b107-5f1b0ba823d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e3d9bbc-715d-4944-bf6e-26299ca0b283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79fbd9ec-278c-4d9f-bb9d-c6ff97c02a13",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9fd2edf9-edce-45a8-ad18-f0f3ea71ad42"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a1ea8e7-69d0-405c-92a0-ae04a49efa91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2de2484-72c0-4063-9aed-7a2bed76a21f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2302185-1bf4-4ce7-b590-ccce2589f48a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d887a86f-4929-4b13-84f7-62e33b29a6c9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "36799ce0-3805-4904-b051-b608ae631706",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ee84a348-57b7-4b5a-81ac-7916fcadd877"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1fce5ac7-7b6d-4a6b-800f-3637ca619dd1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d02ae61e-be0f-4267-a5cd-1dbfe3a4e3d2"
                }
              }
            ]
          },
          {
            "id": "c45fd6a1-66ec-4a41-a3f6-8752eb31d2dc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bbfc4dcc-5b1c-47cb-8fc8-46c82d0e3909",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "c3a80854-fd0c-4ad3-ab53-f173e4442d62",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a3908b-80e6-4363-9369-643afec2bcb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7eca6b25-968d-49df-9182-4fe31e85d499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c0646f-c899-401b-9a7b-9c49a6af89fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16f2a3a3-c122-4749-898a-d0a60c2154d2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "da1ca8c9-14ee-400e-861b-d163a7f2b527",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ffd41fe3-3230-4603-b9a8-cc21851166c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e52c7ee-1a6f-4594-925b-2573ad4d9207"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6fe8b93b-a0d3-46c1-8e30-8e45ddb17862",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dfcfefdf-0658-4049-994b-356566961d0d"
                    }
                  }
                ]
              },
              {
                "id": "17305a85-35ad-4159-b53e-8bac2b5f0621",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "66e75c57-1260-4abd-91a0-ad611e99dc13",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0eb96b22-3fdf-4b8e-bca4-35536a0a2fcf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65eb0630-7318-4b8f-888f-ce6083880a9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b11c5a6b-fa8a-4886-b379-d5ad30963abf"
                    }
                  }
                ]
              },
              {
                "id": "e8de2372-9ec3-4f98-ab4d-74cbf3918e46",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f461ced-efb4-4ca3-9930-b83343bf9543",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "094371b1-1638-4bc0-82fd-8740100dce85"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f191bcc2-9156-4941-b75d-579fd24f7228",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5559a5f7-da00-4292-8529-357fc6136b2d"
                    }
                  }
                ]
              },
              {
                "id": "ffb59775-5d41-4dee-a600-c6a7d409cb7c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "15c86d61-964c-4856-9eaa-f5f94fd5fa09",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "68842117-1b57-46db-9300-c4eafd58223d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b13ac74-2371-42c3-b769-a1d7bed0b0e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e5683b9e-4004-4754-b18c-5b9dcbad2cc8"
                    }
                  }
                ]
              },
              {
                "id": "b5a996ed-9e34-4ddc-9bcb-178e15d7391b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e122d95d-3b76-482e-b86c-c9fd7acc8fde",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "11c64016-f170-4ad8-8230-28079a8cdf99"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce5f46d3-19f5-494d-870c-2745249440cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4d0bf4a1-e81e-4ddf-a9ec-6ab45c5e9ee2"
                    }
                  }
                ]
              },
              {
                "id": "cd694f4b-7752-4ac5-b281-d28fc70c01cc",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "47265387-9156-42e6-9d7b-cfc5cab908c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ea537208-6f48-4a30-9c20-dfe5d811500b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e23a0d0-3616-413e-9eee-05778ffa5f2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c96e5268-4d28-4c1c-9cf7-1ec0d2a97f66"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dd3e4809-95fd-4394-ab3e-b00aeed0817c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "db023521-9c8e-43e7-9455-af682ebef9a7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e0cf8772-fcae-4ae2-8db1-34a53b6a2a13",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5b15d82e-c38b-44c3-8424-1d5d9d4f989e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "515d91e9-9beb-49e6-9629-93ac4a9f2c19",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1a0522c6-849f-4c78-9f0d-6572ac6ec7c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ac7e4eed-56ba-4554-bf0f-43a2946907c8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b5c5a8d4-78aa-4863-957f-a8967e04cd14"
            }
          }
        ]
      },
      {
        "id": "567bb3c2-3577-4f40-acc0-fc6d7562c107",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9a6661c3-6ee7-438e-acc5-1ee986e89a3a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2abed991-92dc-49cb-988c-71f4bda980fb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e9bb4a32-46e5-4c2c-bf08-a3645c27ac8d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fcbafbb-53ac-4454-9ca4-b64b0c87efe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa986585-d6e7-4c6d-95f6-86c37cf66451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16fb98d6-1300-4ff6-bfe7-3f9e33ff7d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "94bef6a2-6b4b-469a-b9ad-68a9045633f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d957cfe-e6f2-4fc3-8255-778e04adabb0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fab1998-0a20-4c9e-906b-2a13479fbf7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b1a84e4-45c7-44d5-a792-d4e4c5fc2582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b00c30-34f3-480a-a1a7-4e9d9a2c5b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d0b1e86-26e9-4022-a455-8d1c04421fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73493f9-9a4f-4ebd-a7ea-c3f3c5fe6aca",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd557e2-6e1d-49cb-8181-bd559a80fe34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7145f09-7026-4ab5-bfc0-fc024b68d86a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f68c9b-b540-4fab-8a13-20534e79dd08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "279c5f7c-9b7e-4327-9a95-a726e3c8cefe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76bac088-5565-4ba7-b6bb-642b587cf0ff",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "229c4346-ba4e-4516-bbb4-923a63d83c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3a574b2-aea9-4c1b-ae99-7f655b2b3362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8cae1ed-8c2b-45d1-90d6-234e2024cfeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9aaa49c-6f6a-41d8-9f16-eadc929a6c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792ac422-40f3-4a51-9294-e0816385f4c7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "756a093c-0374-49c8-91c5-475245c74bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "021f22ce-efd7-4989-b8e0-6c001b57df3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f40497b7-e7b3-427f-bcac-234656882b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0c55e48-afae-4a0e-b74f-c10fe1674e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a374541c-6999-46bc-bec3-e1896f4ba010",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e940fb-39e2-4a5c-8c30-12abaade53e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ebeede9-256d-4548-bb62-1e5ffcb8078c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c36d4b-4f70-4708-890b-c737db737b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "84a22f8c-1353-4090-bc64-a2ef043aaeb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ba3960-f92d-45de-9051-32442989f4f0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "666f0799-fb7f-4995-a253-8e9266de2508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b414194-6326-45bc-a88f-5a0cb8cbdeb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e332176e-8eaf-4f7d-be6b-ce59c07ee227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef05ff21-2d01-4010-96c1-1175eb120575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5704119-2ac1-46a8-b29c-844c0c5ac081",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54aae1b5-4599-40c9-bfa8-3946b4a11a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d8a5c6e-1f1d-42b8-8a86-934fffbdf891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b24bdc54-5edc-4d81-bec9-20227a0dfc89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b98efae9-4333-4e12-9c10-f18cf9b5f752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b2312a3-ab49-4b0b-9489-52dfb3a50dcb",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "955a1499-8756-4828-85e7-0714ee0f235a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "048b26da-0a78-4d96-b486-80281be83eae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b406d259-8978-404d-b2bb-508f5b78ef9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73b359ba-53cc-4e70-a022-4c164ceb4d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4694a6c5-4ed0-46f4-a123-17bddf90e0a5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e80672-6b43-4005-a9e1-b3e2bd2c0299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac24ad9a-36c5-4965-ac71-e381eecd39ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2a69c1-2f45-4352-8ae0-e3449ad00fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "611b5afc-02ed-4dee-aeaa-e153d0fc3f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5924fd0b-1f39-469c-bd3e-fac3a326ada2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9e930f-9760-436c-b093-8595a120337a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4426eab-2cdd-4676-9e29-c1d66f6f4129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5978b2de-b353-4ba6-96a3-db40be89ddc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fcc6cdbe-8ff5-4027-b608-3c6ed3d1f5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454ad795-1238-4b73-b8ce-f4638af80edd",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92254cdb-67b3-485f-b254-4d8bcf3decbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1744e336-c2e7-47b6-82a0-9c66727feb4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36ab16a-d508-4db5-b23a-1f4b05a7935f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "825c8c9e-7f88-4976-98dd-68a03081e50a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98a1f89-047f-4208-8249-7e070a133b13",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6981021a-6d2a-42dd-bfef-8144cfd25f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "529c0a51-d596-4880-a404-32ae0180bed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0370a7b2-3e64-4b8b-823c-6e16e18b1aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "12c27a97-e53b-4fd6-810b-f9ed05d17787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418c695c-bc28-4436-85da-4cca976d437c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4241af-ac6b-4cdb-93d0-954cb5ed00c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f09e3c1-b5cb-4c5d-9815-412cc1d65fa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f71bad-9848-4a31-8bfc-f8139ffd19ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "872b3ea5-7d15-4bf9-ac79-39c6eb7513e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e9fbed-76c5-4686-896e-e414f68c6b43",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90273cd-c319-49c1-b37a-cb1add80aeba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5198186d-541f-45cf-81ad-e4fe22d5df36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ddeae8-ce9d-4639-8fc0-bbd3f69c5750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "39082d82-c451-4781-aea3-33993064a847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90dec0b-4db9-457d-bd21-4a65618468be",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65eaaef3-7710-4ffb-8285-cd7f6e64ec87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6186d62-85dd-4dd3-8ee7-8ce52ba85978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d457a9-7f3a-41e1-9a59-1302cd5777c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "84dc32e4-7319-42a3-b04d-5e1f5a89e527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c6beb8-dd08-4318-9f26-d74312af333a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d2e48f-82bd-4e64-8de5-eb0465849cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e359fc38-4b08-48e1-868f-4fde3a8d54c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab9518c-ce5f-4426-8b07-39d33e7d57a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0800dab-fb8a-42ea-820a-3d99dd4a6d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a19b87c-b517-4ae3-9d8c-3e636c776747",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c85fe4-64f1-41f0-beac-8ab09dceea20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71e15244-264f-404e-bd1d-ef7c2313412b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675852e7-63b5-42ce-a7a6-17c9cf815a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "51a145ad-b79e-4b02-89fc-fe14705212d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a988e8-3d67-4342-bb73-f6d5e9128746",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a9d2a7-384b-4820-92e5-4d0d697e1120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b1f63c5-a23a-4eeb-867f-cff96be676e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76aa778-0767-41de-b7af-5059d41ff7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed066a2d-8406-4ac5-bf1a-d6d01e893006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9285b271-b889-40c6-9047-2d5711e9b63c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2b75bb-f593-4672-b0ac-e19048945bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96ee48e9-1c38-46e7-8bab-244183e96f1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd18a238-75e0-408d-ba7f-49e02a7c23dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e176334-f5eb-43c0-a419-61187b6ebb16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa4d670-3ef5-4bb7-b982-f373665e39d7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e11532e-3846-4985-b8bf-a6ee1850d914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e0090df-6eeb-4f4f-9a19-5b7413697b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaedb6c7-9cef-4591-a453-26287bcdf281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfe18eba-b6c5-4d17-8c4f-65e010b7dfca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0cbc4f-7b84-4954-970a-efb77041e92c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eedbb09-0e2a-4b50-9d38-a281bd8234d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecbbc536-8815-496e-9335-07cf0b9eb1be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21dd037-b46c-469e-9e29-477e7966c5f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c285046c-bd45-4198-be35-e8d5fd035205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b90309-8ab5-4a9f-a978-b5347a3cd69a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7ee2ac-eb83-431b-87a9-0810ea196747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a59079a-1b6f-476f-be1f-30bf1d6c8fa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b40154-2cfd-48b4-bafc-b8e2bb5b2d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6192c01-1fee-476d-b4c7-aae780b2e4a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3669d560-4f1a-4236-8dd8-82f11505e049",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60e1841-94ac-4c50-9658-0c400b9efc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2fd2866-65a4-4798-abf2-2146e25ef5b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6c2eb6-a153-4aca-95ec-33540001ede3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25d3e6a3-5454-488f-8c5c-e4cc99d60bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05aea57-4ac0-42db-b5f0-c77af37b73d3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a1efdc-3a68-4786-b2cd-10fed49b9a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0862018-192c-468f-b0e8-8b426a0abb89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ec35a2-0112-40a2-9cdc-23da08660ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bdbcc69-7f34-4171-bb05-c0cd7bfad8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b18c90-bbfe-48b3-b412-4285e34f90a7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "183ff0ed-20d2-4e51-ab84-b353d1d50687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9594d76d-3201-4571-ab9d-1a82f65c9a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f3b5c2-d528-42d1-964f-648ba9d6767c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2938c34-10a3-4c5a-8e82-382e362f429a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bccc151b-5a3d-4b71-af13-5099bdaa6218",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4241c744-807b-4086-b686-b828f031aec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15af0296-8778-4b0c-be87-bfd83477ac4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d2c762-1edc-48a1-9c45-3db9b9860885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2087d044-b5bd-4649-8ac8-53675e38f26a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2292d2c-b6c3-44b7-bd77-63ca40cc21f6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b41e05e-2d8e-4f6d-81c5-ab3751ebedf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3781d0bc-62cb-4611-87be-263fd568f916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964ceb56-ac84-4476-b275-a3d3b0f7825a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18d8bc35-7120-47ee-8b7e-4be053bf2091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198801d6-6e0e-4ed9-ba10-1944c804eac7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d39206a1-49f6-4498-9583-b0cfa7e9c521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9ab55c9-429c-41f4-b66f-a697bfe50d12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a1733b-9408-42e8-90da-4e820b757789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e5c74ca-d2d1-4e75-9c7c-8badd45defcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423cd7be-eaea-485e-84d0-a5c251b3410b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed2dcd9-fa2d-4642-b5b6-65abd4e6104e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2e23441-0463-4ecf-ab3d-bbd612732891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa75c885-cb78-4671-93cd-ddca23e4dd6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "903c499c-de79-4147-93a3-d586ed6fd464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474b9e3c-f1ce-40f9-a127-d5c1df5c5d5b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aace2fc8-9f6a-48be-8907-4d001d017e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66fae82c-f5bf-4c4a-8400-ac6691aebdd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2159f3-be10-4542-a933-b0f737bebf74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4681e8e8-f43e-448d-afaa-4b109b25c82f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055d59e3-1575-44ae-bb0b-3ae6cfccde43",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dfc550f-ea12-4b1e-8016-a4a8a8aab12e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "020fdcef-c895-411c-aca1-f141850318b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb73038f-c085-4d18-b38c-eea18ad5855d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0ff5113-c897-4974-b2da-6128682bd5b0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "512318b2-c09e-44cc-910e-3a68a2de2a99",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fadf142a-ac3b-449b-8f45-d716099fa981",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789ee6c0-6ea3-4fa5-9791-ff5727d618b9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "636f0fcb-1c79-4eb4-b501-2d0cf84521da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bda3bbc-c87f-4ea2-802c-384114be4632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b0a54a07-34af-452c-83f8-748b9d68e6be"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea61b0f6-3afe-4cf8-9bc1-d744877943dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1741ec7d-5b35-48e9-a27e-342ca9a76df3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0d373cf-9c51-42d1-b4b0-42c0c0af8d37",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b73c3d1-f667-41bd-819b-918d860d4e92"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "181f67c1-b922-40bb-b18d-64a9ea2b90d4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8685c35e-7d9e-4519-a47d-086ce4cd3674"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "85e62630-fc60-4aec-8368-b7cb034b18e0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3a5c23e8-f27b-4cd9-9035-0273d26c4073"
            }
          }
        ]
      },
      {
        "id": "deb2456c-06a5-4d8f-bc22-64ef8dfb2a70",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "cf6f25cf-f222-40a8-badb-5d7e2a6a0203",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6bbc434a-c258-46da-b832-a1c404d4d45c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "05a8552c-ea32-4e9e-b93e-925133b5ae65",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f1e101-266d-4bf3-95f1-df55f104beb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f7a5052-b334-442b-9559-f3f4db609a33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20c7b99-98b4-4fb1-a6cd-5dacda9a2c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "31180fed-e665-4a18-b458-c2c6ecd6efc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660cd11b-c0f3-4565-a002-6485ef578e5f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b23cd8b-8541-492a-b4e2-1f6b4823e284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4899c4f-edf3-4c65-be4c-63eebae52b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376c7ad5-5d1d-42bf-957f-d42b337f621a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e384689-a4d2-4f40-b182-ad10c4864e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1765d5-9b2d-4c1f-ab37-83640e555f52",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9960ad-0a43-443b-9af6-1484166e6afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ee6c89-14c5-4dcf-aff3-e6a402c31f3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59686fd-7e83-4d60-a56e-32c71356c064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4f0acc5-a0c0-4a79-ad36-3223fcf2ad88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119d59b9-d9a1-4ab3-b85e-380cb8eed948",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e990f81d-3626-448b-a2e0-19841b946119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "642d7f62-ca51-463c-aac3-c8fe04f4b9d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd3ac78-38be-474e-ad4d-73d19401cc49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3000e74-ed39-43f1-82d2-edd2513e1e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd4f4b8-e274-4d31-abf7-5c7a65c2ca7f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffaae534-5e6a-4039-86e7-a7e01a3b575d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a91b18ab-ee6e-4cb4-bd26-5eaae9bf8850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6931fd-d487-4cd2-8e73-6cca14251ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3577a877-2e37-45c9-8b24-348e6028cf10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8678e20-f927-49be-9bfa-7b053083dc3d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f394231-0c40-41d5-86c5-00514488b6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea20443c-a4be-4c0a-9d5d-29ddd73588ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b67e7d-161b-456a-b5a4-c7145643363d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f209a15-80d3-4168-855d-61b76a80a0a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dee5bc1-84f0-4bf8-a08f-940d78fd3110",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef9be4a-5aa9-4983-8ed1-50fea48d990f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d10be8-bf41-4833-a16f-ca0c6da9ecf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2855a088-c338-4bcd-9e3c-ba825058f592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "82e72fa7-a5bc-45c1-88cc-85f8d4cf01c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc1b8d4-6b69-4fd2-9270-08498e3fe7c7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "282ab36a-eccd-4fad-ba5a-96c2d4b92e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "642d945b-1e00-4650-875a-e1b9b7ba128c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9b0272-d6e7-48b1-be0b-2f0da2dbb560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "005b6049-62ca-4ed5-895c-162e564f4344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ff87f2-8dad-453b-ace4-20bb4b0263c5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87a5f93-59c4-4052-9ef3-f86f8c1e8bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "408b684b-6166-4973-b799-550650a7ae19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4bc4c6-68cf-4cb8-9cce-655b653958b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c23f0184-6fa0-4f95-8f63-e3bc1e54121d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072d9d91-447f-4cef-ae23-c4479c976423",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "497471b4-d534-487c-8bd7-7b16f8d1f890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94715c07-47ba-4591-8152-1b67bd8f8d53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed164c8a-8281-46fe-901e-55323859349f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7533bb92-d7bb-43e3-b156-460819f27704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17f586c-4423-4bc5-8fdd-92cfe1108067",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf7bb4d-7108-47a3-9726-133984be7e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5937120a-9433-4e80-adbd-dda8a51900f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e333aa66-5122-4f0b-80b9-76293a231e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b825e8f3-dbcc-4f61-bb95-3d7428039a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05aabc06-2f17-4d3c-926f-3617d02d4909",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f138d6-6b74-47e7-8def-d5784caa859b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28147a47-bdf0-4861-a01f-31e4ff485e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e085b69c-f338-4787-996b-6f137a34e5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c68d0979-2b51-4013-b45e-5972eba99aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "637da40f-398c-4c44-8dc3-d460da87c280",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c39bd40a-5501-4589-adc4-7c21a585d104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4911c3a4-a271-43bf-9acc-01fb812b908d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6606eb-a943-4820-92f6-6e5e535106da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea7378b-efbd-4dd0-b8ed-45d38e1a4c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e573a39c-2b50-4cc4-91a0-93a7e7a7db60",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "605d54ce-cb71-4ff1-b677-87089b214fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db3e196d-7609-4bfb-b149-dff52c145109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d03427-031e-4005-a668-dd3833ffbef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b37f1605-4845-4aa5-8bda-44a20c433a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2abce647-5f3f-4556-90d6-5d437ab50996",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4b88ad-7e7f-433c-8b99-48b69beb45ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41ee845a-c02d-4a46-90b0-4a2ea5bb7e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d444c3-a898-44a1-8d01-f69188d117e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "164818cb-2d7f-4010-a4aa-c3aaad289b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7addcbe-f673-412d-8cce-820e1c3712c5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ee364a-3856-4866-83f3-2c3dac002d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef22bda3-bc93-4b53-a77b-d75749d41bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3fb5cc-0247-48a5-96c2-40e442cac4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e8a429-33c1-4472-864f-e0fd66bdaf80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c167094f-1b5b-47ff-936b-05f23366a371",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d183945a-d75c-4ce0-8ebf-9cc8a454c416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "effbd5fc-4ab4-4d95-9cb7-a3fbda9ff57f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b034d55-2692-4d05-ae76-86216e8169c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "75a9bbf7-4823-4310-a2f9-74d6e418f40a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e913ea-35d9-44c1-9fc8-78263245c5e3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1a318f-ca76-4f6b-985d-0aeb3fabb92f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7336f37c-fb3b-4139-aa87-7a3ffe0f94d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba41b7b2-1792-4ddf-8418-e78844c66ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "899ccae5-52e2-49e5-b933-f4251f05cc3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50bf055-e855-4007-b38a-565e8d506a94",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27187ba-0aa7-46ed-bfa6-f833d0897826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77a64ad3-50d7-4868-bcea-4192675f0064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3ec976-0c40-4865-bdda-629c92d58aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64add487-6571-4b1f-b588-a4018c1ae0dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "110cd95a-00a5-42ce-8ce7-69c2b1e76de5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22408a9-b2d7-4e03-9518-b986555ec1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9774ca2-baea-4a73-b12e-a099507481e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5ce34d-f937-4a11-93fb-33c25ead453f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1918d824-00b7-433a-98db-1de461358254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a94526-95ef-4417-9131-2efeda053934",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9d07ef-6d90-4dec-8a4f-4bd08e3b0825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8cc81af-f167-4893-870e-fc0d1c34a577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4cb284-eb87-45ed-be73-3bb5000f0fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb9795b9-f18b-4b1f-9309-14cb34a6faab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fbc1f3-b2d0-4b01-bd70-9b1fe57a9074",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a23bfb-8bbf-4af5-a944-f085823db78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09850cef-f631-41cb-a7da-98fa712ca014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a554374e-a48d-4a7e-8579-ab42b1e10dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5c8abef-4cc9-4e5d-ab2b-6eb9650e8670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8c1956-b09b-4353-a250-b47a2e8da380",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05366333-06e8-4eac-9bdc-d284c31ec6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51cbd3cd-fc39-46a1-97ee-db1a817b2603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5ac0a9-73bf-4e3a-a9aa-ad5f6aa7ec3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "849c2951-46b9-4988-b52e-aae21dc26c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34870224-10c9-4b07-b302-deb532d0743a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8149a92a-03b3-4168-aa54-3056ca1a5c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd5f37f5-ea04-4011-b232-1a0a535dbec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25ea629-3899-41cf-ab1e-bd85a8ca5925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9545c471-12bf-48bf-a97f-4aeb7294c751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84dfa9eb-65b8-4c83-bdf3-4fd2154aadfe",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "385f3f81-4a3b-4ffb-b7ce-389b5f30c808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "197cb1e1-23eb-46ce-a73d-ebac7b4ddd20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496c6581-3129-4ebf-90e6-57e9b4e594cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1560ba8-97c3-4f2e-9c09-43b448aa9609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9adb5cf-8def-40dc-a969-55891ab56861",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66605f81-078d-4363-98fd-5ab032f4b38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58db486b-4a08-4807-98bb-445d131ce161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536d9696-830a-4e09-b92d-cf7a208daad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed7f804a-1e57-48db-abf2-201538f56e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5bea5e2-5ffc-4333-9d4b-f1bfa665e055",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6cf97a-54f5-4c0a-bdc9-25de241030a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efcc8428-47c4-40cc-889d-7286db64f982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f263f64-e404-43ff-97fd-466f4cc49f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b870cea-15db-403c-9016-4752fba145a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a758d1-2c7d-4b3f-9705-bdf1314f6e76",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "122a7fdd-cf6e-4984-b585-60b420c43cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67df0a48-fb54-4a9d-952c-db99c737bbf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df426b40-3f08-49de-958d-145668321bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dd447ca-3b04-4145-8114-7b3a467bdbe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c8cceb-040d-41a5-a922-2d8e59efebb8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4992ae06-75e3-45f0-84a3-bda891867a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4626ef31-d8fc-414a-a11c-72cfd5b7be12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d443fd73-6475-4790-94b1-3998df414cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdd17bb2-ab3c-4b5e-8ddf-eb8d89966d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f557ba93-69de-4bd0-a872-7ac882218ad9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3acecf7c-ca48-40a1-acb5-9408221943c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "728074b1-79cd-49d6-b1d3-47af0a83b843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5669a1-5b04-41c7-b5ac-4bd7c54b471d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e40d955c-22ad-4602-9009-adf252f49dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a895c4b3-b83e-47e2-90a5-388edcd43fd3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1db875-5435-4a12-b04f-788e882d40f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59c4abd0-1ba1-405c-8826-19003cf786f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d80b36d-f20b-40b9-8759-45ea34601328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9857d0a4-b215-42e4-a35d-80acfeea1f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ad4dd1-0b4a-4071-aedc-76bf04300283",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6cb2a3-60e1-44cf-8cae-481af761130e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "810ff938-547d-46a2-9a90-881565f02d23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41586cf8-17d2-46bd-af55-d0df0aa9f0bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "794f0ea3-f511-4f35-9fd3-de71344db98d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbca0d39-977d-43e7-931b-72a37e038ba5",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8eeff0-30b9-4b1f-8955-03724119bb38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d64ad23-d2e4-42f2-92bf-c539070825cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c380785-2332-4ee7-a80c-037fcfa4d114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c633c096-505c-49bf-9bb5-1c0d3ad394ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7383c2cf-25cb-497d-b0b5-63bed3fe89e3",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab15b014-800a-400e-89fe-4a4cc4c3b815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd7fcfb-31ea-4f0e-97a5-408a82b74e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f596116-4879-4069-a06f-3bb6e4a28a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb62b3bb-4f4b-41e9-801c-8deaf864b975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6aac3a-17bb-43d7-beb5-34a770e5b819",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4818f078-e2af-4f90-9dbd-b204faf44844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc4a9403-e7b2-4f5a-93c4-dc0b90e983e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244a479e-df99-47cb-a357-2b506ef9dde1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f743650-3635-4e36-88fe-7664d459516b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855b09fb-51f3-4dec-8c02-e749e6cce2fc",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e839a56b-6a9c-47ce-8c1f-347bea686f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ab3a96-1584-438d-9ecf-b5d4319f75f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff37e3e-a6cd-4fcf-b36d-7ed8f4ace60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9589add0-b844-4062-b2f4-b5616fff8b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f823931-8724-48c1-837c-ad49cbadc2bb",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac557c5a-97d6-4a81-b52a-4ca687a14e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a62755b0-9ec3-4a26-b3b6-99da9291e6ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf331cc6-feec-4b92-b26f-e87d10d8230e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "684e4a38-34b5-49fa-8a1c-8e08d492cbe4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6c3e8e94-187c-4607-bbc5-6402cf9b0cda",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "980bc233-44d8-4f1b-beab-e41181256499",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d141982-ec9c-4d64-85d1-390bb92ae1d2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "223aef2b-ca7a-417c-8a8f-7d7238c415ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55496c4c-1ce3-47a1-90e9-1c356f0ff117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4c33ce0-94e2-4a0f-8a29-83b21caad4e4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4af4635-dc6c-4466-bc3e-fcdc1140eb75",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "698594e3-fbf8-4131-81fc-91963a24f945"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa14abd1-3410-4a65-897f-9afc39105269",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63ef67a6-1c9c-41e2-9c29-f0eebdd42ea5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "93aeb289-5075-425f-85d9-034f60831f04",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2830e93b-0f70-4efc-ab5f-3e7a4642aa2e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9526c69e-172d-4538-a02b-e0d33e107667",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4ca69e0-3aa1-4e8e-b449-2de8c419c1aa"
            }
          }
        ]
      },
      {
        "id": "bfa84ab5-59e0-47e9-95e1-8a221fd5ce87",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "975c783b-d165-46c4-b2c5-bc1263e7f77d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "69f233aa-2295-47b9-898b-2cff37a12ae7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c73a829f-9c7b-432f-813f-fa5adf13fbaf",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e737e744-4e52-4723-950d-05107246aab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "646ff024-34a1-41ae-8197-1c62e70f1709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf05246-ee69-429b-8f74-6f53f358a36b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97eb9bc9-cae1-47f9-af23-c2230e4451a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2050ddb8-d66d-4122-8c51-4325b8d0e373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb58fc2d-f916-4b35-9161-63b4aa266576",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0218a818-e52c-417a-b489-3b1f82b11332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5866eb1-33f6-4fa1-9f34-3c392afce2aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50fc1227-afb4-4175-90e8-97ff1ab974ec",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de715f5-633c-493e-9c08-ddb11b8f629b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "447216d2-6f74-4d0f-9139-904f016b9cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "669416df-04b4-46b3-a9f7-8d7602a66fee",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75eb3858-a4c8-4636-aa82-46227de69331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f28e31b-8804-462a-b3e6-60585ce56708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44746fb5-2ac1-446b-945d-51e33fe61683",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb02b50d-3073-4780-8e89-b28da6af1b93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85626a2e-fb4f-43b9-bcb1-c5d9c6e8087d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2fc62b9-380e-4e08-8332-9839dfcb13e0",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f56a93-ed82-43d4-a7e9-4d0301a98ca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccc8db31-5b6e-459a-a950-c4cc7a389453"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "477bd3d4-8d5a-41cb-8eef-3a79de1a2937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f60c9a28-87fb-4997-8ddd-196c1dd5f0e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742dc6ec-2d64-47a9-a5ac-6c3f2fbb3044",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41ea42f-376f-4ac3-9d9f-29a377706228",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57f80c89-031f-4cfa-bd6f-1d03358c4f8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "042ce2cf-b06c-404e-9653-a1bd2c1aab10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3715efad-a2f6-4845-971c-235e90ab467c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f7fe64-f05a-46f5-b957-7c93aa984149",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e50eb32b-8c73-4db8-abe3-3d41fc58a5b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18c20a05-8124-4c73-b775-9892ce3dc332"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b553e23-cc0a-4805-98de-fa6f9b3dcf60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edef06f2-f61a-4e86-ad38-374f8363b275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ead7ea-cc9e-4ee0-85ed-17835d7eb323",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a33f771-1668-4b5c-b2d9-2fe1ddc5828d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef06b803-bae0-4179-8915-4a070616c789"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82183055-bb0d-43b8-af65-41ae739a0ed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18dd1a4c-511a-4c86-b514-289361f75000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "975af533-86ce-4f7d-909e-53181f241779",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "200e6fa1-8db1-4af0-96b1-29617e5f6d2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076edd52-4de6-4ea8-82fe-9a2756b1a919"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a357c1a-57fa-48ae-b1ba-8c3a49e2bda0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "223e3e3b-c501-4ffe-95f7-d5aa137012fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19c3abe-ac76-4144-8adf-dea8781f0c75",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077cb5ca-2983-476d-84f1-273af2433760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b2ca87e-2029-456e-8118-6b1d3c5b2093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42c2bb6-43c0-454d-9bf3-31ad3a2b1130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bafb0dc5-cf4d-4458-a1c8-769b846aed38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f79610-0012-4114-a6af-441f40ca83fe",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37a1a73-9d5e-4000-a770-6bf6375579f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4a108fd-6abb-4a87-bb90-f6bfa86aea2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cefc38d7-df0b-41f6-ba88-4e87df96cfb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4db12279-4f76-473c-bde3-4adbfd87cf46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb02bda4-0818-4de4-a3a7-c03e6ae5ea59",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ead34e-db4d-416a-9681-e37a7dd723f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b03a5863-2a73-4081-a145-457913649c0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe41e84-3512-4796-a9dd-876141b2dd1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40ff829f-4bdb-4d59-8df6-3c7c1b559cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492f3f78-b92e-4bad-a8f2-7ae77c788664",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab63b75a-4779-40c2-94be-7c2603dd1929",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e055d91-960d-431f-a80c-6b8ddee22646"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec60a12-2435-42a7-89f0-f60090462569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3eb0033-bb58-4499-b9b5-d59167ccdaa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373f4cb1-041c-47cf-bfa0-86ac339e5188",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5eaa1d1-6829-4fb3-b250-9014ff558410",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27938615-8a9b-4c32-953e-5374e38009de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f2e541-f930-4bd7-b36a-98f3adc2ae41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7494124-c2ac-4251-9dfc-4b0bfc05e9f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5936c3da-5163-4f17-979b-6523fbe90f61",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161c2e7e-58c6-42b8-b143-d970e49d3ebf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d6f2b9d-f504-48ad-a6cf-67b5a335ce9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e4d7ae-1170-484b-ba9f-4e2431664562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12ca23b7-891e-4698-a5bf-1ef953ddb357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a02130e-3859-47e3-a1e4-287665ecbf37",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911a3cc9-d539-4f5f-a76d-5d1658daca82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde69cd9-5cdb-43a8-a7d8-46650157b21f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0fa74e-bfda-41bc-820c-2b01aeeb1336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04fafb79-99fe-4c4b-a126-1a5ce158278a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31cece90-72b3-4d94-a06f-c4f55ae19cde",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912f81a2-da33-4f0c-a2db-7e36353478c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a560ae69-60b5-47bb-b270-3bf351cf9e3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5beb9570-2d42-4d5b-8a8a-9df760efb08f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9347430c-0819-4419-b05a-bb453b1f4d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f8f483-ca6b-457f-866c-dc73c5ae3b66",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19795b1-72d7-48ad-b881-9e0dfde76630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2635e225-ee5d-46d9-a2a6-915e246a898f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f406494a-f558-4510-830b-070c24fd693f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec896bd5-4b39-4914-a01e-466ddbbf8477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec961dc-993a-4e16-bc2e-1e60a087b23b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5eff852-05ce-42b5-9afd-487419d1b671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21f7ecd0-7012-4c3b-919e-b70d7b66b8d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "995fa284-25fd-4aec-bfeb-a4add9464248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb40745a-0a46-4edb-8684-943118cbd018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd575cc8-96d8-401d-b221-a20bd57bd044",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed94d97-37bc-4bf8-8689-e0a1df484b3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e112b5c-6039-440d-ba36-c8e9af1958f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eacb55e-903d-41f6-9688-fa29ded1fd3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80fa31f2-c83b-489f-9df1-8208403b7535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "108eff73-7838-4439-b30e-da18b3b4b6ca",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e0a07c-bf9b-42ac-b064-c83cb09582f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f529b7f0-86ae-4409-b060-9413e4abe01a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82531a0e-6200-4ad1-aa9e-182b62e0e5aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ab494ba-f029-46af-863b-d20a87f4b9d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0f5d3b-8511-4e34-b5f5-dc0237d46bcd",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83cbb56-4d03-4ff6-8d53-745c4133d939",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0059c4da-2484-46b8-a485-1f757f096a5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3312cd-c7b9-4c69-9e17-c71cceeab925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d9c4024-a0cb-4b67-96fd-aaee4132bddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e28734-410e-45a9-bedb-33d8d1fc3748",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0a5018-d4de-45e7-b731-780fc74f6ad1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6db3223a-7962-457b-a6c9-94e4115bf61a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac123d08-a103-4912-ad46-60e267678d1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09964dff-97bc-4052-9cc2-9d7787f63ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f17ef3-4bcd-4e77-8ff2-d651449b1c54",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e2cc22-6b94-4580-ab28-eefb4814f208",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a2b3197-3f35-431d-8d7b-3d22f0a58f65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af1dd569-a4cc-42e0-a514-68d3b480c496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c01df8-e95b-4599-91de-c5bcf55f2b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "884de40b-30c2-4e9c-82ba-22e1d2135ab8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703ecc35-d763-4707-aaa4-4b8a4cf72ff1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e418a379-f413-4e8c-a0f7-6d4c774fe692"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92b8a9a-26fb-4e7f-94c5-f3da132cf087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0b03ff6-d286-4d6d-90bd-f35ca22daf73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef6bf10-179c-415f-a02d-b4c5745e09e8",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05232fed-8a85-4182-a5a5-56711927e8b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cae541c-02f7-4aea-9bdc-cf80926dc099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e4870d-3f85-488c-b72b-64b377c96b50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c93594e1-17e9-4e58-8b18-8b6de2cff4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c157cb6-6337-424f-ae00-ea0ced441802",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8bf6437-36d3-4715-8689-990c709efcd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2589a91-0498-4481-83ab-2085ae8bae2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bfd13a0-2c9d-405f-a873-155388718ec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b9bea3c-793f-4e0c-9bfb-a703dadbc0d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd638128-174c-4277-ac37-a079dffad418",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3b01d7-bd2e-4f43-8189-cfdedd612f6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf3c33a9-c533-4806-b8fe-025925c8448d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae25c70-f447-4667-946b-c056ce5a7c79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ffec8c6-90ee-449d-be86-57550bfe288b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27129cf9-4948-49fb-ad32-c94f11fb9de4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a829bf85-acc8-4f78-b66c-3bd714938b9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a290bbf-4f6a-4b20-b43e-f8d52bbd29c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f52e05-6811-48cd-9221-c2627a37124b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a1b7db1-10ff-4100-affc-0c51a3563144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2467791-c3bf-4b22-a77c-7a7f6e3e41c4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d051e6e-b261-4bf5-b043-130edb4e2756",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd2e9ba2-88cd-4f02-8c95-8ca0434de74d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "127c1618-f4d5-46f6-8d7d-7d1d040c5c63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55107db2-1f1d-4a83-bac5-a6632d9bea61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dacf0384-3b04-461e-8e25-d45b534b813b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c353cb7-577e-4d8a-ac9b-c1cd52cf537c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98537005-5a2d-464b-a26d-8ef7e0f19fb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44079e9-b032-49f6-ba1a-406c2ea8cb06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94fbda00-8ca5-4274-b204-dec531517d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3afc5162-1cb0-4ec4-966e-b8f3765e2439",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0157124b-eecb-4537-9a6f-e81b22999e3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f13537e-aa84-4ccc-a068-f7fb561b42d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc95eef7-0ff1-4672-8920-4c0c34dafc9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f2fa238-81ea-44cf-a9ef-868d3a12edc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34bcb5a-8d82-4fa2-b679-2cc994284648",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b575e46-e5f6-4eb7-88c2-cb5c5fbaea57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a41dafb0-0c2f-41af-9721-4b9bfea31965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc64063-5c6f-4297-a2fb-1bb105c71c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac253a15-7b6e-40f2-ab24-7cddb09a74d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e73b5be9-ab5f-4b16-9055-31306e6000a1",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7471d08-ce98-4f1e-980d-033f079f690e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fe86d27-2607-4f13-b12b-8d6b7b98f9d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ccfbb0-2a45-4d0d-8862-ed95fc982266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36737525-1349-4621-be27-efae0b7d7eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16e9fe1-c5dd-4ba5-a950-3f5fadb3011d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f33631c6-5533-4f14-b47e-354ea8e4a594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b41906-60b1-49da-aaf2-3f2c5cfd61c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03de055b-7929-4b3b-8f71-5f2c68b6774e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a267e8e6-d5f0-408a-8b3b-da02349b3366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4594cb8a-e4f6-434c-8c3c-0777613ff88f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c642ad7c-d8ad-4b90-abc2-31eacefb795b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b5c5c7-5128-44d1-9244-1a79950dc274"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0baf971-e771-4b55-b645-889df14c1373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c17bbd5-f1c7-428a-94d6-42c1cbeba7a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd3e261-9003-4492-b68e-ffb7cbc9a687",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29494588-4a2a-45b4-8357-c4045d1761cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3895ff03-ad19-4ac6-8299-5dd96dbe7f70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb0f9a5-ff86-479f-803d-1e59adb2b43a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e37537e-b524-486d-9aaf-40254eafe60d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d148f09-0312-4581-8040-8d260e828ac2",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b23e4fda-8797-41f1-a25f-d138ed15d250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4948b48-0cd4-4a21-ade6-13d96ad798d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff49a61f-3327-4e82-9f70-158c4e56b95a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a52f56-f0ae-4dba-9044-48891e36a93e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f213eb-bd94-4024-8f82-4de46d192f16",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85864fff-1015-40da-8154-7708581d7e23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b219436-4ce8-4c3a-8bae-909a2da48383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bfdd737-a8de-4a66-a0cc-939dbd752c71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f650fa24-1152-45b9-b7ee-f62638476c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f649e55e-6a06-44cb-8e2d-6b5ffaab8070",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc80fae-3368-4729-a566-7e05761fa60a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce23f923-b4ef-4255-a19d-4447b9ef18dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e687495c-f513-4525-aea4-67399f71a934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "576e06d7-46f4-4c82-8535-9306045e5c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40ef47c-fbdb-4a3f-8934-f1447a41244f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb65a60-c5a8-46d7-8bc2-e5a6fb180731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e66e0876-576f-4178-aba6-83455e46b6aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4723f4b6-563a-4c4c-94d0-16ea4d6977af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32a2fe53-fd0f-4651-b8bc-d3ec141c17bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1092338a-7441-483e-aaac-3684381addff",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df0a2cc-68db-4138-9c31-ce9188dab29f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5d5ee47-1c9c-4eb5-a0dd-16b3af2b150e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af5d8bf0-4941-46fb-a75f-01a710f4c76f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf65cda3-ca3b-4cdf-8272-c840f675bbd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4806332d-46f2-4e9a-9a02-d47389fd27c6",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3f0771-19b2-49cf-bc6f-798ff62405db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "889328df-174b-4231-b453-93cb392d9fde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ae82e8-b65d-4cb2-988f-634c6e89a55e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c03ed077-5481-4e9e-b882-992d5e224f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56bc6973-c124-4431-89a2-822ec207443e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad327ba-da47-4bfa-ab43-14f46d9d62fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fc6566d-9f9d-4e6e-8c86-b6ad4ce458cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7eff4e5-343b-4d7c-a6ce-ce8c0b1a4916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cb9e442-dd66-4f61-b94b-5568cb6ac8c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33251495-8632-40d4-bd7e-a22ed479a4f0",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4eb450-b97f-4e23-b945-4b36f41e4413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da57128d-2c4e-4fbf-9640-23d19adf5e36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "097fae11-6fe8-4c3d-9032-470a1080163a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fcc0aff-f97d-476b-8fbc-d9b388ccf5d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e0a110-3508-4c63-a5c4-3165d5e3e9c4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c435159-b92f-459d-85bc-e7908d46a4c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64215a20-5b50-461f-b8bf-f16c64b4e84a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb208b2-6678-4721-8729-23fc4a30243b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d6ba532-73bc-4568-ba64-d7e08bd7f994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caac0ed4-495b-4456-8779-2905b8a01a6e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0a93c8-020e-4858-add9-4add2d6f698c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2edffadf-fe62-437f-af34-74630974e17f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "890244f1-28b9-44fa-b17e-5ff0aab0c492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30a61a6e-cbf9-44c7-9ad6-e9c6cdac8cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67176407-773c-4428-a612-a26ffdb5661f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8038a4e-9fa3-452d-bb3f-51768fe8e7e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c9640e9-f9a1-4f98-b0c6-0c9108a3d3f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21165e34-086c-4382-b01d-456154320921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fee5b9c-0eeb-483c-b44c-011db908367f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e79c06-1d89-45b7-ba30-2d6821d085b0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e79b53-9cc4-4c1f-93a0-7d59249b4247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ee587b-59b3-4a49-b454-8e622b35acc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de68f446-aeb3-4d90-bab0-d9ce29ca887f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "411d5567-ebf5-4a23-8035-f55837a21cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f081a9-0ce3-4ecc-bf2b-83898df3f3d8",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ebfe95-b688-4f90-8269-37aaf70f6aa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21efc991-efba-4c9d-b91e-83f9c848216f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cfcb6df-ce52-49f9-b05e-582bf8e29afe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0632d8b9-a544-4aea-9ed8-03a6c8bc2b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d33570-ecd1-4c48-98c8-fbecebecb53d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42174ab5-5fe7-4c70-9b20-c51d85cd36fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83804b38-64b4-4432-90ed-e221b7198e84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4f7ddf-0055-4827-91f2-e0f169db9471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a3ee5dc-4947-49ac-b0ea-eeb88181df87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f71c28-e031-4811-a16e-45956fa8ece3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66623fe1-c849-4267-aa53-bd278514450f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee18acf-dfcf-45c0-b4dc-d0e54cf96cc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4afa99-a93f-420c-ac7d-bd8edad98125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f097136f-4f28-488b-a144-74a61530b773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b928ce-c3c6-419d-86a0-24dbe8b7d968",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a11391-b977-4b8a-bf57-19c9434f5fb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f0c3f35-1fa2-42f9-a7dd-0c63a8332351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2902b59b-4f98-4d6b-8b0e-47276ba94928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "453f112e-ddc6-4193-ab36-1c3af1d3d4b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66f29f9-87d6-4cf6-b624-7c433709acbd",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc5cd32-fd08-4cf4-b240-1c8512a7854f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a85c5397-2b63-4529-b64d-53c9b64f4c5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ad0726-a823-4ac2-b419-b157bad50bff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a0b6fff-195c-4a67-91d2-6bf74a95a037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d31c8b3-f324-44b4-a9fe-ad09510b4d43",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e99613e-028e-4fbe-8c71-823328c139ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42c31bc7-11e6-4f9f-9860-a946a5435d05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c72baa-253a-4d25-abaa-22cef4fe9127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b9c556-b813-46fa-a6d4-f01ff9ed2542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce15dfc0-c6f8-42c5-ac48-7cc456652c7d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e61d8a-f6ff-4e26-a94b-e53e630eb3e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0e801f2-1087-418d-820e-c968c3ec77fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1048b07b-15b8-48ac-b3f3-1028d28302ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5468d52-128c-4a55-9eee-22f2ac528492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "040c3cb7-1bbc-4a4f-bb8c-af4b888d6bdf",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6d8d20-4294-4797-8f6d-6295372bf35d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "258af31c-b9ff-4066-9e11-b191c6c5a099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79433ec2-6e80-4218-a4a1-fe1ba5d93453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f162f05a-02f3-4c66-8266-b92eeb406fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab98629c-1611-46bd-b8c0-75c202fe832a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56fe2a87-5472-4e8c-8492-2a60cbb0ebb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9736979f-4783-4dcb-98c8-0b5192cbf44b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3014353-6589-4ed3-963b-96dfc8b1f097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f52345db-0ae6-4b24-ace3-4a272515924f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82ce145-688c-4970-ac69-dfe83000d142",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d9b85d7-3c61-4739-b4c9-9bb46ca89256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2964e7a7-370d-41a3-9348-910c33a55664"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44d2095-fad6-4aa6-aa29-a5fe6ab6a917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20130004-1cef-4e0b-900a-4fe4853b0762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75de5100-fa54-448b-90b3-f86cb691853f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e537a8a8-3946-4eee-a567-0fba878e7b0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beff2f4c-31e2-4480-ab39-5d3f68ba85e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d0fb6f-4680-49e4-8eb9-e6d65d958d5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11053d28-60e3-4b9a-b432-7f6fc7c1204b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f4c677-ec9f-431f-8b7d-aa6131e91fc0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc83099f-5044-478f-939e-9ded227f0d43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "269c9a66-0d0c-438f-b041-a1745fabedd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "035cdaa8-fd92-4d56-a4c1-feee1781e60a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c01628f3-3d64-4764-a822-fbb1edef9ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025b8724-2013-4596-9876-39ff3f70467a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2647dc1a-5dcd-46c6-b784-ce4f1d69cd2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd65f767-9bf4-45ac-a1c0-77dd9f5cd6f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f805dc4-8be6-4e54-93a6-bbb34552e1a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45713156-f716-4b1f-8016-6e2c2bcb339c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766ace29-bf27-4352-972e-1c28da21f049",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aaa915d-ecd7-45d9-b961-dd881f767df6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d0cf16d-2bf7-4c5f-926a-8b63b5e0f583"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "371f9480-9ab6-4a62-9812-be326abf3e44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c869ffe-d6fd-4429-aa35-63ff9b2ee8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401424c7-b73f-49ff-9038-99befc024f65",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88203751-7656-4aa0-8349-66fd10fe8386",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71b47ed4-7384-4822-8a00-17e1e97dd2ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ac6ae5-51a2-408f-9e49-7315817f7b9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d3c8c99-a5fb-4282-9c47-cd9577635fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1926684c-ade1-4abb-a459-5caef697b36a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a2dcbc-d22b-4a16-9a68-a3dc26ff71f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebc8c89f-3eca-4705-942c-66e654ec80e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3db4a8f-1bff-4886-80c6-3c7d72e7546e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce2421c6-39eb-4d38-8a32-8c7d821a23da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116196ca-9dfa-4935-b403-e7db13ee1cbf",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9fe684-7e65-4af3-a6b4-cb28e541d500",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b282b1e-548c-44b9-ae84-b3e2a46e3ec1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a92b4f-bb48-444d-925c-d209333a988a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75f292fe-6eea-4fa4-b7a1-bbdfd15977ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde144ba-5f53-4b7d-babf-9dea413b91d7",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778a572f-3f26-4c14-9b5b-51c0d5ab482c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07c8ae67-28f9-4da0-a2e1-95d584b46dc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4faa98e-1bb8-4202-8f13-37ed74214b8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8ff7012-b6ec-4146-8113-308d5befec45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1fa75a-c514-4113-947f-1b98d85d4a87",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa93bc5c-df6f-4bdc-b8d8-83a284c4490e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05d8d81b-9310-4fd5-81c3-78a3ec66c4fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2412a2-9ef2-4c31-9bbc-1eab36644fbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab0cbb41-d49e-49ce-bbd7-3d1afa7e8955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57d2fd96-fea1-4031-aeb0-efeea4448a06",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882199f7-0743-408e-a699-f28e7b9924e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5df5e2b-ac27-48f6-9350-4a1dfe4e6d0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad6588e-21f3-487e-bfa0-a8feb5e18a5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "513b17e5-161a-4f63-bd9a-52de4a433dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "094718b9-059f-4ca9-a479-4cacedb8404d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d824b6e-ebce-4a9b-8e26-182346c99961",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79140840-fa93-4a53-9feb-606d084c7220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae5763a-02e3-4f0c-b265-2cc7802e2ca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba98838b-6794-4c77-a39b-28fe5eef1ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "274c21d9-e151-443b-9f48-cc79a2ecd771",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06a7899-0e18-45fa-8ade-a864b4186fc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4eaef8b0-efe1-4951-8176-0d2e0b11b68d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6af8736-ec59-4c7a-88bb-d15082fa0ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "075d81d1-75e0-4323-a9f7-4e1ccb91ace0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac16db5-4625-4241-a794-bf8608867e86",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a25a6e51-6ba8-43fb-9a5d-64511f09968e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da26048a-d531-4eeb-831d-ebf0d4eda5ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88be67e-4587-4524-a001-bea47fd0705b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e882af21-71fa-4242-98ed-f5a424220811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67d2365-8c07-4f62-a21f-3962db0891cc",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe59debd-62a3-4d28-90cc-429cc227eba2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25e28591-dad9-4c4e-a4f1-f0edd2dd53e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d58531-c657-4cc8-b4a1-1bcbb36d2466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d76bb85-b537-441a-aaa7-09693512ab49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719a8383-cb1d-4b6c-9242-bdee19f40ead",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6855550a-51fe-4b3c-9d67-8fe4c788ca28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1fc736d-6967-409c-9c9d-b68343e18555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "096806ec-0144-4cce-9a93-2a0340a566bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c21c4826-73d8-4d6f-bd8b-37fb97cfe87f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3eb2bc-1fed-428a-8e63-0bffb7e97a0e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11dd2f9-3550-4466-abee-721d2387de84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "221d1262-39cb-420d-b1de-0182f79da1c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c1f0f5-f96e-4aec-bf77-5c4dfe4bf922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be012436-5301-4a08-b194-4e9f95db18ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee592568-7259-4637-8f2d-72f4d03ee27c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba37bf6-24c4-4061-9f1b-36059230401c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41dc267a-5d32-4e5d-8381-ab16ecdb48af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78591cf6-4a0c-4a5b-b97d-53e924ee3f2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd135dae-3cb8-4e00-9d82-05d72649167f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a819d88d-79d2-4801-82ee-b8946a63630d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f71dd2-ee39-4362-986f-751e5e65ffb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c94c0a9-a64a-4510-8a11-f2c0f83333b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e3a7b5-73a3-45a3-8bab-9368e64d87ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ab0d28-b20a-451b-8b1d-1c6df5d3145e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f40a215-edc5-45a4-8ffa-323243440f0c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2453ba29-bec6-4b77-8027-c33de35b5c35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e93f5b83-aed7-45cd-be98-5704644d432c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75110d65-8ea1-4ee8-b516-f81d8d48e813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1800ae4-f47f-4d26-b359-2b813b0bbb6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b5078c-dd5e-4a6b-8e4f-b550d536772b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e969a9-4a2b-440e-a333-ccc4c3ff7060",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "162cb6ea-0100-442b-bf00-643925ebffa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9dacd89-e4c7-448e-a605-d201b6dfebc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88fa8bd3-7013-4fad-9c33-0f6ed546b418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a521add-d1b1-4362-9331-b45268ed6112",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b17dec-3b59-44e5-9675-f885d7cde992",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72c09173-59cf-412e-b00f-d9c532039c36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e081b819-05fd-480d-a17d-87938f83a6b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a3310f5-de02-4605-a1a9-4c3bdeb25a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e5b074-ac75-4095-9b82-2bc791bb343c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70cd4efa-5cfe-4ee5-83a8-00c004ea0448",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "051af26a-1087-4203-bb4a-fb74def42bba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7488608b-40bf-476a-8ee1-01e232af3b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c61e2f65-80df-4aa5-ab71-9c15553d57ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6916f2-264f-4412-ac2e-2fef238f8dae",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d2c3ed-9350-442c-ae60-7b1b86dfa2af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec484f87-b5e7-44f8-b7a0-c5af0cdcaec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf83610-4124-4637-9a59-473a5e80f43f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c122b34-86fd-4c0d-841d-691483337a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8eb905e-2fd0-4ee7-ba7b-6e5ba69f383b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7af96b-6bd7-42cf-9ce6-16672c11d171",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "125e25cf-4f4d-481a-84ab-0ea03e0876f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca54620-a57b-430f-9e69-4a4ad8919dcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dd13dd3-6e1c-4826-b4c5-7e4bc5f65c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ba37e8-0ea2-4cfd-ae1b-ca0b763f943f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655c9651-1f5a-4d19-be06-034f0537fdbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1158e7f2-b4e0-40ae-b492-fca5ac623495"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eeba626-bd1f-4e9e-ac9f-0f86a060abba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d1b7cc3-390a-4313-bf6e-c2049a809bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22a3945-2cd5-4de7-a93e-35e546f30dd0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182ab788-adc1-447a-9456-3eae89b1ebe8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bbf5175-bd6a-468d-8279-2bae15b4c0da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce954559-d048-4567-a3b5-2ea3085f01c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54a2efe5-a73f-4e0a-8a75-2e7f3844a1bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1544914e-5f86-445c-8477-0283149e265e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72b5f53-d25c-4613-af05-cfbfbbb96c0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb782a28-bad6-4fae-83e1-20a20d2b1461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb6ceb7-7a11-428e-bd87-315793308d87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "477e7d5b-8d47-4b66-9b66-c52a8e228956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c611456c-5952-443c-b592-c47131733bbe",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa75d2c3-6ebf-4458-8cc5-a43fbdef81be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37e022b5-8fd3-4e88-96a3-603b708a108a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8314163-b6c0-478b-83b0-a39e88251bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7537044-fefd-4175-81d5-de7c552707d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf23caf-bd40-40a2-9db4-814e3d2cb32e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4850f13-694b-4dcf-a290-771eea2f2d4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a895eb3-1e28-467e-b8f3-acab5e08496a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ecd1d03-ab53-4311-8558-2f553d05351e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe9c39da-df06-4736-9a88-f24838ff4fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24180d91-189e-4cb8-820c-496ac7c35697",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9379bf1-a4f1-4505-95d3-7f1ff281f302",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "831b5dee-e5ba-4b17-9b3e-4a2484ddfc09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4c64d7-7fda-4f70-baf0-b40584a9ee2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "200879d5-eb71-43cf-b074-b89efad8fcde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b84101-1095-442a-85f3-193bddca97c6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90fa2dbe-27dd-4623-9612-5a3f44f5cc20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0ab0b51-8b64-499d-9689-99af948de6ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be0e71a-8d4c-4dad-9e8f-3be23c830a69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b443e096-3dcd-45cd-91da-2d1afcfcc040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10cd58e1-236a-4b08-ace7-9abf57e4bdb0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7770f827-012b-4d98-84b2-7115683a13ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "817d41ea-8830-4c85-ab9a-c8f7a0f0ee47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d321ce49-af77-451c-9c8a-138fac9c5d55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cebc3c1-6d84-4a83-b2fb-315c0f052b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90780dbb-bffb-4968-87ad-14ac1d7de3d5",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6eae8cf-b7f7-4e6a-9b06-66771f32379d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a987d1e4-5cf6-4c89-b725-0de7afe3d837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "831dcdfa-6afa-4079-b9b1-8d305641daee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "115347eb-0560-423f-bcdc-312acc1e674d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb0a9d08-29c7-489f-bfcd-3a7a1ebe91e1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ecdb40-412b-42d3-94ba-136497f04aa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2196666-ff83-4a9a-b37b-bd9c1318af9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "484d399a-f5ab-4cdd-9a6b-1b5e65667673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e033f9d8-a4df-4f62-89b7-ea5cafd2c3e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ff1d2a-4e8c-46b1-8985-64c1be3ae234",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "059ec110-213a-4dd2-a608-fb804ee8a912",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "071020d1-037c-4c3a-9475-e7635ec9d31a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c316180a-97e7-4c66-94a6-9826dd69201d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43f95bcb-0143-4f21-b649-ef7751a74b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b73893f-46e3-4969-b766-2ee8c3eb821a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44742aff-b2be-49fd-b17e-3a8e019fdbdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b3243d1-a9c8-4c1f-9bf0-581a9fe8dc4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e022bf-8f6e-4603-92d3-9fd1af3d34a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5ac352c-8fc7-498e-b2a1-a6b2cd38ba39"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7310e9eb-35bb-4718-815b-c75856f0dc04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8df66cf-8934-400b-90c7-9f9f5066a10e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad0b00f1-6dd2-4b26-a7d1-5394f808fef6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6e8a35a2-c9cb-4b31-9877-a37c217782a7"
                    }
                  }
                ]
              },
              {
                "id": "90fe64b0-0ee8-4ae5-9ac6-e9810780e4e1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2aaf45d3-bc09-4ce1-a35d-4ba3f2c3ac12",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95398152-77d1-4e85-9b7a-c799a5502b17",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5284cee3-7adf-49c0-ac9a-3ef9cd211dba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4677b851-44dd-46fd-8d5f-f291f6194f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac8593c1-d226-4b2d-977e-200576e45936"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21b2ca5a-19ba-4d7f-a7ba-75f2193d4de4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "677ccfb2-57f2-4f40-b0dd-c580c041f1c9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f20666ec-d367-4964-9d3f-7477eb481db7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91855699-fc52-40fb-b258-c3c6a31dad5d"
                    }
                  }
                ]
              },
              {
                "id": "e02ea556-8b7e-419a-a4e8-950109903098",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "cd965be9-6ec4-4cfd-96df-859ce192967d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4966eb33-f705-4b8f-994d-b9fd93fc2d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c263cd72-c7fa-4a83-9ac9-f0c994d3e56b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "407c9616-285b-4a1e-b200-596c65a1efde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c0f5942-a629-412f-8869-50c34c0fd3af"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f5d14c13-7129-4c37-8d98-58169e3ae078",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b759c129-8f8c-47df-9921-5c91bfa30bf8",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc49a7b6-1b39-4708-a42a-0b0800428f24",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b72dc60f-81b6-4a24-ab17-e3887b072109"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa2c63d0-d544-4577-a778-d65598f8790b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3df8f5c-8889-4627-a5b1-f58d4756a449"
                    }
                  }
                ]
              },
              {
                "id": "97e279ee-37ce-4f5e-8805-6e6d952122fb",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d24a380-7f12-49c0-9286-e404adc03132",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e284d72c-1776-4597-a739-01935fe47209"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "429f7c12-17bc-4736-8d7e-f5b579be21ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2304137e-bb2f-4403-a027-04d08b550b3d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dfc15187-d8c4-4255-9445-fae86b74a261",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "53e8930c-4285-4eee-8ddf-ebed04644db9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "36daa1f3-5a15-4045-8c59-9262fb5240ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2cf31d18-fdf8-439d-b908-1d14879d5a5b"
            }
          }
        ]
      },
      {
        "id": "6f4ea226-edea-4454-937b-336b0d4b0354",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6c45abbf-4f3c-470e-8674-1135bc8bcedb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6438d360-d567-42be-bff6-9ba3e4b83330",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "91316f3c-9b59-470a-aa3c-6a1a15a4ff21",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f792852c-6208-488b-815c-99d926d558c3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "00cd093d-a58e-4c50-9bb1-e795541cbeaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ee6597-acd6-4d3d-835f-e3bc59ca8bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30edd0ec-997d-479d-ac4e-0e2cb1d905b6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48753611-967f-48f8-8e30-38c4261783da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50ef15c0-016c-469c-90dd-7a169e104066"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1ac7acd-dc68-4d59-9fb4-94ffeda83cba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1bd9cd24-ad74-4bde-88a4-281c1f1d8b0f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2579d221-4fe3-410e-b685-cd9cc4df836d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ac9ca534-98b5-4466-9d7f-c88d6336b53d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d282eb1f-e6d9-4bda-8373-7291ee028313",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1b1b58e7-36f9-4828-805b-f287a32338f4"
            }
          }
        ]
      },
      {
        "id": "4db8d027-00b1-4ff3-8f90-b616a8979794",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7a2fa96a-699d-4721-8b54-abae5fd6bf58",
            "name": "Negative Testing",
            "item": [
              {
                "id": "55e53e9d-3486-4731-9b61-dc8f9f22bce8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2a809292-55e6-4de6-b215-09f56561debe",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148b03f6-faa9-4d72-b39d-fef2c11af46e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e52acdf-1200-453c-9f7b-9bf5a1564177"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4c2b50-e8c4-4a7b-b901-2c27c4a7f1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c795b8bb-3e87-415b-8a97-d0aa5851c3f0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0998b034-58f3-4754-8ae0-2571c0414009",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56701b50-6c7b-4f0b-bc3f-8d1fd71439de"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1b7c6a2-b7d8-4188-adfc-6d92346b658c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ecad7a3b-3da3-460a-b72d-1e68ed23ae53"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "016d2869-60c7-4618-a547-b4abc8b062d2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bdd22e7f-ac9f-49ea-a880-2582d7bf328a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38f26e92-7444-404c-9c93-9481d6c8f02d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e4b96706-9fa8-4b8a-917a-ab8fc59bc861"
            }
          }
        ]
      },
      {
        "id": "5a579c01-d859-4ce6-9f25-f543bcbe7518",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4162851d-9e03-4daa-9b6a-76e42252ad42",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a5c69d30-0b73-468b-9e98-c450ac187b3a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "689335e2-183c-4ca0-a115-9be7ad53f04b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc9b813-3e4d-4085-8218-e751ee5548d0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06ec4861-b7bc-4a19-97d8-b2e056484b8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38c667d-33ca-416a-b2d3-85c8022021b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60af11e3-13b8-4e07-b338-7c83a0a6d996"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5ea9c2b-dbf1-4650-986b-716722cdfe5a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "befef7cd-1cf5-4f67-987a-4537062084fd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e83e621-9860-45c1-bf8d-71fa9fd4af4d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c0b49cd-a220-451a-bad8-c57162e41e83"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "621ce849-429e-4cd1-84b7-93bb078646ab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bc46eb7e-03da-48ee-8413-aa8d359188d2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c14c012-465c-41e0-84b8-9be552cfa659",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "34b4c27e-4dc8-4353-8fc8-0498045af29f"
            }
          }
        ]
      },
      {
        "id": "9eeef8c3-29b9-4bd3-84fb-f939c6ed9b7a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6563ae7b-6a7c-4693-8c67-37851212cbf5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "20f942fb-7c93-4a66-ad46-121b257531ac",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7d604d46-2227-4dba-ab30-58bfd6cdeab3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "08a6f571-60f3-41ce-bc21-fa360b214c9b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6442d72e-5a0b-4456-8870-23c0ab0354b3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 10
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 115.94385964912281,
      "responseMin": 9,
      "responseMax": 2878,
      "responseSd": 335.8439440320424,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1705365375281,
      "completed": 1705365417695
    },
    "executions": [
      {
        "id": "515760f1-8bdb-4904-b6c5-c0f3147b6db0",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c32ac4a9-964f-499a-9e6b-cba222a9a924",
          "httpRequestId": "2583ef3c-e29f-4da8-96f9-49863c8cb9c7"
        },
        "item": {
          "id": "515760f1-8bdb-4904-b6c5-c0f3147b6db0",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "44fdc909-638d-4243-856f-3e2f79bb5171",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 0
        }
      },
      {
        "id": "4456aec4-affb-4c33-8a60-0e61c160a49f",
        "cursor": {
          "ref": "3ddb7c87-d64e-4e7d-9561-3301c2542da0",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "82400e44-5eda-4b95-b080-793f0e2dbe6f"
        },
        "item": {
          "id": "4456aec4-affb-4c33-8a60-0e61c160a49f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "06f494b1-ae65-408c-9c96-255ef27f9466",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "36ed130d-9bca-45fb-9ba4-25e879330f2e",
        "cursor": {
          "ref": "4b5e93e0-f59f-4030-a7a3-4368313bd377",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "10d698c2-a8d3-4d2b-a65d-c0a528489df7"
        },
        "item": {
          "id": "36ed130d-9bca-45fb-9ba4-25e879330f2e",
          "name": "did_json"
        },
        "response": {
          "id": "7030f19b-c077-4d08-a0f1-f23995a2ed0a",
          "status": "OK",
          "code": 200,
          "responseTime": 564,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec35cdbb-1183-4ee8-97da-40178e863e41",
        "cursor": {
          "ref": "c2b4700a-1303-4188-9aa6-b3c30e4ec009",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4b65d799-2b65-4999-aea5-6928d61cedf3"
        },
        "item": {
          "id": "ec35cdbb-1183-4ee8-97da-40178e863e41",
          "name": "did:invalid"
        },
        "response": {
          "id": "ec72e9e2-55e1-4d28-ae58-c4151d418a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec35cdbb-1183-4ee8-97da-40178e863e41",
        "cursor": {
          "ref": "c2b4700a-1303-4188-9aa6-b3c30e4ec009",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4b65d799-2b65-4999-aea5-6928d61cedf3"
        },
        "item": {
          "id": "ec35cdbb-1183-4ee8-97da-40178e863e41",
          "name": "did:invalid"
        },
        "response": {
          "id": "ec72e9e2-55e1-4d28-ae58-c4151d418a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4611aee-8d0f-47cb-824c-39fbe803451c",
        "cursor": {
          "ref": "02fde94b-2c2d-4e19-a87e-567e2e255428",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "41572057-d088-49d1-92b7-ac59f4bf5d7b"
        },
        "item": {
          "id": "a4611aee-8d0f-47cb-824c-39fbe803451c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a0148340-fa09-48a3-aa46-42e692aa789f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 115,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7554ea0a-907e-45a3-80b7-d8083155ba53",
        "cursor": {
          "ref": "b8217d9d-a394-4dc5-ac09-61b3b6da9173",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "942f9b8c-db6e-497d-8551-05358f988ba0"
        },
        "item": {
          "id": "7554ea0a-907e-45a3-80b7-d8083155ba53",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7d563d05-c9de-49e4-a74a-950883582665",
          "status": "Not Found",
          "code": 404,
          "responseTime": 61,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf32487d-3be2-4a1c-9d60-7c3cde3a4d4b",
        "cursor": {
          "ref": "696b02fa-135e-467f-b965-df79ba248b84",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "966a0e22-ad7a-4f9f-8a93-872167408afa"
        },
        "item": {
          "id": "cf32487d-3be2-4a1c-9d60-7c3cde3a4d4b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1f9f8cf4-6b1d-4c93-817c-588744afb9df",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0aa4786-1af8-4cb5-ac53-76397fa1b278",
        "cursor": {
          "ref": "7a5b8657-b686-46e4-bfec-f60d435bac3a",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "eedf4e0b-86ea-4993-8866-4d77e92764d5"
        },
        "item": {
          "id": "b0aa4786-1af8-4cb5-ac53-76397fa1b278",
          "name": "identifiers"
        },
        "response": {
          "id": "72ba3581-b8d0-47d8-ab45-30bafae2ac9b",
          "status": "OK",
          "code": 200,
          "responseTime": 304,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69615869-d50b-4d1e-9a29-0443ec2bf487",
        "cursor": {
          "ref": "0036e5c0-7bf3-4c3b-8ede-b1eb2f2fe044",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b822a14e-dcf1-4e2a-a33e-10f715db3ba0"
        },
        "item": {
          "id": "69615869-d50b-4d1e-9a29-0443ec2bf487",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "66a30aa1-40f5-4095-ace3-7356ff79ab10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2ea35b-495a-4c7d-b6a5-c35675c76cf4",
        "cursor": {
          "ref": "25c051b8-d683-428a-af38-098eb714c272",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f8d8b2bb-0354-43f3-a0e4-1a589cc7772e"
        },
        "item": {
          "id": "ea2ea35b-495a-4c7d-b6a5-c35675c76cf4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b2f15372-727b-4753-bd4d-ff8662129965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3e6500-634c-4cf7-b1fd-1a92f54c236e",
        "cursor": {
          "ref": "cdc8beb3-45e8-4f13-b39b-7ec7aede4762",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4e57df33-c129-4706-9ce9-3256edbd2626"
        },
        "item": {
          "id": "1e3e6500-634c-4cf7-b1fd-1a92f54c236e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "90766692-a0ac-48b3-92d7-cb3c27643f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22b25f4-b48c-4aeb-9707-43269341b441",
        "cursor": {
          "ref": "eea9adff-f72f-4bce-9b46-888044d0c716",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4be235f3-90d6-4c10-b540-81786c9c14c8"
        },
        "item": {
          "id": "d22b25f4-b48c-4aeb-9707-43269341b441",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8671972c-b742-423e-b63f-4c1bed7226d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e666b0b-ac2c-4661-9e22-77c2f2ce62e0",
        "cursor": {
          "ref": "f8fac901-3833-40ac-a36a-7e92d8b94d14",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "491e8f2e-89c1-4f39-af3e-07f889dfe983"
        },
        "item": {
          "id": "9e666b0b-ac2c-4661-9e22-77c2f2ce62e0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ba660ad8-b315-45f3-b276-1344ad7ad980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8143122-4c81-4579-b674-b091bd9514be",
        "cursor": {
          "ref": "a3bba487-97d6-426a-8023-cdd6a2f07658",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "53f31725-bcc5-4b30-b0af-1469b4074e19"
        },
        "item": {
          "id": "d8143122-4c81-4579-b674-b091bd9514be",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9a7a272e-72e3-4ecb-b1ab-3a9fa3d4e1c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99b19a5-57b4-4c4f-b031-7278752f3ece",
        "cursor": {
          "ref": "6d48b70c-9dbf-467f-b052-e21ac956f469",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a35fc94b-3736-433b-b579-82e3f88f1736"
        },
        "item": {
          "id": "e99b19a5-57b4-4c4f-b031-7278752f3ece",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "716a6927-1553-43ea-980b-1fd10686fda3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9bc25fb-3d5d-420b-8c63-53f5b64a95d6",
        "cursor": {
          "ref": "a20e013f-c30f-4b12-830d-db05df228309",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ad443335-a04f-46bf-a7cd-483fd194fcc0"
        },
        "item": {
          "id": "a9bc25fb-3d5d-420b-8c63-53f5b64a95d6",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "608ae624-f985-4a83-8376-68686195734e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66ca47c-f981-4ead-9650-2ef0c728bdce",
        "cursor": {
          "ref": "34e366e2-7b8a-455c-9787-e3340400e2ff",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "53fe0740-9fd5-40bf-b966-098dec84a70f"
        },
        "item": {
          "id": "c66ca47c-f981-4ead-9650-2ef0c728bdce",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7727a027-aeb8-4737-897a-2aab262ec28e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d76c6f-3beb-4d86-80ce-50c8d75f8579",
        "cursor": {
          "ref": "c626c076-cdb5-404b-8416-1216f86a4851",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f18eeeb2-458c-470c-9e6b-cdb9f62bb8b3"
        },
        "item": {
          "id": "a2d76c6f-3beb-4d86-80ce-50c8d75f8579",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5d0385c5-b8f8-4a0b-acb2-07ffdf56a44d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83245811-3143-47d2-b7f5-5b7c4df76a63",
        "cursor": {
          "ref": "f699979a-7e50-4b1c-89cb-5ce54ed67163",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e5bf3cd8-de7f-471b-9493-7ac1b043b4d9"
        },
        "item": {
          "id": "83245811-3143-47d2-b7f5-5b7c4df76a63",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b10c655b-40bb-425b-b749-1bb200a982f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e8354b-a20c-427a-8d2a-526100f6efa2",
        "cursor": {
          "ref": "f17f9026-36cc-44ff-888d-1947bf17a2f7",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d4d780d9-82bc-4142-91d3-8831418ffbd9"
        },
        "item": {
          "id": "48e8354b-a20c-427a-8d2a-526100f6efa2",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7037a3e2-9ec3-4710-ba44-72ee8bb6d7f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4bb97b0-0639-48c0-9a59-86ee68421abd",
        "cursor": {
          "ref": "abffa07b-d528-41a2-a9b2-60284a3ae254",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6fde552d-52bf-4535-afb8-5e544dd92c25"
        },
        "item": {
          "id": "a4bb97b0-0639-48c0-9a59-86ee68421abd",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b31ab2cd-9cb6-413e-b262-361d55c8913c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7451e28-4e64-4848-8d80-8b616b6539f0",
        "cursor": {
          "ref": "df8345a5-f58c-45d3-8b39-1f71c7271b0d",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c2a0a08b-bea5-4f00-a0db-d43a7395f999"
        },
        "item": {
          "id": "a7451e28-4e64-4848-8d80-8b616b6539f0",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "116e9aed-2b56-48f1-8f0b-5e963ddc9432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929af481-6340-41b2-b720-34ad93c42dfe",
        "cursor": {
          "ref": "e23ed57c-b494-40ef-b33e-78180ed40003",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ec94b7de-015f-4486-be04-f025d933a77d"
        },
        "item": {
          "id": "929af481-6340-41b2-b720-34ad93c42dfe",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c33d5a40-e9f1-44b7-be92-ccefc5ec6ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44aa1a13-b44e-41e7-8a29-227a2f1160f0",
        "cursor": {
          "ref": "38bb70f7-f78f-455f-9c9d-7d3b73edfd3e",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "771eb56c-b113-4821-be51-f211c789bdc1"
        },
        "item": {
          "id": "44aa1a13-b44e-41e7-8a29-227a2f1160f0",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "32bb9c5c-804a-4f97-8583-a45682abfa05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad361a2f-bdef-49da-820f-5c954d702c73",
        "cursor": {
          "ref": "79bf9f35-f2f5-437e-8aa7-8d2937e56fb0",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c54aea6f-2416-4684-bef7-8932d70dd1f1"
        },
        "item": {
          "id": "ad361a2f-bdef-49da-820f-5c954d702c73",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "3ccf7820-35ed-447c-a3dc-2ad1975940e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9dc97e-14c3-415e-804f-f6681297e7d2",
        "cursor": {
          "ref": "363b82d0-6cee-4026-9ef9-76a1ebec8379",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "28f4dbdf-d22d-49eb-b50c-5263277d91d2"
        },
        "item": {
          "id": "ce9dc97e-14c3-415e-804f-f6681297e7d2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8c0d6eb1-4212-4730-a025-60245b2dbbf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53c3aaa-8ecd-4792-b63b-c7cc65b17747",
        "cursor": {
          "ref": "d8717619-fe06-4078-bd57-324f18d0134a",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "47bd7256-c314-4078-bd5c-cb560c6f31b2"
        },
        "item": {
          "id": "f53c3aaa-8ecd-4792-b63b-c7cc65b17747",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "dfd78a12-f752-47e3-a6dd-0797ad9e096e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6331374f-1bde-4b08-84d3-0dc7e0252888",
        "cursor": {
          "ref": "086bcf15-9427-42bd-89ec-3c4ed71cdd01",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "70964b42-2d94-44ec-a356-f9541501ad88"
        },
        "item": {
          "id": "6331374f-1bde-4b08-84d3-0dc7e0252888",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "09d5ecd7-b9ff-4da0-9d0a-2389bb424a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9755f12-942a-446a-bda4-713aff014c73",
        "cursor": {
          "ref": "dad0fa24-f8d5-49c8-b735-58555de70ddc",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f631cfad-8908-4093-a785-703bd61d5d07"
        },
        "item": {
          "id": "a9755f12-942a-446a-bda4-713aff014c73",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "262bacd1-519f-4fb6-89f3-18d8c12d1e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5567ff-76f3-4b00-90bb-96ef33299b0d",
        "cursor": {
          "ref": "9afaf879-efd4-47f4-bedc-fbd723ef0daa",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ba622270-bcec-477c-8acd-a8ef8ea30621"
        },
        "item": {
          "id": "4e5567ff-76f3-4b00-90bb-96ef33299b0d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f6ac8806-b3cf-42ee-9f97-bf6a8d349e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ddcfdfb-8cdc-4d41-b55a-20945442518b",
        "cursor": {
          "ref": "bceaa8f0-d287-4459-8201-33b4ed08f009",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5a9b1a0c-20cc-46b9-9eae-0c3ccb8b7ead"
        },
        "item": {
          "id": "6ddcfdfb-8cdc-4d41-b55a-20945442518b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9d4f5956-f7c5-4c16-adf0-7ddbc8211765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9a1ad1-69a6-4b17-80b8-1e4d763e8ac2",
        "cursor": {
          "ref": "859a6c1c-8a6f-4774-b504-19b4f61bb2df",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2a083e69-2084-4731-aa66-5753c2664fbd"
        },
        "item": {
          "id": "2e9a1ad1-69a6-4b17-80b8-1e4d763e8ac2",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "14478da8-3abc-4232-a73c-0d715d28cecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ab09fd-301a-4f48-bf45-f2fb1190fe29",
        "cursor": {
          "ref": "7d9f3e19-1e50-470c-87a2-d4963551eb94",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b780814c-7377-474a-941c-82253f2e9a5c"
        },
        "item": {
          "id": "b5ab09fd-301a-4f48-bf45-f2fb1190fe29",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3d8f38b4-190f-4482-a605-75792b049e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9678f359-7a47-49aa-aeaa-ab1278f205df",
        "cursor": {
          "ref": "19e77284-fb65-485f-83d1-d8ab647caa5f",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "53b6e5e3-e2fc-4e31-9fac-f45fe46363fe"
        },
        "item": {
          "id": "9678f359-7a47-49aa-aeaa-ab1278f205df",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "501cb712-84bd-473b-a160-010e97fc5db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf88f52-76e5-4de8-a1bd-e58289c63a86",
        "cursor": {
          "ref": "4bfc004c-d609-4ab0-8c5e-9c51ddf49454",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3e412fb4-a7e5-47c5-82cb-5091c89e80d1"
        },
        "item": {
          "id": "fdf88f52-76e5-4de8-a1bd-e58289c63a86",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "446a109d-9633-4446-83d5-3cae94de04ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0822022b-7a08-4bc1-b3df-438a53c5c08a",
        "cursor": {
          "ref": "f56df41e-0d58-4521-9dc9-ce12a876a61f",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "8c81b8c0-f716-4e6d-a444-8eaf7d80f947"
        },
        "item": {
          "id": "0822022b-7a08-4bc1-b3df-438a53c5c08a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "213e1e2e-2071-4b21-81d4-460eb27370ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2287fc4-1484-4237-9efd-8718de409351",
        "cursor": {
          "ref": "798adf48-7341-41c6-840f-9f77032d5b29",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6cd192d8-cd09-41cb-a232-188259b12e88"
        },
        "item": {
          "id": "f2287fc4-1484-4237-9efd-8718de409351",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "14a7dd1e-a5af-4190-8d6d-eb2b9f5481f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b18424-31c4-4dcb-aca7-42efca86b4a2",
        "cursor": {
          "ref": "6643a58e-8dca-4466-8bb1-f2b116c3081f",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c30e0c44-6bc0-4a3d-9b60-01bf6c0368c9"
        },
        "item": {
          "id": "b4b18424-31c4-4dcb-aca7-42efca86b4a2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f379ace3-4dff-40b6-9926-6ad7750cb400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883a1b3a-89cc-4cbc-9c23-197f07c83fcf",
        "cursor": {
          "ref": "8be3cbd1-1510-4ff7-836c-12564e9a13eb",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9b668977-d45c-4c61-a9be-f9987c087f2c"
        },
        "item": {
          "id": "883a1b3a-89cc-4cbc-9c23-197f07c83fcf",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b7f0b0d3-643a-4445-a916-9af7c7bc57b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0744d2d0-d8db-44fc-9b3b-bf44e562c5b1",
        "cursor": {
          "ref": "157e85f0-8480-4b08-ae11-5513abad6958",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8bbb3e08-af64-4281-a67d-c459143bf21a"
        },
        "item": {
          "id": "0744d2d0-d8db-44fc-9b3b-bf44e562c5b1",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2e7a02c0-7897-4158-9c04-7fd2eeb4849b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664fe6a9-ac4f-4ae2-8ec2-2d5379381caa",
        "cursor": {
          "ref": "1787fa83-5251-4c14-b9ee-cadba9f80f4e",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b7aed084-91f5-4fd3-88a0-3ef19d80ba7d"
        },
        "item": {
          "id": "664fe6a9-ac4f-4ae2-8ec2-2d5379381caa",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "83a90290-b46f-40ed-9df2-49f1d011b813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d1fc34-0ede-4cbc-9777-25bf146820d1",
        "cursor": {
          "ref": "f09723cd-1e70-42ac-a756-a3f8214fc022",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7c312d00-a6e1-4325-b9ce-8adb4e6e9c67"
        },
        "item": {
          "id": "41d1fc34-0ede-4cbc-9777-25bf146820d1",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e8f58699-7143-498c-9ff2-6a92575ac37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6a9c0e-3a33-41fb-9873-de63c46e8485",
        "cursor": {
          "ref": "213a9d62-c261-4684-a35f-42fe962cdb20",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "65e7f762-1119-4839-9f58-38519566f345"
        },
        "item": {
          "id": "8e6a9c0e-3a33-41fb-9873-de63c46e8485",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "34980d58-0997-4315-b2dd-197bd7f2dc7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2146eb9-5d86-4944-a02d-fbd42cf0b46e",
        "cursor": {
          "ref": "1c81de59-772f-47f0-abab-cb8f7d4343b9",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c87229fe-2ec1-4c76-9d23-928cff62d662"
        },
        "item": {
          "id": "a2146eb9-5d86-4944-a02d-fbd42cf0b46e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a2ed377d-7a76-4e78-82d1-81317d186d98",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 322,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e43004b-9b8a-4c8c-b6d4-3b7ef1736975",
        "cursor": {
          "ref": "a42f7001-7379-4904-832f-ed4918215986",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f1336967-c926-4dbd-903b-f9dce538e4b9"
        },
        "item": {
          "id": "6e43004b-9b8a-4c8c-b6d4-3b7ef1736975",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "dfc8c62f-ed3e-4bfb-a536-c6524be9b3b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7d1b7d-3cca-4eb8-b7cd-bf2ea8e850a4",
        "cursor": {
          "ref": "16f7cee3-f122-414f-b7c0-5bbadebc1146",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "12779133-ad5f-42f1-b6cc-7e7e2abe9aa1"
        },
        "item": {
          "id": "bd7d1b7d-3cca-4eb8-b7cd-bf2ea8e850a4",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "956bda1d-3a57-4e25-8cb7-45c5ff0c6b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00000afc-9cf9-4a52-a5f1-5b68c63cfc1c",
        "cursor": {
          "ref": "905cccbf-671e-4896-9c9f-988c7211b9f7",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "eac22445-feab-409f-a908-cb776eaeae15"
        },
        "item": {
          "id": "00000afc-9cf9-4a52-a5f1-5b68c63cfc1c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "0ae4f5ef-9efc-4188-ba8b-b717ec6a734b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a537ce-2916-4e3d-ad95-fe3f841b5c04",
        "cursor": {
          "ref": "4e97f233-3b6d-4ea5-bdca-0df02a6968e8",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ac25506f-eeec-4ae1-95f2-4a7893037881"
        },
        "item": {
          "id": "66a537ce-2916-4e3d-ad95-fe3f841b5c04",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8206544c-dc16-4f6e-aeb9-c54ca7e130fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521c1517-6aa1-4318-86fc-5a1311778091",
        "cursor": {
          "ref": "436da578-c02c-4de9-836f-8e5e35fd8020",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "fe419d9d-ec8d-4ca9-9e00-36656910551b"
        },
        "item": {
          "id": "521c1517-6aa1-4318-86fc-5a1311778091",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "03567992-15a9-46f8-afe3-caa1018929dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f97f0e1-66df-4afb-b228-2ff912499861",
        "cursor": {
          "ref": "c9dc2cc2-5dc2-45ca-8c2c-80062c5ddf5e",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c31fd1a1-8085-47c0-a458-80a69baf6892"
        },
        "item": {
          "id": "9f97f0e1-66df-4afb-b228-2ff912499861",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e7b64ccc-73b3-48fd-87f9-27aac249c4d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3862238-57f3-4476-aa9d-497fe87ef179",
        "cursor": {
          "ref": "358c8b22-70bf-41c3-8fef-34f7afd284cd",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7d2930ee-e250-4c41-8ad1-0a16702fdef6"
        },
        "item": {
          "id": "c3862238-57f3-4476-aa9d-497fe87ef179",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b8a3350a-c403-40d1-a6a2-1cb0153d8d5f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 326,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c668d38e-e598-42e5-89b2-1b0daaae6fba",
        "cursor": {
          "ref": "3f0a6a8b-1587-4fcb-bcc5-96b86cbda17e",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "633cf56f-1ef0-403b-bf83-5e9f30231461"
        },
        "item": {
          "id": "c668d38e-e598-42e5-89b2-1b0daaae6fba",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "96966077-001e-47c8-841b-083e5f574c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e067b5-337c-4581-b8c8-e644705b3c91",
        "cursor": {
          "ref": "001fc918-89b9-41ab-82c9-471902abf131",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3f4eaa10-187d-4628-ad34-b574e2fa7dc7"
        },
        "item": {
          "id": "72e067b5-337c-4581-b8c8-e644705b3c91",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "84bcefcf-656a-4261-96eb-925c69bd65aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ec6851-b0a7-4280-8f75-1551d69cca34",
        "cursor": {
          "ref": "47645465-6c4f-4e3e-87a5-0d0e1485e2c1",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "02ea922f-52d8-40ce-9d88-9f6e6185356e"
        },
        "item": {
          "id": "62ec6851-b0a7-4280-8f75-1551d69cca34",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "99e889be-8abb-41df-a55e-8a8829eafb1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd106be-102f-4264-ae17-8850272928e0",
        "cursor": {
          "ref": "2ed142cc-655f-42b4-a098-18b9b24faa98",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "da54e1bd-1cea-4f0b-a3a3-2c22f44c5059"
        },
        "item": {
          "id": "bbd106be-102f-4264-ae17-8850272928e0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "55bd5d52-e4a5-4cd2-b048-7daeca6fc66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20a37d8-256c-4270-99b2-3067a7ab1b3c",
        "cursor": {
          "ref": "312899e0-2b79-41b0-a49d-6d094c477a43",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "59b73395-b4fe-4f4d-aa46-2b32f4f9f9e2"
        },
        "item": {
          "id": "d20a37d8-256c-4270-99b2-3067a7ab1b3c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "bdbedb00-dbe3-4e8e-88a2-03116e89f4f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4fd9ec-6279-4c13-adab-4234aa49396c",
        "cursor": {
          "ref": "45577d78-9ec7-4c38-8369-4330e4a0e95a",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "fd96018d-a2ec-4ca9-95a0-171f9883407d"
        },
        "item": {
          "id": "6b4fd9ec-6279-4c13-adab-4234aa49396c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "575fa9ee-4dca-466d-b7f1-a910b49fb1f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1581d9ae-6ecc-4451-8d0f-7d8cfcc733c5",
        "cursor": {
          "ref": "47fa04c5-2e18-4888-b14e-00bef8f595d4",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7a1d155e-bbe6-4376-b729-bae3651553a2"
        },
        "item": {
          "id": "1581d9ae-6ecc-4451-8d0f-7d8cfcc733c5",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a6ed4eec-ba38-47ab-b11a-ad07ac114c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21621a7-1995-4435-b6dd-edc6fe23c363",
        "cursor": {
          "ref": "c9002a50-a01f-4cf7-a6d8-0bb8d893d159",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5624f60d-6c76-426e-86c2-dd85ad9bfa7c"
        },
        "item": {
          "id": "f21621a7-1995-4435-b6dd-edc6fe23c363",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "366238c9-e698-45ee-af65-45e07bdfe82f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93b299f-3c49-4507-8371-c2bd694e68ac",
        "cursor": {
          "ref": "4a81f292-f871-454d-873d-aa294281d943",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "eb29e461-6f33-417e-bf83-c8800512d014"
        },
        "item": {
          "id": "a93b299f-3c49-4507-8371-c2bd694e68ac",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "274a0d40-1f9a-47ce-a3ad-e8367d02c2a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8e578c-19f2-4a83-b057-5b88545016a9",
        "cursor": {
          "ref": "a83980c2-dd86-4c98-9f01-cb642e12c83a",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "de0780f4-2dfd-4ec9-9db5-34577d581d5b"
        },
        "item": {
          "id": "4a8e578c-19f2-4a83-b057-5b88545016a9",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d958e5a8-dfac-469d-9494-4b59305a0204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e65c840-412a-48a3-84c3-7fe4c671530a",
        "cursor": {
          "ref": "802b8356-a959-44fb-9f33-dd0442fdb5f0",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "169a631a-163b-4f4c-b4bd-1b3d23606f93"
        },
        "item": {
          "id": "2e65c840-412a-48a3-84c3-7fe4c671530a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b135443d-8fd2-4e46-b627-fcf0e127a84c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991a8fa8-0206-4203-834d-ed6fb7c3e0ad",
        "cursor": {
          "ref": "ecb1dc80-84d0-4b34-8486-79643bd1a278",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "28353e5c-3464-4191-b429-838edd5d9681"
        },
        "item": {
          "id": "991a8fa8-0206-4203-834d-ed6fb7c3e0ad",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "85649526-937c-4f1e-aa6e-a3d85b332870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476b9c12-68de-4b22-88c0-d77730a6718d",
        "cursor": {
          "ref": "4a5acc98-db31-42e9-87ec-1a4f444f3067",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c52f5ae6-b80a-48a4-93b0-5a83ef4b9010"
        },
        "item": {
          "id": "476b9c12-68de-4b22-88c0-d77730a6718d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c5d3f426-f533-41ba-89d9-1644730d5354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80912203-01a1-434a-b25c-2fd5f0611dd1",
        "cursor": {
          "ref": "45fcd0f0-d554-4770-b2d9-a764de411f32",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3b77a0f2-8a1c-4cb7-9ba0-76e975135b4b"
        },
        "item": {
          "id": "80912203-01a1-434a-b25c-2fd5f0611dd1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0a600078-1bc2-4db9-a95a-ee77d6618aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717d24ef-8c06-4031-bd10-1d6db28e37d0",
        "cursor": {
          "ref": "a6dbe915-b982-4faf-a836-62ebb8abbb99",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7eafec08-ba78-48e2-baf1-da78bb71ec75"
        },
        "item": {
          "id": "717d24ef-8c06-4031-bd10-1d6db28e37d0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "16d7f29a-fa47-4813-b519-67b1799b8f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d406da6-ee67-4406-b93b-fbf17445921d",
        "cursor": {
          "ref": "6b7abc8d-1fc8-41e2-9e2c-cc8f78c82fe6",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "245d1e31-2360-4598-b339-4f7189c04d2d"
        },
        "item": {
          "id": "9d406da6-ee67-4406-b93b-fbf17445921d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d8f717fe-82c5-4d94-954b-688b27513c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c79e24-749b-445e-84ec-96a4396db750",
        "cursor": {
          "ref": "9efd41d1-297a-4c72-a624-f5656126e006",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c5e056f1-598d-4eee-91c8-6026848ba124"
        },
        "item": {
          "id": "70c79e24-749b-445e-84ec-96a4396db750",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "be6e50ce-7c07-4a04-83d8-28f364557217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e2ce69-b0ee-438d-bbf9-b8389be42e64",
        "cursor": {
          "ref": "7db88149-ec3a-41e4-91ed-f9b47117ebb3",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "14686e4b-e20e-4a7c-95c7-7f946f68ff7e"
        },
        "item": {
          "id": "93e2ce69-b0ee-438d-bbf9-b8389be42e64",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "49016011-5b2c-43d9-9e61-8f32aa10405c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d751a82-456d-45a4-a201-d061a6cd5f2a",
        "cursor": {
          "ref": "9c8adcc5-5e89-4036-b56e-908cd95b7df0",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "78d72d81-2924-4c87-b204-e899cc7b0d7a"
        },
        "item": {
          "id": "8d751a82-456d-45a4-a201-d061a6cd5f2a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "80095e6d-6d26-42ec-8a5f-9c8a48433860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd34ef13-2c89-48ba-9e17-d0fe71c165c6",
        "cursor": {
          "ref": "f2a83276-028d-46b2-8872-5dfab5777ac1",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6b306e6c-68f5-4fd2-a762-08d6985aa90a"
        },
        "item": {
          "id": "cd34ef13-2c89-48ba-9e17-d0fe71c165c6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "21a4c8e4-8481-4747-a696-53c3bb979862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9291096-4f5c-4ad5-92bc-d7c674f13969",
        "cursor": {
          "ref": "d9933b51-cb98-46ba-b1a3-d6cad703ccef",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a4903ad7-3840-4374-995f-c6ff51782f5d"
        },
        "item": {
          "id": "c9291096-4f5c-4ad5-92bc-d7c674f13969",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "27d71b0f-f73c-41d7-8100-8828107d6784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15b3153-79d6-4019-91e1-c5e4e598d4b8",
        "cursor": {
          "ref": "1422da16-21e1-4665-87aa-dc0dcbcbe2c3",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "be6ccbe7-2241-46f4-9971-b127399f9f05"
        },
        "item": {
          "id": "f15b3153-79d6-4019-91e1-c5e4e598d4b8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2f830ca6-7def-40c5-818e-36aecbbfd56f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c4acd00-82f2-4edc-8350-0324cbe20165",
        "cursor": {
          "ref": "cc6fe43e-9395-47b6-a9c2-9810f7f0793e",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "88162f54-d714-4d17-9d16-0b1f33925834"
        },
        "item": {
          "id": "4c4acd00-82f2-4edc-8350-0324cbe20165",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a22f0250-292a-48ba-918d-d0864cf5ecd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c43567-d9a2-4ccf-abbc-f46084258f31",
        "cursor": {
          "ref": "10e4f64e-c481-490c-b13f-ebc8334d2bed",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "66fd51ff-6491-46f4-bae6-2a74752c7a6c"
        },
        "item": {
          "id": "05c43567-d9a2-4ccf-abbc-f46084258f31",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e201a49e-615a-4b62-812c-835732ea8ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f34b4d2-2741-4345-b60d-83175022030c",
        "cursor": {
          "ref": "6c5c6b2a-71bd-439f-9978-13e0ab070941",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d9192270-a656-490e-8a67-7c62e7a5e48b"
        },
        "item": {
          "id": "6f34b4d2-2741-4345-b60d-83175022030c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "be43e7cc-5834-4418-81ec-8b038ab9a3a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752616df-5ab9-4d2a-b370-09add90dbf32",
        "cursor": {
          "ref": "97e6fa65-82ad-494f-b723-4e9c3dbb0e03",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "499c7c83-d2fb-4912-a966-3c0b10f27586"
        },
        "item": {
          "id": "752616df-5ab9-4d2a-b370-09add90dbf32",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "281e021f-6a8a-45d2-bf13-4e82ad8c843c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27446e01-c4b5-43df-8e42-d149d6932ba5",
        "cursor": {
          "ref": "bc26ea4f-0aae-4029-a5d9-992f37731bbd",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "73cfcb01-f80e-478e-962d-b7b09f3006ff"
        },
        "item": {
          "id": "27446e01-c4b5-43df-8e42-d149d6932ba5",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d8109281-51d4-4d9f-8c06-2d348a1b6a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10f6524-32f9-49ab-b26c-f365973757f2",
        "cursor": {
          "ref": "9cf9e3d6-b509-40d0-bd48-014ce9e45f37",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "eea4cce3-a007-46ed-8c3c-025c1c7f9c35"
        },
        "item": {
          "id": "a10f6524-32f9-49ab-b26c-f365973757f2",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f90fad14-8a44-4b2e-bf03-875b09c05142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d34374-a7d5-4aa5-8bd7-95578cf6e82f",
        "cursor": {
          "ref": "91526dc2-1ce3-49eb-adc3-9992e333ee4a",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "14ed49d0-41c4-4a0b-b345-b0811face2fd"
        },
        "item": {
          "id": "70d34374-a7d5-4aa5-8bd7-95578cf6e82f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "210008b0-c4d0-4a38-9bd8-517f8afeba51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a49765-2b7d-4345-99f7-f9691d3b555a",
        "cursor": {
          "ref": "f9202869-2855-4a33-8cf2-d1b918b4b53a",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "787bf398-2e96-454b-ab6c-43355dcae5b4"
        },
        "item": {
          "id": "a2a49765-2b7d-4345-99f7-f9691d3b555a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "47dfefe3-031c-46e4-a795-68e45ae73d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f66f35-6ad5-49be-a1ec-ae800e5ff5ff",
        "cursor": {
          "ref": "0cf64c14-85cd-442e-8e62-a2864b385a63",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1cf4840d-be14-4e79-9d88-bcd69bf043ee"
        },
        "item": {
          "id": "98f66f35-6ad5-49be-a1ec-ae800e5ff5ff",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c3b7fbef-3965-4f94-9669-d68a6e655718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5159be2-014a-4f44-9cfa-b0fb498b896b",
        "cursor": {
          "ref": "2ea5b584-0b6f-40dc-99cc-fac087fd616c",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "23cd2a6e-cedf-4a7f-97dc-ac7951207200"
        },
        "item": {
          "id": "b5159be2-014a-4f44-9cfa-b0fb498b896b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5225fd75-3246-4d72-9d8d-ed338434583d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da51dcc-682e-4850-a9ec-b3f928cd80c7",
        "cursor": {
          "ref": "1c4f2473-d403-4333-8b90-44256f75ec8a",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "38e63976-f64b-4d41-a7b1-3a0061f6b115"
        },
        "item": {
          "id": "9da51dcc-682e-4850-a9ec-b3f928cd80c7",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "dbcc3381-3ee8-40f4-aae9-ac620ac8a49b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c5cd7c-a3db-439c-9b95-8e9b9bbe5c38",
        "cursor": {
          "ref": "fb0f46b2-0f8b-4d75-8701-ef7d4c0ef802",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "daaff24e-598c-4c58-b049-e270d8e93157"
        },
        "item": {
          "id": "38c5cd7c-a3db-439c-9b95-8e9b9bbe5c38",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4efbc6fa-0c03-4e13-a5a8-923bfe1d77c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f35537b-9301-42d3-af8c-3f23182e9095",
        "cursor": {
          "ref": "05131d90-f908-4a2e-a10e-c6088407c4be",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5ce3c19f-3a68-4e0e-a49a-67a84a2aae24"
        },
        "item": {
          "id": "3f35537b-9301-42d3-af8c-3f23182e9095",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "0385c8f4-fead-494b-bf4a-c21e89ba53df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ff1c50-7a69-49ce-89ac-8774070c50c2",
        "cursor": {
          "ref": "a6d2d623-15b9-4682-8eb7-aee3270a3dbc",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "88648a94-103a-4b0d-af19-682f044a8ee4"
        },
        "item": {
          "id": "75ff1c50-7a69-49ce-89ac-8774070c50c2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2ac9ab68-3ff7-4323-8b50-2fe192363d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc1cdd2-4eba-4b7f-a150-e0e76e9e75cd",
        "cursor": {
          "ref": "2e4697fe-9662-46ee-a288-9e22fa9652bc",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "74546da6-0e3a-41d2-9f5c-1748cea447e7"
        },
        "item": {
          "id": "7dc1cdd2-4eba-4b7f-a150-e0e76e9e75cd",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "37ab8b3e-b491-45fa-aea7-0e971a6999cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be68acfa-b20b-43d1-93e4-a63912e56b68",
        "cursor": {
          "ref": "9bb70e80-67fd-4f2d-9591-e817b65e9d02",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f8617b90-796d-47b5-ae5f-15001c109ed0"
        },
        "item": {
          "id": "be68acfa-b20b-43d1-93e4-a63912e56b68",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6019a606-c9c2-4bbc-a095-c9b62415385d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e897e5-bebf-4e65-8350-5d587c8cc5b7",
        "cursor": {
          "ref": "a34d8e02-bfde-4446-a034-0c3adabc9a51",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e5038513-6ac2-457c-b137-42272ca571a4"
        },
        "item": {
          "id": "f6e897e5-bebf-4e65-8350-5d587c8cc5b7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0a79cfa0-6f7b-4b3b-bdad-aef1163bed13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ffdbcb5-f4cc-4284-a765-fb8ad4099d55",
        "cursor": {
          "ref": "f7709516-fc85-4773-95d3-6283010a3e95",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "27122e7e-fe74-474c-aa6a-c20bde94fc35"
        },
        "item": {
          "id": "2ffdbcb5-f4cc-4284-a765-fb8ad4099d55",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "45777d2b-113c-488f-ac4d-a31df0e6285a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169a224e-3cdb-4fae-ad84-630702e9dbc4",
        "cursor": {
          "ref": "ea0bf551-3017-47d0-837c-d10194802700",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6488238f-c546-4189-903f-4d341f4385c3"
        },
        "item": {
          "id": "169a224e-3cdb-4fae-ad84-630702e9dbc4",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "19238c25-e5a9-4ec6-9297-6b4898609c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72584ae-b73f-4f21-bd84-fc65e3d6b086",
        "cursor": {
          "ref": "bdfad8b6-6378-49c9-9e49-ae7a3be7d3b7",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3d5d03cb-9235-44ab-aeac-3f7282a7f9a7"
        },
        "item": {
          "id": "d72584ae-b73f-4f21-bd84-fc65e3d6b086",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "abdeb4a5-f00a-493a-933e-75161aaa27e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80aad50c-cb45-4ce0-8aaa-6f37a0b2775c",
        "cursor": {
          "ref": "0b39db6e-bfdb-4c21-83c2-697365069ab1",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "06950cbd-1cce-4d74-b474-5f0063201b76"
        },
        "item": {
          "id": "80aad50c-cb45-4ce0-8aaa-6f37a0b2775c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "89f7ee8a-9e9a-4be9-8ff0-5a886b431733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e5abaf-3426-4df4-8279-aecc8531d035",
        "cursor": {
          "ref": "93d636f6-9e40-4b1d-a415-4bb879cfe617",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "3cd5e774-5c3c-4ef7-98b1-18883a8f02b5"
        },
        "item": {
          "id": "d1e5abaf-3426-4df4-8279-aecc8531d035",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ae88a6a9-629d-46ef-802b-24686f09964f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb80e9d-2433-4d2c-853a-d1eb00d37204",
        "cursor": {
          "ref": "cd45bf94-844b-44e5-be2b-84f06c04f7b8",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "522d1f7e-ed27-4544-a7b5-881acad9bdbc"
        },
        "item": {
          "id": "8bb80e9d-2433-4d2c-853a-d1eb00d37204",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1b8e103f-15c5-489f-8fad-46f835c726fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45de2f7d-91cf-40bc-bc54-2d3723115192",
        "cursor": {
          "ref": "7986e2b1-e386-4eba-940f-71d2aab681ba",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "649e23c9-7064-4276-8bc2-5df1a6c5ff51"
        },
        "item": {
          "id": "45de2f7d-91cf-40bc-bc54-2d3723115192",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "454c9213-36de-447b-9c3f-9d55270677de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd7f6f2-3c75-4b09-8264-c76f0f91e8c4",
        "cursor": {
          "ref": "230d7ffd-a3c5-4b05-b9a4-95f6640fc079",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f8aa8b82-2f12-4f40-b93f-e45068e05c38"
        },
        "item": {
          "id": "ccd7f6f2-3c75-4b09-8264-c76f0f91e8c4",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2e81ea39-c30e-4a4f-a2bb-847f12f5572b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1f814a-0816-430b-a696-890f55a5f8e8",
        "cursor": {
          "ref": "f3bb97f1-3948-4bba-aed9-b892e0b66ba6",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e5a5fce9-f290-4ef6-9a0c-b037c16fc6ed"
        },
        "item": {
          "id": "ee1f814a-0816-430b-a696-890f55a5f8e8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "66c9d93f-f0cd-4ab8-9d65-b4f76c8340ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd7f682-ce35-455d-953d-9b5ea41124ab",
        "cursor": {
          "ref": "1a6f2f0a-3689-49c9-9809-ec2a3bb02662",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "51504727-e164-44a3-b434-b395e3e7a8a4"
        },
        "item": {
          "id": "9dd7f682-ce35-455d-953d-9b5ea41124ab",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "12d19e9c-0abc-4931-ae56-fb324a11c1a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07978455-1f91-4116-86ac-32318ea5aa71",
        "cursor": {
          "ref": "088815cb-9db5-4643-a4fe-12d73403aa28",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a78ecb0b-385d-4168-96f6-b552008882ea"
        },
        "item": {
          "id": "07978455-1f91-4116-86ac-32318ea5aa71",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5e031445-3bb9-44e0-980d-d7050e74ed17",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a80854-fd0c-4ad3-ab53-f173e4442d62",
        "cursor": {
          "ref": "42034053-52da-421f-834d-703fd9ea9421",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8e3fcea5-0ed7-4cbb-a684-7298ed9e5170"
        },
        "item": {
          "id": "c3a80854-fd0c-4ad3-ab53-f173e4442d62",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "ad199f2c-9413-4782-a86e-479da7aefb54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "da1ca8c9-14ee-400e-861b-d163a7f2b527",
        "cursor": {
          "ref": "9f6e7d34-9416-4ad8-bb94-8607e8050aea",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6f313bbe-f4b4-42d9-be65-b23968f0789e"
        },
        "item": {
          "id": "da1ca8c9-14ee-400e-861b-d163a7f2b527",
          "name": "credentials_issue"
        },
        "response": {
          "id": "13eca8df-19d3-41c9-883c-6cd17b286bd8",
          "status": "Created",
          "code": 201,
          "responseTime": 2857,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "17305a85-35ad-4159-b53e-8bac2b5f0621",
        "cursor": {
          "ref": "5be60dc7-d455-41c0-a404-9323ab9f1494",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a54b5505-f81e-4574-9368-c8328e3ff817"
        },
        "item": {
          "id": "17305a85-35ad-4159-b53e-8bac2b5f0621",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d7f6073b-2dee-4899-afd6-d0a9d7f656e2",
          "status": "Created",
          "code": 201,
          "responseTime": 2220,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8de2372-9ec3-4f98-ab4d-74cbf3918e46",
        "cursor": {
          "ref": "01f4ae6f-21d2-4d0e-9ac8-62acdcb52117",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "922b53ad-e71c-42f7-a9fb-4fe1f030e096"
        },
        "item": {
          "id": "e8de2372-9ec3-4f98-ab4d-74cbf3918e46",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7289fd48-9c5b-409b-a366-e21c9e88c065",
          "status": "Created",
          "code": 201,
          "responseTime": 2878,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb59775-5d41-4dee-a600-c6a7d409cb7c",
        "cursor": {
          "ref": "48a624b4-e00e-46ee-9d60-04e7a1e7d114",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d05f6904-ecae-45cb-8e64-22ab3b465e9a"
        },
        "item": {
          "id": "ffb59775-5d41-4dee-a600-c6a7d409cb7c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "be2cd214-ced8-4cfb-853c-1d82200007a9",
          "status": "Created",
          "code": 201,
          "responseTime": 2088,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a996ed-9e34-4ddc-9bcb-178e15d7391b",
        "cursor": {
          "ref": "f8455112-c2de-4e94-9d05-142f63e93baa",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7f9a3646-5bc5-402b-a813-6187855162e7"
        },
        "item": {
          "id": "b5a996ed-9e34-4ddc-9bcb-178e15d7391b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e6903b9d-e081-4903-8bc1-8ff7cd642a2a",
          "status": "Created",
          "code": 201,
          "responseTime": 2047,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd694f4b-7752-4ac5-b281-d28fc70c01cc",
        "cursor": {
          "ref": "55a120dd-5a21-4c8a-853e-bd8f435eb165",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0d4b205f-b26e-41c4-bb55-a6e87c2d02b3"
        },
        "item": {
          "id": "cd694f4b-7752-4ac5-b281-d28fc70c01cc",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c15f42e7-9e32-450b-a2fe-7d79c52aeeb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "e9bb4a32-46e5-4c2c-bf08-a3645c27ac8d",
        "cursor": {
          "ref": "3dbdcca1-40a6-49fe-ba08-6602517577b5",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "241fed4e-14c9-46b5-a554-46252152ac7d"
        },
        "item": {
          "id": "e9bb4a32-46e5-4c2c-bf08-a3645c27ac8d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c15ac996-ee02-4736-ad44-28fa77c1805f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d957cfe-e6f2-4fc3-8255-778e04adabb0",
        "cursor": {
          "ref": "26afcdbe-850a-44e4-b3ba-db974cdec882",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4328c005-3189-4ede-bc2c-3c4ce5221eb1"
        },
        "item": {
          "id": "4d957cfe-e6f2-4fc3-8255-778e04adabb0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f72b01f4-0a1f-4856-9ec6-68609c7e72f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73493f9-9a4f-4ebd-a7ea-c3f3c5fe6aca",
        "cursor": {
          "ref": "a595b204-f8ee-49d0-96d0-85c74cc8f0ea",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "aa599910-3378-402c-97f2-320f473b2717"
        },
        "item": {
          "id": "d73493f9-9a4f-4ebd-a7ea-c3f3c5fe6aca",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c49ccf01-0b8b-4f25-9cd8-db30ba5d6bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76bac088-5565-4ba7-b6bb-642b587cf0ff",
        "cursor": {
          "ref": "f9ced354-ea17-484e-91cf-ee003b5f6b69",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6b981151-83ce-4e67-b5af-9e5a0984a221"
        },
        "item": {
          "id": "76bac088-5565-4ba7-b6bb-642b587cf0ff",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7762b3d8-c91c-474a-b1ed-2a572c9bdd20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792ac422-40f3-4a51-9294-e0816385f4c7",
        "cursor": {
          "ref": "c4433f6b-4f76-42ed-8a96-b7410deb86c2",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6f0f1a9e-9277-4ab4-80c6-e14e65cb39f8"
        },
        "item": {
          "id": "792ac422-40f3-4a51-9294-e0816385f4c7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f45fdd7b-1a0d-435e-b566-ecb96a94c7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a374541c-6999-46bc-bec3-e1896f4ba010",
        "cursor": {
          "ref": "5c949e26-de14-4280-9094-e761853fca2c",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3c04ce1d-b33c-4943-abbe-68299398e25e"
        },
        "item": {
          "id": "a374541c-6999-46bc-bec3-e1896f4ba010",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "53370e29-6c40-458b-a5e7-96cb519ac0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ba3960-f92d-45de-9051-32442989f4f0",
        "cursor": {
          "ref": "491c200d-90ac-4296-8d1d-2a1637db9bb9",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c94137bd-f76a-46a5-99c4-bf20d654d8bf"
        },
        "item": {
          "id": "a0ba3960-f92d-45de-9051-32442989f4f0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e794b06e-3a62-48cb-b1f4-c6db3a58ad27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5704119-2ac1-46a8-b29c-844c0c5ac081",
        "cursor": {
          "ref": "6309b7bc-e2c4-491a-94d7-2d83a5801b73",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "bb7ecb47-0a0f-40ee-bc0b-d7de1c66e446"
        },
        "item": {
          "id": "f5704119-2ac1-46a8-b29c-844c0c5ac081",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0001a8a6-0183-48b2-9497-6a585559ee74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2312a3-ab49-4b0b-9489-52dfb3a50dcb",
        "cursor": {
          "ref": "8f6fa945-b4c9-43fa-8c87-1a8055b3dba4",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "78332617-208f-4235-9a6d-973ea522a02c"
        },
        "item": {
          "id": "1b2312a3-ab49-4b0b-9489-52dfb3a50dcb",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5196c67b-4c46-4242-bda0-e2400afa58ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4694a6c5-4ed0-46f4-a123-17bddf90e0a5",
        "cursor": {
          "ref": "292d986d-6bea-42fd-9300-a8af9c0b131a",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a03d53f1-3d0b-42ec-8ae5-48bc995c086b"
        },
        "item": {
          "id": "4694a6c5-4ed0-46f4-a123-17bddf90e0a5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e373bd66-dd94-48ea-aa06-9842ffbb5d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 392
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5924fd0b-1f39-469c-bd3e-fac3a326ada2",
        "cursor": {
          "ref": "eea13984-c5b2-4520-9552-f1c74914f307",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e6fec758-d622-4891-bc8b-87ef55af0eb5"
        },
        "item": {
          "id": "5924fd0b-1f39-469c-bd3e-fac3a326ada2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3d74c838-565d-4d0f-b901-02b6dff947ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454ad795-1238-4b73-b8ce-f4638af80edd",
        "cursor": {
          "ref": "e3d573e7-479f-4ea4-82d3-beb6ca99516e",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "77fdc97b-76a8-4c70-b530-405040b73fe9"
        },
        "item": {
          "id": "454ad795-1238-4b73-b8ce-f4638af80edd",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "cc6f773f-c38b-49bd-8fab-f10053e5f733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 414
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98a1f89-047f-4208-8249-7e070a133b13",
        "cursor": {
          "ref": "47b00da4-7a22-4520-8baa-10434dd7ea17",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4978818c-6cc4-483c-ac7e-1a545a8b7ad9"
        },
        "item": {
          "id": "e98a1f89-047f-4208-8249-7e070a133b13",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ff46844d-1fe1-4afe-a0b6-9ea14d5e6c32",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 111,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:121)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418c695c-bc28-4436-85da-4cca976d437c",
        "cursor": {
          "ref": "ffdf977c-23e6-4c6c-8eeb-8b8c7d7e213b",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "50e5a6a6-af3a-4d94-b1b7-72df4deb6973"
        },
        "item": {
          "id": "418c695c-bc28-4436-85da-4cca976d437c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "49033c58-3ca4-4b5d-a376-887ff1cb078e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e9fbed-76c5-4686-896e-e414f68c6b43",
        "cursor": {
          "ref": "b6a2fbd6-0cf5-4c92-9a4e-476cffdd3fd0",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "380e4484-0a85-4fb1-9b4c-d57a618e0ec1"
        },
        "item": {
          "id": "c6e9fbed-76c5-4686-896e-e414f68c6b43",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8b4f169e-fa4e-4057-825d-41c294da0bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90dec0b-4db9-457d-bd21-4a65618468be",
        "cursor": {
          "ref": "ef588505-599e-4e7d-970e-ffe03d4e693e",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "93108ea2-9d21-45d9-aa80-0b77786af3bf"
        },
        "item": {
          "id": "b90dec0b-4db9-457d-bd21-4a65618468be",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7e4c15da-54d6-4036-8a12-c2b0a5cfbb5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c6beb8-dd08-4318-9f26-d74312af333a",
        "cursor": {
          "ref": "7784af40-3188-446c-b530-ce4e1463205d",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "eff15d85-af26-4f4b-9f9f-b30f59e914c8"
        },
        "item": {
          "id": "86c6beb8-dd08-4318-9f26-d74312af333a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "eadb700b-61c8-45b4-a140-a5d2c0ffd6bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 404
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a19b87c-b517-4ae3-9d8c-3e636c776747",
        "cursor": {
          "ref": "e0f9c6e3-1eea-4a58-9b61-f278a19a217b",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "abd03f87-a3ef-4ae5-9c2d-2f2d14944dd5"
        },
        "item": {
          "id": "9a19b87c-b517-4ae3-9d8c-3e636c776747",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "42ea39ba-fce9-41b2-8fd6-cf2d0b9ea501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 426
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a988e8-3d67-4342-bb73-f6d5e9128746",
        "cursor": {
          "ref": "cc20749e-c450-4077-966f-3ea65cad5e0a",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4c777430-05b2-4763-9833-45f90f937d81"
        },
        "item": {
          "id": "09a988e8-3d67-4342-bb73-f6d5e9128746",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bf51b3bd-8550-431f-b270-367d76099bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9285b271-b889-40c6-9047-2d5711e9b63c",
        "cursor": {
          "ref": "d9a827de-03f1-410b-a1c0-03fb0ea9d740",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e1bde6ea-2301-4148-ab9a-9a88bd442b3e"
        },
        "item": {
          "id": "9285b271-b889-40c6-9047-2d5711e9b63c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3218134d-b1dc-41db-81b2-2c32153e8d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa4d670-3ef5-4bb7-b982-f373665e39d7",
        "cursor": {
          "ref": "a121567c-4702-4dd4-b460-22cd9ef5f47d",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "64d6de69-dab0-4f3a-b3e4-a1de461cc0ab"
        },
        "item": {
          "id": "6fa4d670-3ef5-4bb7-b982-f373665e39d7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "bd1970f1-5282-40c8-8728-53c7dd7371c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0cbc4f-7b84-4954-970a-efb77041e92c",
        "cursor": {
          "ref": "f73e8fa5-0782-43c8-8ce6-b0f0eb6e91a5",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "80fb3de1-b27b-4e1c-a35b-3de2aeebf4c7"
        },
        "item": {
          "id": "ca0cbc4f-7b84-4954-970a-efb77041e92c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "edc9a2f9-8620-46fb-8eb9-09006557fda6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b90309-8ab5-4a9f-a978-b5347a3cd69a",
        "cursor": {
          "ref": "05f634d1-d85e-44f4-af94-6d74a43b20ce",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "0129d859-52af-436b-9938-dcb5b80b97a4"
        },
        "item": {
          "id": "71b90309-8ab5-4a9f-a978-b5347a3cd69a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fca44cc6-e29a-4e39-80f8-23107421ab39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3669d560-4f1a-4236-8dd8-82f11505e049",
        "cursor": {
          "ref": "02947284-9a1f-4b06-8818-64415244704f",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a5a5d789-bc7a-4b18-a654-4124693570d9"
        },
        "item": {
          "id": "3669d560-4f1a-4236-8dd8-82f11505e049",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "429e5f2b-27d0-47ec-ae3a-be037aac9c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05aea57-4ac0-42db-b5f0-c77af37b73d3",
        "cursor": {
          "ref": "b321fb8b-38d2-4963-8758-1171fae55d51",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ea2c0cfe-9850-4ced-9f1c-855be11f56ed"
        },
        "item": {
          "id": "b05aea57-4ac0-42db-b5f0-c77af37b73d3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1d9bcf2b-3c30-4f04-a849-5662551c17f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b18c90-bbfe-48b3-b412-4285e34f90a7",
        "cursor": {
          "ref": "8c47fd93-47bf-4ebe-a46b-fa88e8e0d025",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2b234e52-ae72-4563-a976-0e790352c73f"
        },
        "item": {
          "id": "98b18c90-bbfe-48b3-b412-4285e34f90a7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1a3d40d6-8e20-4b13-9dfc-773cd8c075bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bccc151b-5a3d-4b71-af13-5099bdaa6218",
        "cursor": {
          "ref": "f8959d35-5486-4a9a-9333-4b66a4cd182a",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "94714537-0a86-4cb9-a2ad-128fd253b539"
        },
        "item": {
          "id": "bccc151b-5a3d-4b71-af13-5099bdaa6218",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "91ce4f6b-d4c1-42d8-a53e-458cdfe1294d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2292d2c-b6c3-44b7-bd77-63ca40cc21f6",
        "cursor": {
          "ref": "3ea8076b-c94d-43fe-860d-c33ca5a23e78",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "72742c1c-0fa2-4ac2-b525-9f06e1283b55"
        },
        "item": {
          "id": "a2292d2c-b6c3-44b7-bd77-63ca40cc21f6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "03dc8739-64a6-43c9-bece-c4c53dd53dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198801d6-6e0e-4ed9-ba10-1944c804eac7",
        "cursor": {
          "ref": "260bdf6c-988a-4192-afc3-1742c620a2df",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d17d3bc0-96e4-4a9e-88ee-e54954c0fad3"
        },
        "item": {
          "id": "198801d6-6e0e-4ed9-ba10-1944c804eac7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cef3e704-d71b-49f3-9519-3edd92618930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 752
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423cd7be-eaea-485e-84d0-a5c251b3410b",
        "cursor": {
          "ref": "6708681d-1d42-42ce-84a2-925cb7f5a765",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ac632363-4721-41ca-ab48-9972471ace51"
        },
        "item": {
          "id": "423cd7be-eaea-485e-84d0-a5c251b3410b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "dc126150-2d56-43d3-9db3-3bbafeb63b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 755
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474b9e3c-f1ce-40f9-a127-d5c1df5c5d5b",
        "cursor": {
          "ref": "c5e7d7b1-ed58-4671-8c92-10ec407634fb",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b611f0c3-2114-4bdb-8d45-b78c0697b132"
        },
        "item": {
          "id": "474b9e3c-f1ce-40f9-a127-d5c1df5c5d5b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a09cad45-eb50-483c-a763-3000dac22536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055d59e3-1575-44ae-bb0b-3ae6cfccde43",
        "cursor": {
          "ref": "4929cbb7-7a65-4e29-a670-3ba7f9359525",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "97fbf207-5650-4e6f-8a7a-7699539659ba"
        },
        "item": {
          "id": "055d59e3-1575-44ae-bb0b-3ae6cfccde43",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1909ed77-d6fd-4995-b8d7-1cf2559a3069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fadf142a-ac3b-449b-8f45-d716099fa981",
        "cursor": {
          "ref": "d18d70d9-db7c-4e83-ae9c-d17b1082f73a",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c819d7c1-85df-4750-a02f-c54c1c141204"
        },
        "item": {
          "id": "fadf142a-ac3b-449b-8f45-d716099fa981",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "96de01f9-a8f6-4d9f-9328-9f3625fde8b9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a8552c-ea32-4e9e-b93e-925133b5ae65",
        "cursor": {
          "ref": "1fd1448c-372a-46b0-a119-3503a03ff3b1",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "bdd5301f-a2c6-493f-b091-787f374bb1fa"
        },
        "item": {
          "id": "05a8552c-ea32-4e9e-b93e-925133b5ae65",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "81420b84-7416-46f6-9055-8961c4445c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660cd11b-c0f3-4565-a002-6485ef578e5f",
        "cursor": {
          "ref": "788147c0-ea16-4fd4-b4ba-f6d54598037c",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e80722cb-3925-47eb-ad63-97dee9136d53"
        },
        "item": {
          "id": "660cd11b-c0f3-4565-a002-6485ef578e5f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8f7d60ff-19ea-4aee-a900-a5c4662a09c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1765d5-9b2d-4c1f-ab37-83640e555f52",
        "cursor": {
          "ref": "87a11313-900b-4756-9fa3-0d0318ba3ec5",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0ba6b88f-647d-4aa1-9a14-615aa1343643"
        },
        "item": {
          "id": "db1765d5-9b2d-4c1f-ab37-83640e555f52",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "69e2a880-2651-4470-bda2-01daad737d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119d59b9-d9a1-4ab3-b85e-380cb8eed948",
        "cursor": {
          "ref": "e7a55635-1714-4af4-aa4b-2c4bd6233762",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0daf611e-4365-4784-add4-bcfbe515757d"
        },
        "item": {
          "id": "119d59b9-d9a1-4ab3-b85e-380cb8eed948",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "113abbb8-b9d5-4429-ac4d-8a887cf8c3b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd4f4b8-e274-4d31-abf7-5c7a65c2ca7f",
        "cursor": {
          "ref": "d709ac59-516d-4487-88e5-fcaef100301a",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7ca30f2d-bb8c-4fc9-9d88-9e09e7a95d06"
        },
        "item": {
          "id": "7bd4f4b8-e274-4d31-abf7-5c7a65c2ca7f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cb80b0d2-ce45-4d65-8ffb-041441716673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8678e20-f927-49be-9bfa-7b053083dc3d",
        "cursor": {
          "ref": "4612bde1-8ff8-48a1-9b98-6316dd1ddf49",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "470082c1-2821-4645-9bd5-684dc828f17a"
        },
        "item": {
          "id": "d8678e20-f927-49be-9bfa-7b053083dc3d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2167c70f-2da7-4b60-98b7-c8a2d50a5fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dee5bc1-84f0-4bf8-a08f-940d78fd3110",
        "cursor": {
          "ref": "973c2fc4-852b-4431-84c8-b13e57606244",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c3776bf9-d554-476d-9fcc-5f14767f630c"
        },
        "item": {
          "id": "9dee5bc1-84f0-4bf8-a08f-940d78fd3110",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e1bb6b46-b56f-453a-ac31-cfb03a06dce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc1b8d4-6b69-4fd2-9270-08498e3fe7c7",
        "cursor": {
          "ref": "f53a07cb-6636-45dc-bcc6-660d79a4c6bb",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "33da14bb-84dd-4663-b0e6-4823578bcdf6"
        },
        "item": {
          "id": "6cc1b8d4-6b69-4fd2-9270-08498e3fe7c7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b5ec7581-bddd-475b-b365-a060ce09ee5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ff87f2-8dad-453b-ace4-20bb4b0263c5",
        "cursor": {
          "ref": "c0733ac4-d7e6-4802-ab4c-c7019d6efe41",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "94acc766-7383-4598-860d-d5a0512aadf4"
        },
        "item": {
          "id": "c5ff87f2-8dad-453b-ace4-20bb4b0263c5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "dc87dfb7-ff44-47d1-8efa-9d8eb68651f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072d9d91-447f-4cef-ae23-c4479c976423",
        "cursor": {
          "ref": "e6ffe907-f084-4ab5-8cdb-636b23108693",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "800d9b6b-69d3-43e9-8e6a-a22be209120f"
        },
        "item": {
          "id": "072d9d91-447f-4cef-ae23-c4479c976423",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ecc3d91a-f91d-4362-b034-25e30751d13c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 392
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17f586c-4423-4bc5-8fdd-92cfe1108067",
        "cursor": {
          "ref": "d3b3f74d-7807-4548-a52a-4d1f96b946ac",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d0206484-f2f2-4184-a74a-d3626591b30d"
        },
        "item": {
          "id": "d17f586c-4423-4bc5-8fdd-92cfe1108067",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "baa4cbae-8d19-4fb5-b775-0769bde6f182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05aabc06-2f17-4d3c-926f-3617d02d4909",
        "cursor": {
          "ref": "b45f1545-ebf6-4014-876b-8fd3662006cc",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9212b2a4-95ac-4bd1-8df2-00705a23c687"
        },
        "item": {
          "id": "05aabc06-2f17-4d3c-926f-3617d02d4909",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1d7ff306-8877-49c4-9152-3bdb49af59fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637da40f-398c-4c44-8dc3-d460da87c280",
        "cursor": {
          "ref": "83d71abe-55a0-4c35-9766-ab731df5721c",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3f1695e0-5b35-4930-89ed-51f928b28108"
        },
        "item": {
          "id": "637da40f-398c-4c44-8dc3-d460da87c280",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f083cda1-39f4-4d44-a661-9a1eeb19578b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e573a39c-2b50-4cc4-91a0-93a7e7a7db60",
        "cursor": {
          "ref": "0960e25d-fbba-419f-b845-290299c8dce9",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "38d82c91-a8cf-40ee-8d07-a9371eaadbdc"
        },
        "item": {
          "id": "e573a39c-2b50-4cc4-91a0-93a7e7a7db60",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6329a7a3-f67b-42dc-b9bb-f997165795f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2abce647-5f3f-4556-90d6-5d437ab50996",
        "cursor": {
          "ref": "d55e0a02-beff-466b-a9df-78edade0bf78",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "080d3e41-2c8e-4060-968f-59b1e19012bf"
        },
        "item": {
          "id": "2abce647-5f3f-4556-90d6-5d437ab50996",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f47d9607-c0ac-4e56-92db-f090a751e749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7addcbe-f673-412d-8cce-820e1c3712c5",
        "cursor": {
          "ref": "5d8cabd1-45be-4e37-8f10-aaae664dbe70",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "496a3b41-1bfe-4e53-8913-3ff1567253f9"
        },
        "item": {
          "id": "e7addcbe-f673-412d-8cce-820e1c3712c5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "50bfa239-53ab-4720-854c-7b46c523b271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c167094f-1b5b-47ff-936b-05f23366a371",
        "cursor": {
          "ref": "f2ae5f42-8eb1-4e89-9bc6-340ae70a1b39",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "bb10c8c0-30f1-4acb-bc6a-739dd2301800"
        },
        "item": {
          "id": "c167094f-1b5b-47ff-936b-05f23366a371",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2f1507ed-9f22-4656-bfeb-2e10499b41c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 404
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e913ea-35d9-44c1-9fc8-78263245c5e3",
        "cursor": {
          "ref": "92974c5e-34d1-4e21-b98c-49e6f9192599",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8886b149-4940-42aa-9d11-c6f5c3bb06d4"
        },
        "item": {
          "id": "26e913ea-35d9-44c1-9fc8-78263245c5e3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "826a237a-fbfb-4523-8b4b-070657d47c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 421
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50bf055-e855-4007-b38a-565e8d506a94",
        "cursor": {
          "ref": "966c226d-1ec9-472e-a6a9-c06b1f32ae7a",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b0085a7d-295b-4954-9268-a2f6d0a0122c"
        },
        "item": {
          "id": "a50bf055-e855-4007-b38a-565e8d506a94",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8586ad7a-c186-4627-af54-d1582f2527b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "110cd95a-00a5-42ce-8ce7-69c2b1e76de5",
        "cursor": {
          "ref": "6f674cc1-a942-436e-9cde-f3f4ba19f8e4",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2ed2db0d-0536-4e31-9266-bb9ccba41bee"
        },
        "item": {
          "id": "110cd95a-00a5-42ce-8ce7-69c2b1e76de5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7d59d15d-b4be-4308-92d3-acd19fc14a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a94526-95ef-4417-9131-2efeda053934",
        "cursor": {
          "ref": "fa44924a-bbc7-44b3-ba06-b4cda14acc2e",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f3994175-e230-441c-8268-e0984ba05342"
        },
        "item": {
          "id": "71a94526-95ef-4417-9131-2efeda053934",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "dd8865eb-328c-4bfd-ad4d-95a26926a76e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fbc1f3-b2d0-4b01-bd70-9b1fe57a9074",
        "cursor": {
          "ref": "354dce2b-70ef-4daa-a344-b1890df34f2d",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "bcd95293-bbab-41fb-bcf9-7d972a5affef"
        },
        "item": {
          "id": "64fbc1f3-b2d0-4b01-bd70-9b1fe57a9074",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f52f7518-f210-4f03-8736-c931736e527a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8c1956-b09b-4353-a250-b47a2e8da380",
        "cursor": {
          "ref": "7edc9741-0013-4f24-bd56-2366e5736efe",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ce05d242-cdc9-4f65-8277-40994aea202b"
        },
        "item": {
          "id": "9e8c1956-b09b-4353-a250-b47a2e8da380",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ea2d9bb4-37fa-413c-bf5c-27c6cc59fe64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34870224-10c9-4b07-b302-deb532d0743a",
        "cursor": {
          "ref": "ab7c3060-bfcd-4b80-94b5-a6a912f6f06b",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6ce2ec97-c812-4002-9e1e-e0ee365bb64d"
        },
        "item": {
          "id": "34870224-10c9-4b07-b302-deb532d0743a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ac612ee3-5b95-4074-9b2e-8a6139fdf186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84dfa9eb-65b8-4c83-bdf3-4fd2154aadfe",
        "cursor": {
          "ref": "2e826b3f-ab53-48ae-b434-839aac1730dc",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ec2d6e31-a6b0-4a48-85ee-1fd835727b21"
        },
        "item": {
          "id": "84dfa9eb-65b8-4c83-bdf3-4fd2154aadfe",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "116ca42e-401a-4841-904e-5f850ea153cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9adb5cf-8def-40dc-a969-55891ab56861",
        "cursor": {
          "ref": "db4e11bf-47bb-406f-846d-fca95ee2d396",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "88073601-6205-4cff-8d48-5a8dc3206384"
        },
        "item": {
          "id": "c9adb5cf-8def-40dc-a969-55891ab56861",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b81af5a5-8ffd-4600-b0bb-20903947ddee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 790
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5bea5e2-5ffc-4333-9d4b-f1bfa665e055",
        "cursor": {
          "ref": "5e157707-319d-4a0e-b1e5-a34ff6bf8944",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2ed0077b-686b-46ca-ac66-ff9734e480b2"
        },
        "item": {
          "id": "f5bea5e2-5ffc-4333-9d4b-f1bfa665e055",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "70afd63b-673b-4161-8fc0-3f4effa1a516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1070
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a758d1-2c7d-4b3f-9705-bdf1314f6e76",
        "cursor": {
          "ref": "e293dd95-3763-48c2-9a5b-e422b7952408",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "dd48e0bc-5f4f-4ffe-96ee-400fe4acbcde"
        },
        "item": {
          "id": "85a758d1-2c7d-4b3f-9705-bdf1314f6e76",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "985d488a-f8e6-4b08-abab-4222e96b3179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1070
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c8cceb-040d-41a5-a922-2d8e59efebb8",
        "cursor": {
          "ref": "c907ac72-8782-4b65-b0ec-330f3acfbe67",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c8746aef-4c04-40c1-b3c4-4f8d063bc921"
        },
        "item": {
          "id": "85c8cceb-040d-41a5-a922-2d8e59efebb8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0141b42e-244d-40e2-99b7-6618d7bad0a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1066
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f557ba93-69de-4bd0-a872-7ac882218ad9",
        "cursor": {
          "ref": "24481e3a-2d99-4b05-8f48-be27bf005871",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6d510395-675a-4226-81fb-f0daae8cfd9f"
        },
        "item": {
          "id": "f557ba93-69de-4bd0-a872-7ac882218ad9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "01396c23-3154-4723-8830-289daa6d3c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1069
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a895c4b3-b83e-47e2-90a5-388edcd43fd3",
        "cursor": {
          "ref": "6daed1bd-d712-44e6-86d9-8c2af47f2603",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0962050f-2a63-473c-8b88-d7037bcd2801"
        },
        "item": {
          "id": "a895c4b3-b83e-47e2-90a5-388edcd43fd3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4be95705-1a93-4a7f-aed4-bccdb634cc76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1067
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ad4dd1-0b4a-4071-aedc-76bf04300283",
        "cursor": {
          "ref": "c1388aa9-ae24-487a-b518-a184df534b28",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "54a5bb34-b40f-4c86-9e62-df54dec6dbfa"
        },
        "item": {
          "id": "f4ad4dd1-0b4a-4071-aedc-76bf04300283",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "21324f4f-7c1b-40df-8ee1-ba377b06398d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbca0d39-977d-43e7-931b-72a37e038ba5",
        "cursor": {
          "ref": "5a34b257-443c-40f8-bed8-51f52ca82d34",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f38b9550-613a-45d2-ab1a-9c6ce2eca2cf"
        },
        "item": {
          "id": "bbca0d39-977d-43e7-931b-72a37e038ba5",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "0a968d29-9b6e-4417-8da6-4ffecc0a5fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7383c2cf-25cb-497d-b0b5-63bed3fe89e3",
        "cursor": {
          "ref": "ba407a95-87b3-4032-a846-df2c8a4c9013",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f3d9575c-6399-44a2-9df8-f39a79cb6283"
        },
        "item": {
          "id": "7383c2cf-25cb-497d-b0b5-63bed3fe89e3",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "7a15b7bf-b795-4781-a4d7-bd35fb23b1d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6aac3a-17bb-43d7-beb5-34a770e5b819",
        "cursor": {
          "ref": "6dddaca9-ebdd-4c6a-b991-7ec25722348b",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7698d5e3-c35a-48ce-a2e5-87d3d4f3ea1e"
        },
        "item": {
          "id": "3a6aac3a-17bb-43d7-beb5-34a770e5b819",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "5778a1ce-a6f1-403a-b469-61760e36a169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855b09fb-51f3-4dec-8c02-e749e6cce2fc",
        "cursor": {
          "ref": "eade8d08-eb9d-40d6-b4cb-da760f79e379",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "672ad15e-69e2-4744-89a8-488d5c657d5a"
        },
        "item": {
          "id": "855b09fb-51f3-4dec-8c02-e749e6cce2fc",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "8800b6fd-9074-437b-b5c4-16fea373f4e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f823931-8724-48c1-837c-ad49cbadc2bb",
        "cursor": {
          "ref": "36720cef-19fc-4404-a1ff-61edabb80d01",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "64896dfa-46dc-47b4-a5ed-0180cf882740"
        },
        "item": {
          "id": "5f823931-8724-48c1-837c-ad49cbadc2bb",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9f5a9338-deea-4968-9a4d-2710290027d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980bc233-44d8-4f1b-beab-e41181256499",
        "cursor": {
          "ref": "29dc9d41-726d-4890-ac9f-eb4f379ee8ee",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "52669704-501f-4c56-b799-bbbc67a64567"
        },
        "item": {
          "id": "980bc233-44d8-4f1b-beab-e41181256499",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d4e54f89-1299-4bef-b315-399a8d4c9996",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c73a829f-9c7b-432f-813f-fa5adf13fbaf",
        "cursor": {
          "ref": "f94962c4-8e55-4f71-9d3f-295094cdcc37",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d1eee22b-4ece-4dbc-babd-05c16ed58fff"
        },
        "item": {
          "id": "c73a829f-9c7b-432f-813f-fa5adf13fbaf",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "964f6be6-8328-429b-ac96-afbe4a34b2f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf05246-ee69-429b-8f74-6f53f358a36b",
        "cursor": {
          "ref": "656802d8-8158-49ec-9460-b83361906764",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a088e67a-2d8d-45d8-9a23-a59a1b4699d9"
        },
        "item": {
          "id": "6cf05246-ee69-429b-8f74-6f53f358a36b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "78fa0553-2cdc-422f-91f3-96877b41c8b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb58fc2d-f916-4b35-9161-63b4aa266576",
        "cursor": {
          "ref": "029e898c-cba5-430c-ac7e-92b71c5164cb",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "48f8fc5e-44a7-439b-9ae4-8d6c373d1078"
        },
        "item": {
          "id": "eb58fc2d-f916-4b35-9161-63b4aa266576",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c8e4a81a-4b66-44bf-8974-fa63a14d8923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50fc1227-afb4-4175-90e8-97ff1ab974ec",
        "cursor": {
          "ref": "bbbd0bde-f0d4-4dc1-9404-552e899b7dda",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8017ec5c-e225-449f-ac42-0e64b81862a6"
        },
        "item": {
          "id": "50fc1227-afb4-4175-90e8-97ff1ab974ec",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "af3c7d89-4501-4474-8377-2a967f9a83e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669416df-04b4-46b3-a9f7-8d7602a66fee",
        "cursor": {
          "ref": "dd3bff9d-b642-4b9b-9aa7-17ea4ba1a815",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5f872b2c-70f4-446f-ad20-6873bceb7e50"
        },
        "item": {
          "id": "669416df-04b4-46b3-a9f7-8d7602a66fee",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "84cae7df-1afa-4c3a-990c-211f1a056b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44746fb5-2ac1-446b-945d-51e33fe61683",
        "cursor": {
          "ref": "fe9b4130-d475-47a0-b2d5-f3da285c4122",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "6f9ada1b-9c91-47e9-8325-53a3e06c6a3f"
        },
        "item": {
          "id": "44746fb5-2ac1-446b-945d-51e33fe61683",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9b600642-ad13-454f-bcf0-fe7f819eff1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2fc62b9-380e-4e08-8332-9839dfcb13e0",
        "cursor": {
          "ref": "8bc2ecac-94cf-42e6-a1b7-d7220781ed8d",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4ada770d-2abf-4f09-ac3d-9a0c8d9ba47a"
        },
        "item": {
          "id": "e2fc62b9-380e-4e08-8332-9839dfcb13e0",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6d27d5a7-0340-4fb4-a42e-a3a2d0b40aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742dc6ec-2d64-47a9-a5ac-6c3f2fbb3044",
        "cursor": {
          "ref": "62f03b1f-f8dd-4738-99ef-f074c8d6e70c",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "782109fe-0927-4040-9a69-04872a2d3217"
        },
        "item": {
          "id": "742dc6ec-2d64-47a9-a5ac-6c3f2fbb3044",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "bf86fe20-5741-4d58-84f7-e85b4f6d5649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f7fe64-f05a-46f5-b957-7c93aa984149",
        "cursor": {
          "ref": "e325aaf7-6712-408b-b0ce-d73c4e16cdf3",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "22ea32e1-4b2f-499c-b413-1db959acd3ea"
        },
        "item": {
          "id": "83f7fe64-f05a-46f5-b957-7c93aa984149",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3b8a5b65-fea2-416e-a574-c00486de918a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ead7ea-cc9e-4ee0-85ed-17835d7eb323",
        "cursor": {
          "ref": "91d29b6e-5ab3-4a6c-8ca5-89a24069987c",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "069b05ee-9be4-4741-b481-29ab89b901fd"
        },
        "item": {
          "id": "74ead7ea-cc9e-4ee0-85ed-17835d7eb323",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3dd3f1d5-d725-4faa-97cb-003fd0be23ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975af533-86ce-4f7d-909e-53181f241779",
        "cursor": {
          "ref": "09fb3bca-91a1-45a6-8606-e23e664655f3",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "59407407-35df-48ff-907d-5ea9c2446d34"
        },
        "item": {
          "id": "975af533-86ce-4f7d-909e-53181f241779",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7b837376-05e9-4593-9e4c-3d940f520ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19c3abe-ac76-4144-8adf-dea8781f0c75",
        "cursor": {
          "ref": "31a337e8-a438-4564-b05d-89cedc9f1906",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9853ba2d-90f0-4168-a0dc-275b6414f0d5"
        },
        "item": {
          "id": "f19c3abe-ac76-4144-8adf-dea8781f0c75",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "597c8ab6-fb6e-4533-b833-d2ae8720b91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f79610-0012-4114-a6af-441f40ca83fe",
        "cursor": {
          "ref": "f6a26ab0-b472-4d8b-8346-61e608583503",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "cd9fda4c-0d40-4623-a992-e8a0747560d5"
        },
        "item": {
          "id": "f6f79610-0012-4114-a6af-441f40ca83fe",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "beee0678-473e-4b2d-8628-faca2660a658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb02bda4-0818-4de4-a3a7-c03e6ae5ea59",
        "cursor": {
          "ref": "6d0172f0-1f84-4774-b36b-9a9f81feb257",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "89af89af-4c3c-4942-8b01-a2746c16b305"
        },
        "item": {
          "id": "bb02bda4-0818-4de4-a3a7-c03e6ae5ea59",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3a6ad158-6713-49ed-ae5a-b11d7616cae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492f3f78-b92e-4bad-a8f2-7ae77c788664",
        "cursor": {
          "ref": "6b6a2091-86f4-429e-8407-c1bd2650763e",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5566a966-cd1c-4d01-9333-a13ff568d29a"
        },
        "item": {
          "id": "492f3f78-b92e-4bad-a8f2-7ae77c788664",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9c56e5f5-c363-4eef-935d-fac5594244ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373f4cb1-041c-47cf-bfa0-86ac339e5188",
        "cursor": {
          "ref": "88057cb1-bcd9-4bf3-ad3a-d20e037286b7",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "35bd9e09-5f39-41a4-8cf6-6c27ff5998b3"
        },
        "item": {
          "id": "373f4cb1-041c-47cf-bfa0-86ac339e5188",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "91816fe6-01e8-4f5f-ae8b-acbec974a80e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5936c3da-5163-4f17-979b-6523fbe90f61",
        "cursor": {
          "ref": "81cba8a9-a59b-4eb3-9ee9-ec67dfc450ce",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f7eba25b-781c-4170-a679-5b67b34ae598"
        },
        "item": {
          "id": "5936c3da-5163-4f17-979b-6523fbe90f61",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "b3728cde-6570-4793-99c6-ae2e397c7ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a02130e-3859-47e3-a1e4-287665ecbf37",
        "cursor": {
          "ref": "217bbed0-1f49-44a7-88b3-4043b94ac44d",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "19fd3e52-77a7-40c1-b9b3-aadc3d420861"
        },
        "item": {
          "id": "8a02130e-3859-47e3-a1e4-287665ecbf37",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8c1882f7-897b-4b65-bf9a-97ea4e596c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31cece90-72b3-4d94-a06f-c4f55ae19cde",
        "cursor": {
          "ref": "7833cd99-3923-4064-aa9f-018c06f5ad08",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "29fd98e2-eabd-4197-af58-27b3d859cc45"
        },
        "item": {
          "id": "31cece90-72b3-4d94-a06f-c4f55ae19cde",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "fa883ed9-d655-48d2-ac36-7317ab05fc46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f8f483-ca6b-457f-866c-dc73c5ae3b66",
        "cursor": {
          "ref": "b5f9e2c5-1493-4e8e-ab60-6fba4cd750d3",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ac01c71e-3297-4d3e-8c5e-209b852231da"
        },
        "item": {
          "id": "83f8f483-ca6b-457f-866c-dc73c5ae3b66",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8677c6d8-3799-46fd-b51a-641a2a86f445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec961dc-993a-4e16-bc2e-1e60a087b23b",
        "cursor": {
          "ref": "ff550514-57b0-4cb5-9c97-a50195a537bd",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6f7b082d-d08c-4e1a-a7f1-18f2388bf5cd"
        },
        "item": {
          "id": "dec961dc-993a-4e16-bc2e-1e60a087b23b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "14614955-a16f-43da-8dec-ad4ddd742710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd575cc8-96d8-401d-b221-a20bd57bd044",
        "cursor": {
          "ref": "88916d3c-e5bd-4a10-9e9c-054b02b9abd4",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "6ca316da-7e12-4190-8017-ea7fdb2c2115"
        },
        "item": {
          "id": "cd575cc8-96d8-401d-b221-a20bd57bd044",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "42583797-6bf2-4c4c-b7ed-a18274105628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108eff73-7838-4439-b30e-da18b3b4b6ca",
        "cursor": {
          "ref": "1863d1b9-8180-4223-a647-af14127a9659",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "bd7883da-82e2-48e2-b079-a84a1cc18c00"
        },
        "item": {
          "id": "108eff73-7838-4439-b30e-da18b3b4b6ca",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8c6aa493-f676-438f-aabf-36ac4eb3c196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0f5d3b-8511-4e34-b5f5-dc0237d46bcd",
        "cursor": {
          "ref": "38e9b27c-71b6-43a5-967e-86f3db5bf718",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0d57605f-a925-416b-b916-1237a61e0428"
        },
        "item": {
          "id": "ee0f5d3b-8511-4e34-b5f5-dc0237d46bcd",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "344758ac-891b-4edc-aee6-780fcff38127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e28734-410e-45a9-bedb-33d8d1fc3748",
        "cursor": {
          "ref": "3fe90b32-7cfe-419d-8df7-3b4afdae5abb",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "126d3820-bc36-4055-87bc-dec4dd55b8c6"
        },
        "item": {
          "id": "c2e28734-410e-45a9-bedb-33d8d1fc3748",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e22b2e7a-9541-4b5a-818c-ef44d27f6f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f17ef3-4bcd-4e77-8ff2-d651449b1c54",
        "cursor": {
          "ref": "46eb9353-17fe-4d22-b306-3c1dc149f7b7",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a1180704-d1d3-4e37-b69f-5c480fa14ea7"
        },
        "item": {
          "id": "86f17ef3-4bcd-4e77-8ff2-d651449b1c54",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f717e4b6-4fd8-40be-9db7-7d3ec6ad0135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "884de40b-30c2-4e9c-82ba-22e1d2135ab8",
        "cursor": {
          "ref": "04023829-fec9-40c5-bd39-e4283b01c781",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a64c0d15-dff6-4282-b706-8dc8c41ed363"
        },
        "item": {
          "id": "884de40b-30c2-4e9c-82ba-22e1d2135ab8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f280ef6d-2ee0-4fb2-b2c7-a80b407f7993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef6bf10-179c-415f-a02d-b4c5745e09e8",
        "cursor": {
          "ref": "d25c5316-1c9c-49d1-8d29-bf0d5eed9913",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "760d19a3-7053-4144-b1fc-d80a27077d16"
        },
        "item": {
          "id": "6ef6bf10-179c-415f-a02d-b4c5745e09e8",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3f5955ba-9b97-4b66-8188-53c3b2744627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c157cb6-6337-424f-ae00-ea0ced441802",
        "cursor": {
          "ref": "97e920a0-7394-46f4-b92e-a6fad901c5bb",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "dc9bed46-a693-4305-8be5-92c0221ae6a6"
        },
        "item": {
          "id": "3c157cb6-6337-424f-ae00-ea0ced441802",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "36789020-e9a9-4e85-b71d-c004fe2b872e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd638128-174c-4277-ac37-a079dffad418",
        "cursor": {
          "ref": "94aaec34-d4b8-4431-94f1-67b289ac12b3",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "adf137e6-03e9-4151-a83d-de43840c6741"
        },
        "item": {
          "id": "cd638128-174c-4277-ac37-a079dffad418",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c2c60b6b-fc94-426b-9432-850912412f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27129cf9-4948-49fb-ad32-c94f11fb9de4",
        "cursor": {
          "ref": "02fee54c-f629-4f1c-b448-854832d520fd",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "918e7c2e-cbd3-40ef-b29d-479fad506986"
        },
        "item": {
          "id": "27129cf9-4948-49fb-ad32-c94f11fb9de4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b6f5c31c-0f0b-480c-b02a-1b0d12d3d8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2467791-c3bf-4b22-a77c-7a7f6e3e41c4",
        "cursor": {
          "ref": "d3b45e8b-8676-4373-9059-135036d4969b",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "13890fb8-c313-4d35-9330-fb937ce31f11"
        },
        "item": {
          "id": "d2467791-c3bf-4b22-a77c-7a7f6e3e41c4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2936f3d9-3a71-44c3-9a56-2d201fae6c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dacf0384-3b04-461e-8e25-d45b534b813b",
        "cursor": {
          "ref": "2d9c295a-285c-40d4-8603-afcd845c40ee",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "113f2152-5e1b-4bf9-ae71-6c93ccea9d94"
        },
        "item": {
          "id": "dacf0384-3b04-461e-8e25-d45b534b813b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "88362d2c-2740-4839-9a96-3c8047e57f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3afc5162-1cb0-4ec4-966e-b8f3765e2439",
        "cursor": {
          "ref": "fa6175bd-caf8-46b7-99a4-537eac4dc960",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6a6cddae-c5c1-41c3-9294-6066acc6769a"
        },
        "item": {
          "id": "3afc5162-1cb0-4ec4-966e-b8f3765e2439",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c2c8afed-335c-47ce-89be-e7c3281d519e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34bcb5a-8d82-4fa2-b679-2cc994284648",
        "cursor": {
          "ref": "f6876a18-8139-4063-b359-84f0f92995ae",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "aebdb1ef-01e7-4c0e-9d47-d9eb8e64f504"
        },
        "item": {
          "id": "a34bcb5a-8d82-4fa2-b679-2cc994284648",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e1678f79-3151-4d79-a7e4-5937ee85685d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73b5be9-ab5f-4b16-9055-31306e6000a1",
        "cursor": {
          "ref": "a413bd02-bfc0-46ab-8cc2-ec2107547f24",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0f452125-af5d-4c4b-a10b-8c1e5d670c8a"
        },
        "item": {
          "id": "e73b5be9-ab5f-4b16-9055-31306e6000a1",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "682ac405-80f3-4867-afdf-1653d7532fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16e9fe1-c5dd-4ba5-a950-3f5fadb3011d",
        "cursor": {
          "ref": "5f082633-026f-4c89-b677-ed0270f914d4",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a3403fd5-4541-4ed1-a6a3-8043eb7607a0"
        },
        "item": {
          "id": "b16e9fe1-c5dd-4ba5-a950-3f5fadb3011d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7aef6e1a-e527-4eb1-8dbf-e9fd8087ee7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4594cb8a-e4f6-434c-8c3c-0777613ff88f",
        "cursor": {
          "ref": "95d961d5-15e7-4e72-a160-47487e0ea6f1",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "712cdbb5-4a8f-49ca-ba09-cba137f25ac7"
        },
        "item": {
          "id": "4594cb8a-e4f6-434c-8c3c-0777613ff88f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "578e7c80-33d2-44c5-922f-669f9a7429a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd3e261-9003-4492-b68e-ffb7cbc9a687",
        "cursor": {
          "ref": "1accd174-0a36-406f-bebb-239aafa87c38",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1bc3093e-ec38-4d96-afb8-c74884af5cf4"
        },
        "item": {
          "id": "3bd3e261-9003-4492-b68e-ffb7cbc9a687",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "428a7126-2c21-447c-9427-6228a6a0356a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d148f09-0312-4581-8040-8d260e828ac2",
        "cursor": {
          "ref": "ea5856e0-e1a2-415a-a8e2-20fceff7a305",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "31c0fc08-e8c2-4e48-84df-90158025bee5"
        },
        "item": {
          "id": "5d148f09-0312-4581-8040-8d260e828ac2",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "73543d5b-f270-44d0-a413-757baa1bf3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f213eb-bd94-4024-8f82-4de46d192f16",
        "cursor": {
          "ref": "aeab3dc5-1930-4398-97b0-97df41a6b5b6",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "50fb2be0-f315-45d3-b320-22a0aed4f13e"
        },
        "item": {
          "id": "63f213eb-bd94-4024-8f82-4de46d192f16",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "fc359307-47f7-46b4-92c6-c337fb4c7bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f649e55e-6a06-44cb-8e2d-6b5ffaab8070",
        "cursor": {
          "ref": "08f77464-a4a2-499b-823c-1b9fff3045e5",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9a8c71d8-ced6-41b1-bb83-6180c8a59462"
        },
        "item": {
          "id": "f649e55e-6a06-44cb-8e2d-6b5ffaab8070",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "980cfe0d-7bac-4397-8982-70e5d75e96b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40ef47c-fbdb-4a3f-8934-f1447a41244f",
        "cursor": {
          "ref": "cf1ea660-ebef-4957-ae47-49ef7cd50b1a",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0f4db933-5ee4-46c1-a09f-d433711d4e35"
        },
        "item": {
          "id": "d40ef47c-fbdb-4a3f-8934-f1447a41244f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "45f5d317-d70e-4e6f-9945-7aa32ad619fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1092338a-7441-483e-aaac-3684381addff",
        "cursor": {
          "ref": "ea26dc1f-cbf6-4e32-b329-e851e7279e3c",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6dd88d35-35e0-406b-99b7-ef69e4b3cf80"
        },
        "item": {
          "id": "1092338a-7441-483e-aaac-3684381addff",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e7c3c3e7-dd29-4ef3-bcaf-04beca41334c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4806332d-46f2-4e9a-9a02-d47389fd27c6",
        "cursor": {
          "ref": "39516336-f8fd-46cb-90aa-535d4519b624",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a5743e76-2735-4b8a-9c1f-2dc67659aa38"
        },
        "item": {
          "id": "4806332d-46f2-4e9a-9a02-d47389fd27c6",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "22c5410e-cb41-4178-8b13-9cb47fd6392d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56bc6973-c124-4431-89a2-822ec207443e",
        "cursor": {
          "ref": "e68c4f9c-66d8-43be-9ccf-6f2b58393a45",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "80070943-f487-4b2d-b006-df0dc128ab63"
        },
        "item": {
          "id": "56bc6973-c124-4431-89a2-822ec207443e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c1ab4bb9-a617-46d7-9053-43204070d744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33251495-8632-40d4-bd7e-a22ed479a4f0",
        "cursor": {
          "ref": "54fe0fb2-7256-4933-9eac-b83cb112ef04",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "926c6c25-df8f-4d8b-97d9-a33681dfc585"
        },
        "item": {
          "id": "33251495-8632-40d4-bd7e-a22ed479a4f0",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4639367b-9348-439a-a70d-052c6d1303f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e0a110-3508-4c63-a5c4-3165d5e3e9c4",
        "cursor": {
          "ref": "dd1b4d0f-a1b0-4760-bac8-c28256a65f19",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2a11fc02-c619-4c16-884f-8ffbbc309604"
        },
        "item": {
          "id": "62e0a110-3508-4c63-a5c4-3165d5e3e9c4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4757a6a5-bdbb-491d-bbeb-ad6fe361a2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caac0ed4-495b-4456-8779-2905b8a01a6e",
        "cursor": {
          "ref": "a0a34041-2843-41c0-bb5a-fbef195ac677",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3383034e-4adc-409a-af9d-e8c49b95dfaf"
        },
        "item": {
          "id": "caac0ed4-495b-4456-8779-2905b8a01a6e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "077289c1-1d0c-4d55-a42c-b6bacf210d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67176407-773c-4428-a612-a26ffdb5661f",
        "cursor": {
          "ref": "753715bd-7452-46b1-baab-72eab1523a4a",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "53164683-23c8-4393-8d28-4db109bdc954"
        },
        "item": {
          "id": "67176407-773c-4428-a612-a26ffdb5661f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "988f50a5-8629-4c53-b23b-a02644fd3006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e79c06-1d89-45b7-ba30-2d6821d085b0",
        "cursor": {
          "ref": "98cb0d1a-50f2-4700-b329-504c88ff452f",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e6a52b62-9d7a-4c02-95c6-738560d980ed"
        },
        "item": {
          "id": "c3e79c06-1d89-45b7-ba30-2d6821d085b0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "299fd42b-e676-4670-a91c-d7232211640e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f081a9-0ce3-4ecc-bf2b-83898df3f3d8",
        "cursor": {
          "ref": "4ed2e3de-0c29-4b97-98c3-914394a5b168",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "27ed2d83-d47a-4892-9625-6617de5ea0fd"
        },
        "item": {
          "id": "66f081a9-0ce3-4ecc-bf2b-83898df3f3d8",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b9d125d6-bc19-428c-97f6-d4ba1b76a1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d33570-ecd1-4c48-98c8-fbecebecb53d",
        "cursor": {
          "ref": "4ee84bf5-6c42-45c7-87c6-763154804920",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1a50e72f-3c91-41cb-849b-79613e6a9095"
        },
        "item": {
          "id": "74d33570-ecd1-4c48-98c8-fbecebecb53d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "7617cd7d-7d26-451d-bb51-a2d4bdcefb4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f71c28-e031-4811-a16e-45956fa8ece3",
        "cursor": {
          "ref": "e092616a-b51c-4750-b6ed-53356acf599e",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "912fa0ee-a6d8-4f41-9449-2fcd990a795f"
        },
        "item": {
          "id": "48f71c28-e031-4811-a16e-45956fa8ece3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "cbdf16bd-28ee-483d-9b28-4e615f208b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b928ce-c3c6-419d-86a0-24dbe8b7d968",
        "cursor": {
          "ref": "438aec58-cb95-44b0-8670-38d3b371774f",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1fbdeda1-1180-46ae-b34c-cffd04657392"
        },
        "item": {
          "id": "b8b928ce-c3c6-419d-86a0-24dbe8b7d968",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8f2855e9-11dd-4fa0-9e21-36e09838bd99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66f29f9-87d6-4cf6-b624-7c433709acbd",
        "cursor": {
          "ref": "a112475b-9011-4832-867b-641442d13c98",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "16f84866-7911-4adc-81e0-7256bf1d3f50"
        },
        "item": {
          "id": "f66f29f9-87d6-4cf6-b624-7c433709acbd",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7d81093a-ded0-4a97-94a8-0d549bfcbbdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d31c8b3-f324-44b4-a9fe-ad09510b4d43",
        "cursor": {
          "ref": "644a7cd0-6faa-43f1-bff7-19a0a6269c0a",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f2812ef3-4e33-419d-93c9-3cd3a2d10d13"
        },
        "item": {
          "id": "3d31c8b3-f324-44b4-a9fe-ad09510b4d43",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a7ae47e0-1a26-45cf-9fb9-d9ea3a795193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce15dfc0-c6f8-42c5-ac48-7cc456652c7d",
        "cursor": {
          "ref": "089b8a34-b7a0-4542-ac6e-1887e37fab4a",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b401bf7d-71d2-41be-8d81-2e43bfb2d347"
        },
        "item": {
          "id": "ce15dfc0-c6f8-42c5-ac48-7cc456652c7d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2bd50d6a-305d-4934-8250-4e6b021950a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "040c3cb7-1bbc-4a4f-bb8c-af4b888d6bdf",
        "cursor": {
          "ref": "d9c761d0-1534-40be-ac79-369c292ef63e",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a14569ac-3ab6-4433-aa58-e58348d6a0e0"
        },
        "item": {
          "id": "040c3cb7-1bbc-4a4f-bb8c-af4b888d6bdf",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a07d7ab4-ac39-4eb9-9221-dec21c83b525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab98629c-1611-46bd-b8c0-75c202fe832a",
        "cursor": {
          "ref": "4389c3ba-e51a-4e71-9a8b-7554254e34d1",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "932c3ac7-0592-490f-ba55-2a22399cbc22"
        },
        "item": {
          "id": "ab98629c-1611-46bd-b8c0-75c202fe832a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "186b21aa-462b-4c13-a24a-9bc20a333e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82ce145-688c-4970-ac69-dfe83000d142",
        "cursor": {
          "ref": "ba7ea8ae-112b-4910-80cb-1f7a35a1896a",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5bd43dc3-54d3-4969-9624-cdd17569ba08"
        },
        "item": {
          "id": "d82ce145-688c-4970-ac69-dfe83000d142",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "186cc572-2703-4c36-b8cf-eefb787de8af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75de5100-fa54-448b-90b3-f86cb691853f",
        "cursor": {
          "ref": "d8720edf-b576-4364-b211-a898d251b48a",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "41c40e5f-662f-4a22-a3fe-11ceca5488a5"
        },
        "item": {
          "id": "75de5100-fa54-448b-90b3-f86cb691853f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "045b8bfc-7341-467c-999f-5b63d2eccbc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f4c677-ec9f-431f-8b7d-aa6131e91fc0",
        "cursor": {
          "ref": "2f42745d-b7f7-4912-9d0d-eb2db527e877",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "165f2034-cfd5-41dc-a3fd-d8736bc74b6c"
        },
        "item": {
          "id": "49f4c677-ec9f-431f-8b7d-aa6131e91fc0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8577d2a4-15e1-48ae-8783-1a3d3a4f398e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025b8724-2013-4596-9876-39ff3f70467a",
        "cursor": {
          "ref": "cc342e7e-f1cc-40b9-98a8-37c5ff977b4d",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1c85cd0a-9acd-4b61-a891-51b90264dbf7"
        },
        "item": {
          "id": "025b8724-2013-4596-9876-39ff3f70467a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "15d18d47-aad3-496b-8c8d-a73bffbb693b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766ace29-bf27-4352-972e-1c28da21f049",
        "cursor": {
          "ref": "7a965dd8-a885-4ab6-9a39-cf2212a8eca8",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ee4d05f1-0b78-486a-9243-fef88bd21a94"
        },
        "item": {
          "id": "766ace29-bf27-4352-972e-1c28da21f049",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1921e329-c6d8-4f79-aece-fbb021f6310e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401424c7-b73f-49ff-9038-99befc024f65",
        "cursor": {
          "ref": "5a6da8a6-9db8-47f9-8b36-b41e614055ce",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9ceb75ff-8c81-404d-ba7f-b657a03f8e8b"
        },
        "item": {
          "id": "401424c7-b73f-49ff-9038-99befc024f65",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "183ac599-61a2-4746-bb3a-a0c3980aec04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1926684c-ade1-4abb-a459-5caef697b36a",
        "cursor": {
          "ref": "d43e92af-06dc-4cf0-a4ef-923b5f932531",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ea069325-76b5-49f0-b3ab-6fb74450648d"
        },
        "item": {
          "id": "1926684c-ade1-4abb-a459-5caef697b36a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "63ea1411-fc09-4c25-b60d-514f2a94b35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116196ca-9dfa-4935-b403-e7db13ee1cbf",
        "cursor": {
          "ref": "1a28273e-0b63-4306-b5da-0fbf8041fd9b",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "380e6028-fd7a-4ceb-b3e5-4dd3ce6b4782"
        },
        "item": {
          "id": "116196ca-9dfa-4935-b403-e7db13ee1cbf",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d9502404-aee8-4654-a3e3-863e47c67f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde144ba-5f53-4b7d-babf-9dea413b91d7",
        "cursor": {
          "ref": "8c1c11cd-810d-4d24-b3f4-20ddd371c469",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8dc0bd2d-b0a9-463d-8b32-81b7f5ee28f5"
        },
        "item": {
          "id": "bde144ba-5f53-4b7d-babf-9dea413b91d7",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "69c70ba6-a8cf-45de-aa01-88556dfa60c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1fa75a-c514-4113-947f-1b98d85d4a87",
        "cursor": {
          "ref": "1f9f17a5-3119-492d-8a82-bf80d862a072",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4446ec68-2490-4fb5-94f1-d5ee601ccf88"
        },
        "item": {
          "id": "dc1fa75a-c514-4113-947f-1b98d85d4a87",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5b9925f3-f168-47a7-8fec-56b9b079e03e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d2fd96-fea1-4031-aeb0-efeea4448a06",
        "cursor": {
          "ref": "9d12a2be-385d-4a9a-82b7-efb1ff854b92",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f72312af-1f47-4b5f-9d78-65c509d23d9a"
        },
        "item": {
          "id": "57d2fd96-fea1-4031-aeb0-efeea4448a06",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "642d2513-979d-42f4-978c-b5cc9e5bc15d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "094718b9-059f-4ca9-a479-4cacedb8404d",
        "cursor": {
          "ref": "39733247-f8d2-479b-b237-521fd22fb35a",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "cfc94ebe-8944-41e4-a3f2-38c758741936"
        },
        "item": {
          "id": "094718b9-059f-4ca9-a479-4cacedb8404d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c5bbe955-58d6-424a-b385-10e8fff91c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274c21d9-e151-443b-9f48-cc79a2ecd771",
        "cursor": {
          "ref": "56fb259f-6c73-4216-8739-542208a9a6e7",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "1f16b450-e2ab-4664-b626-cab9084130df"
        },
        "item": {
          "id": "274c21d9-e151-443b-9f48-cc79a2ecd771",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "babcb290-062b-4bc4-beb9-73f46eda810a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac16db5-4625-4241-a794-bf8608867e86",
        "cursor": {
          "ref": "aaee1b41-9cea-4835-a325-35291e1e8e56",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "98f5ab8f-19bf-4c8b-b861-bb53824867f6"
        },
        "item": {
          "id": "4ac16db5-4625-4241-a794-bf8608867e86",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "91cac293-b1bb-47af-afd7-6c53f9272a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67d2365-8c07-4f62-a21f-3962db0891cc",
        "cursor": {
          "ref": "c2aafa4a-38e3-416a-b10d-f08d62cdc186",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "96653b79-4e4f-4cdd-b92e-bfd4e236c685"
        },
        "item": {
          "id": "c67d2365-8c07-4f62-a21f-3962db0891cc",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f4b20ef6-26b5-45f1-bc41-8c08aa27667a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719a8383-cb1d-4b6c-9242-bdee19f40ead",
        "cursor": {
          "ref": "2432b74a-e623-47d0-9114-2058eea10082",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "960614c5-9cf3-4f09-818b-2756d0931b7a"
        },
        "item": {
          "id": "719a8383-cb1d-4b6c-9242-bdee19f40ead",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "66df23d5-4354-45f8-b208-b56a23fc3e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3eb2bc-1fed-428a-8e63-0bffb7e97a0e",
        "cursor": {
          "ref": "f316fa15-5b3c-40ae-9807-5f28296610be",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "82285dc3-b59e-41e5-8249-1003c82a0693"
        },
        "item": {
          "id": "8d3eb2bc-1fed-428a-8e63-0bffb7e97a0e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "648f4540-3ad2-4bc1-9f89-ad377925b579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee592568-7259-4637-8f2d-72f4d03ee27c",
        "cursor": {
          "ref": "2b3fe306-c7e0-40fd-b254-8efceb2b7cbc",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "c1ee161b-b160-451c-a9fb-386b81303323"
        },
        "item": {
          "id": "ee592568-7259-4637-8f2d-72f4d03ee27c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "31828964-d3c5-4f7f-b208-73654130bae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a819d88d-79d2-4801-82ee-b8946a63630d",
        "cursor": {
          "ref": "44272bba-d8f8-49a6-85f5-4448cd3618d0",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "714d8240-6e1f-42d8-87eb-b8e3f325b71f"
        },
        "item": {
          "id": "a819d88d-79d2-4801-82ee-b8946a63630d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "20dee3b7-909d-429d-8dee-6d51f375ddf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f40a215-edc5-45a4-8ffa-323243440f0c",
        "cursor": {
          "ref": "b1ecadcf-f8d9-4d9b-9be0-eacde84d3251",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "03bdabca-6362-419d-a898-083a0f7ae1ea"
        },
        "item": {
          "id": "2f40a215-edc5-45a4-8ffa-323243440f0c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "59f30eb2-0b38-4758-b418-e3ef01e23eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b5078c-dd5e-4a6b-8e4f-b550d536772b",
        "cursor": {
          "ref": "9942d279-cf06-4ba7-ade2-107b61257d64",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "9fc70ae9-fd22-4a8b-92a1-59574b902b84"
        },
        "item": {
          "id": "88b5078c-dd5e-4a6b-8e4f-b550d536772b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f428eb9b-59d9-40ed-9a20-16c421472786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a521add-d1b1-4362-9331-b45268ed6112",
        "cursor": {
          "ref": "00cd03bb-1a91-46a1-95ab-5c329ce25d3d",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "cdb71e5e-8f40-4f19-ac1e-6c7eb9e8113a"
        },
        "item": {
          "id": "6a521add-d1b1-4362-9331-b45268ed6112",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3dfe10ac-dfef-4d46-88ea-283d27f93ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e5b074-ac75-4095-9b82-2bc791bb343c",
        "cursor": {
          "ref": "7fe2a106-04bd-493d-92c0-76d90f9cffc7",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "27c30f5d-319b-4c7e-9c02-db1e46221d92"
        },
        "item": {
          "id": "90e5b074-ac75-4095-9b82-2bc791bb343c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a432c751-be27-44d4-ab9b-a0f22af065b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6916f2-264f-4412-ac2e-2fef238f8dae",
        "cursor": {
          "ref": "4200430f-7ba7-4464-a3fe-29a8f20093ae",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "468ffbd9-64f4-4632-9249-17b114e9fc9f"
        },
        "item": {
          "id": "0a6916f2-264f-4412-ac2e-2fef238f8dae",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3756b5ec-d053-44ed-b535-df2dcb342900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8eb905e-2fd0-4ee7-ba7b-6e5ba69f383b",
        "cursor": {
          "ref": "9fafcddf-269e-4c6a-b08b-2eb7cce5beee",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "b767c94b-00a2-4824-a12d-0098df3f3f05"
        },
        "item": {
          "id": "a8eb905e-2fd0-4ee7-ba7b-6e5ba69f383b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f1e33fc6-8530-418f-89fc-ef2ea0c43415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ba37e8-0ea2-4cfd-ae1b-ca0b763f943f",
        "cursor": {
          "ref": "2ceffc99-71a0-4e67-bf91-94020c48fd01",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "198920ba-c96b-4d6e-860e-3d6f1935182a"
        },
        "item": {
          "id": "36ba37e8-0ea2-4cfd-ae1b-ca0b763f943f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e5c45b19-b11c-466a-81ad-c88d5b2c4401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22a3945-2cd5-4de7-a93e-35e546f30dd0",
        "cursor": {
          "ref": "d573a4d4-5a6b-4da7-bdf2-e3087d1f2285",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "1d0f5491-e702-4a2a-af3b-ec5ef66f8771"
        },
        "item": {
          "id": "d22a3945-2cd5-4de7-a93e-35e546f30dd0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e4c45020-4047-4aa3-a1d6-963b10e647a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1544914e-5f86-445c-8477-0283149e265e",
        "cursor": {
          "ref": "00a2f748-e563-4182-ac5d-b0a31e97ea45",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "318f2fd7-dc97-4e88-b313-5a07c64bc18f"
        },
        "item": {
          "id": "1544914e-5f86-445c-8477-0283149e265e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8c80783c-a643-42da-8d62-610076bee905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c611456c-5952-443c-b592-c47131733bbe",
        "cursor": {
          "ref": "42cba7ea-fd5e-4563-b23a-89c09f05f8b2",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "f586c715-d034-4ef2-9818-46891824fc26"
        },
        "item": {
          "id": "c611456c-5952-443c-b592-c47131733bbe",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c0d90e01-ada4-4a76-90f9-6f8a4c5e7d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf23caf-bd40-40a2-9db4-814e3d2cb32e",
        "cursor": {
          "ref": "8877aaaf-0ffc-42ac-b374-b550e38d0485",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "91b0108e-ccb9-4261-8ec5-53f4ef4ae319"
        },
        "item": {
          "id": "fcf23caf-bd40-40a2-9db4-814e3d2cb32e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "cf2bd9c2-0696-45b3-a22e-d4b92bae11e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24180d91-189e-4cb8-820c-496ac7c35697",
        "cursor": {
          "ref": "7a542ba7-67d9-401d-8e7a-15477db7cf5f",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "c4db7c12-bb4d-4e74-9821-6f2dfe578717"
        },
        "item": {
          "id": "24180d91-189e-4cb8-820c-496ac7c35697",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b8891888-f786-4502-bfb7-98a382dfaacb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b84101-1095-442a-85f3-193bddca97c6",
        "cursor": {
          "ref": "530a9f23-d27b-4888-93b6-2a80baeafabf",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "46c6823a-e75d-4302-b139-9c96939c59ce"
        },
        "item": {
          "id": "e2b84101-1095-442a-85f3-193bddca97c6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "64d624dc-db31-4ddd-a2ef-3f42df14ce82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10cd58e1-236a-4b08-ace7-9abf57e4bdb0",
        "cursor": {
          "ref": "af364668-3fe2-4494-9731-08e8a6dcebd0",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "b29db298-8979-42a4-b8bb-f55f1881214f"
        },
        "item": {
          "id": "10cd58e1-236a-4b08-ace7-9abf57e4bdb0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9bb42171-e16b-4f86-b65e-e846eaa47589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90780dbb-bffb-4968-87ad-14ac1d7de3d5",
        "cursor": {
          "ref": "5ac485c4-09e2-46aa-b051-0aa6ef915f91",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ccecf5eb-d2ec-408f-88e9-2e75fdd5d802"
        },
        "item": {
          "id": "90780dbb-bffb-4968-87ad-14ac1d7de3d5",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "48474743-bffb-4b97-a826-04829846d716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb0a9d08-29c7-489f-bfcd-3a7a1ebe91e1",
        "cursor": {
          "ref": "201a04d4-a991-4d14-8798-78f880509860",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "a0312bbd-25aa-4a6f-834c-3cbf645f03b1"
        },
        "item": {
          "id": "bb0a9d08-29c7-489f-bfcd-3a7a1ebe91e1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "27719fcd-cbd6-4fc1-9532-555ad8619892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ff1d2a-4e8c-46b1-8985-64c1be3ae234",
        "cursor": {
          "ref": "769f02b5-1c8f-4e1c-9b6e-0e8d883a0afb",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "c08acd7b-05bb-436d-88d5-784d425fa819"
        },
        "item": {
          "id": "d0ff1d2a-4e8c-46b1-8985-64c1be3ae234",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a0a19093-0bfa-450d-a885-5be7bb32046e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b73893f-46e3-4969-b766-2ee8c3eb821a",
        "cursor": {
          "ref": "01af9333-2d99-48b8-9235-9387b739675d",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "09562b21-ed4a-4473-9f16-16776ea08427"
        },
        "item": {
          "id": "9b73893f-46e3-4969-b766-2ee8c3eb821a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e9f0e7a7-dd8a-486c-b423-e5b99ee41766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aaf45d3-bc09-4ce1-a35d-4ba3f2c3ac12",
        "cursor": {
          "ref": "751a4360-21b3-4896-a5cc-17ce584cf238",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "29c494c8-d8ff-41c6-bb98-f99bb8ad8855"
        },
        "item": {
          "id": "2aaf45d3-bc09-4ce1-a35d-4ba3f2c3ac12",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "26012cd1-ea3f-4442-8e0a-3d62fa0e6627",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd965be9-6ec4-4cfd-96df-859ce192967d",
        "cursor": {
          "ref": "8ffdd835-dbc8-4c5d-b2a3-813e158da1c4",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "9d93cd51-e7b5-47f8-ae2c-f28368adb010"
        },
        "item": {
          "id": "cd965be9-6ec4-4cfd-96df-859ce192967d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8bef5c3c-b2c4-4b8c-bae4-23477697c8f6",
          "status": "OK",
          "code": 200,
          "responseTime": 102,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b759c129-8f8c-47df-9921-5c91bfa30bf8",
        "cursor": {
          "ref": "7d08ef12-e7f9-42b6-8160-c508c06bdd99",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "2505f40b-07fa-422b-950b-6a4f434b25fb"
        },
        "item": {
          "id": "b759c129-8f8c-47df-9921-5c91bfa30bf8",
          "name": "credentials_verify"
        },
        "response": {
          "id": "44d1d668-7d96-44b4-b709-60a3c9782dc5",
          "status": "OK",
          "code": 200,
          "responseTime": 1576,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e279ee-37ce-4f5e-8805-6e6d952122fb",
        "cursor": {
          "ref": "712eb602-7835-4f4f-87cb-b25bdbafdf29",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f75fdb8b-a668-4d1b-bc7c-7cee5b369d21"
        },
        "item": {
          "id": "97e279ee-37ce-4f5e-8805-6e6d952122fb",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0bddbb4c-8e4e-4ba4-86f4-809b96730e5d",
          "status": "OK",
          "code": 200,
          "responseTime": 1312,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "91316f3c-9b59-470a-aa3c-6a1a15a4ff21",
        "cursor": {
          "ref": "cc60a794-3e4e-41d1-9b50-215289885d5e",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "5846331a-e177-40e8-b476-649ec470aa84"
        },
        "item": {
          "id": "91316f3c-9b59-470a-aa3c-6a1a15a4ff21",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d3452482-f9b9-4416-a799-5441d0845c25",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91316f3c-9b59-470a-aa3c-6a1a15a4ff21",
        "cursor": {
          "ref": "cc60a794-3e4e-41d1-9b50-215289885d5e",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "5846331a-e177-40e8-b476-649ec470aa84"
        },
        "item": {
          "id": "91316f3c-9b59-470a-aa3c-6a1a15a4ff21",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d3452482-f9b9-4416-a799-5441d0845c25",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a809292-55e6-4de6-b215-09f56561debe",
        "cursor": {
          "ref": "88798381-0002-4fcf-b2c3-dffc72637757",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "aac1db1d-f3d8-40bd-bf8d-082ca69daa79"
        },
        "item": {
          "id": "2a809292-55e6-4de6-b215-09f56561debe",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1d53212f-2f13-4763-9408-952d74ae591c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689335e2-183c-4ca0-a115-9be7ad53f04b",
        "cursor": {
          "ref": "1aa2176c-c31b-495b-824a-47954d72ce6e",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "1a8c8f31-62a8-4e45-a56c-59bb08946719"
        },
        "item": {
          "id": "689335e2-183c-4ca0-a115-9be7ad53f04b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f0014ce4-cfd1-4291-b8ca-2d4d87bd6860",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}