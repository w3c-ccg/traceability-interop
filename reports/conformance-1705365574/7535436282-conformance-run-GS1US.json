{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b7cdd170-18e9-497d-b80b-3f22726c786a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6b2eb6c9-dccf-4059-9860-e774a266b954",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1b3186f2-d4c2-439c-a2e6-41e1d7c7ad80",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d15e438a-63f6-4b34-9482-417d8cd4ed44"
                }
              }
            ]
          },
          {
            "id": "6f50c371-2729-4f84-9c20-eca732cfe994",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "36928125-46c3-475f-944e-8a6b867c45a0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ee81bfe5-b6c2-4df3-903a-2ec2725d8436"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2fc49c99-11fd-40b0-ba68-6c3ed0239d81",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "32ef4d6a-f995-4080-8974-432d0d84acd0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a61b0c84-bac4-4ba1-9b6b-dcf08043528f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8281283-36a4-4f3a-bc80-e2d1e2d41775",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e9dbb5ba-2728-4820-9905-2d3e1d411954"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4445efa8-65d0-4539-8096-247ee3f5e094",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1c9ec062-0397-4bc0-99d9-8aa754e40e26"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0199e685-88ed-4fda-ba4a-540e843960dc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aa38bf9f-6c13-43ae-b628-5d11d5aed1ca"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a06b1caa-82d5-4b7c-8419-f2cefd9af786",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "58ed3d0b-6db4-4d9c-9f3a-07d438d42f8e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "977421e6-521b-409b-a3a0-5d78bc6c8d53",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fa0ec57f-1e70-4385-88b2-0caddcf78dc0"
            }
          }
        ]
      },
      {
        "id": "444e6cb9-7bfc-4644-bc46-f2198dfbf333",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "cd695033-b37b-424c-810d-4bc24c2b8b0a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "efc3defe-5137-4655-8a52-d393cceb5111",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9dd35b5c-e970-4a2d-a124-0495a8f41fdf",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9aa72d1-41b5-4fbf-9e46-c85b83db0f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b2a9339-650e-4700-ad34-481bb9645e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5222c847-a6bd-4108-9bca-8050de32e8fd",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c138237-b38f-432d-a2cf-f55409d61b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "940a52b7-df99-4a4b-a982-a51a4c4ba58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f9c44f-9cbc-4cb7-b865-534b12be0c0f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34479511-36d2-4784-9e4c-5ff3d14409e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5540ffc3-1b1b-4525-93d7-99b1eab5e51a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0068cc32-3520-41a3-a721-c878ec278f91",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2556055b-8721-421e-81c2-cfe530b55d93",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa58cf4e-edf5-4175-9552-6047f03721d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ccdf6283-63c5-4366-b5b5-33ff28b47e03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b385524f-18c8-4b16-93c9-b3bb9acb90ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e08833a4-8975-472e-a2a3-a8b058ac6807"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "76380365-e318-47e7-bc15-16f4416dd465",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6bd2a140-f50c-4920-b89a-8c27157d65a0",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "551d8421-5dc4-42c4-96a8-5b44f34da192",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1f147fb3-eb74-437a-a432-121245b07962"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4912c872-79cd-4a77-9374-92019197e8e0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "a312d8af-b56b-4f52-8f2a-5065e815b8cd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "71e01d89-bca4-4044-8c48-363d14f18c73",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "776ca133-5c1b-44cf-bade-52494db97002"
            }
          }
        ]
      },
      {
        "id": "266e1a9d-d304-425d-9bc0-02488c593344",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "84ee90d5-1643-41e3-8c1a-4780db825a46",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c438b8db-cc02-493d-88fe-002a7863cdde",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a62bbc9e-5ae0-4565-975a-ab48516a0694",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b29f071-3680-4f29-b1fb-e7897c37ab18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba163df-ef36-4216-8a56-3fb53bd8bcf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c20025-341d-450d-b58b-0fe4bc02be0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a374b887-2924-4765-9a93-df3598482843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003d5af1-0a06-479e-81ac-971bdcd9cdb7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0b8850-b59d-449b-a62b-0751f2475ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf700125-7bbc-469e-bacc-fc3395a0931f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac045c8b-6d73-4fef-8c0e-11d3e791583e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2598405-bd55-44a3-ad63-d188cc80af3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e3de60-2e65-4a0d-b77c-8481457b143b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a937cdb-9a6e-4197-9993-d1adac3781f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d403dafe-4afa-4bf5-be0e-37303f6cfb36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc69fe40-7cab-4b71-9eb6-43e78b1742fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efa9a77a-4160-4914-87e5-bbf69f3a098c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee67bd9e-df60-48b5-95ca-710e02a4be50",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc23898c-8fa4-49be-a88d-18016a0eb915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ee1e16b-f904-4cba-b169-840d1c2b19ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0fd50f0-120f-413b-b14b-668dd5bdb455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "371148c5-2390-4621-9ec1-08d3d418f152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3154341-2681-413b-88f4-2c387f89f17c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9823ae8-4dab-40b7-9ca2-2fe8771bad29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cad2a21-3dd0-4b29-993b-a1833fa4891d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c284b68f-2e9b-4d44-9820-97fb96b17530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f85abde1-d854-4414-b1f2-9f0836149732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5881d78-374e-43ba-a082-6e95464725ac",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e99263-26f4-4597-beb4-631e19ec5e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0efb73d9-0bf6-4f0d-81e5-ef14b20ba214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f381d4b8-393a-4e97-9d5c-f02cc1f8efe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3443af11-58a1-4132-ad11-cc7064f562ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d4ed62-7c2a-4b63-b3f8-2cd9e6d46021",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17405064-0955-4b00-9be4-e3e6e13564e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7081acc8-d5b5-4b6a-a3cf-3d965eaaa4d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b52840-dc43-4f2a-9853-76357c4cd5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3558e0d-af22-42e3-8d98-306780acb333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd58e6d-6275-4c52-b823-a944b4b0933f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66795193-358c-4750-ac87-3b6f348c1d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7019c7a-ca6f-442a-b570-6c2405a7a4a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302641bb-6313-42de-ab9e-457ef6c7b2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3236af6-53c1-4f2e-bb1b-92e4ac1bf2ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da93434d-4cce-43be-8c78-869c2602a74c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a03721-a7e6-464c-b5ed-753485f1025d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d69680-a4f8-4142-9b3b-d090000e621d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a41375-28c0-4a72-81a4-9c85494195bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1a7963b-bbe4-4057-a264-5657d8a03b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2de887-c538-4f95-9dd8-6dd7a955a11b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "797d0680-aaaa-4b79-bdd2-47603cfaaf32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffae3601-d2d0-47c6-833f-1887cfed64e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d71a339-f88d-402d-9f58-275ecede9501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34086a66-d4fe-4c01-afbc-73b0ac4823df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f172ecb-c46b-4c52-8210-fd15793b67b7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2f553a-e885-49c1-a47d-cd3b61637c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5c60697-4c0a-4f9a-acd0-9fcc3dd8050f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00bd45b6-8bd7-4754-8120-8d7a779bbb41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "358f5aa3-6277-459d-9f01-3d7f6c854e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f955e6-30a1-48a8-8305-e40c824459a5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e551230b-9ef3-4d22-9518-7b76272e7774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94b9c538-a499-47cb-aea4-b2966b44d20c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25575195-205c-46a5-96d0-2540277e3836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d0ecc11-f746-4b8a-8477-95939ecd35ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad43904-016e-4267-84e4-ed7b031ac0e5",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d797cd9-6b23-4e64-9155-9115c0a62ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41250f92-7cde-403a-9410-45ea71fc7135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd5a1ff-4c70-4896-bfda-fc147153e41d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f63b5dea-7db3-4ebb-9a7c-37b33cd39c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3932b06-b415-46b7-bdf0-a552329fd07b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b15608d-e8ad-435b-8571-55664f21ee50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a15f735e-b8f8-42d2-86e0-38f51c63ce78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58140bd-894a-4f3c-bb6c-bb58b8a6df4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c385f70-b8cd-4e3e-b1b7-06111577da02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "136b343f-74f6-46c3-83f6-821fc29174b0",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d377da5-7734-46d3-93d6-ad260667b9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "987c4287-5987-4a87-b959-eb09d5592c41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "562bb6e2-e735-4e35-b039-8689f08339ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "702cf4b1-d8d8-47ae-916f-8810d18f3379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7c9c0e-3ee6-4c61-8a5a-56442435db7c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fdb5c66-5951-47fe-a23c-aa813883db36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e4c6bf1-f9b4-42d9-92b8-1384651b3f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1ca65e-4359-40c4-891e-d88dd944f397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0518de3e-98ea-402d-9dc1-7664556a4003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "804b5023-5cde-47c1-a30a-896c96214189",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "076bfab6-cf17-4898-afc8-db59cb54eebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59cf6e33-9b77-43c6-bb63-53e4d1a375fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4685f2b7-29b4-419d-abc7-e0940265fcf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eba619f9-e37f-49f3-992b-4f3225228135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51cf0c52-a27b-40fb-908c-2624faed0fa1",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "784f87fd-5d15-40e0-84d6-1cb0b3a7914d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6097ad53-6635-4bec-9048-a64510d0baea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f74d07-52ee-47ef-a564-dfa96727299e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e18c05e-178d-46ad-8c5a-de5076527e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df90a71-7772-4a4e-beff-53c7e6ba0d30",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abb29e4-1734-44f6-b96d-230366968ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ae29ffa-f6d1-400b-a211-21841b3432a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8653b052-577c-4532-9cd9-69be4f92690e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "79d93b07-d23f-44c8-ada6-3bae693f5755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e398570c-55cc-4dcd-96aa-2d7e7266cbee",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18bcd450-1daf-4261-b1c0-26ba0d9f1789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c24ca776-0f52-45e5-8e72-993d67430b96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1781e5-14f4-4952-8898-767ca62ae7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5625d3d-ac7b-4e28-a42e-9679fa2b7ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df95120-8e88-4bf3-81a2-ffd68ef1fc0a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b20ed7-9ecf-496b-b696-af5fb8efc116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68af6c18-6ada-4b88-aaf3-67662399a38f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d488d89-10fc-4afa-ae39-4a57b5289f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d43c9869-1bee-4f9c-b44a-7d98ed382122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd43ddd7-0859-4b62-9989-e2afe87998a9",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b38ef95-0d43-4f88-9745-dccf16c871ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b99196bc-3121-4da3-b5cf-f930d75cdd24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4215c896-55c9-4d16-bc41-b72911ec597d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd746bbf-6a7f-4513-9951-b718507ecbbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8734589-3327-4cbf-8f5c-e191fb44cff7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35ecf5d-e47e-4ef9-b262-83a7b029b6f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "380cd5d9-2171-4fb0-ba10-52ddff61e5ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4971008f-129e-4148-bf4b-632c7982331f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "498bc09e-8a0b-4b92-876d-8c334bc006d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c2a11e-cd2d-429e-84b6-8f37701a293b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "255b25f1-ac81-4128-96de-1768ffd8e5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f5ca520-e81f-475f-bc7c-3cf0381f553e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9da69cd-d2ca-4f97-8531-a612376496ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "40213534-62b7-4a8c-a077-43e57f16a701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ade3fa-a7f3-49c9-b8cc-190efa3dd3bb",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd11132a-afea-4a13-b268-9728b6b69dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84cefd40-6ca5-401e-bc5c-ba7f6c377237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3daeece6-35ec-41b5-a9d6-5b7671469e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2214f4dd-5073-4102-971e-cb9acfd306ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e20be12-529a-4581-af32-df9f79d5054f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2404e5a5-edfc-4125-8614-23e8d545fb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a34f5b18-9a4c-45a5-9e57-299221b96f32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e322b1eb-d9bf-4a49-ac0d-a9436140a74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e075f562-ff05-456f-a75e-9dbbfbfd8553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82fec1f-9531-4b65-98e2-d39516d15ba9",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c73138-5a04-4692-978b-cda36a89a79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e9ec7dc-f85a-4135-b641-41ae0bcadcc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3216916a-dad1-4621-8263-cc183b78332d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ffccd18-c2fd-4c1e-ad7c-a72a444e081f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610ccc83-ff87-48db-bf26-c94b642d7bf5",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "629390e9-cc00-44db-987d-de9ead116eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab43a3d5-c856-49a3-ac22-4dc56a23063c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63602e0-f702-4494-8763-a67c21af3d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "711eef65-0482-4a33-84d1-0d06bf4a28f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d433edb9-dfbe-4063-98e9-992d8cee7442",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebbb9cc4-da82-4181-bdd0-1a2cda6465f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a0fb552-3d02-41ad-960d-9402c20f2b1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ced9bac-4a4c-445c-8a9d-10437dfc7664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d088f9c-3552-4757-9a91-560aca44bd19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f5a3b3-d08b-4730-afd8-ca3aa61f0c3f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "118d9acf-2c22-4716-9d00-cd8e61a7ad59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52cc14e1-6114-4e9b-adc2-4b5a05bb92c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9060486f-381d-4ec9-9899-379103c3897b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "69b687f6-d0ab-4763-8323-b71efa5ee59a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a31559b-74c9-4d8d-89cf-98fdac828140",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4756eec-8115-4707-ad82-5f1a6f79e107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e88cbd-0fcf-4a9d-a519-275d484d86fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59d0571-0bba-4eaf-a97b-7a98d5745eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c55cdc-f880-4822-ac04-e843b701bca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c23762-17ed-4dd7-8598-17732d4c5ec2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27260f03-4610-45a5-bb59-d4236246caac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae4944cb-39dd-4a5e-9871-4e5bdf07f973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3f255d-d02e-4fb9-97f2-5c1fc4b45135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "538af714-afc6-4eaf-b908-629a73a93d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34566565-b15f-4a4a-80a6-074a757719e8",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a06a6c-fcc9-47b7-a117-ea398b1371c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a202eae-b36c-4aee-a96a-ee0720fc294d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ce473a-0e1d-4a0a-9273-eb65d47f8295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "36494c5e-374d-4f29-98d9-e46af23089a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8124deb0-0609-48d4-9030-f53a1ebde986",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e9e707-266d-4cca-9600-98fe3a39f349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f12b8f36-f72b-443d-81b5-5b52eac80b87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a59f0a-dd23-478e-a7ac-d99e59c2b282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ae7e05e-b19e-4cc7-b428-5d6150f7ad5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152c2ac0-ef99-427c-aefa-01dcaca0993b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc501d5-1094-4001-9d02-750cf0bb0213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4118bc68-3511-4aeb-be44-e3c4d88fd0b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b89f9e4-14ea-4064-9f88-4b7aeae13156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "600a9be0-1b62-40ba-8664-ccef8f62db78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2b0c51-a071-407b-826d-f3c7550a387b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbad16a5-6328-4357-b910-5eb4844b9ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5171fdf0-ae45-4157-924c-2616473edede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7389e5fa-449f-45a2-9f3c-891bcfd48293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0e1a9b9d-49b5-488c-a8af-cb7ad743138f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52796e0-7df0-4670-ba24-50f836317f09",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6da707-3216-4c81-ae86-098829015562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e85da22-3da9-4b11-b57c-f4f216102953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acfb48c1-6914-4198-9a5c-e55eebefae6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f26f09eb-727a-4aef-b410-eaf0c8a3062e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39fcc025-fd3d-4bcf-8cc1-f9e9ec518283",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b32e79-e781-40d7-9dc6-6bae9ea463b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7fc39b-85b0-44af-ab5a-9d0bcc2fd651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c534b0ba-dc5e-4be8-83b2-b71737623f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6575218-dc05-4b0b-a2e6-98d225129a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc66a9da-ba03-459e-9596-fe3e95142be5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a01c052-07f1-40a1-8898-21d609961126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da5489ea-d81e-412b-ae24-d409743f8c99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89670c03-874a-42f5-9b57-fd884b982f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b1ca445-2a0e-4a1d-968c-1900132f1166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c435f172-0387-42e2-8c44-801be118fa87",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68bd1048-a1b8-4c96-a41d-601473cf47b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c468652d-1dcb-42b4-bfa2-be6ce5eb78aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd9721a-02dc-4bdd-9010-1fe6be0b6218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3913dee2-5bc7-40d6-aa2f-40369798f2d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ac5d61-2447-4359-97a2-92a4bd52d82c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba0f955-f47e-4152-875e-16ba23d51e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64719926-1bef-4dcb-af34-62483187131b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24a787c-15c3-41e2-80ff-d609345826df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "85c6e04b-c506-4752-aea8-7026aedd54e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b30f42c-d599-4357-aef5-2fab9f6dd02d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "836b900b-99af-43e3-84eb-56ef08627084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f738ce2e-2061-4132-9ac7-41134a8b7612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602aa1a0-c491-4183-b0a7-e103ae74ea6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ea6b973c-8f82-4573-89d5-00d6640bcf3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4afd974-d9c9-4517-8f4b-a34b8595b1dd",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c79404-255a-4dd8-b9e0-0d1cf1fe4775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1183443-8d1d-4599-bdf7-982ec006c409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b760cb7a-5632-4f64-986c-196ffd5df77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "680ef516-8c0d-48d3-9b1c-1566678727dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac5e4db-0ddc-4cbf-ac84-63d40688aac6",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d25c4e57-7d26-4e79-97bb-210f4985eb7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deaf5b42-78b4-424d-b2f0-56276c3920ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65259b8e-cb90-4f51-a208-f357c2cf3044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a53542d0-b882-4112-b9f9-297a11c504ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9958d6d-752d-49d4-b612-7e1975aaac2c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f9b53f-fe66-47b8-a25a-60202dad8271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f36a5cff-15d3-4f95-8fda-c99747b31c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84781894-a767-4f9d-9817-88e69f36045c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "919c69d9-eb25-4e52-acc5-8b129cfd806d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d831e284-8592-4482-b57a-128c21c305a6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f82aae-7812-4503-b5c6-6149cff08f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "438d2a1b-2d0f-4f37-be98-06dbf972822c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49beb0e9-5e94-4714-8ccd-66726d68a5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "543c7b72-1a0a-4464-aee1-810c6b7987bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e791d3af-4e27-4da5-96bb-92f3a72cfd96",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "296d53fa-cab2-44ec-bf8c-48fb86730352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "153a1c8c-32be-4fd7-aa29-c8913b004650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e939a0ac-4506-4738-a723-bca7f6747715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73982c60-25ee-4e3e-b003-d902cad78801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ffed5c1-8683-4d10-a96b-8d4776642d83",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51d0ced-6847-44af-b4ac-0678a07958bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db4a20b5-b546-4655-af1c-a1660c6bd2c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c5a7e4-df40-4c12-8b8e-4ecfbe6a74f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "843dd5a9-73a2-41b2-a3cd-ba1e16e02b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b468aa-e4e4-4e01-b78a-dd2a85bc5295",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f9cbef-d5f2-474f-86b8-321f2bc4cd0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9af7fd11-ba32-47b1-a4b8-7efa706d7d9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6ebf79-afd4-4712-a8c1-b937f27739af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1740a4a3-1525-46eb-943e-bfc512646607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5478d64-91d6-4877-a338-942ebd8785fd",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "313fe5f1-d154-48ed-adbb-2cfa73daab4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2c70ded-9557-49a6-bb4f-fc0eb1ebbfcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53758d36-3da1-4358-aeec-82fe9f6ff457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6185c740-86a0-407b-9e76-a01f29e50a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60c1a9b-155d-40af-b906-6232e2754c53",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4ab22e-c02e-4d21-be17-ce9b66f17f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a157099c-07f4-4a2f-ba70-9133f1e837dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4505587-4341-40b3-b28a-3eacc7389151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3051aadf-b3e5-4d13-b48c-b9d5371fec22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a2b41c-750b-4561-9b32-1b5b1cb57c61",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7167774-58de-473a-a781-e058c3346c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8e300e4-b51d-4c51-8cea-f0c9e9394446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e32915d6-3c0a-4f0e-85ba-acdd2ec3b3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "843176a2-baa1-4b75-9f65-81ed46d9cf42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047776b3-ef0b-4961-89ae-4948352fc6ac",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd067b8-5687-49cd-9669-59cdad4b997e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37cf55e7-bab8-42f1-816a-8d069716b6f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc6d2e9-f6f6-4cac-bdbd-aea024c6bfa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad49fc29-caac-4f94-bdb8-cffa5e29aebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c91960-36f2-4799-af14-dc571cc7f0b7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea575e0b-a5a5-4fa9-97a8-a6ccf167b90a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b749214d-c677-4a4a-ae6d-916cb752f029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1e7824-1a08-4270-a2bb-9b67b7b2660c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe163e3d-feab-4368-81fb-db9886c7cb45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "528391d5-9f4b-41a0-bb68-ae63616a4b23",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24741b24-59aa-4d09-bf1d-a634f950de08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "852a899b-4549-4d38-897c-6a67c706e907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "931ee0d5-b54f-482e-8c04-833c101915a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb40cf12-37df-4e74-bb22-3bd2e54acb9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01adab79-ce07-47e4-9588-e1e1cfd91ac8",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "182d0756-d8a3-4c61-b13a-682607c81bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7597cef6-6e80-43d5-be6d-381be5c42adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e18183d7-3457-43c6-b6d2-0ee1b7193231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "32544393-0b12-4b79-8246-6e389ed4b17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c913aac-04f0-4caa-9ad2-e76d18b57e2e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "959dcfa0-af77-4a07-ad59-191335b37c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a426953-7f68-413b-badf-fdb1012ca200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a624007d-f6ac-4552-bb45-a497520c5d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "939e618b-0a81-4542-8278-3bf6c7d4d1bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e367e225-5c9f-4342-83bd-db94011e5761",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c72427-f10e-406d-8338-05581ae0dc4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d021ade-a9c8-490c-bcb8-bebe65b945b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f7747e-522a-4d80-9076-e0b2f91a9b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0cc6d22-fceb-405c-9c65-28feed50b253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb806541-5c3c-4c55-ac4e-6cc77e93d740",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb28ee2c-d5a1-4106-bcce-3b3d44c174d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8ddb696-3f2e-409d-8baa-1bd34541626e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b3b72f-eeb3-47cf-b4bb-00f22c77b041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "87d6f022-7ea7-4429-af13-25a37001e296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ba4062-fbcd-409a-8063-846e845cdb2f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "219aefa2-8256-442d-be36-dc58ca5ed817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bca33be1-7716-45c7-8f51-293e67307161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b87c5e-afe9-41c5-8ae3-5d362f5d6ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0050951-d01c-4f42-b62e-b01a1b9cee3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b27a1a-3d8c-4143-9d5a-74677ba8c86a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c9775a-d833-45a6-9836-716f5cff2299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f72a5d-b4b0-4f68-beae-c069c59929f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e3afec-1842-4c29-b5d1-65b48227c614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "eecdb2f2-908c-41b4-b0bc-503fb2f05001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df5ba3c-4c79-493d-8e7d-296aac171fcd",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a372e53-d540-49bb-bd88-3a5392ac8a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2955ea45-d175-4299-9aca-2b754ae628d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30485708-13c1-421b-b78c-ef53989684a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "83f71129-1c4f-49d4-9f7f-8b305656ffab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1654d6-173a-431f-bb44-26c4dabcca5c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b12ea3-829d-47f8-b0ee-bb0d550c42e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89f6c5f8-f5b9-407a-8cd6-d2b3f649c805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d563e811-07ca-4abc-9c25-c3ba8e042429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e3effd6-b6cc-4569-bfe0-ead8f1c39c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad33131d-e545-4607-8956-a04a615dcc55",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "904181d4-a5d6-4c3a-aed3-e66c34012bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1e4cb57-69bf-45b1-a68c-1f42a22378d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f66c42-bd05-48b2-b562-dec4ff0cc2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "66e95858-c09b-4d80-8228-4fe388d0d007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6243ebd7-1f77-4a78-aca1-6479bdef6d8d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff99c032-8692-45d3-9c65-3110ff1b5c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf0f2b8d-ab50-4fc8-99e5-4af79330149e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985c330e-ab9b-453f-94a9-6eb25db3a288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed9ced0b-b4fb-4a95-8e89-50ebd722ac4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39183250-4d34-4f0a-9780-98ffbfe7ca22",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95aa9bed-b47b-47d3-90cc-aacf994257c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28527766-b245-4866-97c3-7b3468c5b7d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30719b6d-d194-470f-bd50-51e21c2efcf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "73389354-055e-4232-a4e7-f4d01f04ef3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de755763-6b03-4914-b806-b3ee69818d25",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc03ce7-2087-4009-aaef-0eb4041ae49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "784b08bf-9fce-4abb-a4c5-75212f0659af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2afcaefc-831f-4510-be64-cb9ba818b7ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad5e918-8fe8-4b59-9430-1ef179600e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9d340c-d3be-426c-849f-48d29ee44f06",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "103bd0d2-076b-4899-9a68-c3479c9df886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6736342-49a2-4353-8526-a2f529aa2b0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ab8092-3eff-48a8-bfe9-be2ed37d3c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f94e171f-79b7-477e-bdd0-a1b5b469f94d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a472a07-e829-4243-a323-37c0ff2365f9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7bf2a2-2433-4535-8d4d-0275330ff622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "070efbb4-963e-4d27-8a6a-40929a8c9f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f73f4e5-3c71-4519-a9ef-2b1e63788e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbd0ffb4-1f58-4326-8293-10fb22745f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c3115d-a1d5-45de-a248-80d48387c3b5",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d39bcbf-fba2-4c7a-9404-1306d48448b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1b4528e-1ea6-4e09-afe0-5b21f718f790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74eae6af-0ee0-4ffa-ad9e-f9823ffba3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f7fd6c3-3b21-4507-af87-7c8ee71be864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa131ba-992a-403e-b864-5fe323e4f5db",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ccafdb2-399e-4259-a88a-7a0f1af7ab35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35f8d2aa-1a3c-4d51-aa48-2a45669d4f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "836a2c59-7d9d-42fc-b78c-80777c131296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef3ddc3d-2c44-4682-a7cc-232f234c4561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9dfeb8e-1f61-4d5b-b5dc-7243d352dd3a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a1643e-9b09-4945-96e2-c5dd0eca6c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "118a6423-896b-4d0b-b9a5-a24ccd1aee89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216640eb-156e-4584-8ba6-502300d27ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80a7108f-83c1-4fa1-934e-cdb356e8a1dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79467ac-c4d9-4b24-a1de-6f3e9996dbc6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace30f2c-3d68-4a68-8473-d98d30e7de98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ffbdae3-3f5a-4cfb-8e13-8a271c5c3af8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11f625d-3188-47d9-bae0-ae9bfea2545b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "725d0b03-35c9-4787-98d5-e2c686ba15e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b868b22f-3575-49b1-b6fd-07383583ef32",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf013e8-4521-4fa2-96fb-12c3ded48b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76b163ba-15f6-40bc-8a87-0567494a1a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67865905-3868-435f-8a68-31fd3e1db03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eb1e65aa-609a-4d75-9bb6-797d4b24ca64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eedaa10b-7c42-4572-a563-194a851c1eca",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68bda5b-2311-4939-b96a-d8c580df4a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85e5573f-b9ad-45b4-ace1-8e2942a948f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1459691e-28e3-4997-8b38-720067accebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "211bf29b-1659-48d2-8afb-17f56d7030bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92e3c59-e1ec-4f66-a49a-f950fb74eee7",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "972d6b89-2570-4b7e-b439-c166441b511e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f8741a3-a131-4d03-adca-f715c9552247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a119577a-c27d-4a75-8c7d-380044cd8b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bddba48-c0e8-4745-9297-e27af5ac9927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f4e4c5-c2b5-4975-9740-8c479a3819e5",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a335e47-230c-48b7-9f36-4a212b71ddda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1896683-9177-4a46-bd2b-f32f6b88b8c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c90943-44e3-4abc-b5bd-09745cbcbf7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf94b3f8-55a3-4599-b0d0-93d9c4e15a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da2f5bc7-d122-4542-8804-2312f27b7dec",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f009ffe2-cc81-4374-b6c5-76b05035f45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7ca1c66-302c-4f3b-891e-fc69270523e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814eb03c-e3f6-4233-b4e1-667b6fc45778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f21c5a0f-009f-4017-8594-8dfe3ceaddae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046036b9-a9cb-4382-8ad3-ffb4a12ae3d6",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef5ae4a-f9ed-4a82-9784-5de387fd2388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6d90bf9-cc53-4631-8bb9-df61dca7dc6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef5d24f-4beb-4077-88ec-e68991c57726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bc1af27-b702-4c36-a428-c840e5448640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb85a468-ba2a-4376-8b25-dd66f242d5ad",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9148ebc1-f148-4e24-848d-12e85e2499d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73d3469d-2588-438b-a4bc-58c4c3321822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2415d7-3a1c-4ed1-9598-db1a24c02784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a3dd4d54-3660-4646-9712-f4a1a37dabcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd7c66a-de8e-4104-af49-468749824710",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2855a4d-d442-46f2-bd37-8d047c228f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59dde0db-36e7-4444-885f-7e2a4533ffcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5154dd03-c00e-440a-9291-d2d90ae83abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb37f88-6522-4814-a956-696bf5a6df2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a1b862-15b9-4ec3-ae57-8c7e5745a423",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cbdae69-fe29-49ee-a5de-0507fc09f51b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edb706a3-22be-4b0b-b55a-2e3824976b47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e76cb1-560d-48ed-8385-87e17a292ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fce5e8d0-cd5a-4879-b141-f04c78827978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb76d73-969a-449b-918c-55fc672b4ff4",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce8518a2-d689-4f2a-8a79-0430081d0917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b2bbedd-1b15-438c-8108-add31bf78433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7230663-de89-4035-a029-1b3bb5709f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "de6d5abe-bf02-4872-8514-1d4c717dfb83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9dcbfc-02c1-485c-9d82-510e547d1068",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "587a0522-2622-4c2d-b468-148051cb66cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d7a070f-2bb0-435d-b8b6-43653f074c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855793ae-0d2d-4196-910b-e523338e4051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "131c8c23-9365-47a2-8a48-e90307396ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c9509d-9579-4f21-b7af-9522c35cebb7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e363d718-3dad-45d4-a528-f5dc59a0d119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59a82f7e-367c-4b3e-82a8-563ce6329a4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f7d971-9822-41da-912f-a7f1d249d001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "90db707e-f47f-4344-b838-f531a4f098e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c35078-f4fe-44c6-866f-939354cd9ed4",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a610446b-6e5a-4a4b-abb7-f1b496b2bc7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fd8b6b2-d9d1-4a1d-a520-19ad2052c8fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9099f025-0127-4e6e-bf7f-5babb0e17746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c274e64f-64f9-438d-a1fa-0ed3326bc1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b01cb8-0077-41eb-866e-e8d3e854ad01",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2149557b-d169-49a6-aac2-086d318d75f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e2199fb-1536-451e-8276-e3e9779dcdad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edee7bad-204d-4936-9d68-0ba3f587dd75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c58d64e-e9a4-4cbe-8015-4dfff499017c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016ba2a7-1407-4b1e-af3e-b63ceab6f41a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9ab48f-08b9-4d72-807e-659dd23b0edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "661aa647-d0e3-49f2-96b3-5bec9a96ee5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5674642-eb1c-4a72-a491-f5d15851c9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c9b7f7f-984c-45c5-9bc2-95cc4f2f5905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52381965-8de3-4c63-84cb-56a0c76e726d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db7bf7e-4cbd-47e7-a64e-2839552d1f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd6d1387-607a-41e5-963d-1cd09d3d0738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2286295-65c6-45be-a871-d5faa49dfdd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a2a8ded-7199-40c8-92f7-5cf151a8b6e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d404ac-929b-45e8-bd52-096f1b4e3ee0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1b0b27-8255-41bd-9b42-74ac4ef748f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00c86b88-f386-4792-8048-c82af197b047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88bf6d70-c94b-4a4c-ab1d-da10f4719775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0bcee188-1493-4767-ad2e-ce0347517091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e16ea0-91fe-4152-ae47-17189354a467",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6615932f-84e2-4e92-9302-0ade393ec604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef49e76a-1541-439d-9207-05c1b23ac250"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "581d07f4-cb5d-41f3-9415-d8efc388732a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae09dc13-c68f-431e-81a2-c1276ba8ae3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f44221-008e-4445-af58-ac053cb798c1",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce68189-bbc0-4b25-b3c5-fc4a52429bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d9373a9e-812e-4d5f-a624-77530a870896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "742cd7ee-869e-4bb2-8a8c-ce93c601fe97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d11e3743-dfd6-46d4-90f8-1bdb9e2c450f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c0f3c141-3c4d-4da0-875c-32e94c4c84ef",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "13fdb9b4-fe1e-4816-b90d-0423a60fbf3d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea9319f9-db84-4c6a-9298-d5a4a6a59cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d9870518-2a97-492e-a95d-dd07833ccd58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df54fa35-218a-45bd-a536-94a99463a6a2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52f3557b-e5fd-474d-9377-a617ab7c0c55"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fad518c9-056a-4f52-8124-8aa0f1c24727",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b9afcd5-b10a-4382-a34a-e926136cd23f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "06af3384-23d1-484c-bdc3-e860e957abdf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ecf93640-582a-44e7-84ef-fa0c095c199a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ba2ecc95-07a0-4d7a-ba1c-bcb9c0b54bae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0bcfd151-e1f0-4035-9af4-7733f80004b2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d6ec60da-da45-45c8-954b-39b660b96039",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5b9f1438-5f50-46c0-b7c1-2a665b3529fd"
                }
              }
            ]
          },
          {
            "id": "293a45c3-34da-48d3-9e56-d2441270bc0f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d25ac766-1a11-4f9d-8cfe-dffdf731b290",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "d9138ecd-bb4b-4e21-9da5-f553b2fdfde3",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f617ba74-ed3f-4075-b2f2-097605c955d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "57d94721-75a9-4317-838d-f394c3025d4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dcab3a8-058d-40cc-93c3-d672f4823b2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa29a061-1f75-41b2-85dd-c46bca2a7fab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4294e362-36eb-450c-af31-15f1ca7b27b7",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5824c45-6c6e-4926-b956-9b82de63712a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a6997a73-134c-461e-966f-83a770391834"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e23195d5-df88-48e8-8615-089d8d1b4a1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8bc56f5f-cdda-4c95-b046-4b4dd2b53f0a"
                    }
                  }
                ]
              },
              {
                "id": "9acf9e1c-a87c-44bf-8d24-a2d687bb3dd0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1576e6b5-936d-4053-8142-4429fb58edd3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e3cfda49-b6f4-4eb5-9ebb-cdea48d7752f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3543ec12-0f0a-4b58-a442-3d383580503a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c9c6bedf-077c-4a92-b21f-6cead51c2fee"
                    }
                  }
                ]
              },
              {
                "id": "b4e5ef4e-8065-400b-a8c8-f3cdf92feea9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "04e6d566-58fb-404c-8fc8-6e546e6f5c7e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ac4dc4b6-ce3d-470f-9141-9cd0d6385092"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef728666-b2d6-4de7-a82d-bcd060c39619",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f93d41fe-de98-49c8-851d-58fca5a43956"
                    }
                  }
                ]
              },
              {
                "id": "27af47c0-22b5-47c7-bb95-e11d939300f6",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a3d427a-afc7-48bb-90c1-c6e3d0e20083",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6463a109-9aa8-4c52-9e2d-a17c93efb69f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f25c3de6-bc78-4c52-a9f7-ef5f8651a398",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f3ed5100-cabc-4e3a-8c41-06904d0da181"
                    }
                  }
                ]
              },
              {
                "id": "f199230d-fe9b-4caf-ab35-e20ce31a14ee",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a137a33-c5fe-40f0-9d72-4b0488e67e1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "90591edd-64ff-4aa5-be12-77ccd390ad54"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53f73cc3-a39a-4ea2-a147-f0e34f1f0159",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "06935d7f-ff9d-4ad6-bf82-d1ad5fd492d0"
                    }
                  }
                ]
              },
              {
                "id": "125b2757-5b02-49e2-8b60-282687fc5880",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc127a11-7ab7-4530-a201-a8dee070122a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a72773f-8810-40c2-b58d-779b04be7fb1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c4c1b48-0b50-4a61-80ce-0c0815d0e553",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2ecfe8c4-9fa6-40a3-85ca-9023e5898e0d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d6c4c09e-d645-4438-a29e-ad1ba1849ffe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c6e2dfe6-0f62-4de1-96b1-1f1ab4e9c4bf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1bb8bb5f-d8b3-4c68-8f6c-32e53e94d45c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "13dc211b-dc34-46be-87b3-acf32715c4f5"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da92feaf-27fa-407e-bb18-30c9585fa50c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ab4fcdee-ce1e-4478-821d-6a468f369c9d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe6b4ecd-5fb5-4278-bfd5-7c51a8c11f3f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f81b36f4-b21c-4c84-8bfb-693f9d2b459a"
            }
          }
        ]
      },
      {
        "id": "bfa04aaa-5eb8-4a1f-9199-8ac6b25359d0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "fa0119ea-c622-44fe-9b70-dfbb72870ae5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eaa65d93-8a90-4277-b0bc-b52e1cc9d1eb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4033578f-6a5e-482e-a9d4-1627e364c200",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4560ecf3-55b1-41c1-ae3a-85512f87e746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323e8b12-663b-42a9-bcee-ca35b981265d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b80f05-69e5-43f8-9f0a-87a7a16e1885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a9ec436-fdc9-469d-bdb7-91c347406966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5862fb11-9cc3-48de-b0d5-1738e154d53c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29a3a37-4322-4af0-bad9-0f9891f6e59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abc4463c-1d18-4b74-a015-9782eb07489d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957ac1a7-4709-4ead-a5fb-2ea759b38384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "104161c2-6d48-43d7-bb9f-2c143fda5e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a095d1d5-6268-4be8-b947-43966f52fcfb",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db61fff-e069-43ae-ba9b-436e76cbc23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de4e32d4-82f5-4893-b43a-29a37367f5f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef03143-7be7-4769-87f7-de4b76f75ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6982de2-4c37-4937-8a89-934d5bc46b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee4e079-f27c-4eb5-b45a-d701b0746c9d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a123f588-05c8-45f7-a677-9ef5e28ade36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e1e1777-d61f-4290-b76b-f40d4dc337e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7f1ee4-bbc4-4f34-8773-ba7d7de11998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "64ba783d-7dde-4d58-bf0d-c46fd0328364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d6b090-f955-47e2-b214-5eb5bf526f6b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebdb7a61-70f3-478c-817b-fc2975a2a754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f272eb4-0ca6-419c-b2e7-856408379e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c0cd04-b465-482c-aa00-234bacdd8a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13a64238-babb-4a9e-b831-ffac5cc09b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4dc553-8fa9-481b-8625-a31261262b6d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ba2b19-0cd6-4383-9561-003c72e25a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6bf72c8-1273-494b-85b9-5e3a4a4c477f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6a3fcb-987e-4820-9c50-49a934590196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f83e6778-2582-4e5a-adeb-410d0bc85e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc9c09b-21f9-403b-aae6-45aae94e99c8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f2c5e23-e73e-420a-8934-8bd33e336e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5558927-7a06-41a8-8185-1f920c7617a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3cb9ee9-604a-43af-b509-5865ca9f3cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a6ad3d1-1eb1-4865-8281-8a5539d1b297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f3b74d-ae76-422e-a911-60dddd301ab7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38522a0d-ad6b-4d3a-a671-1d287de0beb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2235e87d-77fc-4017-9e96-3d9213672d27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa0fb5f9-2065-445a-81e3-892e94c3437f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "acfcb8fb-4a30-42d9-997f-b5d8bdddfed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed51d789-58f0-4423-be6b-3c588d288fe0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f1e572-97a5-44be-aa15-379c8496298d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfe0f7a6-0a36-4079-86f8-4279675c2035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb117045-6c2d-4f29-a291-294b13307ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8244346-f306-4dfe-8a7f-bfd6958c1b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1283aa1e-a2a7-48f8-b36d-4ccb342180aa",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5ecf0d-8898-41bd-a182-cb2ddac18c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f264e83b-96be-456a-a925-86e455b606aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd843a4-ec28-4647-9d6e-2b69759a9dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3aebeb4e-7219-48b6-bd0c-bb2e64412c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f8853cb-b674-48bb-8d6a-79f198d456dc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4525918-32dd-4786-aac1-bd7bb0ac629f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35dd05f4-c679-4cac-8e7f-bf4c70a6674a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e58cd7-b169-4d7c-af75-832a2d9317bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b904fcc0-81b0-47b9-a7b3-945d55eb8995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7265a721-a927-499d-9a93-cb93168c2569",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82318508-079d-45cd-9466-03fb8c2843c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f54d824-239b-4094-8961-c4dacba32c3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dfcfa7c-2eeb-407e-983c-b366fe38cc3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0aaca3a8-3560-4c82-8a57-31ba5939da5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa1c052-21fd-4ce5-83b9-6cb75536c35f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c67b84-5e15-4056-b827-ce626b40df9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af05c5ac-3a0b-48b3-bf35-d97d23665331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2571c1-104b-4fda-98db-0bb0cc7aa4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5098ea68-07b6-4e7c-a96a-e930655664a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb099c20-2ef4-4717-9582-6c00f3f2953b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de81e366-0ce0-43d6-8c68-07848d93a8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "343abf2b-8f7e-4c79-8b48-d4afa4d45111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e042157f-43df-4b59-bd2e-813320493ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a0ef278-f8ff-41eb-a785-cce36e318939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ec87e0-d851-4780-bdf6-6f6257bb9b14",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f8cb44-94c2-40e9-b7b4-293bd0249e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1705c54c-f903-4dbb-b106-0a83bbeb8bb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d121456-3b87-436c-82a5-985aab9c7333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca305d27-ca39-453f-ba6e-f30971280cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7356d8-8a46-4b44-a28e-dbe7aeda721a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ac7902-70ce-41e2-870d-d6bd58215193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "050ded2e-b89a-40c9-84d5-e487a0d74c7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44930e7c-03c8-498a-b9f9-226176e93e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ce5f587-c8ed-4cfc-9454-2d649f617fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f23611f-b5f5-42ac-9b30-5ef01dc7839f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a459357-cd0d-4b50-a6dd-df260dcdaae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f96b52ae-b870-4494-80c2-e80b595b79ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50641b74-f9f5-4632-a0bf-4ff042651c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "04789c5b-f5e2-4bd0-9686-20bf553ebffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3a97ea-8283-489e-8aca-bbcca329fbfa",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77eaa65d-da8c-4bb9-9425-9d9172f2a847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3b22c4b-e9a6-4102-b075-c8039cf508fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7502c12c-e8db-4cf2-ab5d-2bb57feb1707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3765a4d5-4d3d-4b28-8e77-fe74e1d0fd7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bac970c-b6ab-417a-81e6-b277ad8be850",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b8e15e-f0fb-4cb9-9a07-53b3a95acb18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c35bbd5-b0f4-483f-8fad-77385ea6a4b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c0a82c-515e-41d8-a195-3d210092c897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9ea3dc5-437b-49c1-bf75-cfff5e6fd5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13f9939-9845-451b-b7e6-49f13f859463",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85133353-0115-4c10-be83-e31afd223ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e019dc05-955b-49f0-8c72-752686a63d13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ebca810-8078-4c81-8346-4aca526d3e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "467c3257-4105-4fae-b8d3-d59c28a5f238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59034084-1b77-4e3d-a422-c4ed7b63532d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79ba5b6-ad03-4624-ab26-d3e5c003a72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f90ab14b-1b26-45f0-afca-512812b7c3d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d811175e-802f-4c06-b938-f1638209e92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f67905c-c598-48e4-8d42-e2dc1b6df014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c188c190-219c-42e9-a8ff-a5c58201ba18",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea58c592-3188-4174-b140-85d2d817c4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984c83db-aa5f-4956-bebf-8792b0bf9d85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b81776-cbdb-4c0d-9da9-3e64cf447da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02dc3ce9-0af2-4e02-8903-966a03defc9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae36647-0118-4948-80c5-5669d964aa62",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee68057-474f-4c05-934d-b8efcc6464e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd3f5fd2-6fae-4390-bf66-c41dfaf26fac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266e7f0e-ee8c-4550-b6cb-1742e29f4631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9415c8da-d6d7-4cd4-b48b-9949bafaff3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47661439-cb2a-401f-9c9d-fb05f9e9678d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8564fd-a17e-46c5-bff6-15cd57a77912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0685e5fb-0e7c-4164-b65d-55b5a94ec602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162d3164-c069-421a-81a0-d289d8554c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74fd3752-1e2a-4ca5-8080-98b23930975c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d721e72f-f576-4204-9ecb-593b9e2e0e1d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ddbf7b-6129-49be-b857-9576972db5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "692a79b0-1914-435c-825c-1b97593156f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e03b28-0665-4e3d-be21-3765fe15d794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35e841d6-13e4-4fa9-beff-dd20d9aa65b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d7c744-3243-4728-899e-4d325ca243ba",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d9b4c2-0b6c-4659-b866-1e2fb1dc836f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e0cee1c-ef31-4f06-8d94-253803fad3ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66e2f34-13d6-4bf3-9562-a7cfcd513dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89bf8f39-5e0e-47de-a18e-0365d3af8588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb9e6b4-1995-438d-8262-2bd985067256",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6f1f27-4543-48c0-b554-d32f0cf36bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ad6cec8-776b-4cf9-bb69-7f2aa97aefe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f5dfc9-94f7-4324-9a63-acf1c58d5991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bece5e6-673d-4080-86a5-085da2198ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1acd8c46-80ae-49af-ab18-d0088abfbef8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8759df2-cb65-4be2-a251-b358defbf5a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e621357-7aa1-4159-a56a-8f775785e6c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ac19a9-e3d2-46d9-a83d-e882ddaa1597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f516c899-fdc7-480c-9cef-79e78b645bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f06179-26b4-4b1b-a2ea-0317c982830a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2747b8f-1c0d-4afd-be9d-25c6736e81de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2614e243-2ffd-4fcd-bb28-cccf8d95c4ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3335781e-78b8-47fe-8ae4-284e563f9202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "101bc46f-ebae-4f97-a70c-25e395b049d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab0bd39-c451-4fed-8346-631974e23567",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f8c548-5e84-42c6-baa5-7385d9b01b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "779f0537-9710-4adc-9788-505d1375e8b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b630f85b-7a44-4a70-b247-135aa8090b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9349263b-b37e-493b-8c72-82e2581f07ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd2e626-cd4d-4e3c-976c-3a9c6bf96d76",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b34e546-4641-4603-98cc-1ce507047631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07246c4f-6aa9-40a0-8b89-2f2b19a2e07d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a35866-63e7-4b57-8ef2-93fc66691439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be2ccef8-4bae-4034-aa69-11b58ab3e340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb2f42b5-f484-4844-9df1-e1f6d513b4d2",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac1a685-3302-453b-a7c5-03f9d834f714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf411d69-ef48-4ae4-a6a2-3e8ad7b84999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be0fcdc6-c88c-41dc-bcdb-9b9b806bc4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26fd470e-7262-41e6-a5e6-41188765fe94"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6f6ca40e-6326-4e66-82c8-e19aa4553f69",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "55cfdec5-f2b6-44aa-ba9d-f1c7ee49781b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e2b538c-275f-4999-91eb-8cb8cb066656",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "34198237-a038-432e-9d1d-0cc4611be213"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99e22e8-d54f-4e25-8a9c-360199f9a6f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2b62175-4bfb-45bc-9e3b-c5ab42904313"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f3c66b6-54e3-4023-95e9-8b54dbad5a2d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "230dce24-6bf4-4703-942b-958b4e90cb4d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "36d2be95-fafb-463b-b701-809d43d00490",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61f2972f-164c-45b9-8b67-890434df9582"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "99f33ed8-e398-4edf-9641-bab97af5c3f9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "19c29bdd-6a8c-4446-81f7-056ebd5501c9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "47e5d372-deb9-418f-960e-6a758122736f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d342756b-4e37-470a-914c-2ae66021f8d0"
            }
          }
        ]
      },
      {
        "id": "86709b56-f5cc-437d-86f0-48c3025f5728",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "844d3e6d-460b-40db-bdbb-a942dffb9b72",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e234a297-b995-4477-a9cd-0c45044aaee4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "20cc8537-ccae-4a09-8b68-7aae34b96603",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "341e3853-6e5f-46af-aeea-87978088ce84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee24ca8-d9dd-4991-b73c-a5dc859b3073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17fca9b-1716-4224-b5cd-c9c0a54078aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "675f359a-d978-433f-a040-eb5fce7588db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be05745-d8c8-4611-840d-dccf55f7fff7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad688929-cf8b-4fb8-b6f2-3d2eee4e393f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f34556c-05dc-47a7-a8aa-5d5af8f3191f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7b9ff8-152c-4512-ba6f-85fbdbb55717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c1c68f2-6f7e-44df-9320-a9c871ca2075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737dfb17-83f8-478e-ad32-bb1d2884c3b2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4785266b-793f-4ff1-b3ff-5d01fff061b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f54f637f-f1b5-4470-8d3e-6abebce25c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6ace3e-c038-4b36-8887-1aa7a2a93f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "798bb13b-1cae-4e36-bc81-8087c62201e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d410a440-b34f-4515-ab9d-7ccca4e8efc7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b9ea58-e9b8-4e9e-83b0-7052a26e121c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0418d748-b6fb-4425-ab52-92b6cc822e98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728346fd-e81e-4a20-b030-cc30c9026748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0caa5b62-3bcd-4855-b68c-67a94cd816de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6554dd0-4cad-465c-b7a1-00ed97829c6b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79dccde5-2793-466f-87c2-6f36b3f11414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6d48bb9-400f-4584-bab2-5afeca0613f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e52cdc8-d1b1-409b-9142-aaba400e6453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3556cf28-b99b-4dea-8efd-225c6fbda66b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94adeba6-f0c4-408b-87e8-6a29ff822bc5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28685a0-f877-4130-8e16-c7c9d729e051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45664b0d-d89e-4761-b973-a5af3a7dcac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5311150-0dee-4303-9e0b-ec4e3b676495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e6db10c-d622-4f45-bdd2-ea9cb8231f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e8e818-0abe-4e2c-91e5-04ca4c776481",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de775bc-7a5a-4238-8bf2-c38269a7912d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aa6d45c-539c-4a97-ad3b-00d3c146bc23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1521a9f6-e2b1-48d1-b2d0-969df5463fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c745b1b-14af-4263-8380-d9bbd0f9330d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88bb1932-56ad-4621-a22c-0ccb3a4c56da",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b547166c-c121-4e00-b2a9-31a16855e452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b894bba7-8f06-48e9-97a2-fca99b94e39e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a012454-f4f5-4d28-be5b-5ffc8ab93b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78b5aacb-66f4-48ad-b718-1a93d65bbdf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f37517a-1a29-45fe-b0df-778917b8e739",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ec7656-c32a-4d9e-bf0e-0c93e2e9c11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c59dc6d-c4df-468c-8217-5403c0f7d5e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3d550d-5e62-4d74-a171-024a4438691b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "21f3a9c6-941c-46b1-a667-8edfdf13e1bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1db58f4-8bfc-425e-876c-11f7b3d43da3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff84e64b-f4c5-4632-a7ca-b92caacaf075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a6ce423-60f3-4e83-ae07-e5ab3efb1029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "811a8a08-d583-48e5-9b1b-fcb2d589edb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf8f3e04-4184-4792-abdc-62faae7c26ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512baecf-6b66-4882-bea9-e5ca217fd721",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e1e437-df49-461b-b18f-453a6b0dc94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acc87c4a-5bd4-4bf8-90a6-2ef619485482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a923ec43-d00c-48fe-a2ea-3e6e14125283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f347e054-04a0-4402-bced-e8166a06cf52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b84297-125b-447e-9fd2-03a1756b1129",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b321b87-55f9-4872-af31-51f0ab0e0a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc6f76e-6bc3-4ea6-90bc-020acff0c41d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d94a6994-66c0-481a-a07d-b287f2c32c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1d7311b2-2ce7-415a-ae42-de560f26ade3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feba16b9-aba2-44e0-809c-d07e1218be34",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d396b9e6-6bee-41b0-9e70-ab1fa1f48b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fe71207-5d68-490d-9d4e-9c7e7fc1dc1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb39bb4-d748-4ea5-b0c2-91be3260f735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f498f12-a130-4fc6-92e6-d0ba383174f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ff90bb-2ccb-4742-a645-debf3af60703",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d267a26-9a8d-4489-8fbf-cdd8c91e313b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b2786ff-bfb1-4d8d-be24-857b5243aa63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa8612e-f6d2-42fc-a682-381a5322647e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "60f6f20e-25ee-43ad-a9d6-5a12bfa467f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "196fa3cd-acce-469e-9913-9759e1cb9733",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21e8812-61e5-4464-a68e-ba14197bdb8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae057e3-5ed0-4c45-81c3-86dbde872d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1adcc4be-0393-444d-9ae3-f71fead5d722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "760ccc47-434a-4044-982b-2a69e2ec23e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1154842-5f5d-43c8-85b0-2563597c1206",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bde1da5-1c62-4ef5-8dba-ceb44b145816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c94f748e-dc8e-4d9f-87b2-a07ab05e66bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2951e4f-8442-4705-9ab0-09d4aeb85692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a084cc42-5884-42cb-8e74-e23e47e3863b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f45b471-a528-4b94-9d26-a1d171e96df4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb194ae-1dec-4dfb-9337-3d9895d26a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "555dccfa-1912-4b43-a4f4-9fe41c6dc748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9536a454-9582-4f49-925b-b5358858d3ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "317ebf18-02c6-40ad-ad2c-bb5a690856dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276e540b-3f06-41b6-93b9-a6de142f0ccb",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef662782-4519-4a13-9209-74401142b729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d133db8-5e11-4a88-9afc-ae187b59d35d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da2ec97-4dc6-4eb2-9f4e-7895f2858371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "db429d92-6424-4682-84a9-4d2c54679bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea244d74-dd82-476b-bddb-46bdb24f1c32",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f0c163-610a-45a8-b5b9-59a11599af20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "872fca5a-8dad-44af-a910-b56a6f885fea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b660095e-01de-4813-9756-c0f979d572f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5013804d-4c06-448f-813f-385d4038b5d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a573fe89-73ff-4dc9-ba1f-41c3bcbaa630",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3110213f-510a-4dc6-b235-6c31383984ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfa86e14-80d2-45ac-ac49-6ca33eb64039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1fafac-3727-494b-9841-bc353e747e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4268560-ea64-47c2-8366-7ddf8a8974d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d4d085-a491-4cc6-b1c4-f36f2372fb4b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7decd628-5479-4d14-9943-a779bd9d297d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a42d61-df2c-4ff5-b029-594670bc5583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401f3427-f5b4-46ab-8286-242753e8f998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "704f3fc9-8743-4f73-9a6f-129e6ad2a985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4adf71b-6892-42ff-8eb5-8e2feba8b54f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "243359ed-e7c0-4e6b-a7e2-2c45b457bc3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "239ae5e7-41e4-46ea-bc6f-6efe0ba8b7ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb081db-1930-48f5-ac7d-3efa2e3cf36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d38cd32d-5921-4681-9723-7f4deafa79d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d620ab-aa5e-414e-8a9a-8d20d4b590a8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b251688f-ac6d-4113-afe4-6f35e09e3b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d8ba7f7-0344-40ff-bb3c-2e1f5a7bd164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32172015-2a81-4f75-bd5e-53b5615d38c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1673b5be-73dd-4abe-a4e2-8914e8de06e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091fceb6-c30d-453c-954e-88bc0aa25b4b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e111ba-bf9a-49a8-ad07-f1ef85af005f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a546311-0e16-45af-a105-f1caf7e6ac57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec840e4c-d811-4ac4-8db2-c630c4a4e690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14cdcc9a-9490-48d1-884b-901370c28559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a4bd73d-3162-4a16-a4d1-0f0689603b21",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9091ead2-6d7a-4b23-887a-93b917fbb0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "771f7618-b9f9-4b02-b07b-d9486c9e634b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae0cba0-e934-46ad-b481-6b9f2b4ffee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e4e3b5b-675a-4bee-b415-34e2c3ac0b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52404ba3-99be-4d68-9c04-bae7ce4e3be6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ce1cfb-e9a8-4a05-99d5-06937ba1a679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba42a7bb-ac2e-4dda-bf0e-65773cec7007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3dfa8ae-808b-43b5-bc3a-540bcf6056bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf1fb7fb-9919-4871-bd3d-ce0e4e520db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df03d7a2-f8c8-457b-91b3-6870647aeb88",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05c548e-8d05-4951-9ee1-734d7deee9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3b10af8-e593-4e7b-a6b7-67bd755bdbd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f3e976-aa34-44e8-a974-21726bc418ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b8553c5-4abc-4851-982c-5ae7f7f03a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a61018c8-f807-4083-8bbd-078c1b90b755",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae7ba6e-7a63-480c-8d7c-45ac69ccc9d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5949bf7d-14c2-4c55-95d7-494c5ee4ff2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8215f0f-29a0-4f8b-a0c8-8e830f5ed945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9e45421-fa6a-473a-86d6-fc6030e75129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0fb1f7-53cd-48b8-88a9-70c554e37bad",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66922741-7cfc-485c-92fa-984ab9a7bb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6e140d8-28fc-4f3e-865a-24135cae858a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c7d0f5-3975-4dc4-a4e2-a506e30932df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d337b98-01b8-41e2-8121-cfaa6039a607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717a2f73-1f6a-4392-abb3-29fc3775fb1d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9ca63e-2a20-4f36-99c0-efe6ec30ba62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e66cb161-d596-4938-a107-f36f4dd863b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8f954f-5ef4-4a61-a13d-4f536a5c5487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65b578f6-c037-4bb0-a988-1302a659251e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1121479e-66c2-4efa-954d-db67b09c6a29",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e7c9cc-7ed7-47ca-9f95-1770fe88a079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d298a44-bfc3-4580-9076-d04151ae785c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "625f18ca-0e66-40d7-94c7-f8d8fd14c1bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d452154-dc28-426c-a7b4-bfd1d097eeb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b7c9a6-d7b4-4dfe-b008-27972e9ebfce",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c4de8d-d549-48c5-b55c-90c96f92491c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9224f280-2efc-42d5-b18d-634410af1b17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e905d48-5995-40fc-89b8-9c83fd3286ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aaf620bb-20e9-41cf-9d05-cdbae83b47fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07a5cd5-f062-483c-9f79-0566b3136463",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba9bb0c-cbf1-4052-9b50-140b8208668d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08263fb9-5911-4d1b-bc0a-299dd1e61837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75fe71bb-0148-4f88-a9c2-146fe4e45a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30159a3b-d1ee-4671-ba10-ba7dc0eba9a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a960d2be-b546-420e-b142-64e7e829a1c1",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5ba18b-6f64-490d-8147-e429debe66ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cb488fa-5c66-4873-88db-271a4a29c601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d835fa2-1854-4864-af6c-b557cee81976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9587d173-639d-4176-ab80-2d24f94c688c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e6157e-934c-44ac-aa77-37414bd8c616",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a87c4ec-3ec1-45f5-aa03-bfd71e36cd55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e53cc6b-c9a0-43f6-ae4b-c2711408288f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01aa0599-b242-407a-9418-f968c2247fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb1132b3-8b26-4186-917e-4586951364e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f9ab8b-26d7-4890-8959-c7de157546cf",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9111a346-fe89-4fe1-baac-201f27f8c7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db6e0661-fd1c-478e-92ba-f543ce7bfa4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec86927-c5a6-4106-89e5-0257bf04859f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f110689a-b3bb-43cc-9c8f-c5aac487f5a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8dcfc5-7721-4c17-9423-656eb934141d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6758d409-ad22-468d-850b-2558d680c610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e37782dd-f60f-4caa-ac34-730efc1827cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d186554-7a62-44fd-8de2-bbfa6e6b1b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a4fe6ee-9035-410f-bc63-5aa5e19dec49"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6ee95ea1-e74b-4619-bb36-24b3d3e16470",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "784f2084-f446-4b42-8aba-e19053e109e3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7c6972-ade1-49c7-82cc-ae6812213134",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3b260776-28ee-4562-a17a-2bd7e2511bb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1818fdaa-3923-4988-95c3-980eced26b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd18d2af-2165-45e9-b087-f3bc299b1979"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a75ef8cf-ba57-4b6f-8911-0792c9b58293",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "405a4fe2-5911-46d4-af84-d303ae8e16a2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b3f5c9a-328d-4db9-9aad-4a4242c2b49e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92c13abd-12c8-4ba3-bc22-cb46bfc4a759"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7b0f8b7-7d15-4b88-a938-ecdffdb8cf0b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "079d53b4-9cde-474a-84dd-9c62fef13549"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5585d760-fc20-46c9-a181-58b5ce9e9bce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "366319e8-33d8-4ba8-87e6-aa420907b8ac"
            }
          }
        ]
      },
      {
        "id": "60b7d8ab-e869-4eeb-8199-30b74a70024b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "64e695d0-bb31-4976-aadc-09c11e6a8773",
            "name": "Negative Testing",
            "item": [
              {
                "id": "40227761-302b-4a7d-a35a-f3de92287de5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "288a5ed6-6dc5-493c-be9d-e8874facd7aa",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b4f0d8-609a-428b-8b3a-0f8f6986dd1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "063cb58a-7e8d-4a7a-987c-81d2acb3abe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59d4218-5017-4e33-8ae0-1140397199e5",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f07e8e44-7a3f-46d4-a09c-fdd992c0faeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a50a384b-ba08-43e2-8526-f04a150f646e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4819c8a-703a-4514-a67b-3ecb601a59f2",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24bb955a-6a85-4834-aa77-dd2c21bdfafd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "171c6f4f-84e6-4b44-8930-f3e457698616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b568fbd-8f11-4371-bc4e-5809271f7fbc",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff8ed00-abbb-42c1-bea5-6cd0230c6bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "682c4f04-372f-4492-b7f0-c14d2763e36c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8d1577-590d-47a5-9ecb-085fc83dd3de",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8321d014-f713-4690-97c5-bdc6c3f75ac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8804b847-dad8-4484-b118-b6fd7756672b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "819f6592-65b2-4f04-9f81-7f3cf06a6c78",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1171a788-c7f5-4902-a116-948feec0d681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87efe81e-9a58-42fe-bdef-474233eb00e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eacb8f25-e36a-4f62-9019-94ed3981771a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165bdc62-33cb-434c-9588-29b7eac6a266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "616ffcee-ecc5-4f78-8fa2-2500fda24fdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "372e37fa-e89d-43e8-925b-d1e8faa9227c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16748ad9-c46f-4ffb-9e18-bc2b744c7205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8edb3759-c63b-49fe-b75d-5bf024d6aa88",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7db273-e050-4a04-8db2-6b4530fd1d08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2b73f46-17d4-4f41-aec2-aa40715f5fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64457ec-a67f-404e-b907-cacff62781ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35421291-a0d5-43c3-98b6-42d4c5a2bfd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1c2fd1-7159-4dcd-b43f-4d50bcf97183",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb39c094-a015-4e6f-bf9c-7bae366bcf0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dae8708-270f-463a-9044-873b6ece07b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25836418-a1e4-4b06-902d-d11ab0ae82d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca44c270-9f71-4d57-afc0-b677850e83ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f10001-d7c5-4dc2-8127-d891234e05cc",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa1e7b8-0310-4876-9a2e-8aee64603738",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b141548b-38e1-4a86-ac1f-711edab072da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49623823-b26e-45ed-889e-31f3d904ea54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23faafbd-e3b3-4a94-9f4f-c04ed63b7084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c24d927-2737-4f58-ac09-8d00b4691bac",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e18731e0-bf44-49db-a0c8-c43760fbcb31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe263c16-6d5d-4c1d-bd45-362833f1c877"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d85f65-8641-4928-8265-bf093a5bb4f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7942b07c-1c27-4107-9228-6622cd0771b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fab804f-0b35-4fd8-a1ff-ae65fe2d16a4",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48ff8fd-5557-40aa-94ef-4025ca38171f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba220613-074e-49c3-a10a-946cacd6caf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d57512-6ca7-46e8-8f8d-ea51997d395d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43ab5dc5-c122-40f1-aad8-5a8ed6446eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84244fc4-e71c-4b95-9367-53465c3ede05",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc9047f-6ff3-4adc-9bec-6074d637fb27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76ee9273-fc34-473f-a670-0ddd54db6584"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a760e049-8dca-4c38-aae0-a3ba18feab37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c53f3c23-70d6-46b7-bec3-c4869b117926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c73521-11f5-4e3c-88d7-b7ecef768550",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb71b6d-c706-4e16-a92a-f4f6442a6624",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ecd2a89-57a1-42cc-9577-37326b8acb4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9d0901-a747-43bb-996c-4a3545c0c993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3552620e-0436-43ce-bed3-b5ce597d5137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad8b192-0254-4d77-83ae-a54dde6eb3b7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f923c3-0bf5-41ae-9645-7bea626c241a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5544fa6b-e8d2-4857-a537-0e4057997703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dbf0af1-6ce3-45f3-bfd3-8d558fb2d15c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbbe0d46-5cbf-462d-b6f5-79b166bc29f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74799a97-6715-43ad-aeaf-9ec2132c5405",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31c9e25-8f1b-4457-a1bc-55c5350beb0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2804dd16-fc33-4f85-a308-fe4d967a852c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95373283-7422-4bba-93ac-555b4060fdb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4367ac0-3bbd-4791-9675-daa7061910ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c71afa-2fd8-4647-96d1-3281a6170027",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a393d35-dfab-4891-8fd9-657f3170c475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c666ba91-b768-42cf-bebe-83bb73fd522a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0d84ad-c62c-4d36-8a5f-b4255d7e7801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f2b8ea9-45d0-4c69-bc65-9fa19cd2f40b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "110e1873-bd1b-40c8-9bbb-4b2b26390439",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d95d0a-32b7-4f43-a09a-7a311cafd778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88f63147-9deb-4984-a81a-d81232f223f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f5abcc-7d09-4491-8911-145d2591f79b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "322b1524-b932-42f1-86cf-1878857eb504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "059289bc-11c7-4aea-b060-c73a0edd48c8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7655cf0-32a1-4530-a41a-a0c5566a32a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8552c36-45f7-42a6-b391-bd9df4103a95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eda4374-1d43-4691-9068-005328209a43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a01ca8e-7220-4e43-9d67-dc042ebe64ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ec1896-755e-4d2b-a143-d3fe7dd002e2",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21193007-dae2-493a-a82b-e96b4f5b9469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfe9d1b1-e3e9-4612-8846-31be932ab4f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd056bb-d28c-4ebd-98d7-b547af1a16da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de6c3250-c800-431c-ba07-8870acbcd471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c129b379-0d08-4ecf-880f-41240d51552d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b230ccad-0233-4a47-bbf4-381dee62fe9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ade2708-f1df-4415-a26e-504a6d50e123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92da6d44-39cb-47d7-b054-e82541dd5570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38002623-5910-4416-ae74-e6746149ea7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceaca8f0-f3ce-4c75-962e-e7fc828e2c31",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd34aa7d-e9ae-46be-ac18-b1df2f4d191d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a122936-1124-4707-bdd1-c5cfed2a23cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f94de2f-c242-4212-8224-6b1e5361cfcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cf552aa-d873-4e5a-91f8-17c2cea540c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f8a89f-3d2b-4812-a3c0-a2f68859aa38",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1afaafd4-a0b4-412f-9be5-5173b205bfea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2811053-1882-4036-8a7a-6eb493ee4061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b68b86-0613-4a12-b865-9376d9618eaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0738b24-9bfa-41c1-9b4a-2086548d85f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c91cd3-22da-45da-a6d2-3c65e6a9b9d0",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eedcd8bc-9934-4d66-b492-240f49c602cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f1d2ee8-3543-4d25-a6f5-7587a0c214ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3e1f26-26cf-4c13-a522-37e343df1281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a2d04b7-c3b3-4c08-b2bd-f8797029c45a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164b4b70-d2d9-45d9-8f71-4e96a3bc411b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f75eea2-7fe4-4d82-8036-29f672db1226",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc6606f3-aca4-4d50-a25c-87e411845139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47982430-6b13-41a6-843e-3b46d4a41243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2d40609-3860-4f8e-b431-ed9c541e79d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a3f137-3cf3-4c56-9603-b324eb3995c8",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7d1986-4043-4215-9ece-baa5bbd4c7d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e2aa9d4-d50e-4d48-a043-727a8bedc816"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "883d8d5f-8a69-44c8-9352-8c0022a16ad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d165dd-bbd4-4aef-ba93-1acc029db0ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc50eeb-3ef0-4e5a-bd31-104d8f74110f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c7bb28-92f5-4277-b97c-f1078df5bfdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d2bde98-09d1-4d8e-950f-6fa5b72b7d79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e91440-1156-4a49-aabb-db23d037fb20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "042c0a1c-e889-4624-953d-440eda89fdc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1fcc01-1430-4a50-b8cf-b1afba30751b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb52916d-b33a-4c04-ac6c-7debca638f67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d7ac076-eda2-40c5-b831-1a88d2342fa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "421514f9-047e-4e5a-98ab-80fd58b8fdc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "796eb978-f3e7-4030-be6a-8860c60f32a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c79d9e-0d1a-4845-b1b5-163974121c03",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a53d8f1-5941-42f9-96cf-700009a0847b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "319c7c33-bfb8-4105-a261-bdb4e741c1f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db8355c-9a6c-40f2-8d4a-e60d27bef441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcae77b1-fc3c-41c1-9fa2-5d343a212766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6d2c7b-f280-436b-8656-0a6b65a858d9",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eee8aa7-8c52-4e80-b8cc-705f53f88af3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8763937-3b8f-400b-8e22-bc5d0d388068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7174caba-985a-4a35-b678-2a96f2392726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e40bffe-42b9-4684-8f78-133e6e4d249b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b92f41-76e4-4fbd-8ab7-250462ccd177",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a79fdf-b8f3-4730-8dd7-65d17b0483dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ef38554-33a2-4825-8619-81d08e23ea18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd8fcbb-8299-4173-b7a4-eef70f6d0509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16a9951d-d29e-4c52-93d6-dcd6c4862af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec177b4-e705-432f-8414-fe4812807de9",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eaacc7b-c973-4f49-9281-4f55ff3b2aee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "450e9e11-85a9-4f66-aea7-f8025ccb8448"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8030fb4-e5f9-4cd4-a220-b27dd48657d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56420d48-640d-4b54-abdb-6ba9054887f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8415069-cd57-4524-b429-053bee06c6e0",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c947d133-977f-461a-b7b9-708e455dfb2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3330ccf-3440-4aaf-9196-4fe70ac2e459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff48c4c-bfa2-4dca-8a6d-9e055f97cf86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d755d98-9f02-4ba1-8467-d2fb3bdca645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c55419-2a33-4811-bede-87f7e5f1e7d0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f987cda8-45cb-4105-a81e-605b7184e122",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cee6bd7-b7b0-488f-8ada-8e01a73e1c19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76cfa143-ad69-49d9-bc5e-7f124b113276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0acf07a-9151-43b0-b079-ee55e887efe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a30aa1-8278-43fc-bd5f-b724cfe4b984",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0dbfde1-dad1-4598-bf3a-ad4360073d8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f70aa01-5fe0-4fa5-beba-b41bce8dcaf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef7288f-1a61-4da0-b7ec-b77b6ffc3f84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6edced90-0aaa-49b9-965f-336184cec55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4ed0e7-820f-4d54-966e-3454376c00ab",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622d7ac9-bf82-4f6b-b74d-3d5b5e964bab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd6b357a-e92a-4100-b7d3-b7cbb3c4ebe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31b572e-e4ce-43fe-b563-e1a6197676a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e45cd312-1bad-4b97-b2be-ee01e8ae2adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5575e172-5ddc-48d0-a916-54edb9d4c4b5",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2af3161-37b5-4f52-9dc4-5ed3b7d65503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad3c0851-1f20-44cb-a424-450529a7584f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2761bf1b-8c0e-4537-a59a-023f05a9b851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa4a9353-0412-4f69-93f4-2fd6b966034e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424e75f0-267c-4b46-bf39-803318f294cd",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bedb7f7-5073-4304-b633-fbcf62fab7c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f75be8ad-29d4-4899-b170-c4fe49cc93c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8cda60-5ef9-4a6d-9913-b0aaf20f005a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4adab574-6b13-4c1a-bd2b-bf0d0f175628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d85a88b-315d-4202-9bbb-fbf2fc7d0b91",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba1d6d52-72c3-491c-882b-86cb38628905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4b0cd00-fd30-4369-b9c5-1f7604254679"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0903905f-2182-4004-8931-10e85bac6cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "543e0aee-33c6-4a21-b219-19f5242ed159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f13c0c6-3158-4d7d-a121-ec5eedfae3bb",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bec8f28-3877-4d6c-a8c0-92788660996a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ab589ea-9ff6-4807-bf19-75c528c66f8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94b6130-ef6f-4a6c-9d97-8dea19eb0cd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e47350fa-9228-479e-8fc6-62445f25b354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda4b034-a4ca-4897-86b6-87b92d432c30",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c4a1e4-8f9b-4f67-890d-2e302d805ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb3bf366-7a51-46e5-ba4e-70897b3fef2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d85e7d-7bf9-4292-b2e7-153346c58d53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9ee9647-31fe-4f59-b93d-a214174691cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb46828-2829-4ec2-a548-69511a133c57",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8589884-9135-4e6e-a579-12eabd231ef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "372b07cd-06de-4056-adfa-4a51915aa8bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "883f5ac2-47b3-4716-9e08-7def16bf7add",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44d5d5ce-0bc0-428f-9b2e-4e90d34b74b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28bcbd3a-0d63-445e-85d1-01447f42a993",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aed13d0-7596-4cb1-ab96-e279eca7aed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8994d774-6ec1-46c6-b65a-f64cd37d13d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f7426e-b7cb-4374-b75d-e81cbbf27388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "463f96a2-efaa-4d0c-bedf-a14a783aa377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962ecb49-3547-4b1a-97a3-c49a7ee96371",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6bc4f96-fd1c-4727-87da-fbf755c1ba27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6454656d-9b93-49c1-a2e8-3a3e39dc8846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b468d696-9344-4e45-a98b-4b182fecba54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e1cf869-5383-4607-b764-8b37042bea82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432248a8-c178-40b4-953f-8ad95d6ea965",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d82c14f-ca24-4873-8123-4138b931ebff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de55e207-3a70-452c-930d-5ac469643c4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f34340c-4aac-48ae-b6f3-fc6ef64dc14d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66f9e46e-058b-451e-b274-05a64613b106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb6ab91-e4d3-4855-a8af-d248c9160bb2",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c26532-59e0-42f7-add8-925ec5bcdd38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c33e4f6c-f3a3-4585-9c52-59db2b819c53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76589e43-65f9-4f0e-8854-d9a152dead71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e8328e2-6e98-42ae-a2dc-7ea36de8686a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aefdd723-d162-4e4a-8998-f108b5122b46",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627bab9e-00ee-462f-abb8-209c7c933605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2040854-a0ea-4a7f-affb-ca8ab8671e14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbab123b-b2e8-4d94-93ed-77aa54bec4f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a532b0b6-6db4-421c-8280-901961776c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c509cc4-3e72-4053-afe2-be9894abe9e5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24dc3af2-9db5-4e7b-aa20-306c073bf954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a512f2b-b12d-4609-8117-771f9fb1ed38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec02b9ed-aaf8-401b-93a1-3ccfe88302a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccfe0684-97f9-4828-8b8a-672e9541e431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17888c15-be59-40a3-8939-ec9ca83160a8",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b1dd7b-2c2e-445a-bdc7-8c453b642094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e44eb9da-8bb6-474c-8478-cca6c97c6d9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0361f80e-d0ac-477c-9b2e-ab3da8515661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "074543fa-6a13-49ae-a94e-449cac00a8dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db406456-fdad-49a4-96f3-c8fc5a5af716",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0ab6ca-afcc-42d4-9805-f3490b360d7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb413153-811b-4540-881d-7fa5da5cc2be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "614521b8-be53-4fae-952c-b451e1e502e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e5b8b4-a14e-4546-8bc5-af6eeaa47ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486ac975-d985-4a52-979c-40c06d300086",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bae16bf-f84e-4a81-808b-8fbedac618cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf5f05be-10af-4039-ab81-ded9136d8bcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2619fc-8e0d-4c3a-b449-1cf754ebed12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a610590d-aefb-46d3-a1cc-c1303c1a70ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a388f0-760b-4aa3-ba3c-52623edb56d3",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a481b3a-017b-4520-813a-ead3e37a03af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c2fafcf-97b4-4768-a7a5-bb8ede84e932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f73606f-4355-4d55-8ded-565d0f00105e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab703172-2260-4672-b5d8-f9e577c421b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e91653-87f1-43bd-a8a4-85b314d1a9d0",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d03b8188-b35b-40ab-950f-6dfdab3bf8e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5384f816-4559-43a6-9de6-7c8834c7d7dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "572a47c5-01b4-41e2-ac95-676d1ba89dfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1949a24-9cdb-4ec4-8262-9964734b2104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3904fdf7-8819-463b-8054-8ebe0707f9eb",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53e41e4-542b-4ef7-b436-340632f1526f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88bdead2-3190-4523-abf7-e7b1cf9d4ffa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9377fb0-279b-46d1-862b-bd3192cdb3c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7a04320-8e93-4402-b667-3c9cd86e8f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3f3c06-1ca5-49ad-8237-ac2f6f243538",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aeafd85-1e8f-4251-8892-5525d8587aed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c088bf0e-487b-439f-91c3-b944a4c396b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87b96bd-b61a-4055-bc53-de92e30775ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b1d119-8db9-4b14-b91a-31fb78828c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd607fdd-4fce-46ec-ad99-3e8384570c7d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a40ae10f-c48b-47f2-985e-ba2232922214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "501b162a-c42c-4d95-979c-ab7e8c0a5008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a55b9f2-d382-4abf-822b-3e8237535327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0792dedc-4f7c-4494-8deb-dcecc86af9bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd71b7b-f93c-4f35-b532-c13f60d5cd13",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd61f5a1-a928-490d-a8e5-277ddd258d62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44284210-6517-4092-94ed-2dfd58a0fb7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eccbdab-ece4-4b97-a2a3-7206d715f5ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf9cee18-19f4-464a-8fac-54f28b6864b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c184b97e-deb0-420f-8c48-27b846bcd37e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b759608-a0c3-4ced-81ee-d3e9d486b350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78ef6a80-4f0c-4229-ac4f-e12ca800b4ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6a6185-d006-4a1e-8116-0e6a434e8bb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc1eb6cd-9e84-49b3-bbe1-3bb45ea754b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d27630-099c-4bfc-8b79-14f44f593614",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8adb400e-9485-4e51-a19c-d5c924638c79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "583099e6-946f-4b5a-b8d3-9682bec1ab6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dfd8ebb-fd56-489f-90eb-a47c04c29326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0f0e80b-9641-4005-bef9-3601a8466040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2971ef9f-9787-4337-aeaa-a42213b715cd",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758cd2ef-6808-45d5-b3d4-d54d1f30c340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1f6c517-f399-420b-8103-ff4848bc076d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "875d5383-1e3d-46bc-b7f8-198dd1fd9c54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "570636b0-11f0-43e9-bcc2-47cc025f4a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26dd462-cb8f-401b-af44-6d9081a73339",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1068533-c4b4-4ed6-8ccc-ba537a7d5c55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bee74357-2ed1-4912-bd7d-4437bb7fb38d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae9754b-517f-4cbf-9e74-e1e705794035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87958ac4-7544-4653-a466-7441874d9c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae98d3c-cc1c-48ec-ab8e-d24bc08a4871",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d81fdf-1eff-4eaa-a85e-f1bcfb71dcd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c2b8571-aba6-4983-b3d0-bbe94945d9c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a975ea-9551-4dfb-96f2-9df4c0697e0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a331b262-efc3-4a0b-bbe4-f91544e18d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff67842-f1ec-47fc-9de9-131d4076a193",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda641e9-0927-4539-ad6c-7b5f0a098214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f66deb65-b86b-49bb-9362-d14cb95c71b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9920b415-5f0f-44fa-b94c-d80955e081d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "955a92da-6aba-4a53-99ce-747c4df07a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a834828-7709-4c62-9e91-d504c07aeb60",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718a4ddf-97ff-482f-b361-ae71d24f13ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b3ff2de-f698-44e0-953e-d429b1467613"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa6dfa9-9720-45df-93c2-53a689bd6d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "576a499f-0dc3-4948-a1e0-5dc7881d6246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a6dc91-5598-4dbf-9d9f-f4cdc69b9403",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70cde8a8-4351-4cbe-9b56-f48d9eb64979",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cf0eb71-b5b9-4344-aec5-3221aabafae0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3519bd2-a7ba-4ec0-b506-f35d0cc2ccee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16c912f4-d7be-4616-a252-bae3f0b6eaea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd3f3e3-3082-4f2b-a85a-82c343a9d7a6",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b498345-8e63-4c4e-9daa-b5674828b5a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02961fee-5d31-43f8-b148-5baffc88cbf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f38b7b-2803-4119-92e0-9813d15d70b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b566c28-8dcd-41ba-982a-6802c96de8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2153c1ec-8c12-42f1-95e0-f1a204b90f94",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2243246e-ab67-41ed-88d2-0958f98aaa95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "759ec8f0-dc86-4dd3-9557-0cbbf89dc6d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad7284a-a4db-4b8a-b692-ffd488f1d1d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "953ebb7d-4e58-46c4-8170-cc4806f06377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f8e28b-b061-4d11-9a02-867fa32d69b0",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dba4f38-79c2-499d-84b3-34cf44c8ed9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a496f4b-44fd-4ffd-9a95-14b9660ba0ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8b807a-f05e-4301-9bf5-3de0f3dd2fa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c50b5632-d49b-4b52-a688-592d4fdc0a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60f7a27-8889-4210-bd75-89d47e57e155",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d766500-c0ab-4834-b5fe-673244f5b4c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8df3bff-d0e0-439b-a70a-9bc7e43b3ad4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2444ae-0a0d-41e2-bd6b-5e3a7721194d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b1246fa-cd22-450d-b8ab-e135a33efa70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a75ddad-6520-4e6e-8a5d-d18343d24caa",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb3956c-2644-44b7-bd39-e61c3e3587be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9aa5589c-feaa-47b0-b60c-9b5a2e058edf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed29d4bf-e7d8-404d-a36c-b8ab618efcbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ddbc245-377c-4267-a45f-2a05333d2b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e41aae-48e7-40fd-ac96-717180eeb998",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8530c17-5eb1-4589-aca3-3637613f15da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d6a0d47-e700-4e81-9944-8c3328f474d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a155ee-08d9-4ca2-b26e-b9a44016e867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "517cf922-4139-4eb3-b279-7cfb27dec71f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba46288-6bd2-46b9-9555-a519c88ab49e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bec9744-1deb-4cae-b42a-7ab6833075a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f7269e3-ba2f-4cba-9bf4-04277b2697ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "848489db-51de-4e4b-a0e8-06793eb8ca25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f2420f7-8f35-494a-b9cd-34ca632e946b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db95af1a-f5b3-491a-a14d-c137caec91ef",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf580cb-21fd-45e4-a071-8fa900b0a793",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dba54d38-c6c1-477d-b03a-7079f2e7c238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3274cf-4ad1-475e-8b2c-c70859c0bdde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84c102eb-7209-4595-83ed-6cf7fc2c4951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7704a2-45da-48af-9ab0-455194360607",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c451dab5-f771-468f-9b4b-2204a68e8f81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb6a55d4-4b10-49ce-b209-ac8c015f0dcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b88a2a0-fea5-4657-8bcf-1acb7b077c7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b6916f9-213a-4eeb-be44-471adea3de3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7042b120-e70a-4547-a32d-d86bcbd7afc9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dfef78a-4f71-470c-874d-43c817e19d52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c35b517-ba2f-4270-925d-5a6fe43b6cb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8701250e-c537-4ef9-bc1d-18deb7fab013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3388cb1-b458-4ece-880b-c7475d8a3bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4fba201-034c-4402-b4e4-5dd0b8bcf827",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33dfabc8-4690-4958-a4ac-973f2c81458f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d92d0d29-1478-4b54-8195-543c716f7bc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79de9614-23cd-43ae-976a-b1efee27bbff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d47ac8bc-5bd4-44d9-a971-c57992edd70d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297eed17-d0ad-4dae-a63d-0f7b350a1500",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36692872-440d-4962-a3fa-cc03878254e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "541fea2a-2814-4848-9aba-5562bd8a22f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeae0c19-4af9-4b11-a43e-8ccd23448423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50917031-3959-45b4-9603-0d41c6c64b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253c7216-36b1-48d7-b492-48f50689bfe9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301007a0-2ad8-4ec4-b0dc-276f8167c2ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71d4e015-e379-4b31-b760-3869ed798cd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5beb14c9-c065-4a5f-9f0e-9ab4c6fcf034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "531d92e3-4f3d-4030-bd80-a93400b01059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045adffe-d42b-44ae-868c-33e57678b083",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d6fe9c-99fe-4e34-86f5-69fca1eb1d73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a9a6d1b-2a03-43c1-82f6-3405782a342b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ab58df-1e5f-42f8-a9ad-17d2c4ab2b3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef24f141-6dc1-4025-bd4e-7ae73a26e930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453292f8-6cab-4f65-822b-e17bcb1ed2af",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa2de528-8c0b-490b-b91d-0c241ebc5c25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "365770bd-6d0f-4429-b99e-2d0af10eda31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ef4d92-ce39-43ba-ad4a-7f50276e70e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c44db0e0-e814-41b9-8ffe-c7b7379b6def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d0153e-f04e-4c68-8094-fcdcd536abed",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa8ae23-8da1-419b-9697-3baae29ac1c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6460d3df-4291-40f3-8cf7-8db8dcfbdd35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31084616-706e-44df-8648-2acd3c033d3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "822f15f5-7385-4cf1-bd05-6293a550b8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bfa204c-a173-4bc5-893a-e7f75a6f6b76",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cccf020c-220c-4351-b0e5-3d098303080f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4097a1a3-82aa-4a53-9496-f85b7d6f8d88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4292bcf-8933-430c-9df4-e3caaf85cdc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abda2a15-3f4a-418e-a63d-b8a21614d262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "983b5c34-4ee8-4dd7-bbd0-d70599f6cce1",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "111a3acf-0469-4676-bb83-07f0066aadde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc945e85-5d35-4d3d-9329-59bf0d854263"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17388a32-5075-4ad3-926e-07ad61bd8c3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75e96149-ee2e-452f-b14d-3e0f5a5f3a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b406003-30b4-475c-8c00-3d59fd6f3417",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60facec4-5e38-4abe-afb6-85d13b45dcc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d25fee0d-5da7-4279-a8f7-fd2bc694dc13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "275970e1-9f88-427e-917d-43af77cf5528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f1a17c6-e37a-442a-b3cf-6d9d5a3cf476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10dd7e2-00f9-459b-a24d-651e8e27c377",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2b1f3b-afdd-4821-8d1a-448de20a1284",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "375d7ebd-8916-4611-9248-6029c1d402c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f1a5b2-bc4d-4b70-9b7d-e1f08153ace4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33565b98-2fcc-486e-a8f7-26aa444f38d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc6c19a-2210-4192-b601-c7b846be4b73",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a61ccd9-3bde-49e0-ae3a-c4d60783abc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a2559d6-3b5b-42f1-bbdb-107beb96bc46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f3e15a6-4db2-4b4b-9d08-34e0271e4853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94e3d0e0-e86a-414b-9e1f-2e401ee180e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbece7c-9e5f-4058-a052-19e4d7e16481",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff74789-a542-4fd2-8250-d089a40a2178",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "435cc6c4-500d-47ae-be29-a55d8080d6e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e81d51-80cb-4df7-82a9-116ea8061b91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a00d35e-2621-4b32-965e-f1d1bd86f0a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e22406bf-593b-4e43-95fa-40142397287a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "facf6a8a-f938-4ab3-88ee-921065253d42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbc815a0-4120-45d1-a5af-dce71b25e2d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b99382-d35e-4ea1-bfee-4e3ba6a1696f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cab3f085-2ebd-4fdc-aa35-dc5cf9e349cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d6aae1-76e3-46d7-936b-4e4a92b13993",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "586e618c-c36b-4c33-b397-4f9ac5611095",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efc038db-22d8-4cfd-b22d-52bb5715f4e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a2ce58-4d60-4020-af44-dac24a0fbd71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "303c9957-b575-4619-9302-e5149b624d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0240ea9b-7c81-4b2a-b9a1-6540726a1078",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a6f342-430c-4dfe-9e5d-7458022ffb5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5cb7024-cb8d-4245-bad6-8566a10c0480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04659605-a022-4e6a-a304-10d9762b54a3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7651893-f9dd-491a-8db7-b38465d1d435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6069d877-d76c-43f7-81b4-6a87c3db49c6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a944ca-16f2-4cf8-8ab6-404e22144a93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5ba5e88-b268-43a8-a430-0283a138665f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14ed5fa-c649-499c-a14a-1db2c0637010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6306cd26-d18b-46a9-88da-0552fcb2c99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9abf88cb-5c90-42bb-85e9-8ef312d713af",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73103e1c-a56c-42a6-9612-a44a5ba344e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a45a5d0-f11f-4891-99ed-37c0564e2e58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9d39d0-143c-484f-a4c8-33447e8b5c52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69931275-f79d-4077-9547-11eb3ee24d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb516af7-d062-4ad7-b991-76900834eda9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841468a1-d4d2-40a3-bfa2-16ce33f01472",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2a7be63-35f9-4c57-bf2a-2142f020b12f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc94db11-505b-425b-ac08-c19249b73c72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20e43dd4-5bf4-4874-908b-5c53cd3915dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5fc64c-cde0-4162-8211-1162712d47ce",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246e2f49-c1a8-4713-9a36-e1eff11bcb61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e71e3a2-0f75-4d0f-ac61-540c572650ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "766ef89d-6f88-4633-953e-e1b21a0da31b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fefaf22-c6a3-4171-8c5c-4df8d56f4889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19072b6-2f19-4bc4-ab1f-e485552a3287",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3208746-2ae0-42d8-8285-3daf4dac9dd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b7039eb-f7a5-4166-a862-5b04affd5109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2fea1c-e456-4875-a995-d29cb8679a5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef550965-0f8f-4d9a-b83d-41cd30482368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4acbd1b1-762a-4a78-b9e3-18293f7b51bf",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f7fa85-8ecb-46fc-9243-2e8f63fdd73d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efae083f-d74e-4af7-8ae8-cd038f730757"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23bd0f32-ba23-417a-aa1b-f38702392f86",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6f967f7-2a6d-4ec7-bc12-f365d46ec1dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd601645-61f6-4b87-b996-779567d32ed5",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85deda9-566d-499f-ac1d-bd4aac0807bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfc5cb37-a3d7-480f-9344-f1587b47ac03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85be6a60-83fd-48f4-b403-9e5a5f7063de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c8e84b7-6fca-467e-87b8-cbd400b1cbc0"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8388cdf-5e72-42e2-8878-a12c1fb0f738",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43a6ce15-1ecc-4bac-825f-11d9e34f7385"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3776f796-b785-4e97-b394-4d0921110875",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3752a639-fc4e-4b4f-b8d0-e4df2732ece3"
                    }
                  }
                ]
              },
              {
                "id": "cebd41e8-93ee-45a5-b114-bd3061471319",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1d06f191-f3f5-4bc3-8548-89952d1d8bff",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394fc2bc-8172-4882-90e6-095802383f59",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "27891e33-afec-4515-9b01-1241f6f12708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c78593-e1b0-4713-853f-72ef8482aa85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1324583-0632-4db0-8390-2a65389c06d3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ec28a5e-1aca-4846-be0c-38a4d4e9717e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6dbca37-c3e5-4b25-bdcd-8eb4d4cf3af7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d137383-0a1e-4521-aeca-0c08f9feb27a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9659f46-75f9-4c9f-a480-91a0d6fdfd2d"
                    }
                  }
                ]
              },
              {
                "id": "cca8473c-14d3-4b29-b12a-3277e8eb32fa",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e9723b61-7a29-4b2d-8d8b-c6e4430383a3",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac46204-ed67-4775-ae7b-1c6269f6e107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b25011bb-a3cf-4a4b-9651-f62be8404ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b94545f-f920-4a70-9cbe-d1702d4319b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79db5472-e06f-4c9e-b6f9-81d8e5325e88"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "68d367d7-7d76-4b05-8024-c21d7109b488",
            "name": "Positive Testing",
            "item": [
              {
                "id": "842508fd-3cdc-472d-a79e-e6d4a292c63c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e77e1d1e-ab5c-4490-8f48-58596d662a17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e3b8c9de-1b43-4f74-b9c6-a42dfa78aa34"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88d47ba9-8695-4ca0-b6c7-80c92f766958",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b450be8f-c2dc-4375-9165-5097571ad648"
                    }
                  }
                ]
              },
              {
                "id": "37f0cd80-41f9-4c7f-bbb5-66a548fddce8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "35da2f4f-ed8e-4c21-92e8-2a697ec97c8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3c156aab-9b77-4cac-a08c-502b6cb148d1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3cf431ca-59bd-4974-9d1c-a515cebedca9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7d2ebce-08bc-4c78-b2aa-9a922738b071"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8d79203-36fb-4ff9-99a2-11c6380bdbbe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "aaf0350d-e948-4ee6-befc-08b35691f2d5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "84bfccca-e732-449d-a62d-b8bfcd0905df",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c986558-a437-4176-bf64-f6eb80c45226"
            }
          }
        ]
      },
      {
        "id": "b3e6a5c2-fc8d-448b-b9c7-8ad8c5cde72e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f4f505c4-286c-4496-b302-711180ccd4cf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5a1b72cc-a65d-42eb-8cd0-54110048e7e8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2172c5ef-1bfd-439e-8ccc-139e7f75259f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beab6931-313e-4078-8e10-d4e3114693fa",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f0578168-de56-4e5e-8c06-2161856a8b40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "492ed0e0-5cec-4d16-b026-53684e7e258e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "efc33470-4540-4d98-b860-d9faeb52036b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "89c257da-3774-4caa-9b93-bfdab929f6c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a196e5bd-cfcf-4ef8-8569-cb61b5c14be9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a41e7474-9787-4fed-a5fe-47c1d6cd2d9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f298a353-8a13-4e25-a32f-60de031d916d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "515f7b2e-77d9-49f6-ad96-6ac118455f1f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "02ead67b-32b0-4b3f-bc00-ce542a74fd29"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1f58694e-714e-4a52-af2c-bdf609242c8e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "59b7c8b9-ba1e-4373-a9d2-3b6ead9f3a5a"
            }
          }
        ]
      },
      {
        "id": "379f0411-d28a-4f0f-971f-71ed3cdb03b2",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "8c42087b-083c-4165-bf74-14ca8b0aba57",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3406bfc8-3716-436b-a8c9-bffc86e257ca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f5b42531-b64d-450b-9c8a-73cdd0fb9314",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f1abb9-331c-4d00-868f-56e1da4f85de",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "561b9662-ffd9-4b9b-8307-f0a432bbb5ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf09a80-995e-4e6a-a0b0-e4a2a6ebfce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9de3fd00-ab8d-4587-be41-d533d62ab620"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "531f1837-adc5-49b3-acc1-f529fbf06fcb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8fc78c0c-415e-447d-9151-a917a041365f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5cd32fcd-5b5c-476c-8767-05ae227f9cd5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b436d957-2b78-4507-9a04-1590c0dcfe97"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1770719b-61cb-49cc-acd6-6dbbeeeba771",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a7388a1b-2b41-4eb4-8bae-a9470b8daf9b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e7392d0-4911-444e-9e98-f75510ff4ad9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e0840dd3-d5f6-4b0e-8036-3cc68d417e69"
            }
          }
        ]
      },
      {
        "id": "42524d29-e8c0-4d1b-99e7-76be01e9695e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "992f20e0-30c9-47f8-9911-72860a602885",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e2ea6f80-0911-434e-b304-d4d6cf76c243",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "179ddb4d-6a06-45c6-ae7a-25ddd038c03a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781692e2-4fe6-41eb-983a-20cb4cc1d3ca",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee8a32db-7b89-4b23-aaf7-1fea7f1bb07d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa929ec3-0575-48c2-b3bc-6569079dc92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c17b3f60-3ad9-4038-98bb-7c7805ac47d9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee83cdf0-9414-4170-9233-7327a1c9e289",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5fb0ff8d-f6bf-4b0c-b27f-89a829127790"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "662882e5-1c9b-4b46-a2f6-792ec3a70b17",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f510613-ec7c-419e-84be-da4b37cca4fe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e582e18-4a61-412b-a571-faea1d8399a5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c78b8ca4-6e13-4ef0-a4c0-fea2ca64ad9d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d813d320-76bf-481a-80a1-7243f6b8e7ff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2f612925-57cd-4d9f-822b-005890c97e1a"
            }
          }
        ]
      },
      {
        "id": "40542c3a-d31a-4c93-92a5-f8c31db2e1ed",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "00e6224b-39b8-4bc7-a171-b0a0255ba55d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2cb1895c-0f40-460f-985c-b9965d20bf3d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "de80167d-c04c-473c-867d-06da85011166",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a35b0b94-4039-4b06-a3a5-849ff57f1117",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1dce981c-7a05-40ca-9dc6-c87cb6a5b309",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 125.92631578947379,
      "responseMin": 10,
      "responseMax": 11423,
      "responseSd": 780.9281914393105,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1705365374675,
      "completed": 1705365419469
    },
    "executions": [
      {
        "id": "6b2eb6c9-dccf-4059-9860-e774a266b954",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "26173ded-8f6a-4c78-b8ee-3689e95a0e7a",
          "httpRequestId": "bc612617-7fea-4cbe-8db8-38885a982f98"
        },
        "item": {
          "id": "6b2eb6c9-dccf-4059-9860-e774a266b954",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d8a832c5-5512-468a-88d6-0dae7d41939d",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 0
        }
      },
      {
        "id": "6f50c371-2729-4f84-9c20-eca732cfe994",
        "cursor": {
          "ref": "b66ac973-20ca-4aef-bf5e-40504b478c55",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1602fc65-54a6-4b2b-927b-c14ca155d17d"
        },
        "item": {
          "id": "6f50c371-2729-4f84-9c20-eca732cfe994",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3c2e52f9-37b0-4e8e-8fd2-6e51ed02427d",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "a61b0c84-bac4-4ba1-9b6b-dcf08043528f",
        "cursor": {
          "ref": "3066939c-6ce9-46b7-b084-5ece2658a70c",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b64951ca-ceb0-4df5-9bad-bf1c88dfc7ca"
        },
        "item": {
          "id": "a61b0c84-bac4-4ba1-9b6b-dcf08043528f",
          "name": "did_json"
        },
        "response": {
          "id": "c42cbea7-2cda-49d4-b89e-d73307bd2207",
          "status": "OK",
          "code": 200,
          "responseTime": 324,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd35b5c-e970-4a2d-a124-0495a8f41fdf",
        "cursor": {
          "ref": "c3533a3b-8904-4c18-8879-c2d0eb425144",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fcd4330b-00b9-47c1-b5b1-c837c6984522"
        },
        "item": {
          "id": "9dd35b5c-e970-4a2d-a124-0495a8f41fdf",
          "name": "did:invalid"
        },
        "response": {
          "id": "69a8bbbe-b82e-43a9-ac55-8572e8ecf94c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2802,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd35b5c-e970-4a2d-a124-0495a8f41fdf",
        "cursor": {
          "ref": "c3533a3b-8904-4c18-8879-c2d0eb425144",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fcd4330b-00b9-47c1-b5b1-c837c6984522"
        },
        "item": {
          "id": "9dd35b5c-e970-4a2d-a124-0495a8f41fdf",
          "name": "did:invalid"
        },
        "response": {
          "id": "69a8bbbe-b82e-43a9-ac55-8572e8ecf94c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2802,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5222c847-a6bd-4108-9bca-8050de32e8fd",
        "cursor": {
          "ref": "e066ec16-fc2a-457e-9106-822cdf5aa575",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "afee95c3-6f97-4c6a-a919-5465c2eb96f7"
        },
        "item": {
          "id": "5222c847-a6bd-4108-9bca-8050de32e8fd",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "bed29c30-d469-4307-b03f-74fe202039e0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f9c44f-9cbc-4cb7-b865-534b12be0c0f",
        "cursor": {
          "ref": "dc01da0b-f42d-4fd4-ae0f-04a41a11266f",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d6242b54-1dd3-4d89-b941-7da58a1431a3"
        },
        "item": {
          "id": "65f9c44f-9cbc-4cb7-b865-534b12be0c0f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "841f2621-c9be-4a45-b16e-3b3e3a410a6b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 44,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2556055b-8721-421e-81c2-cfe530b55d93",
        "cursor": {
          "ref": "d6d5d907-d880-48d2-9d0b-a3079c46b3e4",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2c81bac1-5d80-4ef1-b52e-652b0b0226f2"
        },
        "item": {
          "id": "2556055b-8721-421e-81c2-cfe530b55d93",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c49e20e5-d7c1-4889-aa92-7e351cddd424",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd2a140-f50c-4920-b89a-8c27157d65a0",
        "cursor": {
          "ref": "737dd452-c244-4cd3-bb9f-3abad8d98377",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "336127bf-6ddc-4291-96a1-ca3f41c31e64"
        },
        "item": {
          "id": "6bd2a140-f50c-4920-b89a-8c27157d65a0",
          "name": "identifiers"
        },
        "response": {
          "id": "b6c0ee43-06e0-407d-9d25-e8f7167a66a5",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62bbc9e-5ae0-4565-975a-ab48516a0694",
        "cursor": {
          "ref": "58bfb8f0-1f97-45a2-88f4-7e6f06e840ca",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a55b8c41-b975-4974-992c-9c49445482bc"
        },
        "item": {
          "id": "a62bbc9e-5ae0-4565-975a-ab48516a0694",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ef36cdcc-e24d-499c-9dcb-3726ede59084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003d5af1-0a06-479e-81ac-971bdcd9cdb7",
        "cursor": {
          "ref": "0c00efc4-a183-4da5-8e88-29d8de3e7680",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "82dcff5f-34e6-453c-ad8b-4f7784952156"
        },
        "item": {
          "id": "003d5af1-0a06-479e-81ac-971bdcd9cdb7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4304a6f3-6e78-4080-ac17-80f9fa4deca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e3de60-2e65-4a0d-b77c-8481457b143b",
        "cursor": {
          "ref": "823bb916-91b0-4156-ad55-56f2d415b0a4",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "88a2cb3f-223f-4481-b5d1-69fc2222f662"
        },
        "item": {
          "id": "35e3de60-2e65-4a0d-b77c-8481457b143b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f2472510-e3b6-4832-b58f-a53ab30a8c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee67bd9e-df60-48b5-95ca-710e02a4be50",
        "cursor": {
          "ref": "9aa9242f-3e7f-4587-a913-7f388c4aa608",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "18cacca8-bfd8-4689-848d-a9b278e0f5c0"
        },
        "item": {
          "id": "ee67bd9e-df60-48b5-95ca-710e02a4be50",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "557fcfe0-1ff3-41c6-a115-8939e8902be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3154341-2681-413b-88f4-2c387f89f17c",
        "cursor": {
          "ref": "fc4ec8d4-9bd0-4b45-870f-b614f764bae9",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2fa52331-cb8f-4de6-9d6a-833d325b9655"
        },
        "item": {
          "id": "c3154341-2681-413b-88f4-2c387f89f17c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3ba54873-f7b2-4e90-b6ae-62105e00f5f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5881d78-374e-43ba-a082-6e95464725ac",
        "cursor": {
          "ref": "d72d0d4d-a754-4f43-ba89-6d2928982cb0",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5a4d5f13-2ccc-4251-a900-7dee4c878d69"
        },
        "item": {
          "id": "a5881d78-374e-43ba-a082-6e95464725ac",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "2de26b16-22b0-4a58-9d47-e0616d34cd33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d4ed62-7c2a-4b63-b3f8-2cd9e6d46021",
        "cursor": {
          "ref": "2b2267e5-1887-4ced-ae9a-ffc317d50f9e",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "70a52b19-e50c-4fe4-8413-7b06c9e7926a"
        },
        "item": {
          "id": "e9d4ed62-7c2a-4b63-b3f8-2cd9e6d46021",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ca35b65b-fbb7-4099-81d1-f5e31a7aba76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd58e6d-6275-4c52-b823-a944b4b0933f",
        "cursor": {
          "ref": "453e2be1-46e8-41b3-8bcd-b7cb4f4d84bb",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2bc16bfe-666d-421a-9b58-3a1b2f82392d"
        },
        "item": {
          "id": "7cd58e6d-6275-4c52-b823-a944b4b0933f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b01aa172-fadd-46ce-9f64-424eb5be14cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da93434d-4cce-43be-8c78-869c2602a74c",
        "cursor": {
          "ref": "dca85ae4-f77b-4438-9f31-14f10d2cc9cf",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "00e7aada-6229-4db7-8038-8efbf5813987"
        },
        "item": {
          "id": "da93434d-4cce-43be-8c78-869c2602a74c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4a81e4f0-b6dd-4bd3-b549-34f9ff26e9fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2de887-c538-4f95-9dd8-6dd7a955a11b",
        "cursor": {
          "ref": "c40946ae-8ed0-4d35-98bb-302a44772943",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "798a0f45-bef7-484b-9754-7010ee8e97ff"
        },
        "item": {
          "id": "1e2de887-c538-4f95-9dd8-6dd7a955a11b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e1b322b8-d13e-44aa-a204-520f7f0491dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f172ecb-c46b-4c52-8210-fd15793b67b7",
        "cursor": {
          "ref": "7dc9f726-8f60-499f-a556-d81a7c79cf09",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0c3ea2f7-3f3d-48b0-8a2e-d63be56f88f0"
        },
        "item": {
          "id": "4f172ecb-c46b-4c52-8210-fd15793b67b7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5a5e15bd-dbbe-41cc-ae30-1d49c4990afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f955e6-30a1-48a8-8305-e40c824459a5",
        "cursor": {
          "ref": "f69cf2ef-0844-427d-835e-f0e040268311",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f3b993ff-2dda-48a5-b7e6-c9103a7b6ccc"
        },
        "item": {
          "id": "03f955e6-30a1-48a8-8305-e40c824459a5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0ef696f2-45ae-48b2-8e83-ad5d874a85df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad43904-016e-4267-84e4-ed7b031ac0e5",
        "cursor": {
          "ref": "feb66b5e-33b7-4c9a-ad79-fce7d3ad7618",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f3728092-f595-4ef0-a534-3df54b95cbe6"
        },
        "item": {
          "id": "2ad43904-016e-4267-84e4-ed7b031ac0e5",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4d618bc8-53c4-4509-af86-53de2729ad9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3932b06-b415-46b7-bdf0-a552329fd07b",
        "cursor": {
          "ref": "f9d3ae07-9ef7-4451-a52a-a5afded18d23",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b2e3193b-c99e-4785-b0f3-2a1b3366da45"
        },
        "item": {
          "id": "c3932b06-b415-46b7-bdf0-a552329fd07b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ef2b0b0e-ee8a-49bb-8a59-a7cc4a651d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "136b343f-74f6-46c3-83f6-821fc29174b0",
        "cursor": {
          "ref": "3acddf02-49ed-4bcd-8797-03384ed60cf0",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0633c389-cdb5-4714-8ba1-91c89961d030"
        },
        "item": {
          "id": "136b343f-74f6-46c3-83f6-821fc29174b0",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "46d55c99-6359-4718-98a2-d3b74e65a801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7c9c0e-3ee6-4c61-8a5a-56442435db7c",
        "cursor": {
          "ref": "3f4dc024-8cbb-4b57-80ff-6220d2ba1569",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9e7dab7c-67c1-4d5d-b2ed-dfa0b5b566bb"
        },
        "item": {
          "id": "2f7c9c0e-3ee6-4c61-8a5a-56442435db7c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d2f9d87e-446e-470c-8651-c656a45f9102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "804b5023-5cde-47c1-a30a-896c96214189",
        "cursor": {
          "ref": "d7212a94-84ab-4161-ba15-45c48f6b8430",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e041a40e-0b96-4d77-a890-bbed7602ea9d"
        },
        "item": {
          "id": "804b5023-5cde-47c1-a30a-896c96214189",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "3a046634-8e65-4c44-818c-b0a2c468d136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51cf0c52-a27b-40fb-908c-2624faed0fa1",
        "cursor": {
          "ref": "a41e5804-69ac-4b9d-b3ed-93b5315abab9",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3f379292-2dda-44fe-bcee-fb01c129ce6e"
        },
        "item": {
          "id": "51cf0c52-a27b-40fb-908c-2624faed0fa1",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e09c9e9a-f2cb-4317-affd-9716a3c775c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df90a71-7772-4a4e-beff-53c7e6ba0d30",
        "cursor": {
          "ref": "0de88f5d-4435-47ce-900b-b13c0c3585f2",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "30bf70bb-f8b1-42c1-a4d8-1cee916701dc"
        },
        "item": {
          "id": "6df90a71-7772-4a4e-beff-53c7e6ba0d30",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "516e8c66-2cab-4e58-80ff-8854db68ea0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e398570c-55cc-4dcd-96aa-2d7e7266cbee",
        "cursor": {
          "ref": "68c1b8da-037d-43bf-a06c-bbda449ec3c3",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d269917c-6c4a-4d10-87f7-9520bb2d38ed"
        },
        "item": {
          "id": "e398570c-55cc-4dcd-96aa-2d7e7266cbee",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f970c84c-c71d-4231-acc2-75be2b2d737e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df95120-8e88-4bf3-81a2-ffd68ef1fc0a",
        "cursor": {
          "ref": "f7c876a1-006b-409d-acd3-94c1171d2b6d",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f7b65aaa-9e1f-4cc5-843c-adc33a63ce57"
        },
        "item": {
          "id": "1df95120-8e88-4bf3-81a2-ffd68ef1fc0a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "29b8ffd9-aef3-4677-95db-77e9d1282025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd43ddd7-0859-4b62-9989-e2afe87998a9",
        "cursor": {
          "ref": "a09f78de-5f43-49e0-89c1-6f32504a5c4a",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c81dbc2d-8890-4ac0-907b-9e25f027fa7c"
        },
        "item": {
          "id": "dd43ddd7-0859-4b62-9989-e2afe87998a9",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9636e39f-0c79-4a05-9cb0-5c6d99274bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8734589-3327-4cbf-8f5c-e191fb44cff7",
        "cursor": {
          "ref": "4082e3d2-4d8d-471f-9389-530ee7372faa",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b606e231-a18a-4f71-871e-38975191473a"
        },
        "item": {
          "id": "a8734589-3327-4cbf-8f5c-e191fb44cff7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9a4aa617-2ae2-4207-ae6b-1f0ef20eb6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c2a11e-cd2d-429e-84b6-8f37701a293b",
        "cursor": {
          "ref": "2895f1ff-c0a4-45ba-b0e2-2fa732b57968",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d53ee7c3-f888-4855-9e66-a28cac0eac38"
        },
        "item": {
          "id": "26c2a11e-cd2d-429e-84b6-8f37701a293b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4d8f6e89-af78-4bd5-b2a4-333cc6e339f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ade3fa-a7f3-49c9-b8cc-190efa3dd3bb",
        "cursor": {
          "ref": "4405be48-906c-4824-91b4-eab94596b68b",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "00ef3543-16a1-4b3a-970e-e03dc25e5b9f"
        },
        "item": {
          "id": "e7ade3fa-a7f3-49c9-b8cc-190efa3dd3bb",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c56165b7-9ba9-40f6-9c93-a9e42301714c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e20be12-529a-4581-af32-df9f79d5054f",
        "cursor": {
          "ref": "06d7da75-f608-452e-9ca6-54e93e4e8b9d",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "43b9ddcc-4ad8-42f0-9704-d9eabae27c70"
        },
        "item": {
          "id": "4e20be12-529a-4581-af32-df9f79d5054f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7b018834-4a61-4329-a140-e2f5999dbaad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82fec1f-9531-4b65-98e2-d39516d15ba9",
        "cursor": {
          "ref": "1efdebf2-e12e-4b3c-9d61-01235846d3ce",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5c6b2138-4523-48a6-ac64-6b075242b106"
        },
        "item": {
          "id": "c82fec1f-9531-4b65-98e2-d39516d15ba9",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2c3af229-6ecc-473f-bd82-19c0882fcb5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610ccc83-ff87-48db-bf26-c94b642d7bf5",
        "cursor": {
          "ref": "d6b8acda-5a91-4f6f-833e-222fb595909f",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4b724373-6cfb-4b6b-accc-6bb8d981b182"
        },
        "item": {
          "id": "610ccc83-ff87-48db-bf26-c94b642d7bf5",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e20cc0ca-ee1b-4256-b3bf-8baa0affe363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d433edb9-dfbe-4063-98e9-992d8cee7442",
        "cursor": {
          "ref": "5ba2a2d4-7b1f-4249-81c5-6328a08e0878",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "61b1e4aa-0761-4cdd-8c93-8e6f16e1cf9c"
        },
        "item": {
          "id": "d433edb9-dfbe-4063-98e9-992d8cee7442",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "685ed7b6-542b-4589-b483-32d23f999bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f5a3b3-d08b-4730-afd8-ca3aa61f0c3f",
        "cursor": {
          "ref": "b4612d9a-3759-44d6-8d75-1d8785b4fa50",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "40985ad9-7bdf-48ea-b96b-a72eac623895"
        },
        "item": {
          "id": "b0f5a3b3-d08b-4730-afd8-ca3aa61f0c3f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "92577b7e-72b3-4d46-9a2b-6d4766d827a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a31559b-74c9-4d8d-89cf-98fdac828140",
        "cursor": {
          "ref": "3f62624a-40c6-4626-9a87-09eca2ae5bca",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "22cb04bb-082b-4b38-85df-300b7bf2a342"
        },
        "item": {
          "id": "4a31559b-74c9-4d8d-89cf-98fdac828140",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b3ad19cb-9360-4b25-b602-f3d498d2b662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c23762-17ed-4dd7-8598-17732d4c5ec2",
        "cursor": {
          "ref": "41a7010e-2aee-4e9b-800a-25c118db630f",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "132e1347-56da-4df7-957d-7947510c5b8e"
        },
        "item": {
          "id": "54c23762-17ed-4dd7-8598-17732d4c5ec2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "deb11350-4c3b-4036-89e4-e990883bdf9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34566565-b15f-4a4a-80a6-074a757719e8",
        "cursor": {
          "ref": "28651d80-034c-4bdc-83ec-debfb9e0ae21",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "56cf27f7-82c1-4d38-b446-b3a9baa2255c"
        },
        "item": {
          "id": "34566565-b15f-4a4a-80a6-074a757719e8",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "adb79310-421d-4e78-baa5-37c6db6f8854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8124deb0-0609-48d4-9030-f53a1ebde986",
        "cursor": {
          "ref": "facb2355-e1ca-4d1d-8170-6734409b2e25",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "26455247-0262-4241-b1d6-15fbcfd4f52d"
        },
        "item": {
          "id": "8124deb0-0609-48d4-9030-f53a1ebde986",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3ea33a65-c9a7-4d61-b079-d69d513d125b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152c2ac0-ef99-427c-aefa-01dcaca0993b",
        "cursor": {
          "ref": "90b101d5-f2e1-4cfe-9fc4-94999427200f",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "026388bb-e5c7-4650-819a-7d9c0767082f"
        },
        "item": {
          "id": "152c2ac0-ef99-427c-aefa-01dcaca0993b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f60d94c1-ac9e-4093-a502-4dcc3351b04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2b0c51-a071-407b-826d-f3c7550a387b",
        "cursor": {
          "ref": "117ae55f-7848-4034-b26b-a6486e6dcad1",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4351fd66-5d70-48da-bbd7-9d10e0b6c3df"
        },
        "item": {
          "id": "ce2b0c51-a071-407b-826d-f3c7550a387b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0704a74d-86ad-4ee7-a733-931ec044938e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52796e0-7df0-4670-ba24-50f836317f09",
        "cursor": {
          "ref": "f02fe2b4-f7a0-4901-8018-85cd73973195",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "370ae3b6-3e47-498c-9958-30b11c95b4d8"
        },
        "item": {
          "id": "f52796e0-7df0-4670-ba24-50f836317f09",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2fd2a2a6-fea0-42e1-8164-3f6507af183e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39fcc025-fd3d-4bcf-8cc1-f9e9ec518283",
        "cursor": {
          "ref": "edc652cc-088d-4d65-84f4-b42db044df2d",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7b4ada77-8173-42ff-87aa-1d71e3e58e5e"
        },
        "item": {
          "id": "39fcc025-fd3d-4bcf-8cc1-f9e9ec518283",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "74520330-9a76-496e-a2d2-a4365d568d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc66a9da-ba03-459e-9596-fe3e95142be5",
        "cursor": {
          "ref": "c7c4b918-15a5-43b8-94ea-db2d6d178565",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "29c9e5bc-f5d4-4665-a286-a703f14b59e2"
        },
        "item": {
          "id": "cc66a9da-ba03-459e-9596-fe3e95142be5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "79d0bf80-ebc6-4fe9-9945-1001cf92489f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c435f172-0387-42e2-8c44-801be118fa87",
        "cursor": {
          "ref": "713fa44c-cd4c-4af6-942d-d2e9f3026fd0",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f55511b5-9d4f-493e-a66f-fd8379599413"
        },
        "item": {
          "id": "c435f172-0387-42e2-8c44-801be118fa87",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8ec9d7c0-9833-4973-a567-dd59eff27120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ac5d61-2447-4359-97a2-92a4bd52d82c",
        "cursor": {
          "ref": "32a82a43-c360-437a-ba04-12eccbe51b44",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ec9bb347-05c1-4dca-8343-1a8a4ab8de40"
        },
        "item": {
          "id": "e4ac5d61-2447-4359-97a2-92a4bd52d82c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0c1ebc49-57c0-44bd-a420-9a872b78ca17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b30f42c-d599-4357-aef5-2fab9f6dd02d",
        "cursor": {
          "ref": "0d271758-462c-4ae0-9f60-c2534fe1e3cc",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "0e4d2939-fae3-4d85-b3ca-e97823cb0ab1"
        },
        "item": {
          "id": "8b30f42c-d599-4357-aef5-2fab9f6dd02d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c5f5f465-810a-4c16-9b0e-f31fab783352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4afd974-d9c9-4517-8f4b-a34b8595b1dd",
        "cursor": {
          "ref": "64bd1046-75c9-4d67-9c87-8a8f51f0823a",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "aaf300b6-eaf3-4b7e-a5a9-8573fe90e982"
        },
        "item": {
          "id": "e4afd974-d9c9-4517-8f4b-a34b8595b1dd",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "89f72aed-c26d-46b3-8788-2d8c405b5d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac5e4db-0ddc-4cbf-ac84-63d40688aac6",
        "cursor": {
          "ref": "575776b0-af46-4c7a-8e71-3f8b376d5a06",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ef77f757-0045-4e99-ba0b-6e781335e9ae"
        },
        "item": {
          "id": "5ac5e4db-0ddc-4cbf-ac84-63d40688aac6",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "73a0935c-5ab2-4996-9012-f1aeb0569b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9958d6d-752d-49d4-b612-7e1975aaac2c",
        "cursor": {
          "ref": "e6d411a3-d3cd-41be-9b66-a478ed0dacd8",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "fdd70455-94f7-4bc2-af76-d527fcd735c7"
        },
        "item": {
          "id": "e9958d6d-752d-49d4-b612-7e1975aaac2c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "87f6f675-f1fc-4727-b2c2-52b6e923e64c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d831e284-8592-4482-b57a-128c21c305a6",
        "cursor": {
          "ref": "0b4ddcea-0604-4b10-8f97-69bc0dd9058c",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9fe3164d-0903-4c08-9374-0134c3c6e366"
        },
        "item": {
          "id": "d831e284-8592-4482-b57a-128c21c305a6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "424a9eb9-1e63-429f-86e4-b0c6dd4c21e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e791d3af-4e27-4da5-96bb-92f3a72cfd96",
        "cursor": {
          "ref": "d82849ea-65b2-41b1-917e-0bdacb62c5e9",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "80da375a-5aca-404e-90ef-6673b73d1a18"
        },
        "item": {
          "id": "e791d3af-4e27-4da5-96bb-92f3a72cfd96",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6c0c3f73-91c9-4597-bb5e-395664bb76b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ffed5c1-8683-4d10-a96b-8d4776642d83",
        "cursor": {
          "ref": "d2c36d66-477e-444f-bbbb-3332e75dfc34",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "15badb05-6381-47de-be40-8500bc60eee6"
        },
        "item": {
          "id": "0ffed5c1-8683-4d10-a96b-8d4776642d83",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "adb7d16a-a282-4b72-8098-fb63502f1747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b468aa-e4e4-4e01-b78a-dd2a85bc5295",
        "cursor": {
          "ref": "4cbe1328-47e3-4a44-914b-d7e817dbcf57",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d9e014ad-26ef-469d-b3e9-8592a17c0a9a"
        },
        "item": {
          "id": "43b468aa-e4e4-4e01-b78a-dd2a85bc5295",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c93ea6dd-673b-4c74-bb37-ef6015b30395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5478d64-91d6-4877-a338-942ebd8785fd",
        "cursor": {
          "ref": "984ddd97-bdc5-4fe3-a535-c8f3a8f46f0b",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8f1df657-0767-4039-9c44-1c79d54bba05"
        },
        "item": {
          "id": "d5478d64-91d6-4877-a338-942ebd8785fd",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9869a7b4-1ced-42cf-863a-e842249ce488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60c1a9b-155d-40af-b906-6232e2754c53",
        "cursor": {
          "ref": "a15cbb81-a205-4ca1-bd59-5a01854e808e",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "344558e0-d712-458d-9a56-b3f9a8f2f479"
        },
        "item": {
          "id": "d60c1a9b-155d-40af-b906-6232e2754c53",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "dc59ee66-5a61-49d3-b733-7f20060c22ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a2b41c-750b-4561-9b32-1b5b1cb57c61",
        "cursor": {
          "ref": "0bd57bf9-610f-40c3-902e-8628ce721307",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d5937430-aa9b-4ace-ae87-5ee006cadcec"
        },
        "item": {
          "id": "50a2b41c-750b-4561-9b32-1b5b1cb57c61",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8b98e97d-77e1-416e-87f8-ae3a710740f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047776b3-ef0b-4961-89ae-4948352fc6ac",
        "cursor": {
          "ref": "e655a541-dc78-436a-a40b-6bac7e500a03",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8c7f51dc-f649-47af-b3a5-1cdb3b41288f"
        },
        "item": {
          "id": "047776b3-ef0b-4961-89ae-4948352fc6ac",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c271c625-976d-46fd-ab00-ae113981cd1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c91960-36f2-4799-af14-dc571cc7f0b7",
        "cursor": {
          "ref": "cab5c794-5450-4f29-837a-98b90225200a",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f1f725cb-ba40-4fe8-99fb-5014a8c207d6"
        },
        "item": {
          "id": "99c91960-36f2-4799-af14-dc571cc7f0b7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c8ab440d-945f-45a6-957e-e34defcb49ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "528391d5-9f4b-41a0-bb68-ae63616a4b23",
        "cursor": {
          "ref": "c3daac9c-25cb-4ffc-b034-46cf88c0c92f",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "17278461-7c54-442f-bf22-f1eb70dc88e7"
        },
        "item": {
          "id": "528391d5-9f4b-41a0-bb68-ae63616a4b23",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "47c1aee8-0cb6-4181-91a7-e4088a5dbf37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01adab79-ce07-47e4-9588-e1e1cfd91ac8",
        "cursor": {
          "ref": "6f308b96-f4b4-418f-b616-932d64242539",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "87ecf275-fab2-4a07-bf2e-e6e7634f757e"
        },
        "item": {
          "id": "01adab79-ce07-47e4-9588-e1e1cfd91ac8",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "595b6409-8d9e-49b4-8c19-9e7a28427176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c913aac-04f0-4caa-9ad2-e76d18b57e2e",
        "cursor": {
          "ref": "0e396d0d-9702-4624-b9ed-aca7a9826695",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "24b3bf32-c3f9-4fdd-90a9-5f617c6cf35c"
        },
        "item": {
          "id": "9c913aac-04f0-4caa-9ad2-e76d18b57e2e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "37da84fb-0bd1-4346-a500-344a38b83a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e367e225-5c9f-4342-83bd-db94011e5761",
        "cursor": {
          "ref": "23f13b22-c96c-4e03-911d-da35a03f4817",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "39d32f21-5728-431e-8995-d3793f7df407"
        },
        "item": {
          "id": "e367e225-5c9f-4342-83bd-db94011e5761",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "63bc69b6-09e0-4f71-af2e-cbe35c2527de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb806541-5c3c-4c55-ac4e-6cc77e93d740",
        "cursor": {
          "ref": "973f076a-e4fc-4789-a202-737e2bef913e",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6a93fb1b-9609-4641-a0de-3f251135a9ef"
        },
        "item": {
          "id": "eb806541-5c3c-4c55-ac4e-6cc77e93d740",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a625894e-b8cb-469d-872b-ae79eeda31e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ba4062-fbcd-409a-8063-846e845cdb2f",
        "cursor": {
          "ref": "32e012cd-01c0-419b-a124-8e9741367bc3",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "fa232688-299e-4605-8bca-a3533191e19a"
        },
        "item": {
          "id": "d1ba4062-fbcd-409a-8063-846e845cdb2f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "14bbb514-19e3-408c-89c5-07db88524209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b27a1a-3d8c-4143-9d5a-74677ba8c86a",
        "cursor": {
          "ref": "daeadc13-af71-4049-a1b3-9e89be42d50b",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "dca76b09-1a80-4ea2-894c-af64174cc534"
        },
        "item": {
          "id": "f8b27a1a-3d8c-4143-9d5a-74677ba8c86a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "29be3351-cdfc-49a5-89bb-8c6b9668f78a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df5ba3c-4c79-493d-8e7d-296aac171fcd",
        "cursor": {
          "ref": "96665d6d-7af6-48ff-97ad-32b6dd578581",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "07f12b2d-7d55-4efc-ab3b-7b32d66c9007"
        },
        "item": {
          "id": "1df5ba3c-4c79-493d-8e7d-296aac171fcd",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b76a5fda-c3f3-4fb8-b8c4-d5a84eef7f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1654d6-173a-431f-bb44-26c4dabcca5c",
        "cursor": {
          "ref": "2ef738ef-d461-45e9-beb2-a31decfdd1f5",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c4189102-9fc1-4c44-a350-047057482523"
        },
        "item": {
          "id": "8f1654d6-173a-431f-bb44-26c4dabcca5c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "df384e73-a649-4dc8-a02b-412be929a3a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad33131d-e545-4607-8956-a04a615dcc55",
        "cursor": {
          "ref": "ae30dcfe-102f-43d5-a6c3-00530271308a",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3c50a05b-d1d0-4607-a741-a6e80c517c4e"
        },
        "item": {
          "id": "ad33131d-e545-4607-8956-a04a615dcc55",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "82c38d5d-c645-4c51-93a2-40a28457c509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6243ebd7-1f77-4a78-aca1-6479bdef6d8d",
        "cursor": {
          "ref": "57dbad61-d001-4010-99eb-800cf8f88a32",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1a69482c-fdfa-4e14-a7a8-47f4d90132ea"
        },
        "item": {
          "id": "6243ebd7-1f77-4a78-aca1-6479bdef6d8d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "aefbd00d-bda8-4350-9d2b-26701af1ae4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39183250-4d34-4f0a-9780-98ffbfe7ca22",
        "cursor": {
          "ref": "7381adc2-4e29-459a-9ff0-01059ac82a5d",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ee9dd42a-7928-4077-b157-e2e17e47b67f"
        },
        "item": {
          "id": "39183250-4d34-4f0a-9780-98ffbfe7ca22",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d64834e9-b505-4d03-9c04-c0afd4cf6e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de755763-6b03-4914-b806-b3ee69818d25",
        "cursor": {
          "ref": "fb8ae6c9-6c50-4814-82d0-0ea220aa8b55",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ca283d16-3149-41ca-974f-c4c2a9b64889"
        },
        "item": {
          "id": "de755763-6b03-4914-b806-b3ee69818d25",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b274b9fe-2afe-42dc-9e32-b05dd9702c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9d340c-d3be-426c-849f-48d29ee44f06",
        "cursor": {
          "ref": "a5d7f2f2-04a9-4374-ac1e-c3a76666e008",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "30426092-86d7-470e-8684-8627a1357b2a"
        },
        "item": {
          "id": "9c9d340c-d3be-426c-849f-48d29ee44f06",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b6a5cbe7-09d3-4116-b0e7-5fc18acf2d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a472a07-e829-4243-a323-37c0ff2365f9",
        "cursor": {
          "ref": "cd68eec3-73ff-4caf-8cf0-015cf79e14c4",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ed606ab5-f966-49e4-94b0-f93c839b14d9"
        },
        "item": {
          "id": "0a472a07-e829-4243-a323-37c0ff2365f9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4811a214-9a37-4b1b-a5e1-4a2818b1bd5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c3115d-a1d5-45de-a248-80d48387c3b5",
        "cursor": {
          "ref": "62152917-64fb-4fc7-8a12-c51e296c4745",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "845fd2d3-1159-4d9a-b1d6-ac7b448f03d5"
        },
        "item": {
          "id": "09c3115d-a1d5-45de-a248-80d48387c3b5",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c187e01c-3137-41af-a29b-79ab5a94b974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa131ba-992a-403e-b864-5fe323e4f5db",
        "cursor": {
          "ref": "739f4355-5f12-45f4-a52b-962a17beb70b",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "968505b7-254a-41b9-ab8d-f41903bf6507"
        },
        "item": {
          "id": "afa131ba-992a-403e-b864-5fe323e4f5db",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a3ee8f0f-3c1a-4007-82f5-1c9132e9a925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9dfeb8e-1f61-4d5b-b5dc-7243d352dd3a",
        "cursor": {
          "ref": "fde73a8d-5597-4527-a9af-bb948d3e97ae",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c2c16d8d-7e05-4063-bab4-07ffaab42856"
        },
        "item": {
          "id": "f9dfeb8e-1f61-4d5b-b5dc-7243d352dd3a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f0968133-6468-4381-a291-a87d9269bb18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79467ac-c4d9-4b24-a1de-6f3e9996dbc6",
        "cursor": {
          "ref": "f8808039-9e7a-4f0f-afe4-bc80506b2953",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e5b26e30-13bc-43fe-9c71-75b400abc3ff"
        },
        "item": {
          "id": "d79467ac-c4d9-4b24-a1de-6f3e9996dbc6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "43e5394e-28cf-404f-b1cf-1b807e4e4077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b868b22f-3575-49b1-b6fd-07383583ef32",
        "cursor": {
          "ref": "fc02b404-7aaf-463a-ae2f-43a49a419595",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9cb220a6-8d68-4b42-90ab-603e13049db9"
        },
        "item": {
          "id": "b868b22f-3575-49b1-b6fd-07383583ef32",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4bb5476b-8940-4a87-8d18-f71bee8aa15b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eedaa10b-7c42-4572-a563-194a851c1eca",
        "cursor": {
          "ref": "aa857b2f-7e3f-4e5d-81db-9e90e0720ed9",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1581cda0-4563-44a2-abcb-6f8bd4248161"
        },
        "item": {
          "id": "eedaa10b-7c42-4572-a563-194a851c1eca",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d26f34e1-488a-4a3c-802f-c28831c031f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92e3c59-e1ec-4f66-a49a-f950fb74eee7",
        "cursor": {
          "ref": "805d8f0c-60db-415d-8eb7-93af00a29b4c",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f1715db2-4e00-404a-b222-09b82f11531e"
        },
        "item": {
          "id": "a92e3c59-e1ec-4f66-a49a-f950fb74eee7",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "03ea8c9b-2741-413d-8220-a8b052596512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f4e4c5-c2b5-4975-9740-8c479a3819e5",
        "cursor": {
          "ref": "205fef06-081d-44a2-8b24-bf1ff812504e",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e2c7253c-cd8c-4261-b781-8dc9384082c6"
        },
        "item": {
          "id": "01f4e4c5-c2b5-4975-9740-8c479a3819e5",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1eea2b7d-bb2e-431b-887e-585b9e237009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2f5bc7-d122-4542-8804-2312f27b7dec",
        "cursor": {
          "ref": "b0a4ff40-b03e-4ac3-a87e-180e1493ed7b",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "dcb40f71-9def-4713-8d8e-bd46c523a840"
        },
        "item": {
          "id": "da2f5bc7-d122-4542-8804-2312f27b7dec",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "abc8dc1b-a75b-4727-93a0-8125acf8e37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046036b9-a9cb-4382-8ad3-ffb4a12ae3d6",
        "cursor": {
          "ref": "c68c7203-db30-462c-8a0c-2376fd27fbfb",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "dce88aa7-d900-4fe3-98a3-e5860cf8532c"
        },
        "item": {
          "id": "046036b9-a9cb-4382-8ad3-ffb4a12ae3d6",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "dabc4ef3-8db2-428a-8113-38197c598993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb85a468-ba2a-4376-8b25-dd66f242d5ad",
        "cursor": {
          "ref": "b30888bb-cf9d-414e-89c3-5354d57025a7",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "12593916-2a2c-4e51-8b90-c194dcde5c94"
        },
        "item": {
          "id": "eb85a468-ba2a-4376-8b25-dd66f242d5ad",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "90bfba70-2847-499e-9b41-ba41f9040ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd7c66a-de8e-4104-af49-468749824710",
        "cursor": {
          "ref": "b8dea8ff-ca43-4fc6-9547-470525b3e3d4",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "32d0c7f3-d836-44f3-93b4-c340173b2cd5"
        },
        "item": {
          "id": "4cd7c66a-de8e-4104-af49-468749824710",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "cbd8426c-b641-4edb-b586-c307816f2969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a1b862-15b9-4ec3-ae57-8c7e5745a423",
        "cursor": {
          "ref": "e4950def-49b4-459c-aafd-bc66dc534374",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6e186e26-6167-4f58-a05a-e1f13638e3fc"
        },
        "item": {
          "id": "65a1b862-15b9-4ec3-ae57-8c7e5745a423",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c8ad3d33-6990-4bc8-9e34-a3d82ab0171c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb76d73-969a-449b-918c-55fc672b4ff4",
        "cursor": {
          "ref": "eb4573b2-c4d9-4fc7-b5c7-6414944a34cd",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "bb906ac7-d328-4be7-9caf-9d687c59f2f7"
        },
        "item": {
          "id": "2bb76d73-969a-449b-918c-55fc672b4ff4",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "cb69eceb-1682-4c37-ab5e-233f99e23411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9dcbfc-02c1-485c-9d82-510e547d1068",
        "cursor": {
          "ref": "8a0e4706-c377-4123-a2a4-63ddc39f7b1b",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "9a123730-eba2-47df-8dff-0024e3eb8874"
        },
        "item": {
          "id": "7c9dcbfc-02c1-485c-9d82-510e547d1068",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "23cef496-e36b-40e2-a01d-c337d39998b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c9509d-9579-4f21-b7af-9522c35cebb7",
        "cursor": {
          "ref": "e21b53b1-84d2-4713-ad93-3ff5019620dc",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "da670fe8-c260-4653-8d93-912f1aa08996"
        },
        "item": {
          "id": "70c9509d-9579-4f21-b7af-9522c35cebb7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c0583eeb-fbd8-4023-8eab-8041b5df455c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c35078-f4fe-44c6-866f-939354cd9ed4",
        "cursor": {
          "ref": "15602190-f447-4f77-8cf8-23fce0448649",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2d34dd28-e205-4a61-b89e-ca246445ca5a"
        },
        "item": {
          "id": "32c35078-f4fe-44c6-866f-939354cd9ed4",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "279b78c9-6096-4ac8-8756-456868e397d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b01cb8-0077-41eb-866e-e8d3e854ad01",
        "cursor": {
          "ref": "d0dbfccd-2e03-4b44-9e18-35f206ea9782",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "886d78a5-48ae-4f64-8993-2435d039c75b"
        },
        "item": {
          "id": "54b01cb8-0077-41eb-866e-e8d3e854ad01",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6da19852-d23a-44a1-a32d-c80cdcd5e711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016ba2a7-1407-4b1e-af3e-b63ceab6f41a",
        "cursor": {
          "ref": "0f6c9857-16f2-4eb5-90f2-ddccbcf74abf",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "bc95f38b-5ec5-4779-8acd-5269d5dedf0f"
        },
        "item": {
          "id": "016ba2a7-1407-4b1e-af3e-b63ceab6f41a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "06a311af-c107-49bf-9aff-1a4022388e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52381965-8de3-4c63-84cb-56a0c76e726d",
        "cursor": {
          "ref": "b77000dd-530a-4045-b408-86984e04f444",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "84832de3-e870-443b-84cf-725a2038f202"
        },
        "item": {
          "id": "52381965-8de3-4c63-84cb-56a0c76e726d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "32a42822-50a1-494f-9ea5-1cf0ceed2f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d404ac-929b-45e8-bd52-096f1b4e3ee0",
        "cursor": {
          "ref": "0964b23b-8985-49c7-9487-cf8bc65c6f65",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d33be63e-b521-4b59-be1d-dd96638ba15b"
        },
        "item": {
          "id": "33d404ac-929b-45e8-bd52-096f1b4e3ee0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6016c18a-119f-472c-864d-fca4b61f2d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e16ea0-91fe-4152-ae47-17189354a467",
        "cursor": {
          "ref": "1f102918-e684-4213-959d-12a0def7ff6a",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "bfea802e-b3b7-45fe-bb35-b78506b46841"
        },
        "item": {
          "id": "29e16ea0-91fe-4152-ae47-17189354a467",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "366c029d-f539-4b60-aa33-7d7dfb61aabb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f44221-008e-4445-af58-ac053cb798c1",
        "cursor": {
          "ref": "00f74339-df88-4ab7-bb17-420d4e9e4e2f",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a6bc7757-bdbc-4619-b435-a21f5001767a"
        },
        "item": {
          "id": "01f44221-008e-4445-af58-ac053cb798c1",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a0a83d91-ba32-4cc5-a296-b13c96a2a079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13fdb9b4-fe1e-4816-b90d-0423a60fbf3d",
        "cursor": {
          "ref": "bc6f3612-f36f-4d92-87db-83c1218fc37c",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "61b4eb6f-f403-4c34-8096-0831ae1a0976"
        },
        "item": {
          "id": "13fdb9b4-fe1e-4816-b90d-0423a60fbf3d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7de39b2e-8ba3-40d9-a871-a9f1952a5bfd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9138ecd-bb4b-4e21-9da5-f553b2fdfde3",
        "cursor": {
          "ref": "5ed9442f-1f45-4ad4-b689-5d58d00b1c49",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b3082448-fed4-4eb7-8b0f-213e83e8578b"
        },
        "item": {
          "id": "d9138ecd-bb4b-4e21-9da5-f553b2fdfde3",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "4fe3f641-8319-4ea7-bcf7-86ec7dc0a78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "4294e362-36eb-450c-af31-15f1ca7b27b7",
        "cursor": {
          "ref": "549d4a16-eca1-4621-b6c7-a76224ab76f7",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7b53fa27-6255-45a7-87d5-58a5659ab8fc"
        },
        "item": {
          "id": "4294e362-36eb-450c-af31-15f1ca7b27b7",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5285db36-d633-4e7d-b162-f3a5b5a2c24c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "9acf9e1c-a87c-44bf-8d24-a2d687bb3dd0",
        "cursor": {
          "ref": "725c6976-1393-49d6-9155-f5bf7cee121c",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0514626b-7093-407b-a123-48dda4a93d9a"
        },
        "item": {
          "id": "9acf9e1c-a87c-44bf-8d24-a2d687bb3dd0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e46d9b28-3ea9-4a96-b9e5-e15a5ff0c1fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "b4e5ef4e-8065-400b-a8c8-f3cdf92feea9",
        "cursor": {
          "ref": "9997a23c-f2a5-4e19-b558-500346ca59ac",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "07df3057-8efa-470e-971d-e4a9f976d838"
        },
        "item": {
          "id": "b4e5ef4e-8065-400b-a8c8-f3cdf92feea9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "85f831b2-bacc-4f24-900e-5a82a401e243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "27af47c0-22b5-47c7-bb95-e11d939300f6",
        "cursor": {
          "ref": "0971da22-83dd-4bbd-935e-43a05a921bb0",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "bec219f0-dc15-4a44-83ff-fc1e06e8c3b1"
        },
        "item": {
          "id": "27af47c0-22b5-47c7-bb95-e11d939300f6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "536c4908-ecb8-4e56-a800-95e9434bf1e6",
          "status": "Created",
          "code": 201,
          "responseTime": 11423,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f199230d-fe9b-4caf-ab35-e20ce31a14ee",
        "cursor": {
          "ref": "140f29c3-5e50-4bd0-b5e2-3cbb9f32c1dd",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "aade4c3a-ec28-41aa-a81e-89cbff198bde"
        },
        "item": {
          "id": "f199230d-fe9b-4caf-ab35-e20ce31a14ee",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d1010dd3-4a63-4454-bf3e-5a2bef934aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "125b2757-5b02-49e2-8b60-282687fc5880",
        "cursor": {
          "ref": "7b2b043d-9983-4f63-ae07-48eafdfbadcb",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b55faafc-daeb-414e-bb9e-ff514fa35279"
        },
        "item": {
          "id": "125b2757-5b02-49e2-8b60-282687fc5880",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9fe6fedd-4e08-4a1e-9803-2cff2b5a4718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "4033578f-6a5e-482e-a9d4-1627e364c200",
        "cursor": {
          "ref": "e75c312b-4402-4cf9-9a4b-77c61e5f3f3f",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a1a5a861-5793-4e8d-af8f-bf5f4aca240f"
        },
        "item": {
          "id": "4033578f-6a5e-482e-a9d4-1627e364c200",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "26b978a6-aceb-41fd-aa9f-f791585f2b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5862fb11-9cc3-48de-b0d5-1738e154d53c",
        "cursor": {
          "ref": "a13e1e04-c6d0-4f35-90eb-bbfbac93b938",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6088d364-a373-4c4e-ab4f-f721a9623bd8"
        },
        "item": {
          "id": "5862fb11-9cc3-48de-b0d5-1738e154d53c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d38b6323-a602-4dc6-83f5-da2cbae69e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 196,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a095d1d5-6268-4be8-b947-43966f52fcfb",
        "cursor": {
          "ref": "90c19ada-50e1-4302-9928-becae75a3c43",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "abdae717-3d58-4252-825a-50e20b727800"
        },
        "item": {
          "id": "a095d1d5-6268-4be8-b947-43966f52fcfb",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1655b8ba-ed15-40d4-8236-a8ac6d082070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 202,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee4e079-f27c-4eb5-b45a-d701b0746c9d",
        "cursor": {
          "ref": "9bd4ca63-3998-4a1e-be1c-97b2d9097e95",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3ee65fc2-397c-4272-8d52-1cc109f24097"
        },
        "item": {
          "id": "fee4e079-f27c-4eb5-b45a-d701b0746c9d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5637b19c-c0cf-4aa0-9187-e8f9c66194de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d6b090-f955-47e2-b214-5eb5bf526f6b",
        "cursor": {
          "ref": "1b2e81c3-4525-4981-a795-08016d563d2a",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0d704149-88c8-4bcc-b10d-02b88f64d0cb"
        },
        "item": {
          "id": "91d6b090-f955-47e2-b214-5eb5bf526f6b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fdfbab43-c782-41f3-a5ae-9581a4db0bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4dc553-8fa9-481b-8625-a31261262b6d",
        "cursor": {
          "ref": "0daaa11e-319f-41b1-830f-a0953f8df299",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d472dd74-c1d3-4538-af4c-ccc4bf831a16"
        },
        "item": {
          "id": "ff4dc553-8fa9-481b-8625-a31261262b6d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3d5f1197-fea9-4009-ba1a-9ed7c1924d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc9c09b-21f9-403b-aae6-45aae94e99c8",
        "cursor": {
          "ref": "5a2dcfa6-868a-4ebf-a2d5-c53759abf433",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "7ac80e37-9c3f-4e52-a98a-917cb392c320"
        },
        "item": {
          "id": "2cc9c09b-21f9-403b-aae6-45aae94e99c8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3db49718-3af9-44ed-bcee-9d1eeaee52c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f3b74d-ae76-422e-a911-60dddd301ab7",
        "cursor": {
          "ref": "50815757-c879-44ef-a043-c828e040a3f5",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d9cdfac6-c70b-4d4e-a27a-bde96291b860"
        },
        "item": {
          "id": "43f3b74d-ae76-422e-a911-60dddd301ab7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "61859b82-47bd-49d4-a5ae-9bd788f067b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed51d789-58f0-4423-be6b-3c588d288fe0",
        "cursor": {
          "ref": "09eb5a9a-d619-4c8c-8f64-f8fa79b19b96",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e7647049-eb62-44c4-9520-48bcd61e5395"
        },
        "item": {
          "id": "ed51d789-58f0-4423-be6b-3c588d288fe0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0bf51d85-b622-4c0c-be41-0e46e5d38551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1283aa1e-a2a7-48f8-b36d-4ccb342180aa",
        "cursor": {
          "ref": "6c8b06fd-cc3f-40c2-9668-7d162f8be5ca",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8ad709c6-2a97-4568-9b34-34bbabdd9688"
        },
        "item": {
          "id": "1283aa1e-a2a7-48f8-b36d-4ccb342180aa",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ee39b7ab-ec8b-4759-a4a5-fd4bc85323e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8853cb-b674-48bb-8d6a-79f198d456dc",
        "cursor": {
          "ref": "8a183d95-0329-48ad-9446-a24958c533a6",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5cde8b3c-a858-4ac3-9a45-f3cf64846203"
        },
        "item": {
          "id": "7f8853cb-b674-48bb-8d6a-79f198d456dc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e898ad63-cce0-442f-9e74-5dc878ebc262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7265a721-a927-499d-9a93-cb93168c2569",
        "cursor": {
          "ref": "dd9b5314-fb28-45d6-9a2c-38e6338f013c",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "306e6786-87ce-46b3-9369-75a4542f23b9"
        },
        "item": {
          "id": "7265a721-a927-499d-9a93-cb93168c2569",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5042bcc8-b3d6-47b6-8a84-aee55347c21e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa1c052-21fd-4ce5-83b9-6cb75536c35f",
        "cursor": {
          "ref": "70c3b523-f106-4dd5-af34-68f028aae8e1",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "93a05e8d-1f64-420f-8051-633e5fa9f689"
        },
        "item": {
          "id": "baa1c052-21fd-4ce5-83b9-6cb75536c35f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "67708c4e-7bf9-4554-acaa-4bbce2c619a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb099c20-2ef4-4717-9582-6c00f3f2953b",
        "cursor": {
          "ref": "13016ce4-cc9b-4d99-9ca4-06ac7334ca5f",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "fd1795c6-6f1b-45e8-9448-af4abf79dde1"
        },
        "item": {
          "id": "eb099c20-2ef4-4717-9582-6c00f3f2953b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4be27caf-a85b-4a82-b398-152e7c480efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ec87e0-d851-4780-bdf6-6f6257bb9b14",
        "cursor": {
          "ref": "d12afa0c-5484-4463-8c94-7526821a7fe1",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d711d281-c908-4d1c-9e2d-e35e27e30d58"
        },
        "item": {
          "id": "58ec87e0-d851-4780-bdf6-6f6257bb9b14",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1501d6ae-b2dd-40cc-be1e-5214ea156ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7356d8-8a46-4b44-a28e-dbe7aeda721a",
        "cursor": {
          "ref": "ab1ce5ef-97e0-43fa-a902-75aa3a0d2cf7",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "780cd5ae-98c4-4d82-9402-1acf643cf557"
        },
        "item": {
          "id": "de7356d8-8a46-4b44-a28e-dbe7aeda721a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a2cca0dd-ce58-4a39-9689-f914908f4103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f23611f-b5f5-42ac-9b30-5ef01dc7839f",
        "cursor": {
          "ref": "10cbb68b-2730-4e99-a600-553ea8128992",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0767485e-c688-4647-ab20-37cfb3fd2ce1"
        },
        "item": {
          "id": "4f23611f-b5f5-42ac-9b30-5ef01dc7839f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "34c0e79e-8a30-4481-956c-652a0af0d2af",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 234,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "ca3a97ea-8283-489e-8aca-bbcca329fbfa",
        "cursor": {
          "ref": "5f6401b1-97af-445e-a090-714b5940fc70",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1e5c6ac6-a149-4b19-82fe-8ad5f44c81a9"
        },
        "item": {
          "id": "ca3a97ea-8283-489e-8aca-bbcca329fbfa",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3b9a72c4-4477-442e-b782-9475d6c59bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bac970c-b6ab-417a-81e6-b277ad8be850",
        "cursor": {
          "ref": "032a986b-cad8-4064-ae63-73ad332cbf2c",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "85edf281-4167-4417-8ca4-2636f449fd53"
        },
        "item": {
          "id": "0bac970c-b6ab-417a-81e6-b277ad8be850",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9be96de1-3e91-406d-b348-1783729a8c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13f9939-9845-451b-b7e6-49f13f859463",
        "cursor": {
          "ref": "933feaa2-c578-4266-8328-fe69b78757fb",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f9ff7179-8bbf-433e-95dd-ced76ec73a81"
        },
        "item": {
          "id": "f13f9939-9845-451b-b7e6-49f13f859463",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "09fc0dd3-e916-43f6-bf7a-26215e887bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59034084-1b77-4e3d-a422-c4ed7b63532d",
        "cursor": {
          "ref": "4a88c358-3d38-442b-a9cd-71c807af85ba",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c126f357-f7c4-40de-a813-4eb291a2ab05"
        },
        "item": {
          "id": "59034084-1b77-4e3d-a422-c4ed7b63532d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b07013c4-7cff-43e6-9ce5-0ee721418c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c188c190-219c-42e9-a8ff-a5c58201ba18",
        "cursor": {
          "ref": "a88426d7-4a2f-4f42-b326-2ee630068bfc",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1279b44f-8a5e-4dcc-b27d-99babf458124"
        },
        "item": {
          "id": "c188c190-219c-42e9-a8ff-a5c58201ba18",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9ae9f07a-12c4-4cf9-9209-51466e0b8020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae36647-0118-4948-80c5-5669d964aa62",
        "cursor": {
          "ref": "61118358-45d5-43aa-8dfb-f8be9dd3c8ed",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a456f2e6-a3a6-4e00-b3e3-739e74003836"
        },
        "item": {
          "id": "cae36647-0118-4948-80c5-5669d964aa62",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "26e42c03-fbdf-407e-86e5-029a29f9a641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47661439-cb2a-401f-9c9d-fb05f9e9678d",
        "cursor": {
          "ref": "926b8067-615f-4128-8376-a4af755c75d9",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "fc0a61dc-dfe7-47c6-a0e1-0d49090d6d63"
        },
        "item": {
          "id": "47661439-cb2a-401f-9c9d-fb05f9e9678d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c89990f5-e14b-44fa-b6c9-480e4d81bd76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d721e72f-f576-4204-9ecb-593b9e2e0e1d",
        "cursor": {
          "ref": "ade8c775-4e38-4d38-b078-466252a6cd8e",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7dca34ec-fa0d-42e7-b520-88b356b0f13c"
        },
        "item": {
          "id": "d721e72f-f576-4204-9ecb-593b9e2e0e1d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9fbcbf82-dce0-4c59-a6c7-679937e25e36",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "22d7c744-3243-4728-899e-4d325ca243ba",
        "cursor": {
          "ref": "b84dd0cb-7a43-46bf-a7fc-60c297091153",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6dcd4871-7acc-47a3-b30e-05a49f3b4046"
        },
        "item": {
          "id": "22d7c744-3243-4728-899e-4d325ca243ba",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3956c926-8349-418c-8aaa-5e7490107755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb9e6b4-1995-438d-8262-2bd985067256",
        "cursor": {
          "ref": "3c13afd4-a002-4ac1-9582-18cf90a0e10c",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "76362f32-7b70-459c-a158-48c6afa25566"
        },
        "item": {
          "id": "7fb9e6b4-1995-438d-8262-2bd985067256",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e41787de-4958-4530-8f23-be7b555dd30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1acd8c46-80ae-49af-ab18-d0088abfbef8",
        "cursor": {
          "ref": "ce87a625-28ff-4055-ae28-ab2c288c814d",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "69a0111d-46ea-4301-bc23-077c5c83e2ef"
        },
        "item": {
          "id": "1acd8c46-80ae-49af-ab18-d0088abfbef8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "be071c6c-b28f-46b1-b0fc-7cd09349e4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f06179-26b4-4b1b-a2ea-0317c982830a",
        "cursor": {
          "ref": "736a780e-5e60-4adf-ba6b-d9afba5234f8",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "01607bf7-98b0-4acc-9fd9-29efddae7c0d"
        },
        "item": {
          "id": "b2f06179-26b4-4b1b-a2ea-0317c982830a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e95aad9d-93e5-4441-8ce4-77a17d3974ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab0bd39-c451-4fed-8346-631974e23567",
        "cursor": {
          "ref": "3a5c03e2-d1b5-4f20-9d71-2617fadcfd67",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5a4f4b46-21bf-45cb-a05a-e34828941e06"
        },
        "item": {
          "id": "eab0bd39-c451-4fed-8346-631974e23567",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6cab9022-86cd-4536-8ec7-58afc2dc0925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd2e626-cd4d-4e3c-976c-3a9c6bf96d76",
        "cursor": {
          "ref": "30f7fcc7-7192-4834-83bc-6f1e6c414178",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "09b0ad28-72c7-4d50-8536-11fe1e8909fc"
        },
        "item": {
          "id": "bbd2e626-cd4d-4e3c-976c-3a9c6bf96d76",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "105f3c74-3821-401e-92b8-aac6c3d0734e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb2f42b5-f484-4844-9df1-e1f6d513b4d2",
        "cursor": {
          "ref": "c3b09896-fcb6-4b59-b456-e776cab34063",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2cd0b7bc-c9aa-4e06-a8ed-d8283dd96552"
        },
        "item": {
          "id": "cb2f42b5-f484-4844-9df1-e1f6d513b4d2",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "eef253ed-7727-4758-90ad-e7500b02a5eb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 83,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "55cfdec5-f2b6-44aa-ba9d-f1c7ee49781b",
        "cursor": {
          "ref": "13af6eb4-4f57-4c1e-9b81-d7a80ff106be",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "16585417-db39-460c-820b-2423215c6fda"
        },
        "item": {
          "id": "55cfdec5-f2b6-44aa-ba9d-f1c7ee49781b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5bc95231-ca59-4bc4-9819-465b3d77e261",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20cc8537-ccae-4a09-8b68-7aae34b96603",
        "cursor": {
          "ref": "8bf9570b-e4da-402c-9147-1c338cdbb1fb",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "03d85ffd-1249-40c3-bc61-104045139c52"
        },
        "item": {
          "id": "20cc8537-ccae-4a09-8b68-7aae34b96603",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "05d31eca-799b-4805-b2e2-c0a6ff9cf8e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be05745-d8c8-4611-840d-dccf55f7fff7",
        "cursor": {
          "ref": "08cff3a0-4ff9-4402-8c06-1cde3e0cec5c",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "0c4921d7-83bc-4b18-b963-7960a3c2bb86"
        },
        "item": {
          "id": "3be05745-d8c8-4611-840d-dccf55f7fff7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cdd2e4d6-a09c-4e60-a9b5-59ad94510a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737dfb17-83f8-478e-ad32-bb1d2884c3b2",
        "cursor": {
          "ref": "1960204f-268e-4cd8-8a2c-e6ab9f12f1af",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b91c3c50-d5cb-44ec-921d-2abab43517eb"
        },
        "item": {
          "id": "737dfb17-83f8-478e-ad32-bb1d2884c3b2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4f84b8c9-d2e0-4875-98b9-1fd38e0c7fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d410a440-b34f-4515-ab9d-7ccca4e8efc7",
        "cursor": {
          "ref": "148aaa08-3124-4f35-a0b5-1ee248867ea0",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3e5c8d4b-4410-4c16-ab1e-c2873d8cded0"
        },
        "item": {
          "id": "d410a440-b34f-4515-ab9d-7ccca4e8efc7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6354f460-807b-4338-85ab-df4d34f389cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6554dd0-4cad-465c-b7a1-00ed97829c6b",
        "cursor": {
          "ref": "c33b1d0f-2f2d-4192-9859-6e1bb9760220",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "fabb8137-51f2-433d-97fb-059340f90aff"
        },
        "item": {
          "id": "a6554dd0-4cad-465c-b7a1-00ed97829c6b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a125304c-a80c-4e40-8e3c-96940d9b4547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94adeba6-f0c4-408b-87e8-6a29ff822bc5",
        "cursor": {
          "ref": "c5abacc7-f8b4-40e0-b822-a499652b1e39",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "de968063-7f2d-4fbf-9505-4bd32c5db021"
        },
        "item": {
          "id": "94adeba6-f0c4-408b-87e8-6a29ff822bc5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ab37dfba-5de1-4d92-a38f-b204919d4852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e8e818-0abe-4e2c-91e5-04ca4c776481",
        "cursor": {
          "ref": "a303f8a8-e0a5-42bc-9011-b735133d3cd4",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2e75dfdc-3912-42cb-94ec-38110c58deeb"
        },
        "item": {
          "id": "b2e8e818-0abe-4e2c-91e5-04ca4c776481",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "72c5b131-c1cc-43c6-92fd-e410563e5cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88bb1932-56ad-4621-a22c-0ccb3a4c56da",
        "cursor": {
          "ref": "4e19aca3-9606-4fda-8f16-85bd09aad4d1",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "98904162-8501-4f26-b2f4-05c930b2bea7"
        },
        "item": {
          "id": "88bb1932-56ad-4621-a22c-0ccb3a4c56da",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "257eece7-b0d9-4ec3-a0c1-aee341c92db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f37517a-1a29-45fe-b0df-778917b8e739",
        "cursor": {
          "ref": "d1afb2cb-79d0-467c-b69a-444cc38a96f1",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "11271215-53e7-4372-8f62-cd127060a145"
        },
        "item": {
          "id": "8f37517a-1a29-45fe-b0df-778917b8e739",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "658f826a-e244-41a6-bfdf-ca95c7d71430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1db58f4-8bfc-425e-876c-11f7b3d43da3",
        "cursor": {
          "ref": "5295f21d-c146-44d7-a459-54490d47b56f",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4367fe4d-64ce-40f9-be23-ac6d95b23f8a"
        },
        "item": {
          "id": "e1db58f4-8bfc-425e-876c-11f7b3d43da3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6707fb0c-f713-4ece-b534-756183a0a7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512baecf-6b66-4882-bea9-e5ca217fd721",
        "cursor": {
          "ref": "c5637eee-d163-4468-b76c-2a45128840e0",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c5e778e6-6e97-4397-9cbf-d0dea4f0ec26"
        },
        "item": {
          "id": "512baecf-6b66-4882-bea9-e5ca217fd721",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7c06ec91-80c4-4e6c-924c-d0a0d6366821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b84297-125b-447e-9fd2-03a1756b1129",
        "cursor": {
          "ref": "3dec04e8-d787-45e2-9b9f-14aef79635f6",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "43303b70-7e1f-42f9-9c93-f0a079488e05"
        },
        "item": {
          "id": "08b84297-125b-447e-9fd2-03a1756b1129",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1ed62db6-7938-4211-bbb3-039e2c39304e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feba16b9-aba2-44e0-809c-d07e1218be34",
        "cursor": {
          "ref": "9c54f61c-fe3b-4c30-bd1d-91edbac2bdcd",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "39d064c9-271d-46e0-bf49-bd3dd736b678"
        },
        "item": {
          "id": "feba16b9-aba2-44e0-809c-d07e1218be34",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f2f653f8-3564-4723-9658-120fcf816fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ff90bb-2ccb-4742-a645-debf3af60703",
        "cursor": {
          "ref": "4ce3dbda-bdba-4342-b36e-4a36cb338c27",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4df86893-31c5-4356-a7af-22fda6ac4fc5"
        },
        "item": {
          "id": "52ff90bb-2ccb-4742-a645-debf3af60703",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ac9a6b14-9771-4aa4-b0eb-31b0c5f1f5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196fa3cd-acce-469e-9913-9759e1cb9733",
        "cursor": {
          "ref": "49e57c5f-6123-44d4-a764-bc11298a27f7",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a492b510-8bd0-490c-8ded-257cb56c177d"
        },
        "item": {
          "id": "196fa3cd-acce-469e-9913-9759e1cb9733",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "51ed5d23-d396-4cd2-b476-10fcaf8120f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1154842-5f5d-43c8-85b0-2563597c1206",
        "cursor": {
          "ref": "d63fc1ea-d17d-4a32-925d-0ad416f8e09f",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3ff0c87e-2c16-4360-900c-11c3917c19c9"
        },
        "item": {
          "id": "a1154842-5f5d-43c8-85b0-2563597c1206",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "dfad73d1-8301-4aaf-990c-fa9950c54934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f45b471-a528-4b94-9d26-a1d171e96df4",
        "cursor": {
          "ref": "8efc414f-dbc2-4dc0-a474-56e7d458a2fd",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d4d1ab43-751f-4e6e-8dc3-2b2bfe9ffb33"
        },
        "item": {
          "id": "1f45b471-a528-4b94-9d26-a1d171e96df4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "df4cd612-523b-4aad-b9b0-b02891f11478",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "276e540b-3f06-41b6-93b9-a6de142f0ccb",
        "cursor": {
          "ref": "a311e8e2-5e9e-4652-8e21-08940b9b2990",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2a393759-1391-4371-9050-7f66947740d4"
        },
        "item": {
          "id": "276e540b-3f06-41b6-93b9-a6de142f0ccb",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2dea87e7-3d9d-4c51-bd64-af8be42535a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea244d74-dd82-476b-bddb-46bdb24f1c32",
        "cursor": {
          "ref": "2864a1fb-daaa-448f-bf22-8ec756b9885d",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "303e4008-d283-4fcc-a514-d448c5fe257c"
        },
        "item": {
          "id": "ea244d74-dd82-476b-bddb-46bdb24f1c32",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "06231cd1-ca8a-419e-926d-a61c9119dbf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a573fe89-73ff-4dc9-ba1f-41c3bcbaa630",
        "cursor": {
          "ref": "1b6f124a-3a5b-48e1-b940-b2c545594cb5",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "aa25cc29-9fd9-4811-8f82-2db26b8b8728"
        },
        "item": {
          "id": "a573fe89-73ff-4dc9-ba1f-41c3bcbaa630",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "24ecb2a8-7463-48dd-ad3f-bd07b9047021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d4d085-a491-4cc6-b1c4-f36f2372fb4b",
        "cursor": {
          "ref": "02da47a2-9cdd-4974-b3e3-bca264b1cb5a",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "cec18101-b111-48a4-9c74-17e8f94b2d73"
        },
        "item": {
          "id": "a6d4d085-a491-4cc6-b1c4-f36f2372fb4b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "05b67421-2e1f-494a-b3c6-41725340f4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4adf71b-6892-42ff-8eb5-8e2feba8b54f",
        "cursor": {
          "ref": "1ea79171-76f4-4b4a-8d1f-c4795f2b8b76",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "71583b91-fd4f-45fa-9d2d-b47b6dfec0a5"
        },
        "item": {
          "id": "a4adf71b-6892-42ff-8eb5-8e2feba8b54f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b3d4b25b-d4bb-4f77-a619-c5c540160ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d620ab-aa5e-414e-8a9a-8d20d4b590a8",
        "cursor": {
          "ref": "c969eb9a-87df-4f7d-87d1-124e7242f3b7",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "55588e79-ef06-4341-aa64-2d098d33cb23"
        },
        "item": {
          "id": "a0d620ab-aa5e-414e-8a9a-8d20d4b590a8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "597c0ac8-b8e8-41f6-b1a9-e8278f9730fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091fceb6-c30d-453c-954e-88bc0aa25b4b",
        "cursor": {
          "ref": "d9a92138-0bc2-4d39-9ef5-c272153c53b4",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "cd56ec56-7da9-4a19-97de-251834756b2d"
        },
        "item": {
          "id": "091fceb6-c30d-453c-954e-88bc0aa25b4b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6748e54b-484e-4bb8-b7e3-7c217b38615c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4bd73d-3162-4a16-a4d1-0f0689603b21",
        "cursor": {
          "ref": "7dd3ec86-e7ee-42db-97c1-48d75354bc30",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "97c71bad-a32f-473d-81c1-9cd8a4454a6b"
        },
        "item": {
          "id": "2a4bd73d-3162-4a16-a4d1-0f0689603b21",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b2db2d85-a88c-4e84-939b-3270b4a21f5d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "52404ba3-99be-4d68-9c04-bae7ce4e3be6",
        "cursor": {
          "ref": "525da8c8-4860-48be-b10a-98b6da295c48",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4e5d4867-e475-47b8-ad3f-da64c015d471"
        },
        "item": {
          "id": "52404ba3-99be-4d68-9c04-bae7ce4e3be6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "93e3745f-43a6-40b2-8cc5-241436175bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df03d7a2-f8c8-457b-91b3-6870647aeb88",
        "cursor": {
          "ref": "86c3fd4e-73b8-49a6-ae95-3bd5b7d0dcc4",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "bdda7504-a15e-45df-a5fd-8f8806f00337"
        },
        "item": {
          "id": "df03d7a2-f8c8-457b-91b3-6870647aeb88",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "43d3a708-8b6e-40d8-b875-63d2e843a8be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61018c8-f807-4083-8bbd-078c1b90b755",
        "cursor": {
          "ref": "9eee175d-b1f5-4673-98fd-aa5aa0961a21",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9868892d-7ec4-4dca-9582-9dfd3b4ea1c5"
        },
        "item": {
          "id": "a61018c8-f807-4083-8bbd-078c1b90b755",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d2253fd2-0ae1-4b46-b6ea-e473b4da44f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0fb1f7-53cd-48b8-88a9-70c554e37bad",
        "cursor": {
          "ref": "2445175b-4a4e-4f45-a0f7-8be9a5d0db05",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0197a1eb-f125-4019-b046-3d4c26ea2a2e"
        },
        "item": {
          "id": "bf0fb1f7-53cd-48b8-88a9-70c554e37bad",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8b711071-5e45-4fde-a8c2-d0d2e6ead976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717a2f73-1f6a-4392-abb3-29fc3775fb1d",
        "cursor": {
          "ref": "4bdc82bc-d331-4cf9-b8d5-0615ea959c87",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0479a17e-22fc-4386-8e29-dd328468d31c"
        },
        "item": {
          "id": "717a2f73-1f6a-4392-abb3-29fc3775fb1d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e2664728-cb6b-44da-872d-f858e824fa1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1121479e-66c2-4efa-954d-db67b09c6a29",
        "cursor": {
          "ref": "4d963dba-893c-4d3c-b7bb-b559b6c30583",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e30b7363-5cda-4c8a-8028-34ba798b44aa"
        },
        "item": {
          "id": "1121479e-66c2-4efa-954d-db67b09c6a29",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c9f9eb68-9356-4e61-8b4b-8a1903a905eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b7c9a6-d7b4-4dfe-b008-27972e9ebfce",
        "cursor": {
          "ref": "f5bdb647-0bc8-4470-b34b-386eb04ea927",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f1eeaff1-62f1-46ce-9d74-331447631bb9"
        },
        "item": {
          "id": "10b7c9a6-d7b4-4dfe-b008-27972e9ebfce",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "2500d3f5-359d-4084-bf7a-679ec60367cc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "a07a5cd5-f062-483c-9f79-0566b3136463",
        "cursor": {
          "ref": "45f8d246-6861-4cda-92d2-d8537b6681a7",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2434dec8-1620-49ff-9b0a-d62e98cf6814"
        },
        "item": {
          "id": "a07a5cd5-f062-483c-9f79-0566b3136463",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "e866c3d0-5312-4f37-8403-771cdd5df784",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "a960d2be-b546-420e-b142-64e7e829a1c1",
        "cursor": {
          "ref": "d55dd861-4632-44db-a2b9-58665e71d3fd",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ac120db4-41c9-44ce-92ae-4fb111f6d892"
        },
        "item": {
          "id": "a960d2be-b546-420e-b142-64e7e829a1c1",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d5eed9db-0bea-4a0a-8de8-3bc49c7f69e1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "b2e6157e-934c-44ac-aa77-37414bd8c616",
        "cursor": {
          "ref": "caf9468a-eea0-4406-b85f-d9a31601d404",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "08b6f27a-ad7c-49b2-a3c3-00a7bc7989b1"
        },
        "item": {
          "id": "b2e6157e-934c-44ac-aa77-37414bd8c616",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b4a9b2c3-6ac0-47d4-ac23-d93091393eea",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "f1f9ab8b-26d7-4890-8959-c7de157546cf",
        "cursor": {
          "ref": "b0f2d892-2771-4604-a90e-abe412a8d742",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "cd164864-2728-4b7e-b985-7eab83ba425c"
        },
        "item": {
          "id": "f1f9ab8b-26d7-4890-8959-c7de157546cf",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a9f6a7e0-77cb-498a-9b60-f19ceeff1c84",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "bb8dcfc5-7721-4c17-9423-656eb934141d",
        "cursor": {
          "ref": "050fd4c1-bf69-43ff-80a2-f23cd80f3afb",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e3949d3b-1df1-43bd-85c0-b53ef46c03af"
        },
        "item": {
          "id": "bb8dcfc5-7721-4c17-9423-656eb934141d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "6e0de968-7e4c-42e4-babf-3eb9a36eea07",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "784f2084-f446-4b42-8aba-e19053e109e3",
        "cursor": {
          "ref": "319c66d8-bafb-45d1-8fc4-f9825e4a5c05",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "eb515df1-8519-4cbd-a9e5-00122c3c4341"
        },
        "item": {
          "id": "784f2084-f446-4b42-8aba-e19053e109e3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0cc3d299-f0d2-4aad-8ac7-0d19ee236551",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "288a5ed6-6dc5-493c-be9d-e8874facd7aa",
        "cursor": {
          "ref": "71a6f816-3b0c-4b2e-afc3-7603f026de39",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "297802dc-d12f-49cc-8f1f-4f2f9d0dc0ab"
        },
        "item": {
          "id": "288a5ed6-6dc5-493c-be9d-e8874facd7aa",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "874350a6-ce79-42fb-8a4f-0dee77c45045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59d4218-5017-4e33-8ae0-1140397199e5",
        "cursor": {
          "ref": "502d4fb5-de83-4928-96f2-5abf680c9365",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6fb2348d-b307-48cd-930d-d240d39a5c4d"
        },
        "item": {
          "id": "f59d4218-5017-4e33-8ae0-1140397199e5",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a59ffac5-ba24-4fd3-b023-e998ca64796b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4819c8a-703a-4514-a67b-3ecb601a59f2",
        "cursor": {
          "ref": "c743e546-6f24-4262-abd8-178d14561d4c",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b7da279f-9ae8-4daf-848e-2f7209c56100"
        },
        "item": {
          "id": "a4819c8a-703a-4514-a67b-3ecb601a59f2",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "5dc3abcb-82a7-4bc7-8b7b-d37adb643b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b568fbd-8f11-4371-bc4e-5809271f7fbc",
        "cursor": {
          "ref": "2b356d4e-e258-4315-8db2-d800462d1054",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "377acf24-7902-4cfc-994c-6f70d8d6d2a1"
        },
        "item": {
          "id": "6b568fbd-8f11-4371-bc4e-5809271f7fbc",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6d574a07-1a40-4557-86bd-eb2af34922e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8d1577-590d-47a5-9ecb-085fc83dd3de",
        "cursor": {
          "ref": "d83eec6b-18d4-4446-b290-d1cc240c364d",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "352be810-a2a7-4c1d-9ba1-fc79bd6081dc"
        },
        "item": {
          "id": "ce8d1577-590d-47a5-9ecb-085fc83dd3de",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b3f8498a-201d-45c6-b06f-d0c2bfbbf15d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "819f6592-65b2-4f04-9f81-7f3cf06a6c78",
        "cursor": {
          "ref": "4232b6a6-d646-4344-a942-5129f13048a6",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "11e8d517-4171-48c0-b6ec-f88d4287ca4c"
        },
        "item": {
          "id": "819f6592-65b2-4f04-9f81-7f3cf06a6c78",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8bd686e3-3f06-40c9-9b6b-1c146af0f753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eacb8f25-e36a-4f62-9019-94ed3981771a",
        "cursor": {
          "ref": "c42d330a-405e-46a2-a4d5-5803daa538bc",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "858a7e60-2c89-45fc-a19f-807754ff1228"
        },
        "item": {
          "id": "eacb8f25-e36a-4f62-9019-94ed3981771a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5f4ea590-cbc6-4f9f-a0ae-94fea2670372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8edb3759-c63b-49fe-b75d-5bf024d6aa88",
        "cursor": {
          "ref": "bcf13561-8151-4284-9256-efcc466af513",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "fd32ae3a-b2c2-496d-8f72-a2c1c8d21503"
        },
        "item": {
          "id": "8edb3759-c63b-49fe-b75d-5bf024d6aa88",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5875335b-20f5-431d-bb86-8c08130e2a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1c2fd1-7159-4dcd-b43f-4d50bcf97183",
        "cursor": {
          "ref": "2c7c250c-0289-4b70-8a01-f6f2a66fec34",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f5176565-8260-4fb1-a078-3d9c0edb9eae"
        },
        "item": {
          "id": "8a1c2fd1-7159-4dcd-b43f-4d50bcf97183",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0a765ba9-50eb-44a2-b693-b6d512bca5c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f10001-d7c5-4dc2-8127-d891234e05cc",
        "cursor": {
          "ref": "c69c830b-3631-4ce8-b97c-764c4a5a9a1b",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f88109f1-7920-41e3-83d1-bacf4800bd10"
        },
        "item": {
          "id": "86f10001-d7c5-4dc2-8127-d891234e05cc",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4455cb62-866d-49db-9bbb-c09feabd0478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c24d927-2737-4f58-ac09-8d00b4691bac",
        "cursor": {
          "ref": "aae71cbb-af8a-4eb7-b8f5-b3759e0b05a7",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "283bb1a9-dc61-4073-a6f7-4cbd57f4cdb7"
        },
        "item": {
          "id": "1c24d927-2737-4f58-ac09-8d00b4691bac",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "fc3f5c5e-c55e-4d85-b960-09f8c26e4c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fab804f-0b35-4fd8-a1ff-ae65fe2d16a4",
        "cursor": {
          "ref": "e3751f97-75b1-4bbc-bfbe-b042d932466b",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9a45d9e2-e6af-4a16-8090-06d5fb7345cd"
        },
        "item": {
          "id": "3fab804f-0b35-4fd8-a1ff-ae65fe2d16a4",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8152f5c6-4d10-4005-a1b9-b32db51aaeb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84244fc4-e71c-4b95-9367-53465c3ede05",
        "cursor": {
          "ref": "40693a98-a2ef-4bef-a8d0-2349858d2200",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c1b143b5-f248-427a-ad94-08bf1d88ef29"
        },
        "item": {
          "id": "84244fc4-e71c-4b95-9367-53465c3ede05",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a73cf045-e2cd-4d62-bc2a-56746bb763de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c73521-11f5-4e3c-88d7-b7ecef768550",
        "cursor": {
          "ref": "e0c4cbd1-dad0-469e-8d36-24126748a703",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "81bff9e2-caf5-45d9-9f65-a47ef4df371d"
        },
        "item": {
          "id": "d0c73521-11f5-4e3c-88d7-b7ecef768550",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "fc3e7295-f379-4fd4-ba43-0d4136eccee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad8b192-0254-4d77-83ae-a54dde6eb3b7",
        "cursor": {
          "ref": "bbacde63-875b-4104-83c9-8c08d77e8749",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "499026ac-20cc-4654-948a-679270ab3068"
        },
        "item": {
          "id": "5ad8b192-0254-4d77-83ae-a54dde6eb3b7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "eb0e4dd3-b2e9-45ac-9ec5-cc82e656f663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74799a97-6715-43ad-aeaf-9ec2132c5405",
        "cursor": {
          "ref": "76020dc9-cd11-4632-a0b6-560b33252b3d",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c2f8f499-124b-4c4f-a750-d7fafecef423"
        },
        "item": {
          "id": "74799a97-6715-43ad-aeaf-9ec2132c5405",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7de87e07-b18f-419b-8994-f806273bfb29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c71afa-2fd8-4647-96d1-3281a6170027",
        "cursor": {
          "ref": "babcf678-a264-46be-ac77-bda6e395da1f",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d68ba6e3-163c-4215-95e5-45af48af9b84"
        },
        "item": {
          "id": "d8c71afa-2fd8-4647-96d1-3281a6170027",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5834b264-e050-4f35-977e-c5a6e534e5ec",
          "status": "OK",
          "code": 200,
          "responseTime": 88,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "110e1873-bd1b-40c8-9bbb-4b2b26390439",
        "cursor": {
          "ref": "9dcc1135-04fc-4f94-b41b-645f4c19d761",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "31e92a6d-96fb-4d12-8b45-bd15a28ebfd6"
        },
        "item": {
          "id": "110e1873-bd1b-40c8-9bbb-4b2b26390439",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8e03fbae-6029-489f-918d-5f6c7e3c88ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "059289bc-11c7-4aea-b060-c73a0edd48c8",
        "cursor": {
          "ref": "98456d64-c6b7-43b9-90dd-d5e4cf84716a",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c1c4599a-d75d-4b0f-91e2-672522afd4d8"
        },
        "item": {
          "id": "059289bc-11c7-4aea-b060-c73a0edd48c8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ea685bec-07d9-4229-8017-0273e4695235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ec1896-755e-4d2b-a143-d3fe7dd002e2",
        "cursor": {
          "ref": "dbfa2327-c6a7-4ca4-9cfd-f84babd8dec5",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d41a28e4-327f-4a9e-9d31-34d008163ad5"
        },
        "item": {
          "id": "f3ec1896-755e-4d2b-a143-d3fe7dd002e2",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "77871ae8-3186-4683-a567-648184654022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c129b379-0d08-4ecf-880f-41240d51552d",
        "cursor": {
          "ref": "675a43be-d498-4735-a346-5e4c02d519db",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "684bd725-16a1-404d-8381-1d051708df29"
        },
        "item": {
          "id": "c129b379-0d08-4ecf-880f-41240d51552d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "07fc5890-c318-4ac2-a7df-bf89c1e720c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceaca8f0-f3ce-4c75-962e-e7fc828e2c31",
        "cursor": {
          "ref": "78b52316-b0e8-42f3-a3ff-c338aa16edf4",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0fced0f8-042f-4acc-8783-1f4c8f689894"
        },
        "item": {
          "id": "ceaca8f0-f3ce-4c75-962e-e7fc828e2c31",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "81afa273-b4e7-4e47-9a60-b086ce0f2091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f8a89f-3d2b-4812-a3c0-a2f68859aa38",
        "cursor": {
          "ref": "f3eee3ae-8d51-42e7-bd5e-e9883e96c605",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c0d0f481-47aa-432a-a5ca-a92d130c4546"
        },
        "item": {
          "id": "19f8a89f-3d2b-4812-a3c0-a2f68859aa38",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6ff7f4f0-8bb1-4100-a143-1a0cbd280ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c91cd3-22da-45da-a6d2-3c65e6a9b9d0",
        "cursor": {
          "ref": "69905921-2e3c-4e7f-a1f2-76e013a845e1",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3554f590-1d14-4c31-97c6-cd88798b6665"
        },
        "item": {
          "id": "27c91cd3-22da-45da-a6d2-3c65e6a9b9d0",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ff941672-eadd-43e9-98da-1ebffe7a0cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164b4b70-d2d9-45d9-8f71-4e96a3bc411b",
        "cursor": {
          "ref": "6a7b06f0-6e5d-4913-99ad-177bbcb4bf45",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "aa131bb8-eafb-4621-9422-63d1f9d8f763"
        },
        "item": {
          "id": "164b4b70-d2d9-45d9-8f71-4e96a3bc411b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4de3c193-6a8a-4afb-b4e5-26465bc423f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a3f137-3cf3-4c56-9603-b324eb3995c8",
        "cursor": {
          "ref": "df611cea-825b-480e-8b80-9d241dd5c29e",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "052b44d1-a82f-4311-9774-70f3d00ec270"
        },
        "item": {
          "id": "a2a3f137-3cf3-4c56-9603-b324eb3995c8",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2fc5f777-6df4-4fc4-ba10-c89bb91b57e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc50eeb-3ef0-4e5a-bd31-104d8f74110f",
        "cursor": {
          "ref": "83ad1754-eff5-4283-ab89-4638426e3af9",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ac25ba6e-ee22-4804-a32d-87210c7c4ec2"
        },
        "item": {
          "id": "4dc50eeb-3ef0-4e5a-bd31-104d8f74110f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ce70f36d-0df7-4111-9855-39935beb41e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1fcc01-1430-4a50-b8cf-b1afba30751b",
        "cursor": {
          "ref": "0551cb1a-a731-450a-a35f-fce63838a089",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f87fd77f-d84d-4346-8b24-f2afd9c8ac14"
        },
        "item": {
          "id": "9c1fcc01-1430-4a50-b8cf-b1afba30751b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0aff56d5-c187-4f7d-8bca-f3ec7c3a0c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c79d9e-0d1a-4845-b1b5-163974121c03",
        "cursor": {
          "ref": "78e66a55-f5d6-442b-8939-a3f3cb293870",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b7df6537-b62f-4b82-8930-bdffafea8fa3"
        },
        "item": {
          "id": "20c79d9e-0d1a-4845-b1b5-163974121c03",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c57de422-00f0-4708-a146-67441c2c215d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6d2c7b-f280-436b-8656-0a6b65a858d9",
        "cursor": {
          "ref": "98630a76-2326-4a51-aedb-58dea48e9c12",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3cdda469-eb76-4b57-bcb7-6685363d8c7b"
        },
        "item": {
          "id": "1e6d2c7b-f280-436b-8656-0a6b65a858d9",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c314cd22-83ef-4d51-afec-c3d271195df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b92f41-76e4-4fbd-8ab7-250462ccd177",
        "cursor": {
          "ref": "ec22176f-8b2e-42bb-be95-96368b488c8b",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8d6c9c44-0f99-42c5-ad42-495aed2bc00c"
        },
        "item": {
          "id": "e7b92f41-76e4-4fbd-8ab7-250462ccd177",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6c7ce73f-0cc1-4e51-90c4-39e4d7f0540b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec177b4-e705-432f-8414-fe4812807de9",
        "cursor": {
          "ref": "1a198499-6c44-40d2-997f-973460a05863",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "4ba770d8-1961-4f70-afac-77da4bb2661c"
        },
        "item": {
          "id": "4ec177b4-e705-432f-8414-fe4812807de9",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1848e42a-32f3-46e1-9fe5-bdb2daec3fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8415069-cd57-4524-b429-053bee06c6e0",
        "cursor": {
          "ref": "d4397b61-ccf5-43c9-89ee-7a56ed27b4f8",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "34c02b68-dc8d-4b0f-b3ce-57ef0ed4e6d8"
        },
        "item": {
          "id": "a8415069-cd57-4524-b429-053bee06c6e0",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "617f1def-6426-4ac8-a876-9813f0444541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c55419-2a33-4811-bede-87f7e5f1e7d0",
        "cursor": {
          "ref": "7bb2280c-1bfa-4181-b529-3ce85ff5e3be",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "90ac9f38-919c-424b-85c1-ac5f05f22523"
        },
        "item": {
          "id": "f7c55419-2a33-4811-bede-87f7e5f1e7d0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1af03c94-5b74-441a-8fd3-462e838015a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a30aa1-8278-43fc-bd5f-b724cfe4b984",
        "cursor": {
          "ref": "225b3c1a-0568-4009-9ba4-64cd7272a81e",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7bf5b945-1212-4981-bef2-5dd6a95ee445"
        },
        "item": {
          "id": "74a30aa1-8278-43fc-bd5f-b724cfe4b984",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ab6751a5-c710-45c6-b283-0f73642743e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4ed0e7-820f-4d54-966e-3454376c00ab",
        "cursor": {
          "ref": "d0171189-f908-465c-890a-d38ff3938692",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f21853fd-8a7f-4adf-9359-eced2cfbeb8d"
        },
        "item": {
          "id": "9e4ed0e7-820f-4d54-966e-3454376c00ab",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "261991ee-cf5d-41f1-9d6e-8d591203b003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5575e172-5ddc-48d0-a916-54edb9d4c4b5",
        "cursor": {
          "ref": "b0082115-b7b1-4e55-a81c-ae65fe79bc70",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e48c2af2-c425-44ff-a7a0-dd7ceb7e1e06"
        },
        "item": {
          "id": "5575e172-5ddc-48d0-a916-54edb9d4c4b5",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a849c56c-09a4-4f9b-96cd-75b696a4bab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424e75f0-267c-4b46-bf39-803318f294cd",
        "cursor": {
          "ref": "ad6228e1-9be3-411d-b99d-6e5cd2ec2e1b",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "856d5372-15f7-487c-922d-7cc293418200"
        },
        "item": {
          "id": "424e75f0-267c-4b46-bf39-803318f294cd",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ccb8cdeb-c695-4a0a-a632-038d13c20cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d85a88b-315d-4202-9bbb-fbf2fc7d0b91",
        "cursor": {
          "ref": "b0d1ddcb-b189-44fc-b1b6-29ec97e082e0",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c0d4be48-7077-454e-a49e-39365c402394"
        },
        "item": {
          "id": "0d85a88b-315d-4202-9bbb-fbf2fc7d0b91",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6813ab94-26e3-4e83-9f15-b974eb7386c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f13c0c6-3158-4d7d-a121-ec5eedfae3bb",
        "cursor": {
          "ref": "22732da1-2719-412d-9666-efe70aa1395e",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a62629f7-8ded-412e-b114-cdec170b933b"
        },
        "item": {
          "id": "7f13c0c6-3158-4d7d-a121-ec5eedfae3bb",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2184acfd-4218-44a1-8936-07730b8e926f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda4b034-a4ca-4897-86b6-87b92d432c30",
        "cursor": {
          "ref": "f36d3767-19ee-4fac-86f9-b67c9fc20389",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6c2e2fa6-976c-4b90-b333-7d473283bed9"
        },
        "item": {
          "id": "fda4b034-a4ca-4897-86b6-87b92d432c30",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9e343a3d-a58d-4fc7-8302-5156e66ffffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb46828-2829-4ec2-a548-69511a133c57",
        "cursor": {
          "ref": "b4d6e8cc-82ec-4c39-a2b3-e04837a79e11",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "027c5daf-b185-47d5-b375-6ea9ba2b5e0e"
        },
        "item": {
          "id": "4cb46828-2829-4ec2-a548-69511a133c57",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "eb8ccde5-778c-4f4e-9e7d-3ea6d9dea070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28bcbd3a-0d63-445e-85d1-01447f42a993",
        "cursor": {
          "ref": "5012b407-eeba-409a-a5fc-f1359c411402",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5d3bbef0-8a36-41b0-a4ca-13c660cc70f4"
        },
        "item": {
          "id": "28bcbd3a-0d63-445e-85d1-01447f42a993",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3031dc99-64fc-45f0-8f84-c2fe01689c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962ecb49-3547-4b1a-97a3-c49a7ee96371",
        "cursor": {
          "ref": "f44b331d-33c2-46e3-b76b-219f5595e5b5",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "903fbc86-b5ee-44ce-8b8d-485d7dfc7cfc"
        },
        "item": {
          "id": "962ecb49-3547-4b1a-97a3-c49a7ee96371",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0cb6c75c-3632-429b-8fdd-fb25cbc6857a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432248a8-c178-40b4-953f-8ad95d6ea965",
        "cursor": {
          "ref": "94583025-1fce-4a37-a69e-83f01c26ad35",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "798699ec-9be3-4d74-aa4e-7695f4a06c1c"
        },
        "item": {
          "id": "432248a8-c178-40b4-953f-8ad95d6ea965",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0273437a-ba3b-44eb-867e-b39db1888e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb6ab91-e4d3-4855-a8af-d248c9160bb2",
        "cursor": {
          "ref": "12e9094b-2dc1-4333-9107-cbf02e53015b",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "bbc0b826-4f5c-4600-a86e-3a895f2fe00e"
        },
        "item": {
          "id": "acb6ab91-e4d3-4855-a8af-d248c9160bb2",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "919df4a1-ce45-45f9-b25e-90b02679cccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aefdd723-d162-4e4a-8998-f108b5122b46",
        "cursor": {
          "ref": "e7dcbb92-4a82-4075-89bf-6efdff9c6c7f",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0ed69dec-2f96-493a-8349-eb864ee34c77"
        },
        "item": {
          "id": "aefdd723-d162-4e4a-8998-f108b5122b46",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "92bda2a5-9dbf-49ec-bc57-f1e7494a0881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c509cc4-3e72-4053-afe2-be9894abe9e5",
        "cursor": {
          "ref": "2d920bdb-6e20-4b56-9a6c-d354ef0051a1",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d64cb7b5-d3aa-4537-a71a-7bdd7cefeb77"
        },
        "item": {
          "id": "9c509cc4-3e72-4053-afe2-be9894abe9e5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5058e51c-b142-4283-9043-598ada7147ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17888c15-be59-40a3-8939-ec9ca83160a8",
        "cursor": {
          "ref": "785d701e-ccf7-40e0-a92a-22a4279bb37e",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e4fd0d43-2bfb-4fed-9b76-e546c2b1410f"
        },
        "item": {
          "id": "17888c15-be59-40a3-8939-ec9ca83160a8",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f6662a99-288f-4949-9b4c-8e2fa7aaf342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db406456-fdad-49a4-96f3-c8fc5a5af716",
        "cursor": {
          "ref": "22fd03dd-81c6-44e2-a5fa-4a3a77119c00",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3461e071-ccb7-41bd-ab14-00cfcd0f2b0c"
        },
        "item": {
          "id": "db406456-fdad-49a4-96f3-c8fc5a5af716",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9264bca6-501e-4962-be70-176c9996460d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486ac975-d985-4a52-979c-40c06d300086",
        "cursor": {
          "ref": "4e19a2a9-0cda-4501-9126-76162714d1d2",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "cf6a4a24-bfe2-4acf-85ac-711c15e8d34b"
        },
        "item": {
          "id": "486ac975-d985-4a52-979c-40c06d300086",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "7efd42fd-9b2b-47fb-a6d7-10310139acc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a388f0-760b-4aa3-ba3c-52623edb56d3",
        "cursor": {
          "ref": "b0ed059b-e106-48a6-ab08-a4d244ea0fdd",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "567a041e-add2-4647-840d-8a15d454c661"
        },
        "item": {
          "id": "f2a388f0-760b-4aa3-ba3c-52623edb56d3",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d31cb732-3c2f-4540-b801-9ed8c2d909b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e91653-87f1-43bd-a8a4-85b314d1a9d0",
        "cursor": {
          "ref": "a44541fa-6c4e-46c7-8794-7408ef74c3c9",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "23bdba04-5deb-4a94-b5b4-fea801fe1878"
        },
        "item": {
          "id": "c5e91653-87f1-43bd-a8a4-85b314d1a9d0",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4a4a2011-bb3e-4124-94d6-13c5e176e614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3904fdf7-8819-463b-8054-8ebe0707f9eb",
        "cursor": {
          "ref": "b20e897f-d2d4-4313-a173-9f41e5cc55b0",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "12f2616a-c2b0-4a66-8c62-ce288d08979d"
        },
        "item": {
          "id": "3904fdf7-8819-463b-8054-8ebe0707f9eb",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "62f1a311-fa53-4006-b6d7-ecf7f5fd68c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3f3c06-1ca5-49ad-8237-ac2f6f243538",
        "cursor": {
          "ref": "3fa32848-f1de-4660-8f19-894bbf13dc0d",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e2a76d50-9ebe-4263-93ad-3137249efb1a"
        },
        "item": {
          "id": "cf3f3c06-1ca5-49ad-8237-ac2f6f243538",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e9963dbd-0fed-418f-9faa-5babaf807e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd607fdd-4fce-46ec-ad99-3e8384570c7d",
        "cursor": {
          "ref": "b84822be-f531-4cde-a1c4-d1751de03d15",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d7b4cb13-335e-4922-9b1d-27cf3092ed8b"
        },
        "item": {
          "id": "cd607fdd-4fce-46ec-ad99-3e8384570c7d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7a555f10-fcf5-49e6-a06a-517723745797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd71b7b-f93c-4f35-b532-c13f60d5cd13",
        "cursor": {
          "ref": "9e1048cd-be32-43e2-acd7-3893aba58d37",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2f8823e6-ce9c-41a5-bd7b-c521fa4619d1"
        },
        "item": {
          "id": "ddd71b7b-f93c-4f35-b532-c13f60d5cd13",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "44feecf0-040b-47e0-aa51-9da081d8d380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c184b97e-deb0-420f-8c48-27b846bcd37e",
        "cursor": {
          "ref": "958d55f3-7b33-4fd7-b176-3f41c92e2163",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b0af631b-5b43-4873-8128-0b9dd41f4213"
        },
        "item": {
          "id": "c184b97e-deb0-420f-8c48-27b846bcd37e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c05307c2-b03a-4cbf-b405-d450c171e783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d27630-099c-4bfc-8b79-14f44f593614",
        "cursor": {
          "ref": "680419ef-15a5-45d9-b9ff-ef3832cc8e4f",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ada65592-1503-43b3-a7e8-e03b599fd4a6"
        },
        "item": {
          "id": "85d27630-099c-4bfc-8b79-14f44f593614",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7dfdc8b0-7de5-466d-b0e1-6d4953148cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2971ef9f-9787-4337-aeaa-a42213b715cd",
        "cursor": {
          "ref": "44f7cb3d-8827-4651-9f15-6e85dea6a3f6",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ee58ab02-a78e-4681-b65c-6c59d97a76ed"
        },
        "item": {
          "id": "2971ef9f-9787-4337-aeaa-a42213b715cd",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4141a11e-fef9-47f2-a595-34227df42860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26dd462-cb8f-401b-af44-6d9081a73339",
        "cursor": {
          "ref": "1a99c72b-7f64-4d9f-a9cc-d1bfd83bf2dc",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "eb3e2126-e0c8-4e23-b4d1-450b3ce6b5f0"
        },
        "item": {
          "id": "a26dd462-cb8f-401b-af44-6d9081a73339",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "65eeb742-e12f-4bb6-bb72-699b1e54a847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae98d3c-cc1c-48ec-ab8e-d24bc08a4871",
        "cursor": {
          "ref": "b8e6269c-e557-4e6a-9795-a4e0df10ff02",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0b3e92ce-43be-4e53-84f8-2f3d253b7f57"
        },
        "item": {
          "id": "aae98d3c-cc1c-48ec-ab8e-d24bc08a4871",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8808b5e6-a19c-41a0-86de-ddd4e7382ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff67842-f1ec-47fc-9de9-131d4076a193",
        "cursor": {
          "ref": "250c970b-9514-42ec-8392-7212b54335cb",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "de6a7cf6-c936-43e7-bf22-32e1fde9473a"
        },
        "item": {
          "id": "4ff67842-f1ec-47fc-9de9-131d4076a193",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "49711f9d-1523-421a-91a6-2bb3bf4c8044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a834828-7709-4c62-9e91-d504c07aeb60",
        "cursor": {
          "ref": "0f2dba2b-7eb2-4cd4-b9e1-03b59b1b3f5d",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9ddd20c0-4a76-410b-8bfa-b4a71b056a05"
        },
        "item": {
          "id": "9a834828-7709-4c62-9e91-d504c07aeb60",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c6f90aa1-300b-440d-b3ec-dbef9095d9be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a6dc91-5598-4dbf-9d9f-f4cdc69b9403",
        "cursor": {
          "ref": "241da95c-69e9-4653-9d79-7b5f2dd5277d",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ca0728e9-bcd7-464a-a46a-72394f07d1e9"
        },
        "item": {
          "id": "72a6dc91-5598-4dbf-9d9f-f4cdc69b9403",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2d0c161d-ecfa-4a5e-8680-fc75f9b79422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd3f3e3-3082-4f2b-a85a-82c343a9d7a6",
        "cursor": {
          "ref": "c17a5426-b3fe-4b24-aa3b-3bad3f94f76b",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "77faf9df-7955-44e9-b2b8-c16655b77a8b"
        },
        "item": {
          "id": "5fd3f3e3-3082-4f2b-a85a-82c343a9d7a6",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "99136389-2fd8-45ef-962e-f6795a0fd28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2153c1ec-8c12-42f1-95e0-f1a204b90f94",
        "cursor": {
          "ref": "621779ac-e6a4-454a-8692-79c5ead35820",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "59214766-1be3-41ea-820f-107e0bb58e8e"
        },
        "item": {
          "id": "2153c1ec-8c12-42f1-95e0-f1a204b90f94",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "4cef9f9d-61f9-43b3-a70f-5497ca7b3872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f8e28b-b061-4d11-9a02-867fa32d69b0",
        "cursor": {
          "ref": "2457309a-6a92-4a70-be4d-5eec30952d12",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1abf40da-7e2a-4da8-8efd-f8dcffcd6e54"
        },
        "item": {
          "id": "a2f8e28b-b061-4d11-9a02-867fa32d69b0",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "2f5845aa-78e9-45fb-8d58-da462efc899a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60f7a27-8889-4210-bd75-89d47e57e155",
        "cursor": {
          "ref": "9e657985-5803-4d04-8cc4-a128d8d627b7",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c82b580c-ec4f-432e-a83e-976e03696358"
        },
        "item": {
          "id": "d60f7a27-8889-4210-bd75-89d47e57e155",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "48ee9916-45ff-4c2c-96c1-782e7d1464b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a75ddad-6520-4e6e-8a5d-d18343d24caa",
        "cursor": {
          "ref": "3d199ad2-40e6-422c-b29f-eb2f11cceaed",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c0c1b1bf-f9c3-4326-b82d-477425744e68"
        },
        "item": {
          "id": "5a75ddad-6520-4e6e-8a5d-d18343d24caa",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5ea4e4b6-e3fa-46b4-aa0a-9e65c4aeb5c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e41aae-48e7-40fd-ac96-717180eeb998",
        "cursor": {
          "ref": "76638c6c-4941-4a7f-a161-bf77d163deec",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b8d3f22b-69e5-4149-a15a-63dd7940d5dc"
        },
        "item": {
          "id": "c0e41aae-48e7-40fd-ac96-717180eeb998",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "19e63dcd-aa14-4743-8c61-344e337b282f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba46288-6bd2-46b9-9555-a519c88ab49e",
        "cursor": {
          "ref": "523e2907-51de-476b-bbdb-ac7740442886",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1ef67e6f-185d-4f5d-9308-772f4b1f3a46"
        },
        "item": {
          "id": "9ba46288-6bd2-46b9-9555-a519c88ab49e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1b677a6b-1ba9-442b-989a-7b8dcf419375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db95af1a-f5b3-491a-a14d-c137caec91ef",
        "cursor": {
          "ref": "5b5e495e-37d2-45c1-905e-81f38f236c37",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "09a4724f-748d-4be8-883e-adce8a3e2a32"
        },
        "item": {
          "id": "db95af1a-f5b3-491a-a14d-c137caec91ef",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "19348a86-b65e-4be7-9e12-33b989164a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7704a2-45da-48af-9ab0-455194360607",
        "cursor": {
          "ref": "e93eeae2-b546-4a7d-be6a-8fe3d97397ff",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "aace7acc-c0a6-47a6-a7d1-4e8deaa1dfac"
        },
        "item": {
          "id": "cf7704a2-45da-48af-9ab0-455194360607",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "afbc0c2d-b4e2-49b2-8929-06898b3aaa61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7042b120-e70a-4547-a32d-d86bcbd7afc9",
        "cursor": {
          "ref": "7e25c7e8-c315-4d1c-87a1-084b69ae6600",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "8d8f870e-995d-4073-b132-25537fc96446"
        },
        "item": {
          "id": "7042b120-e70a-4547-a32d-d86bcbd7afc9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ebcc3e44-cbba-43d7-bfd3-a295f597cd3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fba201-034c-4402-b4e4-5dd0b8bcf827",
        "cursor": {
          "ref": "32a8e2ae-5ae8-4209-b9ab-84b13c7bd559",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "bf0541de-f9ff-415d-9dae-21d1a22d16c0"
        },
        "item": {
          "id": "c4fba201-034c-4402-b4e4-5dd0b8bcf827",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2cd93663-6522-4634-a284-87d8d223a8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297eed17-d0ad-4dae-a63d-0f7b350a1500",
        "cursor": {
          "ref": "023c7897-5980-4be6-a853-b1e3a038434b",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "9dedda73-0fe4-4371-b2da-d882b24c1002"
        },
        "item": {
          "id": "297eed17-d0ad-4dae-a63d-0f7b350a1500",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "fa8c824a-5c58-4a83-ac70-aec3a5284339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253c7216-36b1-48d7-b492-48f50689bfe9",
        "cursor": {
          "ref": "74f3e8e6-9bda-4faf-b4ba-8fd32c3245be",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "078e096d-1684-447b-b98e-155cb986fc89"
        },
        "item": {
          "id": "253c7216-36b1-48d7-b492-48f50689bfe9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6ef07847-392e-48b9-b8f5-d6946ffe8f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045adffe-d42b-44ae-868c-33e57678b083",
        "cursor": {
          "ref": "89595405-2278-4207-a809-6382652da126",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "e8237626-f04c-43b7-aecd-9b26853de97b"
        },
        "item": {
          "id": "045adffe-d42b-44ae-868c-33e57678b083",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "38d755ab-6136-4b12-8b47-cff158d49483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453292f8-6cab-4f65-822b-e17bcb1ed2af",
        "cursor": {
          "ref": "e7fecc43-1beb-4f71-a6fe-4776d6e651aa",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "0c1e6621-4757-45c2-ad42-102a81f5e202"
        },
        "item": {
          "id": "453292f8-6cab-4f65-822b-e17bcb1ed2af",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3ec7c67c-ef4d-4fcd-b238-394c0367d1ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d0153e-f04e-4c68-8094-fcdcd536abed",
        "cursor": {
          "ref": "fa6db578-3740-446c-80f3-3c52689db364",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "df3b3656-8eab-4814-ac24-441a038d387f"
        },
        "item": {
          "id": "71d0153e-f04e-4c68-8094-fcdcd536abed",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c6d46406-72b4-4934-8f08-f0a3bb871c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bfa204c-a173-4bc5-893a-e7f75a6f6b76",
        "cursor": {
          "ref": "fdc59ad5-c673-4b0e-be4e-ec52c9f34127",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "0bab642e-8c14-40a0-9693-1c06bb2f0078"
        },
        "item": {
          "id": "0bfa204c-a173-4bc5-893a-e7f75a6f6b76",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "49949662-bec3-4b96-a00f-4aa6a179e2fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "983b5c34-4ee8-4dd7-bbd0-d70599f6cce1",
        "cursor": {
          "ref": "c4beba27-cc1b-450f-be0a-31676d7f6b17",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "a09310f1-cab7-4ab8-ab47-20302be6a7e3"
        },
        "item": {
          "id": "983b5c34-4ee8-4dd7-bbd0-d70599f6cce1",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "38746064-67d9-4b77-86c8-ce7440f41635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b406003-30b4-475c-8c00-3d59fd6f3417",
        "cursor": {
          "ref": "87b83bd0-79a7-4c11-a1ce-52ff027aaf06",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "b4490563-d6b1-4545-8fd2-3386a0f48f10"
        },
        "item": {
          "id": "9b406003-30b4-475c-8c00-3d59fd6f3417",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "31777dde-febe-4cfa-8eed-a24bcfaf1b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10dd7e2-00f9-459b-a24d-651e8e27c377",
        "cursor": {
          "ref": "870d42c1-18db-489f-a4b8-fa004c38eb30",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "47450003-d7fe-4a79-8a91-5b0f6b47683b"
        },
        "item": {
          "id": "d10dd7e2-00f9-459b-a24d-651e8e27c377",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0b0c7222-3f1a-4a5e-8cbc-17c6d05c4bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc6c19a-2210-4192-b601-c7b846be4b73",
        "cursor": {
          "ref": "90d05167-83f3-4d89-a9a6-cd36e04a7fcb",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "6726dc1c-11d3-4fe4-a7c5-a51015174be6"
        },
        "item": {
          "id": "4cc6c19a-2210-4192-b601-c7b846be4b73",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0dedb439-775b-491c-b4cf-283c1dedf346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbece7c-9e5f-4058-a052-19e4d7e16481",
        "cursor": {
          "ref": "b9c339f3-6c1e-4b9a-8a1f-b1b5299ad2cc",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "7eb6ec74-ffea-4704-91c1-b4406eccecbc"
        },
        "item": {
          "id": "ddbece7c-9e5f-4058-a052-19e4d7e16481",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6f3e5ce4-117b-49b7-8b6a-1ecbfe7f3068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22406bf-593b-4e43-95fa-40142397287a",
        "cursor": {
          "ref": "90850390-9660-4572-9e96-8e162b08a8da",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "b4f7ae28-a6de-4811-8215-c464de7f9cf4"
        },
        "item": {
          "id": "e22406bf-593b-4e43-95fa-40142397287a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a7475d26-4f29-4e3b-afaa-5ca221649f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d6aae1-76e3-46d7-936b-4e4a92b13993",
        "cursor": {
          "ref": "43eef721-06de-48a4-9d21-7bc071beaad7",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "34098d60-bc43-4fed-946e-c0d6d244b0a0"
        },
        "item": {
          "id": "17d6aae1-76e3-46d7-936b-4e4a92b13993",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "73162c9c-7a85-4324-a4ff-cb3fe2df0c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0240ea9b-7c81-4b2a-b9a1-6540726a1078",
        "cursor": {
          "ref": "2904ec19-44ac-4c6c-9894-a6cc49763f04",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "96cfffbc-faff-44b4-a5fa-4fda54771d17"
        },
        "item": {
          "id": "0240ea9b-7c81-4b2a-b9a1-6540726a1078",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4b9f7b17-dc63-49cb-8af4-773bd2e6244b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6069d877-d76c-43f7-81b4-6a87c3db49c6",
        "cursor": {
          "ref": "0721055d-b755-488d-a500-94f354c8f60d",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "3657ec79-004c-4dac-9aec-c08c15573098"
        },
        "item": {
          "id": "6069d877-d76c-43f7-81b4-6a87c3db49c6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ac1362a5-4143-4ab2-b539-796940854ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9abf88cb-5c90-42bb-85e9-8ef312d713af",
        "cursor": {
          "ref": "d5ff4583-01c1-4dc9-9328-e3321ac5215b",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "183588c7-744f-4011-8276-fe7e9166b2df"
        },
        "item": {
          "id": "9abf88cb-5c90-42bb-85e9-8ef312d713af",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9d7ac2ec-3a39-46fa-8936-520d2e845606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb516af7-d062-4ad7-b991-76900834eda9",
        "cursor": {
          "ref": "4110dcaf-89a3-4391-9904-6a710797a08e",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "f460bfed-dec1-4a7a-b9f4-690587f90778"
        },
        "item": {
          "id": "cb516af7-d062-4ad7-b991-76900834eda9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7ebfa00f-3ed8-4175-bfd4-b975428e7f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5fc64c-cde0-4162-8211-1162712d47ce",
        "cursor": {
          "ref": "ec133359-00be-408a-b42b-13cf40f996fc",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ca3cb74a-40ee-4be4-877f-7a37888d6fa1"
        },
        "item": {
          "id": "2b5fc64c-cde0-4162-8211-1162712d47ce",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a673ed92-0ea5-4bdb-b366-af8405359734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19072b6-2f19-4bc4-ab1f-e485552a3287",
        "cursor": {
          "ref": "b19be194-d42c-4c67-83f1-b76960731602",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "0ec8c937-2386-4ae6-b247-b524cfe1a5cd"
        },
        "item": {
          "id": "e19072b6-2f19-4bc4-ab1f-e485552a3287",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "cf13bc8a-5122-4c0f-b9b3-545da859a1a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4acbd1b1-762a-4a78-b9e3-18293f7b51bf",
        "cursor": {
          "ref": "bf489161-5547-4be9-a23c-e2c4e349df90",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "951821c2-d1d3-4ae8-a8a7-e5dc42959463"
        },
        "item": {
          "id": "4acbd1b1-762a-4a78-b9e3-18293f7b51bf",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e1acc7bd-0a83-45f7-8b71-34dc014b6a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd601645-61f6-4b87-b996-779567d32ed5",
        "cursor": {
          "ref": "79f85ce1-1325-4e54-b7e3-00993045c1d5",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "641619b5-1df1-4cdd-aaca-b71459f0158e"
        },
        "item": {
          "id": "bd601645-61f6-4b87-b996-779567d32ed5",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "cc270c4b-5f6a-4258-bbe5-883c145c882d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d06f191-f3f5-4bc3-8548-89952d1d8bff",
        "cursor": {
          "ref": "0baba2fb-b352-4cf4-a52b-74d6734d9f2a",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "377f6ecc-6110-4ee8-951a-17a246aa5249"
        },
        "item": {
          "id": "1d06f191-f3f5-4bc3-8548-89952d1d8bff",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "85a1187c-2c70-4503-92e8-8dc0fe6f92a1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9723b61-7a29-4b2d-8d8b-c6e4430383a3",
        "cursor": {
          "ref": "1ad80a53-1616-480c-85bc-58db3505bbac",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "3d451d88-d5c3-44f5-ac5f-7ff9bf6ebd07"
        },
        "item": {
          "id": "e9723b61-7a29-4b2d-8d8b-c6e4430383a3",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4b723312-b7ca-4a9d-94ec-13beb4b5cca3",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "842508fd-3cdc-472d-a79e-e6d4a292c63c",
        "cursor": {
          "ref": "c34c5a79-64f0-426d-ab98-1dc8b9eda461",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "84927878-747b-4e36-96bd-f63e23751ae2"
        },
        "item": {
          "id": "842508fd-3cdc-472d-a79e-e6d4a292c63c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "da51c461-49e8-416a-bcc7-81a7c1561d59",
          "status": "OK",
          "code": 200,
          "responseTime": 1820,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f0cd80-41f9-4c7f-bbb5-66a548fddce8",
        "cursor": {
          "ref": "ac17ef7b-92ca-46c8-84a6-e11cc4bad83a",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "3996c4de-1969-42cf-bf8d-1e14c2eaef9a"
        },
        "item": {
          "id": "37f0cd80-41f9-4c7f-bbb5-66a548fddce8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5a32b6c5-0e3d-478b-a65d-51b17906cf88",
          "status": "OK",
          "code": 200,
          "responseTime": 2479,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2172c5ef-1bfd-439e-8ccc-139e7f75259f",
        "cursor": {
          "ref": "e0e68cff-96cf-45b5-ae57-29702c7a7df9",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f12964f8-0b68-42eb-88de-54ecff7cfb9a"
        },
        "item": {
          "id": "2172c5ef-1bfd-439e-8ccc-139e7f75259f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "645d8bcb-689e-4d21-9b65-b0eb56ef11b0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2172c5ef-1bfd-439e-8ccc-139e7f75259f",
        "cursor": {
          "ref": "e0e68cff-96cf-45b5-ae57-29702c7a7df9",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f12964f8-0b68-42eb-88de-54ecff7cfb9a"
        },
        "item": {
          "id": "2172c5ef-1bfd-439e-8ccc-139e7f75259f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "645d8bcb-689e-4d21-9b65-b0eb56ef11b0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b42531-b64d-450b-9c8a-73cdd0fb9314",
        "cursor": {
          "ref": "88c36333-0f80-4a09-8a98-cae65dbb31a8",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ead1800c-5923-4277-a812-91143e4bf67a"
        },
        "item": {
          "id": "f5b42531-b64d-450b-9c8a-73cdd0fb9314",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "860155e4-0285-4fbf-91d2-c17d7cd97b50",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179ddb4d-6a06-45c6-ae7a-25ddd038c03a",
        "cursor": {
          "ref": "f7646ff1-4e4c-4469-ad86-c71f348c6b27",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "f2f5af57-c080-442a-98da-f65ad9e5b0d8"
        },
        "item": {
          "id": "179ddb4d-6a06-45c6-ae7a-25ddd038c03a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "017487db-2a44-4964-919d-57cac9984dde",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}