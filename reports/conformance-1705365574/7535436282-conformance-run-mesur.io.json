{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "28a533da-c184-4d03-a55a-0e509c791440",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6d11183a-6de8-43af-b285-8b49aa73fa53",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "22f109ae-2e8c-4ba7-b42f-47335c22f808",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "32cf22be-472e-43ec-8ab6-76ed4ecac1e2"
                }
              }
            ]
          },
          {
            "id": "b57c0bad-8cf3-4496-83eb-9e3effb87202",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bbc121ac-ff83-4535-a646-c1617caf6e0c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e448f4da-4797-4535-ab58-18563feb2f27"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "23e77bd8-0500-47f5-96c6-ba978db30d6f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "373d7a97-a887-4371-aa01-3191ad33d6c6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0f49bd1d-ecb5-4b09-9f9d-9885c273e08a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "61c18868-956c-4ee3-a04d-741340e17a15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "be9e8a32-7167-4446-9ac9-a6ff523242ab"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "353e43c3-44dd-4e64-a8fb-32acea981dc3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c155b1c8-2fc8-46d7-9b4c-3e8ce97711c9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ee862a0d-b3b6-42a4-afe9-bf280396ab50",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e86ef65a-d2f5-4ba4-bc90-7982487c3fca"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5484f47c-d0f6-467e-8ec1-d38e98513878",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "90a38350-d243-40a1-a398-e18ff3b20149"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc6cbfcb-85f2-4793-ac20-e97b77e04dff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f957f2f2-a011-41ce-9625-ee35794fd99e"
            }
          }
        ]
      },
      {
        "id": "35a3dae1-89a9-4c8e-94ec-594cc974859b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "375a0cf5-7a74-4aa3-958f-06c936494a82",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0678b612-100b-4773-857f-94877aa710d0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1bc98cce-bcc2-4bce-bff8-71f45c97f38a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eae49c1-fdc4-4f53-b1b7-44034266d964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "444b1841-1ab8-4299-8494-89483cd0e1e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f85d14-0f8d-43b8-baf4-2898d41f0cd7",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc18c99-d80f-40f7-8f88-5db3fa9c4479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ccdcc3e1-4e5f-41b6-b7a7-2093bc24896c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05cc6e95-aa57-4e1c-b757-63b772beba75",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa95c5d-c557-4221-b916-7f7c1583b1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed48368c-8652-4479-9e68-450c1d38a598"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4912d8c8-6d6a-4f1c-a245-d29719976c63",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ac5fa55-0a60-4ac4-8304-c48aa80e268c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "401fe2d2-81cd-4027-920b-a84dc5a8ea28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ed55cf6-f1eb-48ac-8735-8754fbcd64d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b40309d-de8a-4d53-9759-523198934a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55d7fcc1-3c1e-4d44-bbb2-13076a6fd119"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d65fc256-8b73-49f7-a5ee-04fc2ced7014",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b225057f-a84d-43da-9c6f-525cb0ae300d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5961f5da-5cf2-425b-b61c-27dcc980a650",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a7209119-1082-483b-9e87-cf4484e2ad15"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7971268e-0a02-4f17-871a-745d3e753847",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "58976ca2-f2d5-476f-8c77-e7d3bd52d553"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "014b720c-3677-4c91-aa89-226361341d54",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1074d9e7-b65c-4905-9b6e-b73172d14cc8"
            }
          }
        ]
      },
      {
        "id": "7abbb7be-5f72-4787-8e68-b1b4af5db1c5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "5a1050af-9910-4a39-b142-86b12c4767cf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5df6c4c7-72f9-4e5e-afe2-3e5acbd91fd5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "61c88280-0b52-4eb3-814a-533c49260e0d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ba5be6-8681-43d6-8ed8-3a8ecda6ed28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e62cbeaf-98a4-456f-aebe-0d931ccbc974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc2f53b-57b6-46cc-8d5d-84ab481db479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c45af0ab-3b96-482d-bc2b-d3bacb28d577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4393036b-9fee-4f8d-9a7d-140bda76e7af",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b41085-09f9-4142-be35-8f8d562d5a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77256e13-19ed-4099-9d2f-7e317fd45538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39298b14-379c-41f2-bd31-c5a77a7cf1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a93cf33-b5f1-45b5-be0f-849df9893de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c009cfc-57d8-4aae-b5b6-6c34ba04bd81",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26702245-f2d4-41bf-91ea-c84b0052e40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2b3abe1-50bb-4844-b2ed-e3a3e0857b1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b5314a9-0c2b-4c93-b527-0934c696b0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e446cdda-4db4-4dac-aaef-acf5456d1268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d227c259-0e1a-4888-8fc1-5d4129be34e3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ff07bc-c7cc-4618-be11-0ec293363cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "039c350c-399a-4b1d-9fb5-a8c1390e2be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "087ef1d9-7225-4480-be7a-cf4e74374bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32517531-e45e-455d-9912-7387f4e847b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eee4c55-e25d-4e46-b5fc-3630b5fa5cdc",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ccebfe-ced0-47f7-b491-a02beb464902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13e41186-4adf-4cf3-851f-83f7c4810bfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4131e3ff-523d-4b2e-8557-7f0e89f28efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7e90dfc-3885-4966-a83b-a2a9cac4f2d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b44332c-ce3d-46b4-8355-4decc95b0ed9",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a10800b-cbb5-4997-9be3-cc17295444c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfad782d-a883-441a-9e53-7fcf3fc82a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146c169a-09ab-4e77-8e13-5e9582573439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a94f3f8b-074b-46c3-af73-6a8b94259c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db202534-942c-4247-94b7-6c7f65b2401f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84108556-bb05-4cf7-b0c8-6992ef06a920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e45f51b6-3af6-4a65-bbb5-ffa0343bcf8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab118365-cd78-40a9-8dd8-77b49d37eafc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8262d018-ad63-4681-9ba4-c6a2ef39b55a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a4ab99-9b2e-404b-b1bd-f2bb8611ec3b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8eadee8-598e-41dd-af60-9c25e0683f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a55ce31b-39d1-46e6-832d-95499fa94a81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb53ba1a-b8fb-4b82-ac0f-cf9465c0d63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9490abcc-45ce-4a75-8b62-badcda1bbfa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81ff0bc-4bea-4cf6-a499-c9eeb2772dd9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc23c0b-e26e-4dc9-8615-f2750b14fc5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66074d21-a1b1-4e71-a08d-0bc2cae35924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b123f1-0d9d-40c7-8523-1022237daeb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efcda475-bd00-4f42-8b6b-2733fd8eb979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400027a7-ca7c-43c8-8856-054e9eb883f7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab8f552-d209-4270-afb0-e2648676da3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13f40cd5-6456-4685-8b72-6bd96ee6c869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfbad8ed-eed9-4625-bd99-eb32cf69404b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a48657b3-f8f0-42a4-be0d-0a8e5ca0eee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1b25a5-a8df-468b-a704-779f56da1f37",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "497e7b6d-5f61-4a37-aad3-0c15e138690b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "335d962b-2b3b-4f46-8af7-1aa8fce686d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b626d4-ed91-48cf-a5b3-ffa48bb52473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30e01bc4-8c0b-4f9d-bc53-dfa9c0015378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3daa717b-0b05-4c5d-856e-dd5909a4d332",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22115566-61da-464f-8db3-639a303e1332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28b040f1-75f5-4a6b-8e0d-5025eefa300c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc124037-64e7-4a69-8c18-925ba2189d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1dfe247-457f-48e3-bacf-07e5a95c5f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "badde2bc-cf3b-4335-8939-0240479d97e6",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e9888b-b4f5-4caf-bc71-a986f048e791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27541f8d-693e-4d95-868f-73b6ec723f3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec17b72-f4df-4bd6-97f1-96eae8e0afea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e47b9375-0579-4f12-a043-617572610f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6416e34-96b4-4793-b57d-6c237efd1a69",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd10154-5ee8-4dac-b1fe-b46c3ff07000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a59122a-c585-4bb6-a3cd-39cd292ea7e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7057f243-e6ba-43f4-8b20-4fd8f88e1783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60ab53ce-4ded-4c0d-b55a-71831504cf23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5221555-0101-4a67-9b94-d56a9e9dcc93",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "535bc14c-c832-455a-8c15-f65473d7bd4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bf7318a-75ec-4122-870c-4e1d878b6a33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a486e8c6-8461-4ba6-be7b-f5076c9e2fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0f8d2ab-abf3-4907-b224-c7d2507d2ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ed7859-e5bd-4530-9e6d-68466fdd5e40",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98599972-7361-46bf-bca3-7ba3437a1bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9261bb5-0c9b-479a-bd72-83ee5ec13132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57367839-849f-4fb9-b757-22f307bfec75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7db4fc17-b6cb-4763-ae6a-66b7a28cf902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4ed8d5-aaca-4252-b0b2-f14e2d546a24",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f80b745-8917-4f0e-a33b-e63dff9e8146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5867fd8a-caac-416a-886a-333ff4b8b761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "776adb43-8bcc-4e0e-8d62-8482a2cb394b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "849e9152-41e9-423e-a42a-3545ab276029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7363ed89-678a-4605-8e2c-60c2e3472496",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58da6abc-ae8b-4732-87c5-43a90ed5ab32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53ba76cf-8a30-4d3d-aba8-fca9d5fde3b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c4251c-605d-4cd1-80ea-b49e06972183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "88aeed89-7f9c-41a1-8c57-145cfc15e370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a05ee9-628d-4eb9-a960-8847f1668af1",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7511df1-7018-474a-95eb-d84e8fc84631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6520edf0-0dc3-4600-bfc2-d69b922bbbd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b33ce4-8c31-43b4-a62e-c087bc013ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7c8b7fd-29dd-4aeb-a6f2-c8aed6110921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f4f9c9-f3af-4d20-938f-4615c8d2a377",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d93aea-ecd4-4036-862b-ace56302da98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42b487a1-8393-4605-9478-c592f41518a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2671298e-544c-45ed-83cb-0db5d6c5092f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b446f3c6-eda6-4ba1-9bc9-a248020928ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af0a527-2a78-4a50-aa16-ff10975d7bbb",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e88c98-32da-4ed3-a0d0-ca871cdf6c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d34c0226-a33c-4533-bde2-07affe8a0b39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbfae7de-4d58-46dd-bb44-b7323de49114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "440aee45-6708-4c53-9407-a69ab373c29b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c0bbe0-0b36-4109-b8ee-f7c64de37c2c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92196593-ac78-4a02-95f3-e9fda55f5714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaa71a95-adae-4012-8f67-62cfd416dd47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005cafcb-7f93-49d6-9482-86e8b59c71bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1250621c-690d-411b-b09f-1acdd7a617a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9baf33e9-58af-4717-8a44-98d80ec7b662",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8746b6-3fda-483a-a28f-523cf35e226f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c3b5e2-dad3-4e6b-a672-91d90e340cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c980c1ab-f10f-4aea-ae38-9cf7f39c68d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "acab6e3f-8fd1-4f18-90ec-67f4fe0221de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c917700d-457d-435a-8069-b6c6cdc32977",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b6c016c-1e37-4689-a38c-b0c7c2ad4708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c8b7cb0-bd28-4226-892a-e369d50325dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053d191a-89a5-4789-adf8-5c8792304a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "083a5270-77ec-4256-aa7e-823bcd694c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "367b384b-639c-4dee-9ad0-0c4b0ab52488",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2250592e-7b24-4084-8957-e74d5de31fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a8c5018-bcc1-42e2-b7c2-b30e64c2e9f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c313282-bdbf-4383-8204-25316dd0b312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7721d5f4-29f8-423d-ba05-2c06cada8853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a35d7bbb-1403-40ce-96b8-f63c4998c93c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3580a5ff-5ef8-4110-998c-c37a44d9004a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e0cf91-288c-4c31-b608-7b03c7d4a3f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99bb55f8-be1f-43ca-85e5-1f2f095cee5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "76707a46-c3b7-440b-9a7b-55a62957a753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad8c665-154a-4b21-9b93-22e7ece2412b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "585b5922-15e9-4341-97bc-1281b7df3c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b43f0362-ad6f-471d-9c3f-044480152748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797ae971-468b-4dd0-9056-57ddf89443de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab3f3dbe-20e6-4e87-9635-30933a9729bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab84c8fc-eb16-4eb7-8387-095a35531c71",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c2a29f-ac97-40f9-9656-b36f36b2d995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dd2ce8f-7f5a-4b5e-912b-27619e89c042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a09bd0a-4ff4-44de-8ae9-08c6052d3069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1f5b474-b894-4efe-bd15-508a9009ab19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b19dca61-fc42-477f-9068-7e9860f4392e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4944317-e502-4d9f-a701-927ae378bf3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf8d879f-d486-4f44-baa9-c0aa822ebb74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0106ea02-a6fb-40c3-b2e6-8c6c735c5ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fffe671f-5b35-45ae-9e68-9c6d7de534fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f445b048-c468-48cb-a6a5-26da1ebdde6b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "314c295c-a81b-4654-8496-566f204df69c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d246a4a-54af-4a5e-b32c-92c4f7047965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b0fe67-ac6a-448e-a999-5e7b109f9351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4f91250-720c-4498-91b2-985ac58cb4da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49746b4-b630-4029-a430-857b695481fa",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32942408-2961-4f92-ada6-43a08358e211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d14999af-0802-4460-9fe7-f4990ab9af6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6565dc16-7e94-43c1-a97c-9834073457b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8751e503-2dce-416e-b647-53d29207ed65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385b6548-d620-48b2-9625-260bff8b9016",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6dfa514-15aa-4386-9276-c94847e32e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bdb0647-9340-4b88-be8d-54a9c12c67d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2978e167-1769-4981-9707-fb6dafb20b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb09903-27c5-4534-803e-c81147c851de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5320eba4-b7c5-4a14-b4e4-85cca21ef95a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "280adbac-7be3-4ef2-9e5d-8a4fec0c1dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25133829-76ff-4848-a0b9-6197bc7f1ada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e956b11c-f524-4c28-8ed6-c3141af02adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b00569a-850e-43b5-8fba-0237d8cdc450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e10910-71d9-4e24-b141-9e659fd43a2a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f0277f-04a0-4f0e-ac4a-00ab049ab5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8f8a329-9b8c-428b-a30f-efa3486f78dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3953a3-9953-41dc-ab9d-2b69ff9c29ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbdb332e-c5b5-429f-a1d3-e81d0dd36f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea9b252-cad1-4bc4-8173-ce51108db837",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1896ce8-c616-4428-b862-74e51b3d26bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b373a1a-5183-4964-bb5e-47b499e438e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4963f0-1f7f-45d3-9577-26e28d3852d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b1170500-9835-47b8-ad47-bc6d8618dc6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39e275a-84a2-4ecd-acfc-a607526b6b4a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6086b164-5257-4e86-a0f8-e9723dedb6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "904d6187-afd6-4bc0-92b7-d83217fca996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184264bc-3300-411d-b257-d58f04c8f91f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bac606a3-3cef-463d-9efd-233a6bebe926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c004fd-e23c-43cb-ba69-5d275e1dabe9",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80875ff9-9db0-42ad-8108-ff0e5cc9a02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5877a28-0de9-414a-aea8-bd54abc60d10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0d3972-13de-41c0-97f8-2b55607b6988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "492b53aa-081c-4215-a356-c776cdb76b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ede55dd-5236-4a93-a8ac-8f9b8a9249fb",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9940d0b-5267-4d96-abcc-c93b180cdcfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f985c69-6913-4227-9c40-dd6f6e85094a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ab2504-e847-4468-aab7-f8aebed2a4ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "130c93c6-a204-41cc-aecf-3932e335277f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dca7276-e066-4a33-899e-4fe1f10ba863",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c3eedf0-bf21-4c70-b948-a0cad178f447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5b83cc3-6e25-468d-b4d0-b2d294c03026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b8cbea-ec98-4900-8d34-1be4cffb5568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9707d33b-4ee3-4aa4-a173-e48e114b34e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9f710d-1d28-4a4e-8cc1-80512086f5a6",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "054f316b-8801-436f-909e-3f324303f76b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c9bc82d-294c-4164-9d58-bd8852cf3966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f59bc5-7ce7-4e05-8d73-03a088da5cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8bfa2bb-07bb-48ba-8cb2-10a243da27b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a108ba1-490b-4079-8b02-6254e6cc24c7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4fbc6cb-562c-48ff-a82f-04286abad8f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f133bacd-0d22-4bf5-968c-be2b50c30a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6121b69e-d5d3-4757-beb6-93d87c5e7017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0869db76-d44b-4dc3-a184-1688b8e9e6c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77df06b8-f0a0-4c16-b01d-c27be5ef3084",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "573b9945-d936-4f84-a165-cb1a4be47163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "379c76c5-16e5-4200-bf83-209a0dff4eec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14011b4-ff4c-469a-a670-4969560df4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4eacbcbb-8557-462a-87fb-73121358e094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c704da55-8d41-475a-8035-8815369e3f86",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe42b33-5079-461d-a5c3-5ce39d8e696a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cd34c09-1bbe-4abc-9d40-7a95df8e2a64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f02b97-9cb2-4ce2-a86c-dc2974a03c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4009233-935f-48c1-ac16-5e1a262d649d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a6f882-e1a3-4373-a7c1-03af14eeb0c9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f3eb41-6cb3-4db8-921d-70525a11b0cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59c688e5-3bcc-440f-bc43-ab1a6207e856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6d09c3-78ff-49c2-be51-0d631c6f462e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e853f7a1-0e2c-4c29-a2fe-7041e9ce5865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600ed153-c416-4c3a-a208-6c827d5d6f3d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f9fc17-9fe2-48fe-80ff-1d0e377943fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8893029-e7e2-4b34-8142-f2686fe4cce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82fc271f-a306-40d0-9728-4b6fa50401a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7db816bc-38d2-4bab-8674-6d90ace8f882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3b869d-de0f-4677-9158-d173e4769f09",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feaa12df-0b1c-4a31-b74c-26ea405defae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab2adaf-75be-40b0-9ec1-80e3f64ea9df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09336673-be3e-43c4-ab53-5356d35fcb83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffa43b61-493a-41a1-b4b4-028ee9664bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650233b9-48e9-4ad2-be35-9c93991e1cb9",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7a0e82-72b6-4fff-bb9d-2fa4f197e073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1db98c3c-0adf-4ab9-92a2-350a4060520e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7669e78-1873-43d4-b6b9-e7a5c749b1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bda09efc-31cc-4997-a51e-97ed7b325f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855b935b-b3cb-481f-9614-52bd71cb5ce7",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94f1c10-0eb7-47d4-b237-5b04343974c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7be657fd-97f9-46a1-98ef-af681930a365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5fc24b6-6c3d-442d-a2fa-b4d6f18135a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d87c78d6-1b3c-4d12-b3fe-c2f807b67b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369e827e-3253-47c4-9baa-24a46fb0932e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f429bd4-1832-4df7-970d-92652fb7403e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "098529c5-99d9-4f74-be84-207e941b0f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14299428-41e3-41dc-9712-df6caf447cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea6bbc89-191a-4db3-84eb-02ee30e39333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72876419-0748-403d-9b96-2d11879b6018",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61fb6bf-2adf-4c1d-b80c-27c96afd42ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e10b3caf-9e2c-4a67-abfa-dc9ab5542985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5948f036-5236-4538-a0b0-417c8fbffac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "66ba4971-be99-4524-b2a1-20e38e12b58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b629650-e70c-4e3e-85a0-fad7f7d04957",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9ff313-1e1b-47d6-b1a9-7284456aef98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c821c18-efeb-4617-b011-3a99da7cbbf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4b0c83-7459-4968-b864-09ed459273a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "01805689-414c-4402-bbf2-79a0ec40d890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d12ccf0-c8f8-421c-b0f8-6dadecc79f06",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0eb877-4db8-432e-aa2b-caee3a54ba21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57799f64-7b0f-4679-91ba-9a5efc75bc49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a44f21-3345-4cde-9796-5b7131a2c3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a46891a4-963c-4b85-812b-0ed1d554f152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7ac663-2417-44c6-8416-7bed5906c960",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d54b31e-a0b1-49d6-9912-7e919db26f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3ec7944-e647-4e0a-8766-5019359ed847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8ec191-9a38-4dae-b413-4737c4b7467a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52ac1e79-5273-4f1f-bb56-214e451ce9b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b679257a-76b3-45c6-95cb-7f0664d32780",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "befd6fd2-3c0a-430c-a01b-56953eb1caa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59cbbf54-424d-409b-baad-51389fc833cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e88eb6b3-87ed-4c68-a72f-f4285f8d1ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2993e2c3-8e95-471e-b083-56db35c4a351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d75894-306b-4798-ad07-94287993bd8c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "064ee7ca-a249-42b6-8821-0cffa3decd0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fb78230-59da-4fca-98f0-9578095f585b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0dd50a1-21c4-430a-bb55-bf0561ea7b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d298f5c4-17ff-4629-b25f-da58a525a96b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c6ec3b-fde9-4150-9438-3bb84ddcffa1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4053f39-760e-467e-8351-0dbd8254b855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eb7a638-9d3a-4747-8483-9a1058f2bc42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c254c279-dfc5-4bb0-818c-69e485af22c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8af21675-f495-404a-aabd-f83615e221d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0457d49-144c-4e33-bdcf-8e8288443535",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a3721c-70c7-47ab-9a59-1b5ecde1e2a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b8b52b4-ef98-4c23-8423-8023189808d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78bffe4e-3b7e-41b2-af79-30992da27d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd040f06-6ec2-4bbc-8eaa-f4080c632a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "180ad35c-a212-4122-9f40-7f1f8dc1226e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf143ef-4baf-4968-a3a0-ef7a3781cafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a442e37-b3fe-4d43-adae-44b8b3b0787a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344901fc-1981-408f-a585-09bcae83836b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2edab4ae-7545-4c2e-b515-066009a3e663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be5923f-2e4e-4343-bcc8-bddec8d6d3ac",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c33066-92c9-487c-a581-9852d24b6e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efb50d16-ad21-45c8-a61a-1c15dfbf578c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644c950d-e3b9-43bc-b7af-edc0a0e49327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cdc3f71e-5f1d-4780-a32d-2a148ac8901a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7673cca-7d59-4d37-8709-eaed17d9f7da",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f6f106e-c232-4fb2-bf56-f9c28c7bb60f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e963ec9-cd28-4d82-aa67-9ee732387fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5757139-4c8c-422d-ab0d-a0893ab75f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a44d009-7268-4468-bbf8-51932b670d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd63690-2cf5-4194-89b5-435494305d58",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0b60c5-4af7-4203-b5a4-c0380b9ff535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f151486-1d72-4d22-bc4e-d5364bdca715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc950f4-b847-467a-9fdd-0cf09270f495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "52f12087-b6a8-4b51-b7f5-2fd2fb1f0711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f89ac7-619c-4c97-9b93-232a08eefddf",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c4b21c-4713-41a5-abe1-1157b4912fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a9fa81-6e26-47d5-be80-f5b73e3a548e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa49d412-9598-4302-86b0-620f7c046d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e3452e3-6545-4298-abd9-dff5fc43b47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8e42a1-9b8d-4b9a-9de5-1c67195c049c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e0e236-b1ed-43ad-8963-9e9266df0188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de279d31-5ea5-43d5-b11d-cbee58b3d913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cab7c0c-87e5-4c05-a6d5-fdb4a10af9ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "180bf300-be9b-4216-95be-0c018a299f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cdf682e-84b9-42c9-a6a6-59ac993cf9d5",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d159b1b7-7070-4087-8910-591681ee41bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b485fb63-32c0-4ef5-8421-e9eca2051f6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4269e1-8134-421f-8d03-43b843551741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "475f9d83-e824-441b-848d-9f4feee51bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b8420e-ac37-4838-a3a3-d7b856c4f7af",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "299ab4a7-b4ee-423f-8f2a-ef6aa2822601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f35447d-d873-445a-b1e1-3dc868f862bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb6f48f-ce32-4889-ae7f-95abb2576b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af5148f7-8d97-42f4-ab2c-48859b01b48c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de1f705-b232-49e2-96bf-582c75f1fc06",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f7c896-4470-4f51-a8b1-6e1cf6bcc82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d17f2248-d810-483b-a482-f7e0552c376d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1892d3a6-1584-4178-bc86-7e3a296cb8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1cabc7f-96a2-4239-9486-555ed3373827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "793ecf23-f5e8-4709-9c85-a950f39a5fd4",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e4546a-5df6-4703-9894-f72c2f9fa120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38c6f43c-ac00-4f5b-9688-273bd9a96eaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b7fdc0-e519-47d9-9f8f-298eebf8b2da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a0dba649-4533-43d3-92b3-76372b061221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a032eef-238b-48d0-8369-4ec46de3be78",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e27c5af-7be8-4d36-922a-e1f11666f166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d81b88e-5979-4217-97db-f1e98e4a6427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e88a94d-246a-4994-9b99-84374489d82f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "00cbddd9-2826-455f-9ac3-a50c9a37608d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a83158-4f1b-414a-8f10-8beee1236de8",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0fbfcbc-f3fc-4daa-8a13-eb793d056d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b02b789d-3c68-48cd-ad6f-0fda4c7387f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf0dc89-7427-4961-8238-3567f2c1041e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "92a7a67a-fc6e-40ec-abe9-91d5559c1aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e618253-7794-4952-9a42-3263ffee139d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bfab868-ae05-4cdf-9d94-3a980577603f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b050353d-d64d-4861-a5b2-e93c6607fac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0efe3d3-5447-4ddb-9396-093e5de4e5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "58ab1107-4a1a-4b25-9ab3-d376af105013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec9dbdf-79b1-4f15-b3ca-5708a2ffd8f9",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b436474c-5d8c-4aaa-828e-77343fb70534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4604e8dd-a936-4e42-b861-acba2c3c518c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d2b81d-edb9-4545-9409-79a4b1204066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "db307aed-81b0-4dbc-8de6-b5abe1d4c92e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef215ff-7751-4549-8da2-f061fd70acb4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5152783f-ad8c-42a1-a976-302f187bd063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a886ecf-7ee3-4708-8c0f-215be13ef860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d22a1f-311b-4512-ad96-4bebca5a16ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "050abf1b-f482-4a79-9f13-a95624073ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fe013d-b61d-4cf1-bcf2-79673384e67a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98fa133d-9483-44eb-9f31-ed6b2d02f9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a088e4b0-7892-4052-a9cb-1023baa6b8c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcbfa4fa-367e-4d3d-96f9-c34541b63b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3eaeab57-db8e-42ab-b4a3-243460d73247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae52a4b5-39a3-42c6-b885-a70a5aed24e8",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27a93e4-5eab-44c8-b857-b61c78b9dfeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cf7b36f-2d46-49af-b356-b81a61f17d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d010383-adfa-4bc5-bb21-457f89b46237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "977182c9-27e6-4111-8e61-daa689d09cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c7234b-e4c9-4915-acaf-f32537893ba6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44afc0bb-055f-4038-8504-9994eddde9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad94a4a-2ee7-4f7c-965a-099dbe9209a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0816ada3-72e5-44fb-a22f-cc6cca12b14f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "aebe7f56-58dc-4dad-9b85-fac5d51b97cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ad5c48-0949-415a-99bd-8b3c3696d84a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e1d7a5a-b764-4c46-a5d0-05e77f4c6fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1579493d-22d8-4392-90ff-10e25fccf776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9ac435-e804-47cc-ab8a-57472d2b5351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ab315b3-de5b-452b-bec2-292a0d52863b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2369532-6ca0-46bf-be0e-e6d55f1b3caf",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea3a10f-c826-4340-8efe-633a3238f0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0281861-047f-435e-bf20-7de18b52b76a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb1c5bbe-61d0-4912-a60d-e7434f6a8aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "de18563f-af23-470d-83fc-3cc05a33136e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c582fcbf-68f1-4b39-a499-41de9b622e03",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "615e0e6a-e826-421d-8a33-ec0115e841e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "979a630d-55a2-475d-897b-1dbbd260d2e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039369a9-1b15-48c6-b11b-5e3deb697636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0116d750-0f37-4f02-86a4-d86e88d5c9a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c0f028-86c1-4f4d-94e3-c0340d8a7a80",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b16ec50-83c9-4d48-85a3-bb6cc030bdee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82f42d08-f98f-4202-bca6-670c5265843f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129a3b3b-175c-4085-93ae-a8cd7a1f6c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bd39cc4-5792-4218-b1c5-8f40bc19240e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a6a99a7-1908-4b03-9ab5-849697201387",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4ae68a-abd8-4718-b629-78f20d6c0a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44c7d7ff-6b2e-4e02-8bee-f1a38f301cf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd41da4-5a21-4151-ade1-0fafc87519d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7cc52b3-c2a5-430a-b8ed-5b731d23756d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c67daa-9143-4cf5-850c-84049ccaa0de",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39968858-257b-4bea-8ef8-ff96abe4bf20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebb645fe-6276-42e1-a771-016a88405984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0844613c-a55c-44e2-8051-469e3cdfcfa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2593a9e2-95ad-4e45-9fd7-fbe6cc5b60ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb0f6334-6668-4d68-9ef7-f8a498b54d4b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c78ca7-bdb8-4c58-adf5-a27a806f7056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e76ff6f9-9ac4-488f-95f8-f7e31273b749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ab0c62-4f7b-442d-b760-61aba1f31155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "953ee63c-9578-4924-88fb-0a621c1e0ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8aa5bf6-bb7c-423f-b07a-712c2fd117b5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e003468-515d-4d5c-9ab1-643748c9cede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "316cf180-9130-4ca9-8604-2aac69e6a103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97cf770-9585-4c07-a7d6-d33a67f9ad97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "018aa2a1-f446-470e-ae34-d5d8c649927d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e268fdb0-6146-4336-bc41-92b45e456caf",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad87775d-19b3-47b2-b4d0-09476c9bb7f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e0e408c-df26-426e-83d8-e131f16e4f64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a342bd-6d89-4506-bee0-ff8b10949c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1d1aca2-e5df-40b1-aea1-2490bd068662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586f4b29-919b-45c1-a8ee-64e428979213",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d601d25-7ee5-4167-b764-cb09a56ecfce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ca7889-834b-46e3-adf2-0ab40376d16a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687d5609-3b44-4f43-8be9-5a08278eca82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2b735a3e-caa4-44e0-8fc3-2fdf68dacf58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b861377-2775-454c-a9a7-0f0d7e6f8cb4",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3528b95e-4c72-4fd2-9e72-7f69a4783567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "847c602a-7c6c-4e8f-806b-5416d940bfc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5cb53d-d724-45f7-86ec-5c3eab7208c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "01e769c2-10ba-4abe-87b2-188cba905c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55476061-7796-4049-bbbe-0fb0b233fdc0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be4dce4-131d-471c-b9b9-a4fef0241040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e68a545-d0a9-4ab8-ae2d-e837efe5417d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf1b7ae-61b6-4991-a01d-ea354835534b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9661c3c9-3851-42ff-bede-4632ac811750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708b4644-6aa2-47c2-9e7a-ace67da97c91",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b833d3e-8097-4586-aeab-30d2f9046a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80e13279-ee8f-4834-a34c-432016836ae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b77b68-5cb6-4d67-9547-7b68621a63eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "70c36a79-ea66-4382-b258-887a98ba1806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c6175e-2a02-456b-85ca-ebc3d3b36fd3",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2c2824-6363-4ec0-8133-042e223483e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bc5f0cb-62a2-42a0-b144-f33bf4dc3b13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6aac4bf-d191-44e7-a947-62810dae2bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d363de7d-96c6-459a-b7ee-8f9b97594036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708d50a9-f287-4f3e-a043-770265e2d833",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41dce8a5-34d9-42ab-a6e0-48e882639a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c9843c7-d8ec-4ec4-8d5e-491734fe12eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fda2060-aaa5-4e2b-9bdf-87db770635b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a606c21-c6ca-4a0c-b09e-9a780149dbb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a09a1694-b019-40bf-80d1-56b3ef60c0b0",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3615ea-158c-4b60-9af8-c45316f3b4aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "008866db-3a64-47e0-8cb1-54826013c062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014624ed-4e01-4404-b46d-709e7c215dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "35272a71-4689-4889-b4f3-8f72981700cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f83e3cf-655e-4dd7-bd39-4cf6df863f91",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd35fe5-3661-4475-b3cd-09d4233113cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "10c5f827-6f47-47cb-893e-67ba0aaefeac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac29065-09f4-4109-9297-fb664e9c616f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "495753cf-c936-4516-acbd-8fd66b9148e4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ba51d79c-686d-432d-af07-f52a6c92eb4b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eba47f10-5730-4595-97fe-55a053b13e42",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36dcf91a-a71e-409f-b3f1-586448daecb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a856cc82-ca00-43de-9009-63b65dbdccbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c474803e-3b1b-4617-974b-1b4255dbe162",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca13a4ae-2cbd-4d44-b170-9aa7a07c291c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc13a7a9-d1f9-4017-ad51-26985300f9f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17adc0da-3a3a-4494-85e2-3036456fb63f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad251fb4-6d2a-4517-9974-8a5ab7dc9fe6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ecef1b0-518f-4530-9955-3bbb50acb144"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9729371a-b01d-4e94-872d-5dd9f7dcc87d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e73ba8cf-73ac-48a0-a6c0-6509c98f9d03"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d91b47d5-bc13-4b86-8f32-4b88cdd41815",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c6431886-3f07-4bea-a14a-a29cdbc913a5"
                }
              }
            ]
          },
          {
            "id": "15e3d1ab-e9e8-481a-893d-1dbb826be66c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "67552332-9057-4c26-a658-bbd8068cd7d5",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "12895fb5-f787-4367-84b9-de5179607116",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f44be8d-e731-434e-b42e-e980f04e2878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7920bd94-0172-40b2-aa88-356685bfa119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b0bff3-59c8-4c29-b8b1-a2cf5e2acfd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1df40622-e9ec-4026-8f84-ed29362514fa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c512e606-ad49-433c-a739-7cb811cb86fe",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2aeba0ab-7ca8-4343-b173-072a313a3bfc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7cb346b8-956a-428b-b1f0-51634e35c353"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb5c7727-65b5-4b23-8066-6810a6641d4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "429b4ca9-b17d-4247-af28-9ecc3cb170d9"
                    }
                  }
                ]
              },
              {
                "id": "670a4f87-c19b-4217-9a62-f1b9d6061b0c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "de26399e-208b-4e29-8b0f-e1d788b02c33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c9e49204-033d-45fc-96ca-f592ba8ffb63"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e935263d-8d39-4c0e-b8c0-273546adad52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "eaec7fb9-65b3-46f6-9561-7939a6eb62d3"
                    }
                  }
                ]
              },
              {
                "id": "a3e6c8a6-4a90-46dc-b329-7348b961b745",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f09fa082-9168-42ba-b04b-271ac0e4df58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d2e8b6c6-30b1-463f-9cf0-9d46b7a872f0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aed745ec-d043-4b07-9b81-80c9f7cfe8da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bbb548b8-655e-4aaa-8788-309f4ae9dc71"
                    }
                  }
                ]
              },
              {
                "id": "df0c07e8-95ec-4101-8b48-c4ab3699caf5",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e24613a6-e62b-46b2-bb6c-8b4608c4d88b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "94a3a26e-c5f9-447f-a8a6-11516fb8c059"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2254b333-7c34-420b-a6d6-76816aaf8ed4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2c811ab3-0f9e-4d0b-9b5f-1d2425ba0c43"
                    }
                  }
                ]
              },
              {
                "id": "d651503b-03b5-4056-b420-c82ae66217d8",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "de5bdeff-2c2a-4566-a5e9-fb50e0a254e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1b5f0549-d5ae-427d-9cff-1497ea1616ae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34e25ddf-628e-4b3d-8d8e-a39762950186",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "bf65416a-556c-446e-a3d4-fadd646c744e"
                    }
                  }
                ]
              },
              {
                "id": "7533ddb3-0ab0-4492-9297-ddef6d9aec4a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29af6c33-cd8c-4bd6-b5c5-b318c984ef83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7121b1b2-145e-4903-bcf7-1999135c9249"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57d5ab64-d483-4728-adc5-09a268042553",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "364eef17-bf3f-443b-88b3-cb9af00f3733"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "81ebcb79-f836-4a6c-a479-127c24dfe906",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2115c5fe-fbd1-486c-ae19-128d5dc281fa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d3883a53-be15-406a-ae15-e0cd36fe2c30",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0aed26a3-e8d7-4791-9cf7-4fc19fc0a3e8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88529982-c4a3-4690-84a7-44b28dbf9950",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "06491d1e-325d-47fa-b281-c334c7bbc104"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b3548c6-7d9b-46ef-a6c7-d5e7a661932f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1f7c4a44-1a6e-4802-a160-b0018b887968"
            }
          }
        ]
      },
      {
        "id": "861c46d7-5eb8-448d-bf19-742332741ab6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "44798a5c-0ead-4ff6-989c-ab5a4f3a711c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e6e7d295-0d3c-4785-8e17-211626b9e4b0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "57002378-8090-4c68-b55c-e0b430804528",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad7e602-d304-4873-a761-2a58d506fbd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bf7f968-3100-4ba2-8b75-e96c6917195a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8387d47-fa5e-42e3-a39a-3fb2cca86bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8b2de02-7361-4fe7-aa63-199e055c02bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a95560-c33f-43b6-a64d-7e88056992d7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc1f76d-3031-4b04-bf18-52aebaa7fe44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd65b63-6bc6-4e9f-befe-ae3741fab851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a15586ab-74d6-4707-9e93-0178944f3c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab4c0436-0ef8-40ce-b895-87c0b7b353e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd289bf8-ceb4-45b3-9639-b19c1b45cce2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b12e63f-6244-4863-b22b-f7c0e902f5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40903ea9-324a-4b11-be60-ecb1bb9966b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f17e31-305f-46fa-9617-f8dd27e15d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8df4d3b3-217b-4b0f-8638-6855ad104a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07cfce6f-1f60-4cba-a32d-591286412859",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "560bbb74-b576-45fd-97b3-b45bbeaea030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b68b6bab-ac20-4c51-b439-f7add1e5a3e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d4f6155-e918-4ea0-9148-4eac649807a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da1f60d6-2b57-4764-8e44-ec106e162791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc4becf-9b25-4629-bb83-3cec51d7494e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff9ef4b-df54-4711-8d96-c838c0c5557c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ba26b2-c3c4-41b6-b959-701b2abc8ec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c633e1-d3c9-48df-89f5-7fd81b0be3b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3550962-c43e-45ac-8659-40ffd3d4fb74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e9ce2d-e257-4c5f-af21-3e7c39f7d2bb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c9ed50-4cd0-4c33-97f4-b2abbeba9e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77f66b21-6c2c-4673-9a04-9967f71f1677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab4d8ba-b45f-4d09-bc53-5429b4d3a267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "00317304-97be-4fe6-8d55-87b77c5a494b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69c8d98-bfd8-46db-9be5-fd34bd30e6cd",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9c19f5-cfff-4e2a-880e-07327d0dd2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ec764d-9b95-4879-8a34-6a7b9c3f69b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68865325-9273-4bd5-adf5-e245d5132c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "51203153-7a13-47a5-a794-c20ad993eda9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c5bc42-71ab-4268-aa82-a20d64dbaceb",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd3324e-d90c-4981-8724-114a0865d87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebcfcfcf-4a00-46a7-8a24-e03385c55919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "465b7d69-2aa3-4408-a983-5788b9640b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5eeac45d-2aa1-4359-a798-f31d7c9bb3f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d5a6b8-e155-490c-8a2c-34aa0565c0d8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf1d48c-b583-4e58-8ced-be994643b56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7be2f725-fb2d-4aff-aa38-f0fa711f33d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb96ad7-abef-4564-b2d6-08a4d6cd6bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7123f773-39cd-46f5-91c4-9e6432d57a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed15cedf-9b14-4c52-a880-4a8884bd86c8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9710360a-9f40-4f0a-8727-e831b2f9238d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "268b5011-eca2-4f47-9685-7a7f0f1dfa20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d0e203-bc13-445f-8b8c-0896577cf04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53ddfea9-abf7-493c-a9de-fc6dae7faa89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348aad43-1dc8-4b0a-815e-a684452a1f94",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3637c7ce-3def-4a69-82e3-950fd442bc75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d99743c-d512-4d0d-91a2-3886141c1ee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3d9865-7dc7-4711-b832-b1ef474514bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "21ca71d3-ff0c-40a5-a1b7-f58745a4e93d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71f0670-5cf7-4cf1-8560-1cb1846e8eb6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf54185-3adf-481b-a6a7-3fea66e8761a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f024a5d8-e9d6-4a0a-a497-152d46ae2a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0931c3e-0d36-4307-ade1-ade1c417ecf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de3a9d26-0cc2-48ac-ba3f-c71a1daef070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de25dfe0-18c6-452a-875d-e95b7b86469c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "419aa573-6fd1-4021-8ddd-d61ff1ec3be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9149a9a-2871-41bc-aaaf-74fe1c4106f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d74bd9-037e-4497-987c-2d5e3c4d80b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3829fd7-c8eb-4f26-9189-d6a7af89b8c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e232be-5db9-48c9-b542-7132a3b609e7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5165d9-3294-4d8e-bea1-58995f1b5aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "432d40ea-eb72-471b-afff-044f267a76e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af20b119-db6e-4935-a6e5-037279c16f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ebe9765-de06-43d6-b265-30b05c9a121a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af3c901-9bab-4a5a-bc53-b5954d298837",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dda4df5-0057-46d3-a173-c5d09e6870c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f16a3e-1e18-4b4e-8375-f5ed6f6d8a2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b877cc9-1274-4a23-ab0e-f5250bc5183f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e9c09c3-4397-43ff-9224-40361c572da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3109f1ea-cc3e-4f70-a96c-e4de700627d5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b53ab0-d578-4f79-900e-9e110f95d712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed66ef9a-e9fa-4081-a766-3221865f1f52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fbd51d6-3baf-4213-a320-4c147e8b7fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5b8362c-0d13-4736-b757-f5cf2bc4d663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6569f0a-a081-4251-b166-c82ce7c0c846",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b442cf-286b-451d-a5e2-3c17294b9cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65e0f57a-15a1-4226-9871-2872530dcd7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f30358e-7c49-40f4-ac60-d02a51a029ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f8519b7-2a08-4793-b5ce-0379430f9cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867f7ff1-8193-49da-b162-c07aef5da88c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96e93f5-54ce-423e-a502-7cb8c3a8c54a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52157600-1882-4a5b-8e2a-bfe381a580cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5749feeb-f369-431b-a78d-c4519d850926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "db25eec3-ad72-423d-a169-12b70e2f57b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77fe1fb9-aef4-43fb-9d1e-eaddba42f40c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9542f82a-8836-472d-a546-92d536a32d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a10521e8-5ecb-4b98-b067-564a6e8dca6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c561c87e-286f-4a8c-8182-8771c9dac96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c178e2e6-243f-4617-ba0a-d084e4bdf743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62670ca-3f4f-43c4-8599-3ce4aac6490c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c22309f-7b07-46bc-a38a-998ad3d355f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "145a78c0-dbb3-45d8-8bdc-6d2dfc93c8f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeabed7a-a4cf-4266-b797-ada814c3cb7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33603c30-469e-42cb-82f1-3c4f185ed061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81e3fa0-3700-4b7a-9108-e6529f2d287a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d6a1cb-241b-4a37-b317-aa2e835f71a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d0a1f10-ff37-4dfb-919c-9e8393bd4d1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0c4f8b-cff6-4668-9723-88893497f0ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "677c183e-a2c3-4e3f-b9f5-ac540fe87f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd4f4f0f-7032-46d7-8bd7-93bab1ed2eb6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e81fe8-9ff2-4454-bec7-c5706a4613d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "428acd53-1069-412c-aa4a-3048551f34dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c1a74a-8755-49cc-9fe1-3fe27c80782d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d84c5305-69da-4cde-8417-a0ea63a28706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53308768-4fe7-48f0-a60f-2c667d9c3d0b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f009714a-f8cb-467a-bf49-269d9cd05ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "706b43ee-75ff-4f2e-b190-ee2058620629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd4b3ce-ab80-43ad-aaae-2ca5724b98f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1caa996-2cbc-4fba-abe5-d27b4af553d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e81cff-69f2-42d1-81e2-98609e806999",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3f539a-5c64-4a45-83ca-f109b6bd8620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45b026d2-d7d8-412a-8863-6ed73a7fa6c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f6b1ea-d1a0-4eaa-8411-c998ad239ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "334cf12d-f985-4d35-a02c-99fab2b8ca13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b9e88c-67d6-4e9a-af2a-0ecae2855f90",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eebf7e49-4a7e-4761-9867-cec21d28c069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ad639f8-6481-4b7a-8215-40dccaecf17f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e6597b-86a3-4913-a269-fecf678fb11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea4ee954-3377-414b-87cc-895f051189c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f021d18-c642-46ad-82c3-b29bf149de50",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e99024-50d2-404a-8bdf-2c77ef27fba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d425167-f0ba-4acf-a044-ac1ea1530ff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a939bfe6-1969-48e0-a961-91ce9b6d84d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92d74fcc-07c3-483a-bf5e-856bcc953981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75afc6ff-0f7b-4e8e-b5e7-dbbc3aa404b7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de05c07d-3d99-44ff-8a8a-d7e6c9e05ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8542e1bc-f0c8-40a8-9989-03eba5720559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2063f810-37f9-412a-8d09-a8b72d1c9fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e4ead30-e9c3-4c48-92bf-ca0607173a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13683e9-5c89-447b-8e21-4efd1e257546",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5766d419-260f-49d9-b57c-7400b6683311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e61efee-1a40-444d-9478-0fafe6ac8901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1de8e9d-805c-40ff-9d29-d2c4cc54c391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80a70371-704c-4a98-9b5e-645dc68ee2bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "552f7e91-d9ff-41b6-9089-2379ce0040ab",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc3dadd-15fb-440d-aea5-b593f4415a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db48231-c542-42e2-ade6-6c6e95b537eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0181f2a-e6f8-4d5e-b591-a9d6cf71bc9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1bd87c3-9191-4f1a-a919-1724cfee0aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b95258-43a7-42d0-a464-bad0d6547ab6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ff8060-0a9c-4ac5-b87b-72f226e08e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7f7f263-3bce-445f-8741-5c542052468f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a9c5ff-962e-48a1-b4f5-89d9beb3e22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cbcac9f-6d44-450e-8392-62f3eccb262b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193f20fd-e1e7-4746-af68-86fa353cf2e2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "650013c0-45d8-4e8e-ac1b-ee5794439530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce3343f8-c954-4858-8973-ad90130045ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b2108b4-9803-4a5a-bf61-1b1308db9ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87f830c1-c0c8-43d4-af8f-1d6fef2fadc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e27660-b6b5-47ff-bef2-82c16111bfcc",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b92583a-eb17-4a41-af59-0789f0d46d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "973fe3f1-69fa-4e97-aaf6-b260522e6386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff19c1e-d2bb-42ae-8110-0037b9ed6ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e6a82a4-da01-4416-beba-177a1243d032"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "27c82659-4847-4395-a3b5-1266acab09c9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4bd72f52-cfc8-4f08-8f94-7aa1b2f007a8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "625cffae-c066-4acb-ba9a-731bc35065fd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fa76736d-9f30-448c-847a-26e1b9caa51c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48629c80-7912-441e-b86a-6a52ba9107a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2edc0fe5-d4ae-474f-b6f1-39b5c6e33dab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "889e31e3-c96c-4ddc-97fd-e6b4c1d71b19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b3e6885-1625-40ce-843f-b586800449e6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bbc0e4d2-4b07-4b0f-b231-4d5f4ef0cfdc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3522022d-2868-456d-82a5-6264194b090d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "18368626-b850-4468-9ed2-0e2090b0c009",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "103becef-dc13-4884-9270-fcff72c2c585"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8557f076-44d3-4ceb-bbcc-ec2c4b4e61d4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "676667cb-24d8-46a9-a3cd-727091f351b3"
            }
          }
        ]
      },
      {
        "id": "4067b255-618e-401b-b5b7-e84c370683d5",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "a7822ccb-169a-456a-be6f-54a761a90256",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9f2cf45b-2d85-4860-8cb7-0530d2c431ed",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5c20a7e8-811e-465e-969e-6072ebc01640",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db75966-55ce-4acd-8232-348cf585bf90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a675b371-796e-45cb-82ef-638cfb805dfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ffb7608-a67b-4af1-ab25-a173e300edb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d9b16ed-6cc2-4adc-b2b3-12febc23a0b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b7aadb-39e1-4624-83ac-e0c77f6aea67",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "817268e3-4035-4dbe-a2a1-7d97fdffbbc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d84c39-4834-4c2c-b426-63c17a1245c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1e7282-2a51-4bea-9cf0-222f3453ea7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9068c5b-10e4-4877-9fad-0a66c85353da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4edcf995-3107-4fa8-b76c-71e4692d2653",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1bb4c6-0fd9-4428-a38f-391c26a94ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37676188-9ce2-4b24-a466-6d5e44f23274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec27c451-13f1-45f0-8974-b4ad8b821b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77539f23-bcad-4c14-b9ec-e285203acd7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d99123-3fd2-4642-81bd-6a2c69301498",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8f015d-db3e-47a7-b1c2-0a317335b849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cc30245-6d8d-48c4-9278-13d16f1aa231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3685efd5-1757-414f-a1e5-4b9c415b930a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "98902ee8-3828-435a-8e61-01faab6d75f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f392ebcf-9f3b-4b9d-ac7c-2f1b672ab680",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "171eede1-5b0d-4193-8355-3dc2e516fca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2faca8d-e31f-41e0-a697-11303b746812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12f55fb-7afa-4ac0-87fc-97bc8d7142c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf2f68c-fb57-407b-94a2-70e4ee744410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22807f0f-4d83-4a73-892c-108cde7ef303",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97292ccc-12f4-4b58-8bd1-2138696137eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d1ec9b-3d42-458a-a3cf-231ca1c19730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d44de59-962a-483a-a433-36bbbaa35a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "61242af1-4ab7-498a-bcd9-8310077a29c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "200b2765-ee54-44e1-9408-1563916d4a9d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4e0e93-97c9-4fbd-820c-7b30c50e62c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4458bb3a-2bf7-468b-bf97-d2eaae1e9259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272087ed-a0ac-4abb-9e74-9c993ac91f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "397e0184-cd9a-42a0-b971-8b830cfeb1f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c4570f-fa04-4358-968b-397ddee16522",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0375bc35-889c-43b2-84d8-e2a44663b696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e0ce97-cc91-41f4-8179-2976dbc56a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc94503a-44fa-4d47-b0e1-386e845f6405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "48f0d005-1af9-4e68-8e8b-3bba61ee5298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62659fc8-9ab4-4d5b-9d4f-33beb573fc07",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1115eaf5-a55d-4b07-bc0f-3b54de8632f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6116e2e-69f6-4f04-a385-b1138e1362ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad5dc27-39ff-4fd9-b0a2-92544968c6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "23d932ae-22be-4621-92e9-9e7d3c24fea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c398665-c334-45fb-9093-c0385b5f253a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30cad3e8-9ac5-4bf4-b5e3-9ad8a5da40c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f821fcd-6f3b-4f78-ae8a-4dd47cb0dd4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e24602-6a0c-4706-aeeb-e174552dffff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9ff765f-fa39-4049-9243-b7331511fcd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ac9876-9e86-4380-8db1-e210c9084855",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c86556-6aa7-431b-b876-c967cbc2642b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6ee1ebf-7acf-4dcb-bc8b-7e61dfc55f33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1fb0b3-0d19-4afc-b7f5-b687336716e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "083f3091-e574-4238-8781-c27a7f23fcbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee952b5a-6f22-4015-87b7-6b727e5ba56d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c343c2-ee13-4d00-a21d-9a42af8dcd91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb685a52-82b4-4b76-a6e4-9d7fc9cd8da1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d638a0fb-4523-49c7-b789-ec05271b89e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f55f040d-5f57-4e9d-8f29-759c66e09c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0d4d21-f29d-402c-84b6-5bc7ff0460f3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "101b4441-03d0-4b76-a8cf-29f239c133bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e47d03c-215a-455a-9930-105def76c376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d874577e-dfbf-425f-a688-87ecadf118b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "84e626e7-9296-4bb1-bc83-dd0536ba384c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41acb1c8-0969-4bf3-bd61-1caba5a5e667",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a8ecd53-a1a1-4a5a-9949-c3f47f3e2341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56cbdfd5-a2d0-4536-8d28-67df386ec7d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f821521-83b2-4b69-9d52-0b7d2cd338eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "97a245e9-253c-49f4-a99b-7e27a77c5767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ccf5273-4c86-4cb5-b569-58c77db4608e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f88431-2b5f-45a3-9bb7-c1ec376eea90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbfe34d9-7f21-45bb-822a-eda298f834c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c37d41b-e43f-4b49-ab86-c7fe8193c1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc4969c6-5498-4b6d-9286-4d44097a1c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "200fe758-da60-4b10-be7d-26a8bea36871",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95a7a0b-84eb-4b1b-85d0-fe1cdea29925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d119199-c487-40ff-9e55-7acb13674bee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c3781d-049f-465b-8ab1-a97ee66a479c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "70b80629-5438-4f4c-adf3-414f94114c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d0e17ab-700f-4e79-a063-a821a392c939",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c5e417-0bfb-4955-87aa-51074c3ccd0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d6c3500-21d7-4228-a92a-fbb9615369f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a516f02c-29cc-4ea6-a5c5-52d1de253dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9dfdd61-c70e-4f77-abff-0a4693a90c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4afa77b6-65fc-4cb0-930e-e8d9320734b3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1432e1-538e-4a2b-b28b-8d7c85e7c7eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9bb27dd-2027-4314-acf5-19c95c2fbfc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1e2f91-f2d3-4285-b362-4264314d13dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb3182be-9c45-4a51-bcd5-4bf88b131051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f7e8cc5-fa56-4abd-9eb7-96e6fd32ba9c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54d82a1-b246-4012-a76d-8e8ecb3f67f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8df49fa-431c-47f9-86af-a547b728e282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1621eb-02cc-4048-a450-be492ea6085d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b7a8048-a937-4a5a-a5c6-272f52bfd596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101b6cae-a100-4943-bff4-fdcbc8ba6bbc",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "359818e8-b5a9-46ce-aa63-9e4b1fdbc958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f9c4d9-cd48-4df6-9c93-59057aebc3f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f756e37c-652d-4941-9cbb-ac01cdb0dffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47b0731b-2ec1-41b9-827f-9d117e39df5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4e3625-c53c-4ac1-99c4-5acf46116c20",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c902f0b3-f718-441f-91b1-faf760e23eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbacca20-89f5-4c13-9f96-f11c97c6c541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105860ab-f049-495c-b3ea-2176b9d13192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3128195d-8b14-4c9c-b4c4-d1945a53964d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d938633-3ec9-471c-b9a4-f52b6921e677",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e18b427-4894-434e-8b7c-e37e4e0f312c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae670070-6f2e-43f6-9843-03792d03dbcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c14a8f-bcd5-4c4e-840a-4be53e6aa64e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "197cce55-7c95-40b0-bc50-9e94e51d6665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4070423-f545-4172-9c45-c4062a4ffded",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a7591f-934a-47e4-a39e-2671af566caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aeca22d-442c-4068-9c93-5e96d1e5bcb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc125cc7-fb44-482d-9c17-54b8a087e704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "deb491e2-673b-47eb-b0e1-d2789bd91ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b1b1bc-e2b8-4737-9057-552eb441f961",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9366314b-a0c9-40dd-bb9d-77c38205575d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cbd5de8-bfe5-40c1-9bdb-b49289d82713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d2f8779-c3c3-479b-b1e7-d393b6c34522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2aef0839-53a4-41ec-a164-d52abbba6128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0573cbab-36c7-439a-afa0-6575b702f221",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3600943a-c26d-482a-bb89-6aeca1ca7415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d97b8257-259e-4724-8bfe-4935f9bb719f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b2a75a-7321-49ee-9453-fad77c0184e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4df4a831-3d01-4cc8-86ed-6778a285a554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d1f1f6-ff13-49d2-b247-9c8939f834e3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb5682f6-bc49-49fc-a307-8b2089ef2ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c457723-ede1-4562-afcd-b81821952691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e4dfdd-5f8b-4f90-a702-85b655ca88b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5120cd0b-9d8a-46f7-9a2f-46d8a51ff074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd977fe-399f-4ed4-a8f9-acdd0e3d06f4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5fdb5a4-00ab-459d-9950-4f772d786444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5585c66-4cc0-4bbe-9f7d-84a034ddbf19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870457c4-dfe4-4951-a15e-84155346fe5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "639eba52-6208-4cf8-a4db-76c19aae9304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae9b592-60ec-4e58-bfd3-cc1e2b8744c6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1358bbf5-a155-42d7-a260-79a014e770f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dba27b3-a19c-4760-963b-288e17ef639a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651c4244-882a-4015-914a-b6e4e3863d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5eb1917-7c52-4730-83a1-ecb238395c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1c9f08-aafa-4d07-b88b-d28eaf1f144a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f1e84a-5717-44f0-8ea8-84c1edc02bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de84b789-cbf2-437d-b032-56763ae59bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1398a94-eb7c-4866-8a8d-58e140b326d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "daac9bcb-aa61-4981-b4f8-b0a6f3c18bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21618d58-e63e-4401-b04e-9bb725159d3f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0162afaa-a500-483e-b3a1-938c4e0108ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b9fef99-0b06-4be8-a1c7-cf96c2a2d291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137604d3-8a88-42e9-ab29-a01a980357fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1e4efc5-1b95-4f33-bbc2-a3e3adae45d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e22d04-376c-450d-9fb5-d9549efcd5c9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91fd8d83-28ea-4097-8e9f-c2f978759ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9dce163-7c19-4386-988a-080e5f6d0b4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc1583c-9b48-41c2-a0f8-2aa3033ef4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfc86a91-15a4-4cc4-a5c2-ff5873be18fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8420057-755f-460f-b501-7149c28e4707",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad50e03d-f91e-43bd-bd0c-9f503e1518a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e908c0d3-3366-4946-b240-8f8d2f05fdda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5c2482-afa8-461c-a75b-e43a0ab0842c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "994e6437-f3f3-4cbc-94d3-c40b9e4c4bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3c20f1-83ae-4950-aa70-3f3c9b635d0e",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb35b0a1-cdc6-43be-a356-bc289fea62b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d2d5e9f-36c5-43c8-b61e-c71ce61f41b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f84ed2a-7099-432b-adf9-5809406cd33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa02963c-bbab-49cb-b6ac-5bca6cf7fd8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "819a3f49-540d-4d0a-bd64-8e978c208062",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d486b29d-316e-4854-b87e-4e5db8fed108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b3bd278-26f2-439f-8eb3-c9a663af55f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d8c500c-d0ee-4b83-bb92-ccb108b7238e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b7157da-7c76-4efb-ae29-ece83584a693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c8eeff-5742-48ef-8388-8e746d0f38fa",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e17f060-e17f-4e6d-a62b-fd10cda7bb57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "844aefe5-d680-4a06-8af6-70f17f2c7a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01efda8-7d82-41a5-9749-daee0e8eda7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f1d2a0f-2f44-4d9d-8fee-384bd42881e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64932b7-7a15-4838-89d3-19f34b1fbb14",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb79aba0-ca00-4921-a2aa-f359cd6fae02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5702abbc-34aa-4fd7-9604-3a87bbeb5a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975dea65-9147-4b0e-9318-f14ea029efcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81a4534f-4729-411d-bd5f-f439b30631c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50f1d41-996f-4087-b22f-f8c0824a4d15",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6abd23d-e99f-4cf2-8428-8985036ef658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01c42ee2-4ddb-4d30-a1ed-7c8775819219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f78ec8-d69e-4074-8194-ef317981e66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb6872cb-49f4-47c3-b268-7f3a81e5b616"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d22c8e9f-462f-4433-ad2f-343c11fcdead",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a08b259f-cef5-4c9c-9489-d0e57e6c7fdf",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b27bf97-b231-4729-92c3-fe39bbfd2518",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8aaa586c-5b3e-439b-b55a-673791e50b06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d39482a6-b9fb-4813-b7f1-ec6585d88d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed888020-7144-44a8-993b-1c884c684545"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6b0782c-db0b-406d-a75e-664fbb01e37d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b682e88-2c91-46d5-be61-300136f8c38b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb1cc09a-de18-4e3d-b720-8421c497e328",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3905ecd-a71c-40a4-b6d8-5121c2d3a4eb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03770999-f9d4-4882-86db-5da0a87ef8a7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "28423428-411c-4879-ae4e-79e03fbdf11e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6eb362e7-9f2a-4765-a65b-85ac5accc38c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fe732add-ff3e-40fb-af6b-27f4b7b4896f"
            }
          }
        ]
      },
      {
        "id": "8fa15d8a-7e50-468b-a7dd-8fc7f826d7e8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b714807d-d9ba-4747-8914-045acd030f38",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8ca3cd75-4371-448e-ae24-fee0f226fdab",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4d6d6913-9087-4cf0-b781-be8935b294f1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a250e872-ebef-4d9e-aa4a-c416c0969689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab651bd-ff3a-4540-99b2-99685c38d738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13036ee6-3627-4c8b-a8b9-25ea9b78617a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb7040f-3bc5-4889-a4b7-11ae6dc022e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75fd2121-19ad-4940-b24f-3842d9301a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f907cc-8d0b-4405-8fa4-3ca6d04df55f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8813bc-1bb4-48b0-a371-53a001b507ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3c75278-dacb-4138-981e-c8093083a2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e390d7-db86-4c7b-af69-ae8365d8844a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa356811-f8fe-4bf3-a293-10105a208dad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58008444-8a33-4db0-9f02-d3166cdc1fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f92fd60-cc39-45b9-b94b-5a19357868f7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c1ec97-0497-426f-ae3c-2cdc8e0c6446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b86af6af-4f24-4b19-962b-30efc6737385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a3b7507-fbb1-48b5-ace6-1732fc90d0a9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccfc35ce-2c5e-4504-bf64-19be3f5244b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34f6d97d-3959-4c71-a7c4-4d3aef87f034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66377f6e-6ac0-4c2f-9655-52484113b529",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7826e9d2-1d7a-4396-932e-73b9ec2926dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8413c284-0c59-4de8-8d00-5ff1c0fbaf09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcfcee2e-c141-4f9f-a66f-378d48a83736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3315350-fa54-4bc4-8442-5861f5c33702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3137fbdc-fbcc-4551-a440-e9fd470daa53",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa1dd0d-b8ce-45c2-b524-40ecf487d203",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c2749dd-2343-4916-9f4b-4f974d2e4412"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6294fc69-6650-4d2f-96c5-8cebd8be1f3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07eadceb-588f-429c-a02a-03da677a45cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2af0d9a-8385-48db-8624-0f64c6c49c41",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c263b7cc-4dd7-4c61-94e2-01aa79539ae1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f241a91-fd92-4e7d-bf71-799a1ca48d93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3916bb7b-9a5d-49d1-a941-3b33a6afd41c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "447bf366-662a-41b1-939b-d357697236d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21e974b-68da-4ff7-b4c4-bc4d2590dd4f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33f0a33-10f6-4d37-9920-1efc0a8c344c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a26820e6-d3bd-49cc-8faa-213e64ea009d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c9c2a3-d940-4b4d-81f8-3e0313eff42e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8807d978-9d85-45e5-a622-a2368856454a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b8366d-d0fa-4c39-8dde-7b3ced39a3a7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1271e84d-9354-47e1-87a4-97d9fefae827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea30cb7d-79cc-4617-b94e-205174ca2643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67650553-ddfd-4e89-b1a4-dba5f46a40f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5c2e80-065e-46de-806c-88cf5df3a698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a17cc6e-cce7-41c9-a6ff-ed3ccb68ee23",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3922420-fc6a-4750-8c78-bebdcf837e5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9950410-d3d2-432d-94d8-14926d14f78a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c85b148-fa2c-41da-a4b3-fb1a96cc5c9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a81bc1e-2934-4897-b569-7f43734e9a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56568553-af85-4c77-b15d-e0572198880b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14368603-df96-421e-b8d3-6391a028560b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b51c067-2c60-42dc-b17a-a5517af8cfbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0dfa38-169a-4bd4-b6e2-90e99b10426d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3410cfa0-3a09-4a54-8999-f50531bbd4e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33871c76-0ca3-422c-bbe6-cd56e7827c6a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be0714c-f9a3-49d0-914c-6c0c9058da40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0bf461c-20e5-4011-8af0-6eaa0a2d9c1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f38331b-a5b7-4470-84ca-ed26a55e5aa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "734b79f6-9ea1-492d-bb30-703f0648ec94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a729d5d-9f03-4282-bc6c-60382e6b932d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70eb5cd-a86f-46a6-a88e-47279b63dbf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b35198d-66b7-4fae-a463-f70d2b28e299"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "949b1236-3c0f-4127-a569-f7a20cd776d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f14681-813a-46df-a563-18de93eed44a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3be6ea4-d95c-4f02-82ce-fed647a3ec1f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3883fd9e-fa12-4a8a-a6eb-7396545ade04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7b66f8c-8789-479b-bd24-7a43551b0303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dcc2852-59fb-4b17-983e-addd42920f56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e0a791d-cab8-4d94-b077-eb55812d3aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d4ffa2-7bb2-4c60-8793-9f6c98e06fc0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac249fa-d794-45ee-ab01-5b3590716c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fa3f003-3dad-468f-a49e-14cf712eb094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44abc5f5-7ef8-4ef1-b019-8c453bce811a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4494e112-4298-4538-ae5c-9eb65d69a0ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "234c2c4e-e2e7-4377-bb2b-20703ccc1e7a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798df80e-d43b-450f-995d-6b91fce3f05b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dba2d3df-6f5e-4a20-97f4-6c861ca3b260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd5b199-072b-4dc6-b3bd-19b5cdfc7d20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac0fcc6b-daaa-42e6-bd58-1987384a6150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d887c2-040c-4b8c-84dc-8a2a7ef0df6a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e22e1d-ab2f-431a-9de0-0d25c833fc9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a5db91e-4589-4376-aa6b-81b713f198ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b571c7b-981d-4782-933c-7e4cdf3f347b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed83e22d-64f6-4b1a-b1f4-3e6bc1403031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6cfb83f-0003-46a0-86dc-c0fb08fe6c05",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99dfe221-7657-4cb7-a39a-450e21d8b303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c20a16-5a74-4ddc-b4f4-1f94cf866139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e21967-6f59-4314-8e31-df02727acf96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8a0f1a2-75a9-4212-aaed-3f3b65ffd13b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ce05c9-14be-4baf-b69a-00f32a66a531",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b5fec9-9eff-41c1-b5c0-8ff1fc11b5e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d8e8123-5b16-42a3-b4d4-cb5d212441b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "421e9c63-5a0c-4bd4-a89b-2026cea88206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edd343b1-5480-4d44-9d71-fa9706675f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c902a3-7df2-44f3-8da4-6f0ac018b975",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205b64dc-7a11-434d-91ae-4562d62c3ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0523bad-2087-41ed-80d0-a1dfa503a2ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10056d69-7d98-4364-a30d-195bc8b53818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9078e725-2a1d-4a9c-a611-f36663930c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422bd522-002e-4ca7-9973-ebed2b99631b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d769b0-a89e-4858-9d3e-ab6718990539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2823b75-3e0a-489d-927d-86708bd3be1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d430a8d5-016d-4a40-a444-383487629e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32bee4a5-32b8-4c75-aad4-e02294a87313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23ea04b-8c4c-4f8d-b2f0-84c6e13d4d5b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7855a767-94e4-458b-b801-bec9310ea98c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a610f4f-319f-48ae-9426-f91cbafdb2bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ae8a41-5424-4fb9-83fa-4ec38f56cdb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bd0fb3b-41f5-485e-bf52-ed50fa1ab9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2048561a-552d-46c9-be76-96c27ea0f317",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4829485a-36d9-42ed-9b99-a1e370f37178",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "989cdd6c-47d2-4390-ac7a-a27f9772a335"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7b0e3b-be70-4058-951d-343e84144aa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b59c7b8-8ddd-447f-aa9a-b56b5b9f4184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3715cfc3-5a5e-479e-a36f-b78b0d15d1c6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3af8e3c-c070-4a6f-8d7b-d80cd69cdb8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "274d97ef-d549-4fdc-b20e-8882ddeb0b2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be279510-676f-4cf5-ae28-8bd75cc8c18d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dba7fb7-ee5d-4bc6-89d8-9d68261d9d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ff17b3-d042-4a55-b168-49c2ada7e4f2",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06244f01-e13b-406c-ab6f-830759384d1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12020265-96dc-44f8-8594-276918ab8bb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c8c345-fec2-4554-998a-9bc31f1b726b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fd94a33-d6b2-43bb-b782-f00f102269a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d7bda4-4ec0-4e1b-a8e7-d2cae1e3bca3",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c4983f-67b1-468a-a612-537612744e15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c9d48e1-7740-4306-9aa6-f42993d56ba8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb33192-0742-4955-9730-b18e1ce23210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e897492f-ea92-43c4-a15b-487a74e46219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0e60c1-be13-4442-baaa-be1412c0285e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f053459e-9057-43cb-b4fc-745b0f1a596a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b20419a-9469-4f8b-a370-39b183b2fd71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f093a526-92b9-4e9c-9a2b-94dae64557da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b83131d7-1302-4e06-b4ea-775b2e32ae80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39d4c75-a1d0-4f5e-9f2d-b40c4ce951d2",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aae0b25-2c3d-4820-8752-29128309570a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17f5c2a6-1dd3-4f87-a7d7-f7f0bece52d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2625ad05-7e07-4f0d-9cbd-ad3ebeec9839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edc735ee-f905-4bb8-9c4d-9bdcf53664c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b6d4a7-e6a9-4ff0-9955-32e54c700982",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192db00e-86c8-441f-bd34-c4e8497cf567",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55e2497b-dc6f-4264-86b5-8bb59d435157"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7acfbf21-4c6c-4096-98fe-75fb5d3e9563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c0391a-f0b7-4258-8e20-fb5da6fa5056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42601e68-1c45-4345-96f2-d96ad1a1a312",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3defb2dd-7874-4dce-b362-f0ae3edd3a6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d55ee1cd-f97e-4d64-a325-2066bfd6c1fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57a8b58-c565-4cb2-a68a-c14ee00f15a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14b768ab-bcec-475a-ac05-1db065f2ebd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ddc51d-a47f-4eb2-9dda-8fd09b476992",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e65912-45ec-4c8a-9515-1edb6d1654ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a412029-414d-49c9-b2cd-d55b6c4d0ef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f761f6-386c-4c68-a091-a87e08c6d5d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edafeb1d-e8be-4ed2-b469-5612e3f36074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119ca1ae-67d5-419d-b2fa-7bd6a59b65a5",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614e1733-6ffe-468f-a115-58418b714965",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "637bcf13-bc74-46d8-a0bb-50190c3c9db5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb73be5-c09a-4464-9fb5-bc7b9e76352a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e245986-a727-4a68-b30b-d0d4bb2e15f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1794f698-d8b7-4e20-85d7-1401fabc343a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "432072ea-5d1d-4d33-ad60-93a9820b58d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8128b1c-0c53-43c8-9218-3131ddac9be1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05eebfb-013d-4516-9a29-218ae75b91a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a934d04b-50b6-42a1-ab6d-d6330e4adfe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad00045a-f2aa-48cd-b22d-0b32609d1fc3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc58256f-37db-445a-a986-9a8e752ecb59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2f9ce7f-e89d-4f32-9ffb-c06a6a082635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29cba2c-50e7-415b-9ab1-db2b49b133ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36960feb-e405-4218-a91a-8620c17da7e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d142205c-8cba-406a-9a68-8e124a4d5f2a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79630e29-ad12-4336-a792-348d47ffd355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8373eedc-124c-4736-9f19-4d3c19e12372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea406e8-3739-43bf-8f1e-6e7963411f00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9903286b-6b80-46c5-b795-d70d27e0c1f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3be1475-2ec1-4341-ac82-37d7f8aee5d8",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145b0d26-f330-48c5-8abd-74dd16e50866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d0b9972-38cd-4497-bae9-bf60a25de91a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a9f523c-f323-4731-9149-a38da6958d23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c5644d8-8cc8-4a23-8ad2-2411c11e0e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6c693f-709f-4338-bf08-07ce8fc99427",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c40942-1993-43f4-9e32-e3b35b1ee8e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca305d73-18a5-4a85-b04d-250fd9065f51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ef42a4-f854-4fc4-8668-28ffa1c2523c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbbeef8d-03ab-4408-958b-67f64cba5726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eeb5033-8f5f-4dbc-b27b-c1df6964e713",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc1ebdb-4d61-483d-9725-ea21d8bad6d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0389708c-7af3-4f48-8cd7-e46038035949"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c1cfde-f2c5-4fb7-9b75-a7e5f1f440ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0d05654-511b-4076-8096-37aebfccd6f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a83f53-7774-4418-bd4a-ad0c54fe554c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98912896-c7dd-4fd2-8df8-db0d5482482d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b48f4bf-7589-4ba9-87b5-6cd301112851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce93b8a-17b5-437b-b2ea-223825facf61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bd88c6f-f1e8-4f7d-ae6d-011165b20691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a357262b-7449-43b2-b4a5-a01350ebc6df",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb26092-e7d5-4a81-993b-2d8b3e361fe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6becf94d-1cef-4159-a3b0-df359295fca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03bc3b3c-9f2c-455e-aaa7-fd36fd3a3be1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab394984-7c80-4937-ba94-b7353047dfd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8e21c7-c85a-4f53-82e4-908ff250da66",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace285ea-1e1a-4794-acae-792ff2e3f9a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4801014-08e4-47da-a9f3-ee5cff7660a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "291e126a-31a2-4560-a012-446fa90e7b14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f15f6558-dc07-42f6-bfed-e64f2a81d26a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d56c33f-8479-4a74-bad2-9535f1d25346",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79adb913-b345-49e0-bf98-81b14681b67a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "352bfbfb-dd95-4612-8154-7841b464c13f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d92fe0-bd85-4c24-8333-991f28e0214f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b978c5ae-cb62-4e42-887c-f35c28d8ec11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c6056bf-a940-47ef-9dcd-ade66ba9278f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e01502-afa0-4712-8c70-eebfada1947d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c23693-544c-43fa-bf66-6f1561af3064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf7299b-ce66-4003-b7ca-c9be4c56b7bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b862897e-153c-46b5-b063-cdbe937d0696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b640d5b2-9797-485a-ad51-292f0672c911",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a5aa87-0a24-499b-99e2-6ee11fc69487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0720790-68b6-4aec-8ec4-69b149def8f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8148f4-2d4f-4335-806d-1b47e0f32203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18889e59-e68a-4ead-a7f7-928f89ad66de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f571ba33-8cc8-4441-9c1c-eef9363b4c02",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c7eb84-74a6-4849-83e1-94d0fb1e8b2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff58743f-7590-444b-983e-30628b3d7f8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17157c6c-3e95-41b6-b196-aa6ca827f331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bad2352-be12-41cc-a8e6-3c3288dcd6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47972a62-3bbc-4bcf-900a-34ff97ca2f9f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c088c5a-7f10-44df-bb7d-69edb891d5ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d74a0416-168f-414a-aee2-65f42ed9a2cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c3cb54-8d1b-450a-bd4d-bc2e2abb0180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08747c66-1ae8-4a5a-80c1-14b370ce4c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69e2529-cce6-4c35-9195-f2a08ea8636e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7433a7ac-45bf-4dcf-b131-48c936964a14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "306fc808-bfe3-43b1-9221-06bafa8b412a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "043f6752-5e82-412f-abe6-ca95e80568c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9051e787-c8d7-4439-b55b-2282f9748ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "104a2dec-2027-44ff-ac75-ae72668d2574",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e3846c-c918-40d9-8de0-f4e26de528b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b523255c-61ce-4854-8cd3-e81a7bb18323"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f454e3eb-05c7-419f-8096-eea29512f192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fd68c12-9d75-4711-a93a-a56b83705aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db69172b-757a-413f-9df4-ca603da3d096",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9955e3-07da-4204-bdcc-719662be238d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0c16f64-2862-44ab-877f-a57995889915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49da6fc6-7db4-4a89-b5c3-118d2b1981a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "065711cc-5b86-4f82-832a-2f5fc48c4b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d849dedd-303f-4c23-9126-dc30e8a1d248",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f0daf6a-0e90-4b42-a48e-4d4330450452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cff4f1c-bc0d-4e2d-869d-8e61cca4ce84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd26024-b0d3-4e75-81ad-8d30aca3938f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29bd4591-0301-4961-9293-c4daaf1032e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7df5224-a2a5-4abc-a5a4-76269242f7fd",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba1001c-297d-4ca3-b829-d8504fd25454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caf5cea5-4eea-4852-96d8-55847815361d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3bd6d57-cd2b-47af-b44d-70831af6f9dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49a49ee9-0b14-4c25-882d-4bdeb11addf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3caa6caf-e16b-4bfa-8090-a3bbc47d2d0b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aba9948-e58b-43ae-89c9-bb2b609f9cb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d2237b-971c-4482-8344-97743c602638"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08ce7e2-4ea4-465c-a41c-6e24b4de8d82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eb3dd78-2c76-4a09-a3bc-02076a3ae93b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c72aafc-b638-4983-819a-8f2908ad88a5",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5605a980-9ee0-4108-b40a-b9c0f4fed060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8da4272f-6405-4985-9bbd-03b95f57eec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c50b1f6-ddad-4ca6-a012-05f3fed27eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db73194f-bcea-4d2f-a9e6-ff5289060cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831a54c3-cbc9-4907-892f-25fd02c957af",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6cd5d8e-9841-42d0-897e-28db5a18bbc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8d9768b-58b6-4858-8343-d23795533f3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c551493-b8a0-4da1-90c5-9bebc507f426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78729b68-4e64-4776-9e9c-6e9421e33dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6731a0-e83d-4cd0-86b8-4784265fab86",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00756b1a-dbd1-4173-8b01-4fe681208b4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20b3aeb9-af19-4f0d-ac1f-4f9f510823bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4030bfea-8bcb-4117-8919-a2828f12812d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd925953-a74f-48d6-89dc-20fb169edd9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e1b490-5480-4b7f-bb28-6bd036d25c4e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603b7c3a-a1b7-4b51-9f6a-71442b6b3796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6178845-57ad-4418-b5e8-b1004a050982"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26336dda-0e3b-43e6-8a41-a266a531c778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3229a8d9-027b-4dc6-bfe3-e43532dc48b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c187a73-aeb1-46c5-8871-9a866538256b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96b5f2b-7585-4053-9c3e-e5ae531fba84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad976b60-ab8c-4029-8132-c9999ebbc3de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c292034b-a114-4b98-87f7-415b5b68183d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d195627-a52e-4a64-92c6-2141a71cd2e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d7b593-d89b-4d5c-8714-140e1afc3fb2",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e2f5d2-a271-4021-9dfd-cc59e7460a03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "450d8d48-1323-4b5b-ae55-b7f46de5438c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfcc450d-f8a7-4228-9c63-194c37a7521c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbf265ca-80dd-4e85-9a43-96843787564f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0aef6e-d74c-4873-9b70-a04d6963d29c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ffbc70-b450-487f-bde7-64bfd5cdd15d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af20d81a-1ed8-424e-8d3a-691e93fd1de4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6018f532-25fa-48b5-8a7e-8bfeca188304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9af5d372-7610-4c18-9143-b2e40eb779b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5328a6-0511-43b1-a852-1aaa5a16c4db",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d523152-18c0-4f9b-a444-2e0391eb2a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c66e0d6b-42ce-4f0a-883c-b1dc54ac2071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb30b29-b1b1-4371-8dea-af98486f1c0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b73642ae-4371-41db-993d-8154004ceb02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "149f0da5-bf79-4abd-98e4-d54c1ba21f95",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5a8d92-5436-4f12-a6bc-4f16a09c78f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "576eab76-e815-4743-8054-da491d33e548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "235221d2-dfcf-4096-bd1d-b302590c5263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2662d0b4-abb2-4cbc-8059-f7020dcbccfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf81383-140e-4ddb-90e3-e039e8ee3f49",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b285fd01-60cb-480d-9a5d-249846dd3273",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea4f3ac9-14b4-43ad-b7dc-d0531af403a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "119653cd-656a-46cf-8c60-ddd6a7f80cd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c81c898e-4a0c-4208-9f3d-3aa029cdc302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec92f134-43b1-46b6-b496-63aa25028608",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22264810-cbc1-4feb-a4ac-9a8c20b8c56b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12cb898a-c962-4d22-a8c7-80a3a0de85ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ba10e3-e32c-4547-ba63-b2d1e13b4741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4f93dfd-b595-4bc3-afd9-c1accc88d9f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0288bba6-683f-491e-b873-9ca00a7a9437",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a3345d-4a11-49fe-a4b5-a505f82bcbc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99ab6f83-6c0d-446a-8e58-bb31e707bcbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b749f6c0-9b8e-4a6b-99a9-62dd079fc5c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cc39219-5739-430d-a8df-ab7b549b6a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c8a1b8-950d-4c26-b278-fb1ee6299aec",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d348ccd-285a-42e5-b654-74ad7487a5fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccc59bad-1eb9-4a53-a34f-c39fa291b164"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a734d109-6b12-43c2-9a40-18fc1f266273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a57eb45-b386-49a4-8f47-a2a54ea58a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a295d23-a85e-4976-9f69-96466b2decd7",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948b07c9-f4b9-4eb6-a808-1199ca34162a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75eda784-c5ed-482f-bd93-3c8a34044f24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1220ce2f-2d83-41e0-ad1d-5937d2a7c633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13ac223f-c778-4a8f-b771-89b62c7a58ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4ae33b-1324-431c-bae1-f09e7a43ff59",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f556c751-716b-4ddc-a8a8-9eb93b58c69f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1c76378-a4af-4491-b4dd-6a0d8838a0f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81ae68c-478b-4c4a-b20d-f09ce97e5c88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f001298-16e1-4fc4-80bf-d75d848dab16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e4d968-3f10-4675-8431-51238ca63c95",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0cf17f1-ddd7-430f-8986-e8885fb14dff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1cdcc24-fdba-42ec-b0f0-87f53abfee51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a94b6db-0233-445f-a27a-b931a430a003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c1fd516-7f90-4c02-a167-d6401f0a8625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8f0b23-acc8-44d3-8b67-e11271f9ed18",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d673388-3b7d-4bbe-b10b-91b9a3187c85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ca5c556-9383-451e-9109-d2f4be2a9887"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12e56b8-e894-4c58-b2b4-dba35a0d458d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd35dc74-7e1f-4072-b5f5-13a723f05651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169cea91-079f-4be7-91bd-76f3763fd5f2",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5e5619-8d5c-4056-8e26-83b802aed4d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c91228c1-c9f1-4f9d-83d9-508693483b0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa8ada8-9264-4360-89a8-6d384e3de938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72e527cb-55be-4964-9f9a-fb9ee5566c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df84bb4-20cd-4112-b8e1-3e171c0e3d07",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523caa73-24e9-4cd3-b39e-0179d478ef45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e0f8db3-4f2c-4d26-91e4-68f48d27a727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e07374-fc48-4f47-aabc-522f3c010c4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de9d08ef-8b7e-4b58-a32c-cd54859a6d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2c568d-0807-4de2-896d-c829ec896a09",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46962353-a71e-4cf3-ba70-e10b06512874",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bf92bc7-863f-410f-9b06-95a4517ef0e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4fdcca7-8a76-4c17-aeb0-e4677d4f461e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96f58ba0-f3c4-4bb7-92dc-839c1a2142a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c50f55-06ed-4bc3-b2a5-d9745fe01145",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31101c17-293e-41fc-bf25-898ba664f64f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3e808f8-50eb-4093-a4d5-b8b6d73eaa91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc7b3c2-4ba5-4ad5-90d4-e5d1c1a93445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20616225-1954-4321-9791-d229ed160a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b02169-1d47-4708-a4eb-1044c512a90d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4926050-6324-46b2-9249-47715c7592c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34675af6-0b56-42e9-a6bd-835f0497858f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "063348b6-351a-49e9-b8f6-34dee598952b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35376b0a-b53e-4bd6-8cdc-7584bce12780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4caf59c4-c5d2-4fe9-bdc6-da5a9897bf02",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f1d3e3-2b2c-4184-bd5e-51f1431228eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60219a1c-636e-47ed-bacc-49011257bd6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10646521-977f-4ed6-8670-c207da487994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e9be49b-1c22-4a48-ae2f-12f4f98a76d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2ee6fe-1e44-4ee3-aab9-d247defd7bbd",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d87c939-66da-4339-afd7-e05964c5bf3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e440b8f-093e-4976-96d2-53b5cdc21d0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f239619b-e7cc-4bb5-b0d5-02a0c0d8fbb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddf999e8-f0f9-47f6-85c2-9bf389d6f479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175cc324-736d-4770-980a-79f03e9b0e0f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da67c1e-688c-4a63-8cb3-1d943b6e6eb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81511731-624f-4fce-a18e-e3cccb04dedd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f71ceca-ecab-48d4-b4f5-a233bda924e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c1f6699-bfb7-4680-8df0-c2389e97bbb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84af96ea-d510-47bb-99f3-bebb1742824a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa494844-4bc6-406a-a1b7-2645676ced6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c52c08a-c3aa-421e-abe9-6176268f8c34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f8cc9d-d97b-4a0d-ab74-5da7895340d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac33ec3-f1d9-429b-bd7c-abd4fb626ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b30d851-7917-401d-b291-b7b03a90505e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a184302f-43ca-47c1-a71e-b0b30987fcba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "492e3d8d-5762-4d5e-9455-1ff00aab734d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a693312-bae8-4846-b844-3208ca3543e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c7990a-6b54-4a14-8991-eab94691d067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a5268d-d3a3-41cb-8092-9b43c1104a0b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab2f0529-391b-434e-b2fa-6be6379038bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c638b82-b329-49a6-8a1f-c1a2d9fdabd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbaf0aa6-a6e8-4fcd-b4d3-af1f5b7607b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cebf4c3b-9983-477f-8e4c-1b454567695c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "863ceb6c-9e1e-4707-a1f6-138b68cfe06b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b764233a-77c1-4b1b-b95e-b52c269c6338",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc65596e-e3b0-40d6-9812-1f770f0197aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b92950-4c9c-47a7-8f6b-966ddc07b2d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "410bc1b5-d6a8-4d6e-b3c2-00ec0a199dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d1a797f-7c0c-4211-8bb8-e2320817a3ba",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07aae515-b252-4b2f-a527-30e2b9147cb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "265b4fff-60bb-4f8b-8aef-2bf8d1c01b47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7796413b-e64c-4255-829a-b6e9a6eec109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f373f27-b6dc-4142-aa95-7af9b1f501ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816206e4-f74b-473e-8b8e-25d315bedaee",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6f99c6-353b-4080-9e58-03e68b750cb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "863c43a1-f25b-4915-b2c4-34cc788d03a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f24aea4-e0b7-4c18-9130-21cf96d8b852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13fd6fdf-a26e-48ee-8d58-8e01ad9047d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbcf5fbb-2337-41c0-8f3a-f494a240f405",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8f2115-4296-40a8-8fc1-75487771996c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e63e7de-00e1-41bd-8ed6-cda794d9fce8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e479e2f4-148b-470b-ae63-da04fe81b01f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "effdf322-09cf-4226-b603-28b5b9174de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c29404f-da73-40d7-8cb1-77efb04cc8d2",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f61dedb8-66be-4b33-94eb-7fb867d1cfc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91eeed42-786c-4929-8de8-094a03e73c2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "561269fe-7877-4d88-bf2d-e37939b9509b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aca99c79-7f9b-4846-a47c-72c3799cc573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32911ed5-2e64-4791-bbba-ed594611b1d3",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a40c324-4046-48d4-92ee-45dc003b2925",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53648723-5ab2-46a8-85fb-ceaa9fbb61c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e740a10-e61f-4540-a16f-229cf0a07b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0feb4be-5b8d-4596-9a1a-f48a348b0ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a372d039-d13f-4b55-8f08-ee45eed03316",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04804117-ee29-4284-8d26-7971c9e9bb69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19af6c62-0514-4099-8ecb-66766f740518"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e2bc99-a930-46b1-a91d-ad067e8ad296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eec092a-569f-4cb8-bea2-7959f713fb59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80191eec-efa6-42fb-bfea-3c99febe6d5d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258eb568-2c23-41f7-809a-611c0a10a664",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65ccbeea-7255-4ee3-9c68-13501088c248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1417ef-68b9-4428-8b6b-01d0728b4fcb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38b91dd3-ffe2-4aba-8676-6446a8ec49b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb27978-0f6a-4ab2-b705-fc72e0cf2505",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c117b9f6-39f6-4685-9245-0cefe01e738c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ca865db-1917-4542-9ecd-a709cf832875"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b83fcc-fedc-4ab0-abe8-8f8d4127def0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ced2143b-925b-476f-960d-b268c03e3bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dba8eec-064d-4c9b-91bf-bffbfdaa6cdb",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efead216-e013-4301-8491-80ec40969db6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec68e73d-7c47-4a3b-a723-574674f29928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "525f26d9-da6c-47ef-a5e6-c2839e62d12d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e334dcf-6829-4859-a3f8-dc503acfed35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9d4aeb-0b11-42af-ade3-27f00a55a6a9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150cf2c7-aeef-47db-8ff0-41a1b55ff3a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38065b73-8c64-41f4-a511-63f90e2330f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab16091-859d-4adc-b775-67106473c2b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a622d0f-660b-4474-9b28-0f42d1f0b05c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de913b1d-0149-4764-b560-dc502b87addb",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d961c3-1a0a-425a-8f20-b3f9a57cd862",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d121e7d0-1e4d-4332-a199-3aec92df53e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb6289d-0edd-4626-9b0a-0b9ba113dddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab820d7d-3110-4f8c-b5bc-8f99ced575aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "731761f6-1c01-4e2a-abf9-6ee5430cc27a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365143b2-95a9-45ab-9f39-d3291a224843",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c367988-bc20-449d-b4ef-4ea05e0badf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57e318d-119c-4c0b-9d27-5d7e782e22c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c60c117f-477d-47f9-9bfc-4345a400e9be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d194c4e-71c9-47de-a693-82f79a016a4b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41864daf-212a-4776-8837-7864015f31ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59b2ee3b-d134-43ac-b54f-033d1e8cf818"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a20588-fc80-4fbf-959f-ade77c4c254c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5b5ba2f-6216-4b48-a0b9-ba20f7777e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fffb5066-b175-4e35-a15d-da5eef257b22",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a580bcfd-fe2f-4556-b461-f891b594f124",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc831932-da11-4b59-ab88-1de077bb93ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20f7e9f-a04e-48f8-9830-9d1e95c9abc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5e599c8-335d-4491-af44-4fdbfe8bba5a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58f3b578-2a22-4381-a92e-fbfb3d127431",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb65a4bd-c160-46c2-9c2a-b5af84998567"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9046061a-697b-4eca-b083-94140e177d63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bc748684-76f4-4dd4-ae40-0be3ebd1c4e4"
                    }
                  }
                ]
              },
              {
                "id": "db72dd9f-0b80-415d-ad4d-109e9c413339",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c15ae549-158e-4b9c-9eb2-73a434330ee2",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a56a030-bae2-4bd2-956e-5ea62269327c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9b5ca056-6401-4adb-9493-0c7a99f6b17d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf65c25-575a-4c13-9ce9-7da952cd5ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5687b336-7ca0-48f3-a4c4-7e04baceff53"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f12bbde9-c802-44d7-9750-18539dd6f612",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f44df736-dd87-43c1-90c5-1d81002d21ec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "87f33a45-dcb4-4ac5-8605-882c77a928ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7257f587-f880-4a35-8d73-f8b66f7a9484"
                    }
                  }
                ]
              },
              {
                "id": "1d95f924-c3f9-4b6d-8041-8716d30a2d05",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d46c36f7-c6a6-4be1-ac87-44bdd8d41c97",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9797e2-f1c0-42f6-8f19-52022b5932fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "46ecd095-8e8c-4bb0-940c-5f636341ec53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26ed46a-e131-4321-a7e0-726ba59acfde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef13de7a-5ad0-4bd0-b510-b9df215a5ef3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b60b597d-7ac8-434b-8cc2-c8d895b14f60",
            "name": "Positive Testing",
            "item": [
              {
                "id": "00d658b7-546a-4847-bec8-56a2c1c1621a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a0b1ebf-c96d-45b3-8506-f5ed4a870a85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f7307493-83f1-47aa-ab4a-4e63e6669f95"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca4d735d-9641-4fb3-92e2-851e3ba9545e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58f3a29c-6830-43ce-85ec-1cece7f54b3d"
                    }
                  }
                ]
              },
              {
                "id": "b8827804-28c5-4244-a888-5c7bcf4a0320",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6fc6bbc-b86a-4750-95b6-7268cbba08c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3fb6b83c-50de-4277-948a-4939636da323"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85b3539a-22ca-4bce-9d19-b38ddef190c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4db12f55-3beb-4fe7-84a1-246c1c62fbcf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0509e534-a8c1-45a2-aee1-f0d5591532c1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "68150983-161a-495f-896d-7aed854b8d1b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "376a3a77-0fd7-4ca5-8d91-dda1365b9286",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13f2d98f-d9fc-4e62-bf04-e0d324093893"
            }
          }
        ]
      },
      {
        "id": "ed0aeae4-2390-427a-837d-9d10fb084928",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9d458d51-b647-4ba1-958d-ca2cf7e988c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5dc18b35-7ba3-4fce-8158-a958867fbbe8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "908914e4-9aae-402e-ac7b-134fdcb97567",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26fe5f7-7327-4019-a6d9-e185098a6dbd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "73b930d0-6265-4fc3-a102-a0fe7be8a824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7895d703-a3c6-4655-a1f3-2ecf0212ae1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5fad2db7-2b71-4faf-88a7-004ad2bbff50"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e32ba62d-c48f-4ed2-ab78-d0804416a99f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59219b9e-9b53-4929-ba83-054e375a85ce"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "91f1fb81-e042-4ecb-8934-9e9165231522",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a32e6733-ecd0-44d8-a1f2-08590a59f3b1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ae56969b-16d1-4f3a-90bc-60d3b560683b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5dcc7ffb-addc-4385-b65d-ab33b0b54b2c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ca9f479-9832-484a-be50-0e1fe920faf2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0fb9b558-c499-497d-be82-d11539b117a4"
            }
          }
        ]
      },
      {
        "id": "397b3120-3622-4922-8bdc-3bd303c97b3d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "139b475e-ac09-4953-ae9a-558c0fc9ee81",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b000152a-a3d9-4a13-baa9-d65dd46d71c3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2d8630ae-df47-47e9-8abb-1411ee90f2e7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90fd86d8-30d9-40c3-98d3-aa30ffb0dc6b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b806e1e3-8a53-4b0c-a203-fdfb6d446a23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d76c5b-7ffa-4d2a-8268-4fdc3a82c2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e782d615-cf0a-484c-8e1b-7b2a4c0db028"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a680f71a-9015-4bed-ad8d-11109d76a3eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "778dd9df-a159-413d-b024-367d4fe58b4d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d32a79ca-b4b8-4efa-a917-464324114ec0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f884293e-57aa-4a5d-9d7f-086e015f0613"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c74e013d-6dc3-4f21-8104-f54eb8534864",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2839d617-5c32-49ab-bf87-a974a5e6b982"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b8e0d7e-c969-45e1-ac37-610f5df64d83",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ae6becb2-6671-46d1-8328-878f26841af4"
            }
          }
        ]
      },
      {
        "id": "8ab39d4a-b27f-40eb-8507-d624c5e1a025",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f70dc256-e668-4a13-8c0d-298466e1ccc1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "91bff376-1f4b-4570-9d1d-b8aa725f28dd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "03239460-b696-4a10-baa0-d7e1a18557e6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99464538-c191-4907-8018-ab7ecbb9f530",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3501afb9-95ab-4905-93b1-2146e82d6707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9d58a8-9137-4600-877f-5ff01c7c6408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d27857cc-4c14-4aaa-9ef7-5813ef5d6992"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4bb1f12-5340-434e-91b4-9d21876c994a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b16862fc-d768-434c-bc31-39b5cdbe3748"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "43092fe1-0d35-4cda-9c80-6b5c045ac964",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f188ca7c-73d7-48ea-acdc-31900e0de1c0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8eeda0cf-e22a-4896-b4e0-2e96ba54d0a0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4fb12e53-601b-4adb-b82b-d120b9056cae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "756ef7c7-1dd6-47f4-8afb-1420c2027022",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ddbcd49a-9e3b-4336-b791-5b2ef76e7842"
            }
          }
        ]
      },
      {
        "id": "95f55793-94ad-47b5-a82d-9c16813d7fe7",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "00945ebc-c28a-44a5-bbfe-add8216911a3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "425692c4-01bf-47a4-a975-b6de6697997e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4ad8d537-d9f0-4366-8b07-d9dd76726544",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d9154be-5015-48d9-b0de-d1304abd7b7a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "733bfb83-88d4-404c-9c89-1f77db599150",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 13.077192982456138,
      "responseMin": 6,
      "responseMax": 358,
      "responseSd": 31.08710466304598,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1705365373715,
      "completed": 1705365386276
    },
    "executions": [
      {
        "id": "6d11183a-6de8-43af-b285-8b49aa73fa53",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "bf518978-daf0-469f-b2e7-8d19d7fa8a51",
          "httpRequestId": "b100d10e-a14f-48c0-b775-6c7777982c3d"
        },
        "item": {
          "id": "6d11183a-6de8-43af-b285-8b49aa73fa53",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5e0f7e6d-8b02-40eb-9869-1c326db511a8",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 0
        }
      },
      {
        "id": "b57c0bad-8cf3-4496-83eb-9e3effb87202",
        "cursor": {
          "ref": "a3758961-955e-4f37-9604-82be644e61a9",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8b32b032-faf0-456a-9a91-e70e62852d6b"
        },
        "item": {
          "id": "b57c0bad-8cf3-4496-83eb-9e3effb87202",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "128694e3-5ee8-4cd3-b090-b0187dd8573c",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "0f49bd1d-ecb5-4b09-9f9d-9885c273e08a",
        "cursor": {
          "ref": "67a8b985-592d-472e-adb8-7850b9522d53",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "69bf0255-df42-4a81-88a2-6ecbe5ca10d2"
        },
        "item": {
          "id": "0f49bd1d-ecb5-4b09-9f9d-9885c273e08a",
          "name": "did_json"
        },
        "response": {
          "id": "6d6e38ed-3234-4f0e-b330-4a2f0427dd20",
          "status": "OK",
          "code": 200,
          "responseTime": 157,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc98cce-bcc2-4bce-bff8-71f45c97f38a",
        "cursor": {
          "ref": "2b0ad7d6-bc7e-4643-a019-f9614be538b3",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5e00489b-db04-4058-80fa-77059d72741e"
        },
        "item": {
          "id": "1bc98cce-bcc2-4bce-bff8-71f45c97f38a",
          "name": "did:invalid"
        },
        "response": {
          "id": "d28fcb5d-b0be-45d7-b29d-622c50cfd2a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc98cce-bcc2-4bce-bff8-71f45c97f38a",
        "cursor": {
          "ref": "2b0ad7d6-bc7e-4643-a019-f9614be538b3",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5e00489b-db04-4058-80fa-77059d72741e"
        },
        "item": {
          "id": "1bc98cce-bcc2-4bce-bff8-71f45c97f38a",
          "name": "did:invalid"
        },
        "response": {
          "id": "d28fcb5d-b0be-45d7-b29d-622c50cfd2a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f85d14-0f8d-43b8-baf4-2898d41f0cd7",
        "cursor": {
          "ref": "e8129e9c-f5aa-4f45-8b99-c6f98e5cbd7c",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a6650898-8ee4-4c64-99bd-2f422f7927c0"
        },
        "item": {
          "id": "70f85d14-0f8d-43b8-baf4-2898d41f0cd7",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "38613661-223a-4635-bf60-cb7002c5dd10",
          "status": "Not Found",
          "code": 404,
          "responseTime": 51,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05cc6e95-aa57-4e1c-b757-63b772beba75",
        "cursor": {
          "ref": "ba9bc0c0-769d-45fc-a7a2-322f0417e548",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d021642f-f9ba-486d-90e9-2cdc8b320ce5"
        },
        "item": {
          "id": "05cc6e95-aa57-4e1c-b757-63b772beba75",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f7316c39-d5c2-4917-8b3b-e35dc87967d2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac5fa55-0a60-4ac4-8304-c48aa80e268c",
        "cursor": {
          "ref": "3691b9d7-f77d-4ea1-baa8-13116e3d46ee",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ddb8099b-5219-414e-b203-e636c9cb5aa9"
        },
        "item": {
          "id": "5ac5fa55-0a60-4ac4-8304-c48aa80e268c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a5aec893-39ab-4947-8025-8a29994d8733",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b225057f-a84d-43da-9c6f-525cb0ae300d",
        "cursor": {
          "ref": "1677491a-c988-45a2-ad16-096ee22876b2",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5b8b8638-ec1c-4e15-9835-6df1e6758a6e"
        },
        "item": {
          "id": "b225057f-a84d-43da-9c6f-525cb0ae300d",
          "name": "identifiers"
        },
        "response": {
          "id": "3e53ab05-d5e8-413f-b454-579f1c182fe2",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c88280-0b52-4eb3-814a-533c49260e0d",
        "cursor": {
          "ref": "a87647fe-9899-4651-ac42-266c9bd7eaf9",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "abf85a0a-74d3-4f4f-a66a-00e702ed5523"
        },
        "item": {
          "id": "61c88280-0b52-4eb3-814a-533c49260e0d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4350f212-b7e4-4ea7-bd60-beef4e627d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4393036b-9fee-4f8d-9a7d-140bda76e7af",
        "cursor": {
          "ref": "4301a1fa-72f9-4e20-905e-e7d84e5acbf1",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "896c8a17-883c-4371-80ea-a0f1fceec9c7"
        },
        "item": {
          "id": "4393036b-9fee-4f8d-9a7d-140bda76e7af",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "45d91b35-856b-49a7-be71-42ab8a3fe8ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c009cfc-57d8-4aae-b5b6-6c34ba04bd81",
        "cursor": {
          "ref": "5f5ba4df-1846-492f-9b28-b32331d3a132",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "472af1a4-34eb-4be3-9d9b-487f44d080a2"
        },
        "item": {
          "id": "4c009cfc-57d8-4aae-b5b6-6c34ba04bd81",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f7cb3244-6481-4d48-9e17-ba17a163875a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d227c259-0e1a-4888-8fc1-5d4129be34e3",
        "cursor": {
          "ref": "00f0e8b1-1490-4ec7-9856-d227de5be7ef",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ddca9a3a-bd1f-4baa-85a8-4f735f42a3de"
        },
        "item": {
          "id": "d227c259-0e1a-4888-8fc1-5d4129be34e3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "627e7d91-3f16-4c5f-8857-8273d47e8bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eee4c55-e25d-4e46-b5fc-3630b5fa5cdc",
        "cursor": {
          "ref": "62671dcb-f403-42bb-a3e8-96a2ebaf8a12",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2aa2c9a3-ef5b-4959-bc45-4f0371364abb"
        },
        "item": {
          "id": "1eee4c55-e25d-4e46-b5fc-3630b5fa5cdc",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "25d2f37b-0847-4819-b21a-76af8c9c7c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b44332c-ce3d-46b4-8355-4decc95b0ed9",
        "cursor": {
          "ref": "e803aab1-e090-4567-be3a-cb166bb66dc7",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8230d7c3-ad2f-4612-b755-a53e190f91c8"
        },
        "item": {
          "id": "7b44332c-ce3d-46b4-8355-4decc95b0ed9",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "13d11369-ebf8-4e2e-bfa0-c0a8fe638fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db202534-942c-4247-94b7-6c7f65b2401f",
        "cursor": {
          "ref": "92a275ee-99ff-4ae0-85eb-7da8e0a821c9",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "41bbdfb8-948b-4aad-81fa-c9012791819d"
        },
        "item": {
          "id": "db202534-942c-4247-94b7-6c7f65b2401f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "3ae77ca3-64f1-4ffd-9240-ade8abeb397d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a4ab99-9b2e-404b-b1bd-f2bb8611ec3b",
        "cursor": {
          "ref": "411df529-fc95-4f6d-b8c7-bdd4b13d8a3c",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "53ea8e1a-ba8c-4aec-bb46-e4b55715a49f"
        },
        "item": {
          "id": "d0a4ab99-9b2e-404b-b1bd-f2bb8611ec3b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f635194f-1bfd-4452-bee7-ae2816fb5d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81ff0bc-4bea-4cf6-a499-c9eeb2772dd9",
        "cursor": {
          "ref": "655cc25d-9959-41b0-bff5-5289283531ba",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ad8e5618-731e-441a-8248-4453e7751ab4"
        },
        "item": {
          "id": "a81ff0bc-4bea-4cf6-a499-c9eeb2772dd9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4defae91-2388-469d-b555-b51433c8ee37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400027a7-ca7c-43c8-8856-054e9eb883f7",
        "cursor": {
          "ref": "c799234a-66b4-497c-9b6b-a88403b811b8",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "635269d6-add5-44d6-b2fa-2963a52e4d22"
        },
        "item": {
          "id": "400027a7-ca7c-43c8-8856-054e9eb883f7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c284a36e-d5b7-4d62-a821-edaf212e16f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1b25a5-a8df-468b-a704-779f56da1f37",
        "cursor": {
          "ref": "fdeee0b2-898a-441b-83b1-7857f2ea77b5",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a9d166ad-61a0-4cc6-8b99-8049eaa6d66b"
        },
        "item": {
          "id": "8c1b25a5-a8df-468b-a704-779f56da1f37",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1477bbec-3186-41ba-aa3f-8075e1959fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3daa717b-0b05-4c5d-856e-dd5909a4d332",
        "cursor": {
          "ref": "0e92fb93-d9a5-43d1-b3bd-efdfab57ac2c",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "dcec31f8-4d43-4b15-923a-65cea020aaf1"
        },
        "item": {
          "id": "3daa717b-0b05-4c5d-856e-dd5909a4d332",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "12f112ba-5d51-4178-8b22-e53bca10b2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "badde2bc-cf3b-4335-8939-0240479d97e6",
        "cursor": {
          "ref": "38c2f454-b008-4c3e-8f71-5a3fc7fab3a6",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9feec4a9-243b-4229-97b4-d28d608f2866"
        },
        "item": {
          "id": "badde2bc-cf3b-4335-8939-0240479d97e6",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "01ec2c71-bc4e-475a-8788-e4f20e7e4c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6416e34-96b4-4793-b57d-6c237efd1a69",
        "cursor": {
          "ref": "cf1cef3e-e63f-418a-9e4f-487e2b06b8f0",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d26b6ac3-97f4-4a19-b21a-843966089162"
        },
        "item": {
          "id": "c6416e34-96b4-4793-b57d-6c237efd1a69",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "177adbd3-8b34-4549-89e5-343b91c0ef59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5221555-0101-4a67-9b94-d56a9e9dcc93",
        "cursor": {
          "ref": "76f993e6-2ddb-43ad-bd32-b7e889905f21",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3a6e37cb-40d0-4f7c-9a45-4783e69abfa2"
        },
        "item": {
          "id": "b5221555-0101-4a67-9b94-d56a9e9dcc93",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a290e077-37e0-4fcc-bcab-e4681904e0cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ed7859-e5bd-4530-9e6d-68466fdd5e40",
        "cursor": {
          "ref": "b7bf8369-1776-40a3-8f77-ca45302ee636",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "01dc00ab-ce2c-43df-9a9c-72a7784fd343"
        },
        "item": {
          "id": "99ed7859-e5bd-4530-9e6d-68466fdd5e40",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4f905046-01ef-40c8-8682-4d4fd8324311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4ed8d5-aaca-4252-b0b2-f14e2d546a24",
        "cursor": {
          "ref": "73624b72-4f33-4e23-813a-e7f45e274bb1",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "cbe7e65a-875c-4446-9e83-91823ef2f261"
        },
        "item": {
          "id": "9c4ed8d5-aaca-4252-b0b2-f14e2d546a24",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "318e1cee-d5f4-4234-87f6-707020b0490c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7363ed89-678a-4605-8e2c-60c2e3472496",
        "cursor": {
          "ref": "4171ad46-6c07-40ef-a2f0-ca32087ed8ae",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e1af3d4e-c274-4e07-97d1-0d6454dc8651"
        },
        "item": {
          "id": "7363ed89-678a-4605-8e2c-60c2e3472496",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "47c26d2a-35c9-40fc-b2ac-cf2e90a61611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a05ee9-628d-4eb9-a960-8847f1668af1",
        "cursor": {
          "ref": "35b3630e-9ffc-447a-a72b-28d4b8dfb8d7",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f836af6a-39f6-4ee2-8c4e-cdf189bc565f"
        },
        "item": {
          "id": "11a05ee9-628d-4eb9-a960-8847f1668af1",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "112a4e5e-5fbc-4ea0-80b9-4d656869a647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f4f9c9-f3af-4d20-938f-4615c8d2a377",
        "cursor": {
          "ref": "994ce3e2-4f49-49ef-99b1-334fea183ee8",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8d85e095-0c8e-4ad5-9e71-8c6a973560d8"
        },
        "item": {
          "id": "84f4f9c9-f3af-4d20-938f-4615c8d2a377",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "eb5ee480-4f21-4fdf-a99c-5d06dc0253cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af0a527-2a78-4a50-aa16-ff10975d7bbb",
        "cursor": {
          "ref": "5aa1f575-97c8-4e78-9e0c-b853652b06c3",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d5b2598f-e1a5-4425-9adf-1279fc198957"
        },
        "item": {
          "id": "3af0a527-2a78-4a50-aa16-ff10975d7bbb",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f60b3a80-edac-447c-a0f8-09bfabd7bf77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c0bbe0-0b36-4109-b8ee-f7c64de37c2c",
        "cursor": {
          "ref": "85649645-8be7-4de0-b9b2-65f5993ca425",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "96d37937-0b9a-4af5-ad5a-9874d534a899"
        },
        "item": {
          "id": "f0c0bbe0-0b36-4109-b8ee-f7c64de37c2c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f13687b1-bb28-49a2-a219-1681e525c404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9baf33e9-58af-4717-8a44-98d80ec7b662",
        "cursor": {
          "ref": "8f527b75-3fb6-456e-b124-8aa6ce5f2cfd",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e8fcca50-0f41-4ac7-8ad8-f1cde102a38e"
        },
        "item": {
          "id": "9baf33e9-58af-4717-8a44-98d80ec7b662",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b6b9a832-21bf-4821-bbf9-d2c7332ccc18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c917700d-457d-435a-8069-b6c6cdc32977",
        "cursor": {
          "ref": "b8ff4059-ff6b-4fcb-b40e-28a0fc8fc117",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6f77222c-2547-460d-9eaa-c3dfe6bcf0fa"
        },
        "item": {
          "id": "c917700d-457d-435a-8069-b6c6cdc32977",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "63da6ed5-9b70-4051-9336-bb13efe079d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367b384b-639c-4dee-9ad0-0c4b0ab52488",
        "cursor": {
          "ref": "f9352c72-bcbb-467c-b3e8-736130906c98",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1b4e90db-ca66-44f3-8f45-faea99fb9823"
        },
        "item": {
          "id": "367b384b-639c-4dee-9ad0-0c4b0ab52488",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "315ce8bd-dd92-4a71-b32e-329e77eff5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a35d7bbb-1403-40ce-96b8-f63c4998c93c",
        "cursor": {
          "ref": "42ce44d1-2170-404c-9c95-b057808cbd6e",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "abf39b49-4afa-4112-b738-daf686c34e8b"
        },
        "item": {
          "id": "a35d7bbb-1403-40ce-96b8-f63c4998c93c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6e4e950e-440c-446d-821c-fa898112b514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad8c665-154a-4b21-9b93-22e7ece2412b",
        "cursor": {
          "ref": "8421d1a4-09f4-40d3-ac2c-67c3f28259e6",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2232cb74-d5ed-4466-ba18-4e45263eb032"
        },
        "item": {
          "id": "aad8c665-154a-4b21-9b93-22e7ece2412b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2eb102a7-63dd-47a0-a9f6-ce79ae72853e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab84c8fc-eb16-4eb7-8387-095a35531c71",
        "cursor": {
          "ref": "b6675cd6-45e9-4075-9db3-bbc7905587c4",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9cea4b1e-35fe-448f-991f-f00a826ed5ac"
        },
        "item": {
          "id": "ab84c8fc-eb16-4eb7-8387-095a35531c71",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a30536f3-e794-47d2-86a8-d8b620f459fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b19dca61-fc42-477f-9068-7e9860f4392e",
        "cursor": {
          "ref": "ee37f37e-dcd7-4038-9133-9410d38bfb20",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a54e1ed3-f1fe-4ed8-9356-2ef2d1e62099"
        },
        "item": {
          "id": "b19dca61-fc42-477f-9068-7e9860f4392e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "fadb8730-0d54-4472-a4d8-4120dfc3c666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f445b048-c468-48cb-a6a5-26da1ebdde6b",
        "cursor": {
          "ref": "85ce4287-ad8f-4903-8010-04419b6f486f",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f98c8ad6-2733-4126-bffa-5bde13927057"
        },
        "item": {
          "id": "f445b048-c468-48cb-a6a5-26da1ebdde6b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5489228b-1ab5-47eb-b67b-e738ea4ec317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49746b4-b630-4029-a430-857b695481fa",
        "cursor": {
          "ref": "648ffcf1-c8cb-4304-b9f8-7c26038cf2e8",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3b1b1a25-55ee-4687-b5f3-31f8b461632d"
        },
        "item": {
          "id": "b49746b4-b630-4029-a430-857b695481fa",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "048e62c0-49ab-4a7f-89ca-b2cee000c494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385b6548-d620-48b2-9625-260bff8b9016",
        "cursor": {
          "ref": "7c49789a-e438-46f8-aeb4-6b298bc034ce",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4e3903d8-cbdf-4c47-973b-48a1eaf6f25e"
        },
        "item": {
          "id": "385b6548-d620-48b2-9625-260bff8b9016",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "25926e4c-73e2-4ca9-9d7a-806cfb82584e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5320eba4-b7c5-4a14-b4e4-85cca21ef95a",
        "cursor": {
          "ref": "d47f5157-d81e-432a-aeed-0f34a96aeea2",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "505d4c46-7f14-48cc-9572-ac484caa39a6"
        },
        "item": {
          "id": "5320eba4-b7c5-4a14-b4e4-85cca21ef95a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e83ddaeb-002c-40e5-b63a-2028e1c85964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e10910-71d9-4e24-b141-9e659fd43a2a",
        "cursor": {
          "ref": "e557bcd8-644c-4d00-adae-ca4f0a87461f",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "027e1383-214d-4f78-aec1-29e290286d51"
        },
        "item": {
          "id": "d6e10910-71d9-4e24-b141-9e659fd43a2a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "092bd4e3-08de-47eb-acde-0b838cba7329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea9b252-cad1-4bc4-8173-ce51108db837",
        "cursor": {
          "ref": "f411414b-e06e-4477-b6f2-44719789be24",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "da4a9b68-c336-41c7-b1a3-ddb64d6e47a2"
        },
        "item": {
          "id": "0ea9b252-cad1-4bc4-8173-ce51108db837",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9d5768b2-2394-4b9a-80b5-3f8a13f8b053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39e275a-84a2-4ecd-acfc-a607526b6b4a",
        "cursor": {
          "ref": "09a7e087-bacd-4b15-9e54-1dc3670834f1",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e5849225-65df-43c6-8416-a69b6a5405ca"
        },
        "item": {
          "id": "c39e275a-84a2-4ecd-acfc-a607526b6b4a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "719ad232-d38d-4cae-8dc2-dfbdd0f0761f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c004fd-e23c-43cb-ba69-5d275e1dabe9",
        "cursor": {
          "ref": "4a08e46e-2005-4dee-abd7-e9d0f4fbe73e",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3c6351dd-8d59-4956-9bcc-36ff476d212d"
        },
        "item": {
          "id": "53c004fd-e23c-43cb-ba69-5d275e1dabe9",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6a82860f-5e6c-47b7-9720-c6221a53082e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ede55dd-5236-4a93-a8ac-8f9b8a9249fb",
        "cursor": {
          "ref": "dfea5d0b-8310-4942-9773-bdfc1b4862e8",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "48cbdb7e-44ae-4f77-b790-ff1339716bcb"
        },
        "item": {
          "id": "8ede55dd-5236-4a93-a8ac-8f9b8a9249fb",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "20c9de2c-e24f-483d-88ac-1f34ba919ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dca7276-e066-4a33-899e-4fe1f10ba863",
        "cursor": {
          "ref": "32854fcf-6eac-442c-9a8b-a01dbb9ec6ca",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "81bdd7ce-a242-4dd2-b74a-1e3578404afa"
        },
        "item": {
          "id": "2dca7276-e066-4a33-899e-4fe1f10ba863",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "618320ae-add8-48fb-a54d-96c41fbf55a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9f710d-1d28-4a4e-8cc1-80512086f5a6",
        "cursor": {
          "ref": "b21194e7-8641-4ae3-b297-c6a0ac74a815",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1a96b4c0-b97e-4746-b360-922a5e6191bb"
        },
        "item": {
          "id": "db9f710d-1d28-4a4e-8cc1-80512086f5a6",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6de4e7a2-4697-474b-89a7-05cc2bcaebce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a108ba1-490b-4079-8b02-6254e6cc24c7",
        "cursor": {
          "ref": "041dddc0-6eb9-4dd8-889e-8cb2d3f8a135",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b53c1947-3e10-4c70-b753-b8db3a1c3f52"
        },
        "item": {
          "id": "8a108ba1-490b-4079-8b02-6254e6cc24c7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7388ab06-3a42-4d0f-8b82-a8c6728b12db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77df06b8-f0a0-4c16-b01d-c27be5ef3084",
        "cursor": {
          "ref": "001beede-3c8e-4e6e-81f9-26ed7b8d4cfb",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "25373643-f34f-4862-984f-3044ad46e4cc"
        },
        "item": {
          "id": "77df06b8-f0a0-4c16-b01d-c27be5ef3084",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a5f80622-e184-42a1-9d26-03a19d2db944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c704da55-8d41-475a-8035-8815369e3f86",
        "cursor": {
          "ref": "afafc147-5022-4344-9790-5b5ba3bd2646",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "cbfb7d9f-df50-45da-acf1-a05606f41144"
        },
        "item": {
          "id": "c704da55-8d41-475a-8035-8815369e3f86",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "023c2533-ed99-420c-9dfa-f2fd26aa7a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a6f882-e1a3-4373-a7c1-03af14eeb0c9",
        "cursor": {
          "ref": "aaa565a2-6e49-4b28-bbc2-9c6181ff8b31",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "21ad3256-bf88-4924-9184-18fcc7c30ed5"
        },
        "item": {
          "id": "d9a6f882-e1a3-4373-a7c1-03af14eeb0c9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6740a97f-298c-42f3-8c2d-ce2041150ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600ed153-c416-4c3a-a208-6c827d5d6f3d",
        "cursor": {
          "ref": "a33789ae-152b-4aa0-ac51-c33b01957759",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "32eab4ef-3566-4512-8d04-b97a9b84f646"
        },
        "item": {
          "id": "600ed153-c416-4c3a-a208-6c827d5d6f3d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "334a68d9-4fb9-44ef-bfaf-ae21371bdd25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3b869d-de0f-4677-9158-d173e4769f09",
        "cursor": {
          "ref": "21b348e1-3e61-41b8-b8b7-077a7a98abdc",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6511976f-803f-4b99-896d-7bc81fe8cf2b"
        },
        "item": {
          "id": "3e3b869d-de0f-4677-9158-d173e4769f09",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "93158afc-a21b-4c8a-818b-dca03b0679c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650233b9-48e9-4ad2-be35-9c93991e1cb9",
        "cursor": {
          "ref": "ad7ac75e-39fd-442f-8dab-2e2581c2437a",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ad6d4e14-252f-43d2-b1b1-1b7b3771fa69"
        },
        "item": {
          "id": "650233b9-48e9-4ad2-be35-9c93991e1cb9",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1c90c335-818c-4935-a58a-d6d0deabacdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855b935b-b3cb-481f-9614-52bd71cb5ce7",
        "cursor": {
          "ref": "f0434b68-00db-4285-a11d-cbccbb9f8af0",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9e1625cd-f332-491f-bdf3-6d43242b54b3"
        },
        "item": {
          "id": "855b935b-b3cb-481f-9614-52bd71cb5ce7",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "364fb6cd-12ed-4ac9-9c47-a16635739782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369e827e-3253-47c4-9baa-24a46fb0932e",
        "cursor": {
          "ref": "082d7ef9-7283-4791-9554-4e485d24283e",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "40035f66-52c1-4bf4-a999-2d5bacecead2"
        },
        "item": {
          "id": "369e827e-3253-47c4-9baa-24a46fb0932e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0a1d07ef-9e4c-453d-ad8d-82b8da2ed3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72876419-0748-403d-9b96-2d11879b6018",
        "cursor": {
          "ref": "e65cb91e-0c2e-45ba-b03a-319ab893e190",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "34a49f06-d7dc-4c69-a5a9-b661103fd47f"
        },
        "item": {
          "id": "72876419-0748-403d-9b96-2d11879b6018",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0d084e71-a9c0-4c13-8c2a-597ecb068ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b629650-e70c-4e3e-85a0-fad7f7d04957",
        "cursor": {
          "ref": "30f3a632-7794-499f-9747-4f60b6288a5c",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1f6ce1c5-5c41-46bb-a1c5-8ff1ac3b3efe"
        },
        "item": {
          "id": "5b629650-e70c-4e3e-85a0-fad7f7d04957",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "46bdd780-40d3-4bc2-8b1a-162fa63bf6f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d12ccf0-c8f8-421c-b0f8-6dadecc79f06",
        "cursor": {
          "ref": "41f9c66e-406b-439d-ab0e-17010bc16513",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "648fd87d-754f-416b-b0cb-35d6c7827781"
        },
        "item": {
          "id": "1d12ccf0-c8f8-421c-b0f8-6dadecc79f06",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e78a8776-ad96-4192-afa6-9818dd064c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7ac663-2417-44c6-8416-7bed5906c960",
        "cursor": {
          "ref": "b12c741a-b0b6-4fab-bb6f-4f78a8d68adc",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4d0fa968-2a84-40f5-b1b7-450c79c01661"
        },
        "item": {
          "id": "2d7ac663-2417-44c6-8416-7bed5906c960",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "7c955c68-97cd-49de-90bd-d493fbe8fc5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b679257a-76b3-45c6-95cb-7f0664d32780",
        "cursor": {
          "ref": "4980e1e4-6fd6-4d8a-8be2-26e776ec91f6",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1c3c527b-9758-45ec-b762-535e4a581eb7"
        },
        "item": {
          "id": "b679257a-76b3-45c6-95cb-7f0664d32780",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "27f25bea-40dc-4a5c-abff-604847f15a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d75894-306b-4798-ad07-94287993bd8c",
        "cursor": {
          "ref": "6b57fd4a-1493-44ee-ab2f-6d1baa3b9bda",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "27874880-2ada-4d60-898b-b1d7a388a587"
        },
        "item": {
          "id": "15d75894-306b-4798-ad07-94287993bd8c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "59f1b5a9-8292-43b3-ae7d-b3b002e1e5a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c6ec3b-fde9-4150-9438-3bb84ddcffa1",
        "cursor": {
          "ref": "1cfdd6f5-fb12-46ef-a75d-177e439dc0e1",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "806ad3e8-4527-4486-b273-e692e59035c2"
        },
        "item": {
          "id": "d3c6ec3b-fde9-4150-9438-3bb84ddcffa1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3ca55a95-7720-4ab4-95ed-e9c699ed8c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0457d49-144c-4e33-bdcf-8e8288443535",
        "cursor": {
          "ref": "eb791b02-6584-41e7-a22a-ae5445469703",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "fcc967bb-b8c6-4cdc-8c20-5bc8d42f5048"
        },
        "item": {
          "id": "d0457d49-144c-4e33-bdcf-8e8288443535",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "43b2cba2-93f9-4375-a055-a005694467a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "180ad35c-a212-4122-9f40-7f1f8dc1226e",
        "cursor": {
          "ref": "770c9692-7ec0-46bf-8d5b-bb33afb0ace5",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c49a22d1-598d-499e-8206-a382ad723b13"
        },
        "item": {
          "id": "180ad35c-a212-4122-9f40-7f1f8dc1226e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "eb37d906-c88a-488f-bbb8-d39d088a5104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be5923f-2e4e-4343-bcc8-bddec8d6d3ac",
        "cursor": {
          "ref": "1dca4e8b-0d75-4b5c-85ce-28237427d961",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3e541693-d630-46dc-87e4-8cf0113b69f3"
        },
        "item": {
          "id": "0be5923f-2e4e-4343-bcc8-bddec8d6d3ac",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "bba90fef-0c05-41af-92a5-165fb429624e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7673cca-7d59-4d37-8709-eaed17d9f7da",
        "cursor": {
          "ref": "18799fa0-c438-4a0f-8e64-a581fb50279c",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "09864856-3f29-47aa-aa1f-ab364bca231f"
        },
        "item": {
          "id": "e7673cca-7d59-4d37-8709-eaed17d9f7da",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "31658938-d165-4cc9-85c2-915f4a636039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd63690-2cf5-4194-89b5-435494305d58",
        "cursor": {
          "ref": "793ffcdc-89bf-4a0d-9e99-796435c902af",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f8ecd835-25bc-4b2d-ba52-1520e3381170"
        },
        "item": {
          "id": "3bd63690-2cf5-4194-89b5-435494305d58",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7230e324-f166-4895-832a-33402cf211b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f89ac7-619c-4c97-9b93-232a08eefddf",
        "cursor": {
          "ref": "26bcd091-6d00-4222-9e58-41a8badd9c21",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b1a73cd1-32dc-461e-8a65-dc9422654063"
        },
        "item": {
          "id": "b5f89ac7-619c-4c97-9b93-232a08eefddf",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b068a3a9-95e9-4708-aea1-2c8370761264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8e42a1-9b8d-4b9a-9de5-1c67195c049c",
        "cursor": {
          "ref": "d2094abd-cc30-4229-bf8d-ab9308ef6381",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "58bcfd34-d0f9-48ec-8fe1-6c53740ac5c7"
        },
        "item": {
          "id": "9e8e42a1-9b8d-4b9a-9de5-1c67195c049c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "240a4a91-5067-4673-9f44-8f5729336c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cdf682e-84b9-42c9-a6a6-59ac993cf9d5",
        "cursor": {
          "ref": "bd33266e-7391-4a78-8d5b-5908feab2707",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d588afe9-9be6-4ea0-a35a-94a6e48db68c"
        },
        "item": {
          "id": "3cdf682e-84b9-42c9-a6a6-59ac993cf9d5",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "170050b7-da37-4cd3-84a7-04046b04ee5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b8420e-ac37-4838-a3a3-d7b856c4f7af",
        "cursor": {
          "ref": "8afb2ee8-0bc9-4484-81d2-3f0c78d9449b",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e6184e0c-34ca-4ac5-a5ba-d105fd0dc70d"
        },
        "item": {
          "id": "10b8420e-ac37-4838-a3a3-d7b856c4f7af",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8ce661bc-61e5-4ba3-b2a2-cf6540850222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de1f705-b232-49e2-96bf-582c75f1fc06",
        "cursor": {
          "ref": "a91eb5c5-693c-4aa1-be90-9f9ca202d7a5",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e5c0a696-5996-4947-b04e-9024fb55b1bb"
        },
        "item": {
          "id": "2de1f705-b232-49e2-96bf-582c75f1fc06",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "89bebd45-3539-49fa-8ed9-a1edf780ec02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "793ecf23-f5e8-4709-9c85-a950f39a5fd4",
        "cursor": {
          "ref": "3892bd38-36f1-48dc-a5af-ee32e913e5d7",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "255488e5-7b79-4c0b-bb02-54e1f545581d"
        },
        "item": {
          "id": "793ecf23-f5e8-4709-9c85-a950f39a5fd4",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2c388e06-cd26-4447-993b-c9c05fe0e094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a032eef-238b-48d0-8369-4ec46de3be78",
        "cursor": {
          "ref": "7b3b8fd9-9f7c-40b4-9d15-9275ca9ece06",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f3bc5086-01bd-4aac-83a1-093f221f1191"
        },
        "item": {
          "id": "9a032eef-238b-48d0-8369-4ec46de3be78",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e5493a97-0934-4bf5-aaae-118e60c9405f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a83158-4f1b-414a-8f10-8beee1236de8",
        "cursor": {
          "ref": "a379d49f-3cc7-4fe7-a624-0c8118167803",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "10d9094c-31cb-4592-ae35-b4398f83d68c"
        },
        "item": {
          "id": "45a83158-4f1b-414a-8f10-8beee1236de8",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d09b64e9-9512-4e3a-abd3-69c91fe0c3af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e618253-7794-4952-9a42-3263ffee139d",
        "cursor": {
          "ref": "1781d252-ae32-49e1-aa05-77fb28be9c0f",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "29b8a339-f226-4ed9-84ee-913098cd739b"
        },
        "item": {
          "id": "6e618253-7794-4952-9a42-3263ffee139d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c02c2269-3ae5-487c-96ce-c18faea76e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec9dbdf-79b1-4f15-b3ca-5708a2ffd8f9",
        "cursor": {
          "ref": "89ee89d4-a28b-45d2-9fec-281b94512950",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d8320307-66c1-4f5f-8447-b1df0136cad0"
        },
        "item": {
          "id": "aec9dbdf-79b1-4f15-b3ca-5708a2ffd8f9",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "60ee7a8e-88b4-4b59-a334-aee5c338b8b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef215ff-7751-4549-8da2-f061fd70acb4",
        "cursor": {
          "ref": "9a2d0f04-f865-41e1-b0b4-dc94e133857b",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c352e5a4-0849-4439-a014-bc30c7d54d27"
        },
        "item": {
          "id": "8ef215ff-7751-4549-8da2-f061fd70acb4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "10e13f94-82f4-4ac6-96ac-c8c07c902045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fe013d-b61d-4cf1-bcf2-79673384e67a",
        "cursor": {
          "ref": "c7d48819-b5e6-4acc-ab7a-4628fd03271c",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "895e17be-b078-4f3e-8421-08cb8140844c"
        },
        "item": {
          "id": "64fe013d-b61d-4cf1-bcf2-79673384e67a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "af61d745-381e-4ddd-a570-ec3f144b834e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae52a4b5-39a3-42c6-b885-a70a5aed24e8",
        "cursor": {
          "ref": "540a5fd1-4632-42c1-8f46-6abefe66c8e8",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8127d994-1274-4a65-8d0d-432fc0d8645e"
        },
        "item": {
          "id": "ae52a4b5-39a3-42c6-b885-a70a5aed24e8",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c7410e31-40a1-46a2-84e1-7071ad10ed58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c7234b-e4c9-4915-acaf-f32537893ba6",
        "cursor": {
          "ref": "530d8e62-cdb0-424d-8be4-ea872b5eea3f",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c5c7d671-3818-46e7-b34e-9773d72fc6b1"
        },
        "item": {
          "id": "38c7234b-e4c9-4915-acaf-f32537893ba6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d76d31f8-f734-4e41-a112-55ee771a2293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ad5c48-0949-415a-99bd-8b3c3696d84a",
        "cursor": {
          "ref": "84dacaca-9768-49dc-b08d-9dd7508a0192",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "814e1a05-8b8d-4f83-a710-74e52d29236c"
        },
        "item": {
          "id": "a7ad5c48-0949-415a-99bd-8b3c3696d84a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d0250a05-d092-465b-ba35-ea39b340b710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2369532-6ca0-46bf-be0e-e6d55f1b3caf",
        "cursor": {
          "ref": "75c62723-f847-4dd2-9164-b02c7d70377a",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5fa463fa-cd1e-4e5f-b1b1-56de1016c21e"
        },
        "item": {
          "id": "b2369532-6ca0-46bf-be0e-e6d55f1b3caf",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4b09142c-7cc1-49fe-9a17-78c9709034d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c582fcbf-68f1-4b39-a499-41de9b622e03",
        "cursor": {
          "ref": "1cef1e8b-3bfd-4c4e-be54-595771ef53be",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "17d5f677-132b-4a6f-b7dc-3182072016e5"
        },
        "item": {
          "id": "c582fcbf-68f1-4b39-a499-41de9b622e03",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2f8ae517-4b16-4092-8226-5e1d3958f16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c0f028-86c1-4f4d-94e3-c0340d8a7a80",
        "cursor": {
          "ref": "bb1fc8d8-c82d-460b-a855-aa82ada94629",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "20123b0b-fe1b-4fe3-8d8c-c23e29f6d2c4"
        },
        "item": {
          "id": "f2c0f028-86c1-4f4d-94e3-c0340d8a7a80",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "43477374-5a30-4d53-8337-c392584aed9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a6a99a7-1908-4b03-9ab5-849697201387",
        "cursor": {
          "ref": "a752082e-b21f-421f-ae1c-0951cfd527d4",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "56a0af33-6812-4141-bf10-d8cc32046609"
        },
        "item": {
          "id": "9a6a99a7-1908-4b03-9ab5-849697201387",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "87c1b325-7b19-47d8-91ef-4399c47f56aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c67daa-9143-4cf5-850c-84049ccaa0de",
        "cursor": {
          "ref": "601faf03-c5d5-450d-8bbf-cb372814e1f3",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "66cc8a30-4fc7-437d-82e5-a2d7cf390961"
        },
        "item": {
          "id": "35c67daa-9143-4cf5-850c-84049ccaa0de",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "044da542-4fa9-453d-a5d4-fa78aebbb6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb0f6334-6668-4d68-9ef7-f8a498b54d4b",
        "cursor": {
          "ref": "b1ba597b-0fc8-4118-8ee9-6fa219320029",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a860bbf7-9af6-465a-9667-af018eddd16c"
        },
        "item": {
          "id": "eb0f6334-6668-4d68-9ef7-f8a498b54d4b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4f15d954-017b-4cf4-835e-3b55dc277430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8aa5bf6-bb7c-423f-b07a-712c2fd117b5",
        "cursor": {
          "ref": "d19e9b61-b5b7-45e8-8fb8-4e6973fa8904",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9233ee16-1ee2-45bc-a7c5-13f599685132"
        },
        "item": {
          "id": "b8aa5bf6-bb7c-423f-b07a-712c2fd117b5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "61e1d4cc-f125-476c-81d7-07fee2b719b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e268fdb0-6146-4336-bc41-92b45e456caf",
        "cursor": {
          "ref": "dbc12aee-8aaf-4db1-ad38-60eb7b971d52",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "794be010-06d9-47d4-ad51-3fd7fa73a41e"
        },
        "item": {
          "id": "e268fdb0-6146-4336-bc41-92b45e456caf",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ce9d0fe6-fec5-477f-a5c1-ccf690b57356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586f4b29-919b-45c1-a8ee-64e428979213",
        "cursor": {
          "ref": "f3f1b1e2-ac0a-4d81-ad51-a03d570e7bd3",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b365b333-c2c8-44cc-8fb4-67ca25093ff7"
        },
        "item": {
          "id": "586f4b29-919b-45c1-a8ee-64e428979213",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "94e14280-45ad-4aba-8ff1-8e70bba712e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b861377-2775-454c-a9a7-0f0d7e6f8cb4",
        "cursor": {
          "ref": "82231a96-e62c-41d6-a4d7-41d1d38244bb",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "40f94fa5-1f81-4f7d-9603-142f74f78433"
        },
        "item": {
          "id": "4b861377-2775-454c-a9a7-0f0d7e6f8cb4",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9f23ce11-f531-4b1a-a895-13d78323b4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55476061-7796-4049-bbbe-0fb0b233fdc0",
        "cursor": {
          "ref": "75ed4f95-4414-45ca-be7e-ff746ba0fc5d",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7a33a2c0-790e-48b3-ad17-9640badfbcca"
        },
        "item": {
          "id": "55476061-7796-4049-bbbe-0fb0b233fdc0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5505e66c-510b-46b3-92dd-19208c0f9624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708b4644-6aa2-47c2-9e7a-ace67da97c91",
        "cursor": {
          "ref": "f776e7c5-8e97-4c5f-8902-7a00ecaa0866",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "270f6075-7dc3-47d8-b4c5-31a551d6d570"
        },
        "item": {
          "id": "708b4644-6aa2-47c2-9e7a-ace67da97c91",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "03efaa4f-3c7e-4ae1-8c88-543c0e5c67c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c6175e-2a02-456b-85ca-ebc3d3b36fd3",
        "cursor": {
          "ref": "94126211-3bb6-4b14-9170-52a33fd264d4",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "190e97c5-f21b-4987-81e6-9e9d25db763b"
        },
        "item": {
          "id": "46c6175e-2a02-456b-85ca-ebc3d3b36fd3",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d217a3c5-b387-459c-9bcf-08f368524ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708d50a9-f287-4f3e-a043-770265e2d833",
        "cursor": {
          "ref": "2c736c9e-5507-4cd8-abed-48b0aa5d3bff",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "fd9c72d2-1221-44be-9122-c48a177c8ca7"
        },
        "item": {
          "id": "708d50a9-f287-4f3e-a043-770265e2d833",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3ac853c9-7874-4229-afe6-621d878cacc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a09a1694-b019-40bf-80d1-56b3ef60c0b0",
        "cursor": {
          "ref": "236810c1-c03b-435c-bfb6-203f4920db17",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "20ff8133-73fa-459a-ac32-4bb00ed42c29"
        },
        "item": {
          "id": "a09a1694-b019-40bf-80d1-56b3ef60c0b0",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e5894326-a868-44b1-8bdb-b70883ea263d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f83e3cf-655e-4dd7-bd39-4cf6df863f91",
        "cursor": {
          "ref": "a7fac66c-b355-4189-b77b-5e6cfc148c5f",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "152e681e-42f8-4ef0-afad-50cbff7f0934"
        },
        "item": {
          "id": "3f83e3cf-655e-4dd7-bd39-4cf6df863f91",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "485bea57-283e-488e-a318-b0ee5c84884b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba47f10-5730-4595-97fe-55a053b13e42",
        "cursor": {
          "ref": "dc8317e3-bac9-49ef-8eef-3b7787d21298",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1aa5d45b-1d1d-4d0b-91f6-a8abe6b52c8f"
        },
        "item": {
          "id": "eba47f10-5730-4595-97fe-55a053b13e42",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "83e26227-59dd-458c-be45-da56e4bf8e09",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12895fb5-f787-4367-84b9-de5179607116",
        "cursor": {
          "ref": "270ab52a-29c3-4508-be07-44d4d0839ba6",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f743bff4-649f-4afa-8b87-e99400b82d81"
        },
        "item": {
          "id": "12895fb5-f787-4367-84b9-de5179607116",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "7a6db411-a438-4412-95c6-7edaf5d4b1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "c512e606-ad49-433c-a739-7cb811cb86fe",
        "cursor": {
          "ref": "171fa255-ffca-4293-b9b7-fcd4caab1960",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b8e9869f-fd95-4f75-b0ff-1f1a2f2a165c"
        },
        "item": {
          "id": "c512e606-ad49-433c-a739-7cb811cb86fe",
          "name": "credentials_issue"
        },
        "response": {
          "id": "cb1236cd-16f2-411c-9def-162ba352bbdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "670a4f87-c19b-4217-9a62-f1b9d6061b0c",
        "cursor": {
          "ref": "a202595e-e49a-4163-9e74-200ec56ecb23",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b3b2aae7-edd4-4adb-8ce9-2c8e6d241d67"
        },
        "item": {
          "id": "670a4f87-c19b-4217-9a62-f1b9d6061b0c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1d783e49-ba8f-4028-87b7-ac51e70e6efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "a3e6c8a6-4a90-46dc-b329-7348b961b745",
        "cursor": {
          "ref": "110dbf3c-ffe8-4527-b3d2-0339fcb7f7eb",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f8e8be4b-c155-4af9-b3d7-ec516198535f"
        },
        "item": {
          "id": "a3e6c8a6-4a90-46dc-b329-7348b961b745",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f0798a16-cfb9-4952-9e8a-de22bf6f1839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "df0c07e8-95ec-4101-8b48-c4ab3699caf5",
        "cursor": {
          "ref": "4678256b-97ad-4f45-a4c4-f64024201513",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "cff9e4cc-07b0-4797-a1a4-d45abe3016e3"
        },
        "item": {
          "id": "df0c07e8-95ec-4101-8b48-c4ab3699caf5",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "30995c2d-6686-4a22-9e99-b9a9db06fef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "d651503b-03b5-4056-b420-c82ae66217d8",
        "cursor": {
          "ref": "89b647e3-c654-4dee-844d-139cc3d7db0f",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1af87663-86d0-4fb5-8dd4-b1a789c6b082"
        },
        "item": {
          "id": "d651503b-03b5-4056-b420-c82ae66217d8",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "fd5d67af-6dda-4f9e-88b1-86bf38b53775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "7533ddb3-0ab0-4492-9297-ddef6d9aec4a",
        "cursor": {
          "ref": "6b0e0207-7106-4c20-be7c-65835a373882",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "609977d8-767f-4004-8ee3-0acc1a40650b"
        },
        "item": {
          "id": "7533ddb3-0ab0-4492-9297-ddef6d9aec4a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a91111e6-53de-46bc-b1f8-5a4a00783771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "57002378-8090-4c68-b55c-e0b430804528",
        "cursor": {
          "ref": "b6432562-5cda-4fa9-b051-18f199f716ef",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3875b552-9bff-47e7-9284-69d5c1a69af1"
        },
        "item": {
          "id": "57002378-8090-4c68-b55c-e0b430804528",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0a1e70ac-90ac-4e79-ab5d-db0aa038f2b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a95560-c33f-43b6-a64d-7e88056992d7",
        "cursor": {
          "ref": "edad4de8-ff4d-402b-9c16-aa258f412bcf",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a16785df-aee7-48e4-8ff5-cdecacc7d5c9"
        },
        "item": {
          "id": "28a95560-c33f-43b6-a64d-7e88056992d7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "651a60ae-f61f-4ef8-b7a7-fe6b842bd0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd289bf8-ceb4-45b3-9639-b19c1b45cce2",
        "cursor": {
          "ref": "a7bcb9be-5a7e-4ed4-8e1e-f6e51bf59f13",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6f5b9b7e-de46-4a4c-857e-5a2a5851ae5d"
        },
        "item": {
          "id": "bd289bf8-ceb4-45b3-9639-b19c1b45cce2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f8aa2e69-b2db-48d1-998f-ce6ae5a95b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07cfce6f-1f60-4cba-a32d-591286412859",
        "cursor": {
          "ref": "de39040a-46b5-43f5-8ac6-4d287fd39b6e",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "286a4e7d-bb4d-4b77-907d-0e29c8705b08"
        },
        "item": {
          "id": "07cfce6f-1f60-4cba-a32d-591286412859",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "30cb36ef-afab-4e54-930a-6c9dd3d478e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc4becf-9b25-4629-bb83-3cec51d7494e",
        "cursor": {
          "ref": "65a06e18-129e-41c0-a893-eff0b2a7b5b5",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "79929404-530f-4966-9383-2f10737aff4c"
        },
        "item": {
          "id": "ffc4becf-9b25-4629-bb83-3cec51d7494e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "97fb9eff-fa12-4d68-b7bc-858494286245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e9ce2d-e257-4c5f-af21-3e7c39f7d2bb",
        "cursor": {
          "ref": "860ec57c-2f09-41a5-b411-7140138b2ce3",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "eb22aa48-728c-4b92-8e5c-14c1ba1d66c6"
        },
        "item": {
          "id": "03e9ce2d-e257-4c5f-af21-3e7c39f7d2bb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "93a3362f-01a3-41fe-9cb8-432028d9e9c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69c8d98-bfd8-46db-9be5-fd34bd30e6cd",
        "cursor": {
          "ref": "2182c0b4-3a6f-430f-8be4-575ae92844aa",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "48b6f370-c361-4229-8ab6-09b41f3155fb"
        },
        "item": {
          "id": "a69c8d98-bfd8-46db-9be5-fd34bd30e6cd",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3dbf5da4-ba16-4f31-a9fa-03e315fdf7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c5bc42-71ab-4268-aa82-a20d64dbaceb",
        "cursor": {
          "ref": "c9e2353c-34e4-41a4-b57b-a802d9a300be",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4281d0d4-789c-4849-adac-08b3a19615d7"
        },
        "item": {
          "id": "e1c5bc42-71ab-4268-aa82-a20d64dbaceb",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "00a53a85-8e4d-48e5-8e50-95d8528a44af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d5a6b8-e155-490c-8a2c-34aa0565c0d8",
        "cursor": {
          "ref": "b50d8518-e06c-4b1e-b828-a000806bf510",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8dc603a0-289a-4d87-9fdf-d056e2ef4df7"
        },
        "item": {
          "id": "22d5a6b8-e155-490c-8a2c-34aa0565c0d8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1d1ac26e-c8b4-4758-a040-9d20e63fa783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed15cedf-9b14-4c52-a880-4a8884bd86c8",
        "cursor": {
          "ref": "aa95f878-fc78-4182-a35b-ca57d2505c32",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8e4d3672-1ac0-432a-91e0-de66f357038a"
        },
        "item": {
          "id": "ed15cedf-9b14-4c52-a880-4a8884bd86c8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d69dde6d-d2f0-42f4-86e1-01cf8f4b4106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348aad43-1dc8-4b0a-815e-a684452a1f94",
        "cursor": {
          "ref": "705bb77e-5b9b-4eed-a508-02d887a1aa9f",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b07d2be2-23bb-49a7-9a37-714671fc124d"
        },
        "item": {
          "id": "348aad43-1dc8-4b0a-815e-a684452a1f94",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3cea12c9-c954-4bdc-b95c-d9bc1d81d93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71f0670-5cf7-4cf1-8560-1cb1846e8eb6",
        "cursor": {
          "ref": "2d247c93-86cb-449b-ab3d-6e168c768fec",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "83765ca2-1d8b-4fdd-bcc8-13fc8bdfbd9b"
        },
        "item": {
          "id": "d71f0670-5cf7-4cf1-8560-1cb1846e8eb6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "dbfc4d29-555e-4191-8fb8-97cb68951356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de25dfe0-18c6-452a-875d-e95b7b86469c",
        "cursor": {
          "ref": "ca615538-4888-4ece-9242-4e66957b8185",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "57a8a5de-53a3-45da-a9a6-21993ae4fb1d"
        },
        "item": {
          "id": "de25dfe0-18c6-452a-875d-e95b7b86469c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5f704ba6-1462-4416-90a0-b9c4aae2ea7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e232be-5db9-48c9-b542-7132a3b609e7",
        "cursor": {
          "ref": "ab283b1d-9aad-40b8-812e-582e5375b8d1",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3524daf9-90e3-4011-8662-71904f80fd50"
        },
        "item": {
          "id": "c5e232be-5db9-48c9-b542-7132a3b609e7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b39bcdb8-26dc-4391-8e57-41f79d416d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af3c901-9bab-4a5a-bc53-b5954d298837",
        "cursor": {
          "ref": "19f7ec1c-7fb6-4203-b6bd-7f96d4396865",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ea6e0204-bc11-4c70-85fb-c338b45124e9"
        },
        "item": {
          "id": "2af3c901-9bab-4a5a-bc53-b5954d298837",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "eb90d0d1-6a81-4de9-b073-78506d8d5049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3109f1ea-cc3e-4f70-a96c-e4de700627d5",
        "cursor": {
          "ref": "e97f7f2f-74cf-45e4-a51f-e65682db188e",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6f7175ca-4913-4cab-8a5d-fbd0cffc8f7a"
        },
        "item": {
          "id": "3109f1ea-cc3e-4f70-a96c-e4de700627d5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "aa3b4c2c-2f21-4153-8ad2-9138c379ffef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6569f0a-a081-4251-b166-c82ce7c0c846",
        "cursor": {
          "ref": "4a075518-7edd-4939-bc50-92d49fa5e5ff",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "26b971ac-927b-4556-bd19-cb013f7a771f"
        },
        "item": {
          "id": "a6569f0a-a081-4251-b166-c82ce7c0c846",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ab82e783-b592-4005-967c-29c6f676e212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867f7ff1-8193-49da-b162-c07aef5da88c",
        "cursor": {
          "ref": "ee7c8a6c-05c6-40a0-83a6-df18ac62bc2f",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7d776e9b-24e0-4471-b0b1-fdac06d5d302"
        },
        "item": {
          "id": "867f7ff1-8193-49da-b162-c07aef5da88c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b847d8b1-a20d-4890-b7f9-1e6c943abda6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77fe1fb9-aef4-43fb-9d1e-eaddba42f40c",
        "cursor": {
          "ref": "c3331921-3cc0-4d09-b9d0-91c96e782e0c",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "109c7bcc-970b-49de-a93f-8649a223ec0f"
        },
        "item": {
          "id": "77fe1fb9-aef4-43fb-9d1e-eaddba42f40c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9ee43dae-f88e-4ea5-98be-db940bbda444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62670ca-3f4f-43c4-8599-3ce4aac6490c",
        "cursor": {
          "ref": "34d126c6-374a-48bc-982c-a1e0a92ab171",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5e849070-a1ff-4cd2-a38e-c636138bac1e"
        },
        "item": {
          "id": "f62670ca-3f4f-43c4-8599-3ce4aac6490c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0ed82ba2-e91f-4351-a361-727de5109474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81e3fa0-3700-4b7a-9108-e6529f2d287a",
        "cursor": {
          "ref": "1f538f6b-a416-4507-9504-d9f6d323c542",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5c639c23-f328-4723-bbc7-ce91a25f9ba3"
        },
        "item": {
          "id": "d81e3fa0-3700-4b7a-9108-e6529f2d287a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7edd8ecc-a16e-4047-b0d2-21f9f7808c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4f4f0f-7032-46d7-8bd7-93bab1ed2eb6",
        "cursor": {
          "ref": "d63233fc-975d-4756-9890-5e9f8e15a758",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7843c388-d406-400d-b31e-1c1bb67cfec5"
        },
        "item": {
          "id": "fd4f4f0f-7032-46d7-8bd7-93bab1ed2eb6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "05b8451a-740d-4b97-a95c-a5d307da7baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53308768-4fe7-48f0-a60f-2c667d9c3d0b",
        "cursor": {
          "ref": "fb090d5e-3c2f-46f0-bf9d-ed238f3af01c",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ad734268-be36-4920-a7b9-f6f8a3c417c6"
        },
        "item": {
          "id": "53308768-4fe7-48f0-a60f-2c667d9c3d0b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cd0fbb0e-9fc0-41d9-8db3-df55673191b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e81cff-69f2-42d1-81e2-98609e806999",
        "cursor": {
          "ref": "24e4a9d9-1f29-4007-b1e8-39c7308ba3cb",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4bc5ee51-c627-47ec-8b2c-562213cac5fa"
        },
        "item": {
          "id": "e0e81cff-69f2-42d1-81e2-98609e806999",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "70cff4f3-115a-49b0-a571-1a1c77104b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b9e88c-67d6-4e9a-af2a-0ecae2855f90",
        "cursor": {
          "ref": "c56c1df5-cd6e-46ac-abe2-063b6a100098",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7e5e9eaa-390a-464b-bd87-f7d097a3ba34"
        },
        "item": {
          "id": "35b9e88c-67d6-4e9a-af2a-0ecae2855f90",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bc2767c6-49db-47ed-a3af-ddeffaaaea22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f021d18-c642-46ad-82c3-b29bf149de50",
        "cursor": {
          "ref": "105bf194-a342-4782-9a28-342213fa1909",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "873ee10f-c1ae-44f5-8c40-b9d2a41e03b9"
        },
        "item": {
          "id": "0f021d18-c642-46ad-82c3-b29bf149de50",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d4d51321-d792-4fe8-a3fa-9c46312b665f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75afc6ff-0f7b-4e8e-b5e7-dbbc3aa404b7",
        "cursor": {
          "ref": "be1ab484-f387-4fdf-aa44-a0ee79719bf1",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3089ae48-61af-4078-934b-cfc8a9c9ddc5"
        },
        "item": {
          "id": "75afc6ff-0f7b-4e8e-b5e7-dbbc3aa404b7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "dd2463db-1459-4490-a9fc-9d3d0be154c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13683e9-5c89-447b-8e21-4efd1e257546",
        "cursor": {
          "ref": "ae2feb1f-a7e7-4a3e-abf6-3fb4f0abf02e",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3060d920-7e41-430d-be31-292229476173"
        },
        "item": {
          "id": "e13683e9-5c89-447b-8e21-4efd1e257546",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "73847b1d-ee03-4ea1-983d-570bceb387f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552f7e91-d9ff-41b6-9089-2379ce0040ab",
        "cursor": {
          "ref": "8230f036-7890-4a4c-bf87-80688fc1c31b",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a0601616-7aa4-453d-9f2e-ce9a2666e9f8"
        },
        "item": {
          "id": "552f7e91-d9ff-41b6-9089-2379ce0040ab",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "05e8ce90-1d15-4006-b7e7-2eb7a2ec98bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b95258-43a7-42d0-a464-bad0d6547ab6",
        "cursor": {
          "ref": "fb5081ad-14b0-450f-ac5f-9f5e7eb2bc77",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2d8c8033-2c9c-4809-902b-f03106dfc35b"
        },
        "item": {
          "id": "76b95258-43a7-42d0-a464-bad0d6547ab6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6dd1fb21-6a75-427e-a715-8b1104df8c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193f20fd-e1e7-4746-af68-86fa353cf2e2",
        "cursor": {
          "ref": "22b8a0fe-447d-4958-b3c9-e6e3b707dcad",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6ea38ed1-cfb2-471b-84a4-71349f0d5b72"
        },
        "item": {
          "id": "193f20fd-e1e7-4746-af68-86fa353cf2e2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8431a3a8-a0cd-4138-af01-25e820f1b5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e27660-b6b5-47ff-bef2-82c16111bfcc",
        "cursor": {
          "ref": "f89f6a9e-4130-45cd-901a-86b640f533d0",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f46be61d-84b7-4ce2-b74d-64a4a3d8dded"
        },
        "item": {
          "id": "e3e27660-b6b5-47ff-bef2-82c16111bfcc",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "4e819573-f2b1-4538-9e43-0824fcf7e0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd72f52-cfc8-4f08-8f94-7aa1b2f007a8",
        "cursor": {
          "ref": "568db723-8f03-4370-8007-421490652237",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "bd174df8-478d-4ddc-9a22-b8f402660fbf"
        },
        "item": {
          "id": "4bd72f52-cfc8-4f08-8f94-7aa1b2f007a8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "dd81bc25-7f60-415f-8731-f9e48d60ad53",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c20a7e8-811e-465e-969e-6072ebc01640",
        "cursor": {
          "ref": "113864a0-6605-49cd-817a-787878f4c778",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e24daf13-bb71-4687-8d8c-a29893834c6e"
        },
        "item": {
          "id": "5c20a7e8-811e-465e-969e-6072ebc01640",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "72359bb0-a8e3-4897-a721-ccc95d9ac805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b7aadb-39e1-4624-83ac-e0c77f6aea67",
        "cursor": {
          "ref": "e4163631-817a-424b-9934-81d855fb8929",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "385446a2-4c2e-4ad1-81d1-197e3b8fdbbe"
        },
        "item": {
          "id": "59b7aadb-39e1-4624-83ac-e0c77f6aea67",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cb2e2d88-7935-410a-aa21-4139baeca846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4edcf995-3107-4fa8-b76c-71e4692d2653",
        "cursor": {
          "ref": "6de0eeae-0ca6-4596-955a-bac473542107",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7bd32628-e300-470f-b5ed-a1f724be8711"
        },
        "item": {
          "id": "4edcf995-3107-4fa8-b76c-71e4692d2653",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7268a5d5-3f7e-429d-be81-9f9e4d917fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d99123-3fd2-4642-81bd-6a2c69301498",
        "cursor": {
          "ref": "32a1836f-e2e7-4cc5-ac81-8864e41586e4",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b4530c15-ecd0-4764-abcd-f4b473ed51ba"
        },
        "item": {
          "id": "42d99123-3fd2-4642-81bd-6a2c69301498",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "fba3b0bc-3eee-4e03-ba0e-f5abe73878f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f392ebcf-9f3b-4b9d-ac7c-2f1b672ab680",
        "cursor": {
          "ref": "4ae80c09-3cfb-47ac-a84d-3b14ac127e6b",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "eb440345-c29a-4262-b266-01da85f090eb"
        },
        "item": {
          "id": "f392ebcf-9f3b-4b9d-ac7c-2f1b672ab680",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6f16f104-394d-48a0-817f-3c599cc41aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22807f0f-4d83-4a73-892c-108cde7ef303",
        "cursor": {
          "ref": "17238589-3546-40a9-aede-7a6fdc2981dd",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "80e3b2a4-17f9-47e5-b042-2511c1adb30d"
        },
        "item": {
          "id": "22807f0f-4d83-4a73-892c-108cde7ef303",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b8558e9c-6319-46c9-ab7d-76eb9b1d1f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "200b2765-ee54-44e1-9408-1563916d4a9d",
        "cursor": {
          "ref": "7900f768-5a38-43f3-af8b-335ea85c76be",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "49b3fb27-7459-4319-930b-5d55b95d9ff9"
        },
        "item": {
          "id": "200b2765-ee54-44e1-9408-1563916d4a9d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "993c8af4-034b-4e31-a5d3-2b038d1644a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c4570f-fa04-4358-968b-397ddee16522",
        "cursor": {
          "ref": "e35c8702-9eba-4046-ac80-48156dad1f92",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a4e8742d-0500-4171-8811-ece863598f83"
        },
        "item": {
          "id": "06c4570f-fa04-4358-968b-397ddee16522",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "09e887c8-b678-4441-9437-783292f93b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62659fc8-9ab4-4d5b-9d4f-33beb573fc07",
        "cursor": {
          "ref": "427cb587-442e-4a44-94fc-d3f4677822fa",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4dd38ec7-5423-4dfe-b895-92224172469e"
        },
        "item": {
          "id": "62659fc8-9ab4-4d5b-9d4f-33beb573fc07",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b72b5988-6e55-4955-809d-d8e365b89650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c398665-c334-45fb-9093-c0385b5f253a",
        "cursor": {
          "ref": "790b5f68-db87-4ec9-85ad-54e62a5c351e",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "bce9db36-f504-43e1-b493-1f802a6841c6"
        },
        "item": {
          "id": "4c398665-c334-45fb-9093-c0385b5f253a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "30dcf8bd-936b-4343-9a91-eaa0fe5ecffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ac9876-9e86-4380-8db1-e210c9084855",
        "cursor": {
          "ref": "ca08103a-fbc7-4ad4-b371-19a84b002365",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8d311f5c-ae86-4802-bd7b-98c3749b3f9e"
        },
        "item": {
          "id": "78ac9876-9e86-4380-8db1-e210c9084855",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "441c56be-3a25-411e-8ee5-abc0c257cfe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee952b5a-6f22-4015-87b7-6b727e5ba56d",
        "cursor": {
          "ref": "d8731a64-e93f-4e0a-8813-06dab95c62a1",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0fe84885-bf28-4fef-af95-fb3ff22dfc2e"
        },
        "item": {
          "id": "ee952b5a-6f22-4015-87b7-6b727e5ba56d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "cb51046f-ddf0-4bb8-986d-f74b57e6a85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0d4d21-f29d-402c-84b6-5bc7ff0460f3",
        "cursor": {
          "ref": "fbf76bca-6264-4841-aa23-28b432c77086",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "efa244c7-fd9c-4019-9a79-f46f41a5b936"
        },
        "item": {
          "id": "dd0d4d21-f29d-402c-84b6-5bc7ff0460f3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "10c8489b-70ad-484d-85ed-a02a8233c03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41acb1c8-0969-4bf3-bd61-1caba5a5e667",
        "cursor": {
          "ref": "0daf888b-0c12-451a-a098-194861178bd0",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "0ee226a8-f48a-4975-899c-4133032cc89e"
        },
        "item": {
          "id": "41acb1c8-0969-4bf3-bd61-1caba5a5e667",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4df845c8-fd67-48ab-91d4-8b74d1e3954f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ccf5273-4c86-4cb5-b569-58c77db4608e",
        "cursor": {
          "ref": "8bd7fede-a48f-44b2-b84e-b035d7e29264",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0ae4c8b7-acd6-43f9-8c8f-ca8455ea4b1a"
        },
        "item": {
          "id": "8ccf5273-4c86-4cb5-b569-58c77db4608e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d900ded9-bb01-4e61-960c-059f5065eecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "200fe758-da60-4b10-be7d-26a8bea36871",
        "cursor": {
          "ref": "7b19d208-bcfb-45b5-affa-163f80f3c705",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1eb2b7da-98c7-4a23-a17f-7284212ce13b"
        },
        "item": {
          "id": "200fe758-da60-4b10-be7d-26a8bea36871",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8db26688-d248-4627-adae-36d3aa6cce71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d0e17ab-700f-4e79-a063-a821a392c939",
        "cursor": {
          "ref": "48648646-6262-4b25-a241-e0a2d73bbad6",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "53878ed0-f33a-41e2-ad2b-c6b9c3c4ff2a"
        },
        "item": {
          "id": "1d0e17ab-700f-4e79-a063-a821a392c939",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bc69b7b9-5417-4688-b7f7-a394eb49a093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4afa77b6-65fc-4cb0-930e-e8d9320734b3",
        "cursor": {
          "ref": "240d6077-bcd8-4fd5-a778-c1f0ca493d41",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c056b44c-f244-47fc-968c-230cdb2543d5"
        },
        "item": {
          "id": "4afa77b6-65fc-4cb0-930e-e8d9320734b3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "aef46e3c-b4c0-4735-a588-1cd2b465b672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f7e8cc5-fa56-4abd-9eb7-96e6fd32ba9c",
        "cursor": {
          "ref": "7e0cea72-1531-4dbc-996c-b9e5b3f1dc4d",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2f4cfa0a-419c-418a-986b-23041c04d3e6"
        },
        "item": {
          "id": "3f7e8cc5-fa56-4abd-9eb7-96e6fd32ba9c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "64076840-40e9-485f-815d-5a63724b4fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101b6cae-a100-4943-bff4-fdcbc8ba6bbc",
        "cursor": {
          "ref": "15fa0045-c34f-4e0d-9182-e70126fe6913",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e280983a-d592-415c-9699-e658a159a5ab"
        },
        "item": {
          "id": "101b6cae-a100-4943-bff4-fdcbc8ba6bbc",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "bc5f5091-9c3a-4ab8-9a28-d14f3a6e91ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4e3625-c53c-4ac1-99c4-5acf46116c20",
        "cursor": {
          "ref": "ffdeb1d9-9dea-4816-be60-5f553aa3ae31",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ea112368-a17a-4be6-b71a-e9587a893f85"
        },
        "item": {
          "id": "bc4e3625-c53c-4ac1-99c4-5acf46116c20",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "194ce0d0-f85d-4cfa-8860-042fd37ad95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d938633-3ec9-471c-b9a4-f52b6921e677",
        "cursor": {
          "ref": "04f64bb7-dd96-4449-a6ed-6b9187783a80",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "490e74eb-ad54-453f-af42-9768f3987b8a"
        },
        "item": {
          "id": "8d938633-3ec9-471c-b9a4-f52b6921e677",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b1aa4dc7-a2b8-4ebb-af86-ee1f22465ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4070423-f545-4172-9c45-c4062a4ffded",
        "cursor": {
          "ref": "1d69e6e6-30ef-4584-bf1b-6d07e4b68c90",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8b3604f3-8953-4d76-a252-2a946c4beb70"
        },
        "item": {
          "id": "b4070423-f545-4172-9c45-c4062a4ffded",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "82a5baaf-2105-429b-a274-4ef35251e9ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b1b1bc-e2b8-4737-9057-552eb441f961",
        "cursor": {
          "ref": "9bb62966-1abc-411c-b533-31a3bd7c7d7f",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "24a3f4ff-5eb3-489b-8ade-1500e3643a3d"
        },
        "item": {
          "id": "91b1b1bc-e2b8-4737-9057-552eb441f961",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "bd5addf1-b826-495d-a477-ffefa2546ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0573cbab-36c7-439a-afa0-6575b702f221",
        "cursor": {
          "ref": "8089eb4d-6087-49c8-bef4-d3b40b93d289",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "24ebbe53-da53-4d87-b8dd-07c4839d34f3"
        },
        "item": {
          "id": "0573cbab-36c7-439a-afa0-6575b702f221",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0cdcec04-e60e-45e5-aba3-eddd428b9a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d1f1f6-ff13-49d2-b247-9c8939f834e3",
        "cursor": {
          "ref": "2afa2189-7cd8-4f29-b7c3-bd78a7ede556",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "6df4ba3c-f3cf-4c11-a4b8-c28fa0f03396"
        },
        "item": {
          "id": "11d1f1f6-ff13-49d2-b247-9c8939f834e3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1281dba5-803d-4924-b617-d3c9e4cc1e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd977fe-399f-4ed4-a8f9-acdd0e3d06f4",
        "cursor": {
          "ref": "30faf729-63bf-457b-afe5-aa3013bda762",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "424a5ff0-c75a-452d-8df5-617c6adfdcc3"
        },
        "item": {
          "id": "3fd977fe-399f-4ed4-a8f9-acdd0e3d06f4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9cafc427-17d0-47a5-bef8-bfb18bd47835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae9b592-60ec-4e58-bfd3-cc1e2b8744c6",
        "cursor": {
          "ref": "a2c47d64-4736-482b-b1e5-c651c396706a",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "da82c500-8c88-4787-bfb7-ebd883bb51df"
        },
        "item": {
          "id": "6ae9b592-60ec-4e58-bfd3-cc1e2b8744c6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e1b5f6c4-fcbe-4bc3-bf2a-2cac9c5fb227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1c9f08-aafa-4d07-b88b-d28eaf1f144a",
        "cursor": {
          "ref": "1ae4a2f3-ba7c-4393-a674-739191650072",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5651c58c-af7c-4950-9a82-8797a0c0eff5"
        },
        "item": {
          "id": "2c1c9f08-aafa-4d07-b88b-d28eaf1f144a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6e306d96-61dd-4228-a8ae-302f9493a8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21618d58-e63e-4401-b04e-9bb725159d3f",
        "cursor": {
          "ref": "03a96253-ff16-49f7-9758-1f87ce0e0226",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e4fd59ac-adf9-4c3a-88bd-7682b87c4adb"
        },
        "item": {
          "id": "21618d58-e63e-4401-b04e-9bb725159d3f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ddea183b-1080-497a-92d9-964cf3517ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e22d04-376c-450d-9fb5-d9549efcd5c9",
        "cursor": {
          "ref": "587fc977-0466-4fb2-806e-39977e884bd8",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "395c0a1a-a30b-4be1-bc81-e6f719d128eb"
        },
        "item": {
          "id": "94e22d04-376c-450d-9fb5-d9549efcd5c9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2ddabfad-e238-4268-accb-e3983502327c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8420057-755f-460f-b501-7149c28e4707",
        "cursor": {
          "ref": "5ceb197d-abb8-43a4-b38b-1aeab4df87d3",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c505ce6b-4dfe-46cf-862d-50c2b91daf1e"
        },
        "item": {
          "id": "b8420057-755f-460f-b501-7149c28e4707",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "79984d69-ef2a-4602-9c10-47c4b10df94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3c20f1-83ae-4950-aa70-3f3c9b635d0e",
        "cursor": {
          "ref": "fa4e495c-788f-445c-986e-e2736b741439",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "670bfa07-005a-4b44-a0e3-eb78a95472c5"
        },
        "item": {
          "id": "4c3c20f1-83ae-4950-aa70-3f3c9b635d0e",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b389e561-f35d-4ab1-8c36-05e9a524686b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "819a3f49-540d-4d0a-bd64-8e978c208062",
        "cursor": {
          "ref": "72059051-8bb5-44df-9774-0ab2eca01dee",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "41999614-3493-4c35-acf3-0227ad2c70be"
        },
        "item": {
          "id": "819a3f49-540d-4d0a-bd64-8e978c208062",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "29ec7d44-5d28-4a69-8a80-27d21c139bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c8eeff-5742-48ef-8388-8e746d0f38fa",
        "cursor": {
          "ref": "0321dbc4-1a18-4bdb-87f5-620ff38cac79",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "75f1b412-0b9d-4412-ab63-9df7f06b924e"
        },
        "item": {
          "id": "e4c8eeff-5742-48ef-8388-8e746d0f38fa",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "923005d7-426c-402b-a583-ce58fd4716ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64932b7-7a15-4838-89d3-19f34b1fbb14",
        "cursor": {
          "ref": "012a9ea8-5679-4f16-87f7-c34765b69c57",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "908b43bd-1c9b-4519-ac92-9b7b74797f2e"
        },
        "item": {
          "id": "b64932b7-7a15-4838-89d3-19f34b1fbb14",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "9dab319d-e33f-4641-ac9e-02c91700b69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50f1d41-996f-4087-b22f-f8c0824a4d15",
        "cursor": {
          "ref": "a345df7b-902c-4cc0-81b7-d20db4bc02db",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "182dfe26-562f-420f-9159-2301abdc8283"
        },
        "item": {
          "id": "d50f1d41-996f-4087-b22f-f8c0824a4d15",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "406c8a10-cbe5-4fad-91fa-2dc052743bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08b259f-cef5-4c9c-9489-d0e57e6c7fdf",
        "cursor": {
          "ref": "07153058-b9d3-47b9-95c9-e4e3ed8457b4",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7595428d-9509-4297-9dac-21f0875c6c23"
        },
        "item": {
          "id": "a08b259f-cef5-4c9c-9489-d0e57e6c7fdf",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "81f67c61-ea04-4307-8232-304f4bdf3cf4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6d6913-9087-4cf0-b781-be8935b294f1",
        "cursor": {
          "ref": "7aa250b3-0c98-421c-8d7d-f72bbee5dc55",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6dffbb39-03a4-4dd3-bb25-2e73e1c69c54"
        },
        "item": {
          "id": "4d6d6913-9087-4cf0-b781-be8935b294f1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "dcf24136-db0d-4530-9ac0-c4557488a1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13036ee6-3627-4c8b-a8b9-25ea9b78617a",
        "cursor": {
          "ref": "f9e11404-27f3-4567-ad9a-838242841771",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a16697f4-f39d-4bd0-b333-0c961543101d"
        },
        "item": {
          "id": "13036ee6-3627-4c8b-a8b9-25ea9b78617a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d193b8db-b9f2-4559-b9f3-8909d6e8423d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f907cc-8d0b-4405-8fa4-3ca6d04df55f",
        "cursor": {
          "ref": "76525bb9-1eba-43e2-85b5-6121de4dd795",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e4016bd1-71d6-436c-b217-86cbb9cb79db"
        },
        "item": {
          "id": "03f907cc-8d0b-4405-8fa4-3ca6d04df55f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2fa1e55a-687c-4c78-ba81-8161b6da17ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e390d7-db86-4c7b-af69-ae8365d8844a",
        "cursor": {
          "ref": "7197b488-c861-4979-9f0d-699766045934",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8951236e-9a9a-4ce0-b0a6-364678821b79"
        },
        "item": {
          "id": "c1e390d7-db86-4c7b-af69-ae8365d8844a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7cf5e051-ddf2-46ad-b627-3530389e2a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f92fd60-cc39-45b9-b94b-5a19357868f7",
        "cursor": {
          "ref": "9fb5c07a-c7cd-4a80-8e49-2ac5a31f2f7c",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "47286108-3b46-4ee0-8434-cde400b924fe"
        },
        "item": {
          "id": "6f92fd60-cc39-45b9-b94b-5a19357868f7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "30c79273-f5b3-4a0e-bf2c-e9a69a7bc880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3b7507-fbb1-48b5-ace6-1732fc90d0a9",
        "cursor": {
          "ref": "da23d176-9c69-49f7-947f-05835ec24557",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c88ba34d-be6c-4560-804a-98378c7f9ee1"
        },
        "item": {
          "id": "4a3b7507-fbb1-48b5-ace6-1732fc90d0a9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c4f760ea-d60f-43d5-81bc-00e859808564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66377f6e-6ac0-4c2f-9655-52484113b529",
        "cursor": {
          "ref": "2bce8b06-f15c-4161-9da5-032074219d78",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "265a0a76-a6af-4098-84f4-fe4d7077935d"
        },
        "item": {
          "id": "66377f6e-6ac0-4c2f-9655-52484113b529",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8bb84bbc-7dec-4711-9cd0-a5cb5895fdf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3137fbdc-fbcc-4551-a440-e9fd470daa53",
        "cursor": {
          "ref": "c53ac413-549d-48c4-a90c-f4de25866556",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b975a34e-0c50-4a67-b56f-611049705798"
        },
        "item": {
          "id": "3137fbdc-fbcc-4551-a440-e9fd470daa53",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b80c016f-44a8-42bf-ad08-4b4de1571de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2af0d9a-8385-48db-8624-0f64c6c49c41",
        "cursor": {
          "ref": "b2a605a6-b146-47fe-a868-c10b05cd44d5",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "eebe8ecf-1bde-4f00-bb0e-336841088bf1"
        },
        "item": {
          "id": "a2af0d9a-8385-48db-8624-0f64c6c49c41",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c26239a9-c271-4699-9b8f-a6117e4a335c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21e974b-68da-4ff7-b4c4-bc4d2590dd4f",
        "cursor": {
          "ref": "ef73af7a-43cf-4829-bc6d-7b64d8d829a0",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "613564cc-76a3-4c7f-a625-f69b5b77c0a4"
        },
        "item": {
          "id": "c21e974b-68da-4ff7-b4c4-bc4d2590dd4f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "447ddf05-7ead-4916-9da4-8cf692609152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b8366d-d0fa-4c39-8dde-7b3ced39a3a7",
        "cursor": {
          "ref": "8b1b8e25-196b-49f3-88f6-a4d4a89e796d",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "298d90fd-73b2-4ea0-8f27-07f8de33dd25"
        },
        "item": {
          "id": "76b8366d-d0fa-4c39-8dde-7b3ced39a3a7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b990032a-5bd5-4e21-b112-7974b7a6ce15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a17cc6e-cce7-41c9-a6ff-ed3ccb68ee23",
        "cursor": {
          "ref": "a5ee59f6-1ec6-4a74-ba67-1b57702ef3d0",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "70763f54-88e9-45b7-873a-a4e9434ca61e"
        },
        "item": {
          "id": "9a17cc6e-cce7-41c9-a6ff-ed3ccb68ee23",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ac1af0b7-9f6e-422c-8d3d-e866bf3d0c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56568553-af85-4c77-b15d-e0572198880b",
        "cursor": {
          "ref": "3b015aca-f2de-4b6b-a69b-60bc730309e8",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "681c914f-e781-4b57-871a-4784cc71f3b0"
        },
        "item": {
          "id": "56568553-af85-4c77-b15d-e0572198880b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "17de5ae1-0450-4379-bbe7-bdf1918d35c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33871c76-0ca3-422c-bbe6-cd56e7827c6a",
        "cursor": {
          "ref": "f74f09e0-1411-49d8-93e5-51033358870a",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "efbd1766-cdcc-44fc-8c57-4dd6656aa347"
        },
        "item": {
          "id": "33871c76-0ca3-422c-bbe6-cd56e7827c6a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "067b7ec0-9f2f-425b-bf39-137deaaae4c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a729d5d-9f03-4282-bc6c-60382e6b932d",
        "cursor": {
          "ref": "aee35704-75ad-4476-903f-19bcf085992b",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "fc0da8b4-2e51-4f88-b6bc-7a928f63b7ed"
        },
        "item": {
          "id": "4a729d5d-9f03-4282-bc6c-60382e6b932d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ff50e8f4-62f2-4275-b509-c909ff73ea19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3be6ea4-d95c-4f02-82ce-fed647a3ec1f",
        "cursor": {
          "ref": "f3049cc7-540e-4aab-ae0f-56e7d23e8718",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5cf351e0-1e4b-4dfa-a358-ce7075014481"
        },
        "item": {
          "id": "e3be6ea4-d95c-4f02-82ce-fed647a3ec1f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1c842261-6e3e-46f6-9a3c-8dcf8ebae6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d4ffa2-7bb2-4c60-8793-9f6c98e06fc0",
        "cursor": {
          "ref": "89ed9857-96fb-4682-ac01-50f5109dfbb3",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3330ff58-e88f-4ab0-b38e-b8176ee91ef1"
        },
        "item": {
          "id": "40d4ffa2-7bb2-4c60-8793-9f6c98e06fc0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1e3fec2c-b5fa-48e6-9ff8-d201c668c380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234c2c4e-e2e7-4377-bb2b-20703ccc1e7a",
        "cursor": {
          "ref": "9b9cb63d-10af-4a41-bc01-414f225a7250",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "17bec722-5efd-4672-9347-2d0fba1379d9"
        },
        "item": {
          "id": "234c2c4e-e2e7-4377-bb2b-20703ccc1e7a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "36c2ed64-6101-4e76-820b-3de16ac39151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d887c2-040c-4b8c-84dc-8a2a7ef0df6a",
        "cursor": {
          "ref": "d43754e3-60cb-48dd-ac7a-873a6bdaf399",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "62277084-5b61-4ef6-88b4-f0c1f144a10d"
        },
        "item": {
          "id": "52d887c2-040c-4b8c-84dc-8a2a7ef0df6a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0e32c9fb-0790-4375-be6a-5a8e5aef140f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6cfb83f-0003-46a0-86dc-c0fb08fe6c05",
        "cursor": {
          "ref": "d85b4dd8-b7a7-40cc-a4b4-11516c5c4c1f",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "18ff3283-bcf8-4653-968e-63869812fa5d"
        },
        "item": {
          "id": "f6cfb83f-0003-46a0-86dc-c0fb08fe6c05",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "436c5597-7f09-4f16-b68e-08d0cf14f853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ce05c9-14be-4baf-b69a-00f32a66a531",
        "cursor": {
          "ref": "59ae2512-bf6d-4107-973d-e17e5821c4b5",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b728137b-a78d-454c-88c0-e08f4acb2aad"
        },
        "item": {
          "id": "58ce05c9-14be-4baf-b69a-00f32a66a531",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5ba48e3b-3639-45c4-bdf2-39cb9394e778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c902a3-7df2-44f3-8da4-6f0ac018b975",
        "cursor": {
          "ref": "49363af4-469a-4ab5-b500-1a1c97327cfc",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "6575b1d4-a0bb-4d63-bb3c-b58a7b8c03e8"
        },
        "item": {
          "id": "d3c902a3-7df2-44f3-8da4-6f0ac018b975",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b6e47219-8d67-4c55-97c3-6a54f0467669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422bd522-002e-4ca7-9973-ebed2b99631b",
        "cursor": {
          "ref": "48d78cec-8f9c-4f1b-a325-affcd596cd6f",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "dda3918e-4907-4f55-a73b-3684545831fd"
        },
        "item": {
          "id": "422bd522-002e-4ca7-9973-ebed2b99631b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1f9deb86-bcb2-4b06-b71e-b5a4fb58426e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23ea04b-8c4c-4f8d-b2f0-84c6e13d4d5b",
        "cursor": {
          "ref": "53cd62df-fd4d-4bef-a11e-01b34d1c9dd4",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "026b9308-dc1b-4c29-a790-6dfb3f5d5784"
        },
        "item": {
          "id": "f23ea04b-8c4c-4f8d-b2f0-84c6e13d4d5b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a13309a0-6e5f-486d-8fc1-5b030c24ebce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 204,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2048561a-552d-46c9-be76-96c27ea0f317",
        "cursor": {
          "ref": "b335e7f7-8f98-40c1-9511-4a21fd71cc6f",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7403f97c-35e6-460a-b748-7dcb69db7506"
        },
        "item": {
          "id": "2048561a-552d-46c9-be76-96c27ea0f317",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "fcbcac2f-ac8f-4ad9-b807-d7e4c1cd9fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3715cfc3-5a5e-479e-a36f-b78b0d15d1c6",
        "cursor": {
          "ref": "2c8aa011-0b7b-4430-8a30-f2827eb4385f",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "970d0064-ef35-4e67-8024-90dedc86a7e6"
        },
        "item": {
          "id": "3715cfc3-5a5e-479e-a36f-b78b0d15d1c6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4ba0aaf1-c479-4714-a18e-78c80ade2407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ff17b3-d042-4a55-b168-49c2ada7e4f2",
        "cursor": {
          "ref": "47a38f84-cde1-4f51-8065-e820fbda0c56",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ae6507be-ef78-4a2d-81ff-8334c025681e"
        },
        "item": {
          "id": "15ff17b3-d042-4a55-b168-49c2ada7e4f2",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "23b0a257-9d19-42de-b939-4eab5054641d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d7bda4-4ec0-4e1b-a8e7-d2cae1e3bca3",
        "cursor": {
          "ref": "903a47a3-c08c-4604-99a6-988f70a2bbe3",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7c5fe588-ef8f-4980-974e-435072f3061a"
        },
        "item": {
          "id": "f5d7bda4-4ec0-4e1b-a8e7-d2cae1e3bca3",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4b4509c0-b012-4f60-b639-98e71f8f5518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0e60c1-be13-4442-baaa-be1412c0285e",
        "cursor": {
          "ref": "29cb7c98-8544-4e49-8dc9-484970a1ddb6",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "783d4097-e46f-4170-8478-62c223eb6d3f"
        },
        "item": {
          "id": "bc0e60c1-be13-4442-baaa-be1412c0285e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a96bd850-d52c-4d70-b19c-6726cd465ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39d4c75-a1d0-4f5e-9f2d-b40c4ce951d2",
        "cursor": {
          "ref": "273d047a-324d-48a1-87d2-c4e4de5326bd",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ac81e1af-ef10-44c3-8504-31e2404b91cb"
        },
        "item": {
          "id": "d39d4c75-a1d0-4f5e-9f2d-b40c4ce951d2",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d77798f4-9094-4af0-a55d-75fee3d66c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b6d4a7-e6a9-4ff0-9955-32e54c700982",
        "cursor": {
          "ref": "f1cd0466-4883-4221-8d48-dba268f44da8",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e47b5636-919e-445b-81aa-0371a532109f"
        },
        "item": {
          "id": "a8b6d4a7-e6a9-4ff0-9955-32e54c700982",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2a3f67d5-ed98-441b-93ad-39ab442bbf52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42601e68-1c45-4345-96f2-d96ad1a1a312",
        "cursor": {
          "ref": "48c7f13d-1fbf-4e0a-8939-c9b54497db31",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "4ef998e8-c8b6-46ea-be60-f97c4c116c45"
        },
        "item": {
          "id": "42601e68-1c45-4345-96f2-d96ad1a1a312",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "524ad830-2c25-4478-b143-1529bc84b730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ddc51d-a47f-4eb2-9dda-8fd09b476992",
        "cursor": {
          "ref": "7da38712-652b-4576-bca9-52005a7a23c0",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "cbddc4f8-3685-40c8-b5e7-763fd57523bd"
        },
        "item": {
          "id": "a3ddc51d-a47f-4eb2-9dda-8fd09b476992",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f96fd1c0-1c63-4090-ad0a-ec2155e2b15a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119ca1ae-67d5-419d-b2fa-7bd6a59b65a5",
        "cursor": {
          "ref": "e6d3b3ec-5f3e-4be9-b1b7-d9b63040d8c5",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b82f8748-3f11-43a8-bc0a-773413640618"
        },
        "item": {
          "id": "119ca1ae-67d5-419d-b2fa-7bd6a59b65a5",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9909be6c-e77d-4e9e-b55a-89b0366f070d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1794f698-d8b7-4e20-85d7-1401fabc343a",
        "cursor": {
          "ref": "27666b14-e9d6-4a10-a89c-3b900ab45620",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "905e19a8-f300-4641-b58c-208b4dd2f6d4"
        },
        "item": {
          "id": "1794f698-d8b7-4e20-85d7-1401fabc343a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6913a1cb-1570-4282-a450-d12d9bd6a398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad00045a-f2aa-48cd-b22d-0b32609d1fc3",
        "cursor": {
          "ref": "c9c9800b-ab5a-4888-bcdf-03d5228b5afd",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f158bb6f-203c-46ae-907a-803c581fa07b"
        },
        "item": {
          "id": "ad00045a-f2aa-48cd-b22d-0b32609d1fc3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3c7d43e2-3a27-4994-941d-c59a9325cc9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d142205c-8cba-406a-9a68-8e124a4d5f2a",
        "cursor": {
          "ref": "bdbe0d48-c5ac-4c31-9e0a-d09ea7182329",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2ba9062d-75c6-4c19-a5bd-b237a653a636"
        },
        "item": {
          "id": "d142205c-8cba-406a-9a68-8e124a4d5f2a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d3f73bd5-46fc-41d6-adb7-b24c80d1bd25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3be1475-2ec1-4341-ac82-37d7f8aee5d8",
        "cursor": {
          "ref": "887ec5f0-cfa3-43c3-8828-e572e35b1a65",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0d3d2e7e-749c-4d5a-9356-10bbc53422e9"
        },
        "item": {
          "id": "a3be1475-2ec1-4341-ac82-37d7f8aee5d8",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0eac99da-f5f0-466a-902d-334b4b4744c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6c693f-709f-4338-bf08-07ce8fc99427",
        "cursor": {
          "ref": "935ac57b-05d2-4b2a-aa78-5470ea9ebe82",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "12ea0f8b-45e1-4d35-9583-1a751c95a837"
        },
        "item": {
          "id": "ab6c693f-709f-4338-bf08-07ce8fc99427",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b2efd2fc-5f96-461f-8cff-3cf06387114c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eeb5033-8f5f-4dbc-b27b-c1df6964e713",
        "cursor": {
          "ref": "48c7ec3e-318d-43c8-8c97-826bf48ff50e",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "86a2edb8-9382-48c0-ae7a-b689540a162c"
        },
        "item": {
          "id": "0eeb5033-8f5f-4dbc-b27b-c1df6964e713",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "039b458b-f07d-4de4-bbeb-28e7cc98dad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a83f53-7774-4418-bd4a-ad0c54fe554c",
        "cursor": {
          "ref": "0161d434-f053-48f0-9d37-c05810c17a10",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "864b653f-1939-45d5-93c0-6f940f463805"
        },
        "item": {
          "id": "b6a83f53-7774-4418-bd4a-ad0c54fe554c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "60cd3f01-ea09-4eac-bb4b-0d9c83b0dafe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a357262b-7449-43b2-b4a5-a01350ebc6df",
        "cursor": {
          "ref": "29beb8cd-476e-4735-8dea-6c973e9946a8",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "bdf62c0e-04f1-48d6-965c-58141f493db0"
        },
        "item": {
          "id": "a357262b-7449-43b2-b4a5-a01350ebc6df",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "465c402f-582b-490d-90fc-4accc442474e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8e21c7-c85a-4f53-82e4-908ff250da66",
        "cursor": {
          "ref": "e852ea66-184e-4b4d-bd52-fa292bb5c5da",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e1806ee8-d0ba-4563-ba44-7b5783e64cb8"
        },
        "item": {
          "id": "6a8e21c7-c85a-4f53-82e4-908ff250da66",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "785175cf-cab0-4b9e-bf86-963ef247d2cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d56c33f-8479-4a74-bad2-9535f1d25346",
        "cursor": {
          "ref": "ba7697ba-2851-45db-89b1-e600e9fbc3b1",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "15abe2ef-d09e-4072-880f-3228b6948123"
        },
        "item": {
          "id": "0d56c33f-8479-4a74-bad2-9535f1d25346",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "59ed182b-bca8-48c8-b3ef-31fd675f0781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6056bf-a940-47ef-9dcd-ade66ba9278f",
        "cursor": {
          "ref": "223be504-a2af-4a05-987c-820c80fc7f41",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "024496d1-c287-411b-9285-ee23b6dfa808"
        },
        "item": {
          "id": "4c6056bf-a940-47ef-9dcd-ade66ba9278f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "452ac31e-845b-4dda-9574-ef85bb223d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b640d5b2-9797-485a-ad51-292f0672c911",
        "cursor": {
          "ref": "4a209b12-1c1c-4a5a-9eb7-2b59e7d2dc0d",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "72656aca-da8e-43cd-9a51-77779482e4e7"
        },
        "item": {
          "id": "b640d5b2-9797-485a-ad51-292f0672c911",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "382981b4-0434-4a2f-be81-30bde9e2d74e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f571ba33-8cc8-4441-9c1c-eef9363b4c02",
        "cursor": {
          "ref": "e8c9a1ac-b774-4256-bf78-c24180ed30f5",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ff632cc6-5b72-4825-9ea9-70576e2f9c9e"
        },
        "item": {
          "id": "f571ba33-8cc8-4441-9c1c-eef9363b4c02",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "db29fa30-00b3-4325-9bb2-0eb7eb23f63c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47972a62-3bbc-4bcf-900a-34ff97ca2f9f",
        "cursor": {
          "ref": "05cac3bd-1255-42e6-b534-87aabb41528f",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4b029ef1-6899-4590-a85e-54c4bf344a55"
        },
        "item": {
          "id": "47972a62-3bbc-4bcf-900a-34ff97ca2f9f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c88a6317-160a-474f-8ef1-fdfc7b529f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69e2529-cce6-4c35-9195-f2a08ea8636e",
        "cursor": {
          "ref": "1b3f8be5-117d-47dc-8a35-80e0cd6ffe71",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d911d788-f68b-4d61-8fa2-b63b290fe237"
        },
        "item": {
          "id": "b69e2529-cce6-4c35-9195-f2a08ea8636e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a6a2116d-0c62-4b4f-85a7-48eb667e441b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104a2dec-2027-44ff-ac75-ae72668d2574",
        "cursor": {
          "ref": "687d9226-481e-4d43-9bfc-f21fd2dc64b0",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8f84dd09-b7b7-4fd4-b886-5af0113455ed"
        },
        "item": {
          "id": "104a2dec-2027-44ff-ac75-ae72668d2574",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2deb7c9b-cd3b-4b9a-86d6-c98198bbe5bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db69172b-757a-413f-9df4-ca603da3d096",
        "cursor": {
          "ref": "13b95b39-8fcc-43e3-8a9c-6db10cede0f2",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4f4852a7-1239-4922-9344-ca9421fa08fe"
        },
        "item": {
          "id": "db69172b-757a-413f-9df4-ca603da3d096",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "06ab3a6e-1883-4b61-9e1b-3073de4d78e4",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "d849dedd-303f-4c23-9126-dc30e8a1d248",
        "cursor": {
          "ref": "a56d0f21-5870-44a1-a94a-ff9e490c3307",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "74fa21d1-4456-4c5f-adc3-8b18c844861f"
        },
        "item": {
          "id": "d849dedd-303f-4c23-9126-dc30e8a1d248",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a2cd0878-ab1b-4f0a-8850-e7e8ee863b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7df5224-a2a5-4abc-a5a4-76269242f7fd",
        "cursor": {
          "ref": "3f7ac4d2-f561-42d0-b336-ee298dac634d",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5a1ed49e-cf33-4853-8a53-243e4295412f"
        },
        "item": {
          "id": "d7df5224-a2a5-4abc-a5a4-76269242f7fd",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "36e2b526-1b27-4dbb-a610-9e8e65bd4836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3caa6caf-e16b-4bfa-8090-a3bbc47d2d0b",
        "cursor": {
          "ref": "1ff8591e-2bf5-467e-9566-cbeb066dd54c",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6cb9f623-4b39-43c9-b126-123e156086e1"
        },
        "item": {
          "id": "3caa6caf-e16b-4bfa-8090-a3bbc47d2d0b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f593f52c-78a2-4004-b2bd-c213748979f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c72aafc-b638-4983-819a-8f2908ad88a5",
        "cursor": {
          "ref": "4cf7f377-63cd-4b92-8d6d-5440152b2129",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "34371bcf-83e1-4035-b9ce-3b5e15e4803d"
        },
        "item": {
          "id": "8c72aafc-b638-4983-819a-8f2908ad88a5",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b7b11b36-2f09-41f2-be95-33c4065ac6b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831a54c3-cbc9-4907-892f-25fd02c957af",
        "cursor": {
          "ref": "44cc28e9-8f50-4053-b86d-55e925adc50f",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "2f3d4264-955a-42ad-84f4-392d8fa210c4"
        },
        "item": {
          "id": "831a54c3-cbc9-4907-892f-25fd02c957af",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "fafb43b4-5c14-4d4a-82f4-7cedfb91a93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6731a0-e83d-4cd0-86b8-4784265fab86",
        "cursor": {
          "ref": "32d2b90d-2890-417c-93cf-6fdd2a82b0ac",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "32a6b92d-5824-42f9-a827-64027bc97945"
        },
        "item": {
          "id": "1d6731a0-e83d-4cd0-86b8-4784265fab86",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "cebeb396-cc66-448c-8c34-37b39bff536e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e1b490-5480-4b7f-bb28-6bd036d25c4e",
        "cursor": {
          "ref": "8fd5706e-bbc0-4651-b5e9-6fdb584165b9",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d01f8f25-ab68-44ed-83a8-c112b219baeb"
        },
        "item": {
          "id": "80e1b490-5480-4b7f-bb28-6bd036d25c4e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6d5927e5-ca8a-4805-9ccd-a61e4f25b254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c187a73-aeb1-46c5-8871-9a866538256b",
        "cursor": {
          "ref": "1d845b22-2a19-4058-ae8a-6e05e9230eaa",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "307cb642-1bb7-4833-aea4-109ff694489b"
        },
        "item": {
          "id": "6c187a73-aeb1-46c5-8871-9a866538256b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0a75c39f-19d6-4867-b30f-d2a0a698446b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d7b593-d89b-4d5c-8714-140e1afc3fb2",
        "cursor": {
          "ref": "1fbc03f1-fbc4-45e4-ab55-2cd98593525a",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "7561c44a-cbd9-49ea-b381-4ef686faf6aa"
        },
        "item": {
          "id": "03d7b593-d89b-4d5c-8714-140e1afc3fb2",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "18dd4465-64bf-4ce9-86c1-5333b042497f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0aef6e-d74c-4873-9b70-a04d6963d29c",
        "cursor": {
          "ref": "eeaed929-b475-46ba-89fd-12a1b1d6f5d0",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a7aa8afe-4828-4bc3-a8da-f970fd93989d"
        },
        "item": {
          "id": "7f0aef6e-d74c-4873-9b70-a04d6963d29c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0924874e-3594-447a-b58d-a727ba1a193c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5328a6-0511-43b1-a852-1aaa5a16c4db",
        "cursor": {
          "ref": "ab4f0570-fa85-4346-a02f-5b89a56e2a35",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6087d609-bf22-46e1-bd4a-a3affa578b83"
        },
        "item": {
          "id": "9b5328a6-0511-43b1-a852-1aaa5a16c4db",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "63667c9f-63b8-406e-aa38-c62e319e5707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149f0da5-bf79-4abd-98e4-d54c1ba21f95",
        "cursor": {
          "ref": "18776a18-4431-4b53-8e0d-f93a71829a82",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f77a9cf6-6b74-48f5-b710-209b138d3e29"
        },
        "item": {
          "id": "149f0da5-bf79-4abd-98e4-d54c1ba21f95",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "77e01732-c97e-4b55-ac9d-c2f79ed4b21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf81383-140e-4ddb-90e3-e039e8ee3f49",
        "cursor": {
          "ref": "28b14b17-36da-40d6-9c11-afc09e6a15c6",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "71678532-3184-4dae-92b6-c108c0002b83"
        },
        "item": {
          "id": "4bf81383-140e-4ddb-90e3-e039e8ee3f49",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9ef440c0-e806-4dfa-b589-71f0b90992b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec92f134-43b1-46b6-b496-63aa25028608",
        "cursor": {
          "ref": "a1ac300f-5363-48bb-b672-fa935c536fd4",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7500e803-7352-4427-abc2-24f1f3ed0551"
        },
        "item": {
          "id": "ec92f134-43b1-46b6-b496-63aa25028608",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "942ace8e-8457-4dac-b947-99fdda74c21a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0288bba6-683f-491e-b873-9ca00a7a9437",
        "cursor": {
          "ref": "70ffc894-6afa-4ef7-a5a8-1584be09c56d",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "efd74cee-e3e9-4393-a31b-8c2ce44cea90"
        },
        "item": {
          "id": "0288bba6-683f-491e-b873-9ca00a7a9437",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "89e94bf9-580b-4b4d-a35a-1770bfeb24f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c8a1b8-950d-4c26-b278-fb1ee6299aec",
        "cursor": {
          "ref": "f241ca59-e143-4497-a56e-dca9929a3d2f",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4c92ce41-d089-4752-a601-17c3ffcd9a4b"
        },
        "item": {
          "id": "86c8a1b8-950d-4c26-b278-fb1ee6299aec",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0f3eff25-e9e5-4c40-b75a-2ac466ed3566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a295d23-a85e-4976-9f69-96466b2decd7",
        "cursor": {
          "ref": "b53c2428-21ed-4b84-a7ab-e49fb91edf09",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "bd104de8-dfa7-4142-bd3e-0f1f1f473152"
        },
        "item": {
          "id": "0a295d23-a85e-4976-9f69-96466b2decd7",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f8fbafd4-5df2-41e3-ad6c-5de907d09ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4ae33b-1324-431c-bae1-f09e7a43ff59",
        "cursor": {
          "ref": "70d1b4b2-0bf4-4879-95e8-cebe54ba1f90",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b62d875f-cf52-4122-9f1a-e74a89b651df"
        },
        "item": {
          "id": "9d4ae33b-1324-431c-bae1-f09e7a43ff59",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e6218a44-9d2a-4695-9bb3-6beffc463229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e4d968-3f10-4675-8431-51238ca63c95",
        "cursor": {
          "ref": "45a8daa7-c1f5-451a-951d-1936369e1adb",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ea0a10a6-f3e0-43b6-9683-c657e31bcc3e"
        },
        "item": {
          "id": "c1e4d968-3f10-4675-8431-51238ca63c95",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5fd310c8-f8b2-4a17-a871-a014645acbf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8f0b23-acc8-44d3-8b67-e11271f9ed18",
        "cursor": {
          "ref": "82a46f9c-42d3-4631-9db0-5507934849f9",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7f644e1f-034d-4757-9c0e-862fb125cc8b"
        },
        "item": {
          "id": "ba8f0b23-acc8-44d3-8b67-e11271f9ed18",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5e68e908-c914-40ba-9d42-f2912e8b774d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169cea91-079f-4be7-91bd-76f3763fd5f2",
        "cursor": {
          "ref": "7679579e-3971-4edb-b828-53ccd5b7774c",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "3b13c214-5b4b-4349-941a-4c0dffd92501"
        },
        "item": {
          "id": "169cea91-079f-4be7-91bd-76f3763fd5f2",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "194338a3-2f60-4924-8b20-54f3a45f81a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df84bb4-20cd-4112-b8e1-3e171c0e3d07",
        "cursor": {
          "ref": "59776464-f9f3-47d4-9bd8-e7bd6691a0e6",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "8bc4a387-3829-474f-8be2-1075c8ee3fa1"
        },
        "item": {
          "id": "8df84bb4-20cd-4112-b8e1-3e171c0e3d07",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5471d145-1c1e-4c7e-82f5-f049ee4b4606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2c568d-0807-4de2-896d-c829ec896a09",
        "cursor": {
          "ref": "42c7f0f3-2d13-4988-b72a-cd0e72c56847",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "c80ef4d4-c2ee-4df6-812d-f406e1bf8eb5"
        },
        "item": {
          "id": "cc2c568d-0807-4de2-896d-c829ec896a09",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "bccb6daa-3104-47ca-a52c-d014bdee0d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c50f55-06ed-4bc3-b2a5-d9745fe01145",
        "cursor": {
          "ref": "509fdbd6-3ebe-482a-8020-d5152d1d9776",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "fffed707-3f38-4673-ad53-b11b44e0ebe8"
        },
        "item": {
          "id": "24c50f55-06ed-4bc3-b2a5-d9745fe01145",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "97c71237-16b9-40de-a8f7-51ede32e4c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b02169-1d47-4708-a4eb-1044c512a90d",
        "cursor": {
          "ref": "7650ec4c-7b94-47fe-8d30-0a1fc7e5e570",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "c4e10b05-272c-4a9a-81c5-7690ce7a3256"
        },
        "item": {
          "id": "43b02169-1d47-4708-a4eb-1044c512a90d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7e090e82-bfd3-4782-87e2-1875c21e81a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4caf59c4-c5d2-4fe9-bdc6-da5a9897bf02",
        "cursor": {
          "ref": "90ee9d56-8286-468a-bb0a-3e6342a7e139",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "998f07e7-3838-4285-ad9b-492885e0a65d"
        },
        "item": {
          "id": "4caf59c4-c5d2-4fe9-bdc6-da5a9897bf02",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "72e6e5aa-58ed-4164-a8b5-ede6853ff669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2ee6fe-1e44-4ee3-aab9-d247defd7bbd",
        "cursor": {
          "ref": "44f5e629-10ec-4b59-a648-fc40ecb4aef9",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "b293b037-5a97-4794-860e-cb4bb7c0169c"
        },
        "item": {
          "id": "ce2ee6fe-1e44-4ee3-aab9-d247defd7bbd",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "eb7582d8-0efd-4f27-968e-d09e3a6afd49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175cc324-736d-4770-980a-79f03e9b0e0f",
        "cursor": {
          "ref": "3f97ab37-a1b0-4fc3-af2e-0e4cf8bdf89c",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "0efdf242-d20c-4b26-a674-5e04051af6d4"
        },
        "item": {
          "id": "175cc324-736d-4770-980a-79f03e9b0e0f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "03ad782c-a5da-42b7-8d9e-819f472bcd99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84af96ea-d510-47bb-99f3-bebb1742824a",
        "cursor": {
          "ref": "701c4866-e5c0-4107-9467-05398c22dc85",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "d3b26040-c866-46b8-a005-7f565b58f4cc"
        },
        "item": {
          "id": "84af96ea-d510-47bb-99f3-bebb1742824a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c411a0d4-6a2b-468b-bd95-1329d34a6b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b30d851-7917-401d-b291-b7b03a90505e",
        "cursor": {
          "ref": "81c127b9-b266-460b-b883-7a580b3ee135",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "3807cd2b-e890-465f-9f14-074cf883bb7d"
        },
        "item": {
          "id": "0b30d851-7917-401d-b291-b7b03a90505e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1b143007-2078-44f3-9868-8a82e756b0df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a5268d-d3a3-41cb-8092-9b43c1104a0b",
        "cursor": {
          "ref": "bf1e0e77-a2ee-4752-958e-aa1a3f61a347",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "f9882415-adc2-4d9c-8d2d-e0b6d43f6df7"
        },
        "item": {
          "id": "42a5268d-d3a3-41cb-8092-9b43c1104a0b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c4585844-e405-4170-99a6-95074008e15a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "863ceb6c-9e1e-4707-a1f6-138b68cfe06b",
        "cursor": {
          "ref": "b0312fdc-c2f7-45a9-903b-b80bc880a01f",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "ae5ae913-70d2-413a-aedb-b7c08f06a27f"
        },
        "item": {
          "id": "863ceb6c-9e1e-4707-a1f6-138b68cfe06b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7a0bd135-2abc-4634-8792-81cade5d5cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1a797f-7c0c-4211-8bb8-e2320817a3ba",
        "cursor": {
          "ref": "746f1ed1-9133-40eb-84fc-135fed94bbd3",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "7b4f7788-8b95-4d69-a559-651e30d16e94"
        },
        "item": {
          "id": "0d1a797f-7c0c-4211-8bb8-e2320817a3ba",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "76205ff4-7821-4360-bd82-53f6708853b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816206e4-f74b-473e-8b8e-25d315bedaee",
        "cursor": {
          "ref": "c2b81dd0-2d78-4296-8c22-6a10441581b6",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "67e3f4a0-8999-42f0-949c-a75c2255f750"
        },
        "item": {
          "id": "816206e4-f74b-473e-8b8e-25d315bedaee",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f2299e40-05e7-4d4f-b741-caa1eb023185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbcf5fbb-2337-41c0-8f3a-f494a240f405",
        "cursor": {
          "ref": "9a3a34aa-c5ee-4430-aa93-48c333aac42f",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "320fcc55-5020-4d4c-8e71-5801340d536c"
        },
        "item": {
          "id": "bbcf5fbb-2337-41c0-8f3a-f494a240f405",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "fdb50f82-f285-4cfa-bf7d-8e080d9125b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c29404f-da73-40d7-8cb1-77efb04cc8d2",
        "cursor": {
          "ref": "4c246da3-5623-4065-8355-831d80b002de",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "b5db2bf9-99ba-4194-85e9-d9032ecc0f04"
        },
        "item": {
          "id": "6c29404f-da73-40d7-8cb1-77efb04cc8d2",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b80c95af-34fd-44ff-a024-f60795023db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32911ed5-2e64-4791-bbba-ed594611b1d3",
        "cursor": {
          "ref": "01931eeb-81cd-4aea-8301-1dba979982e7",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "836ddfc6-c536-4160-ba1e-0ab74fd0c527"
        },
        "item": {
          "id": "32911ed5-2e64-4791-bbba-ed594611b1d3",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7c32fe1e-d5a7-429a-8a4d-2d81cdd2ee96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a372d039-d13f-4b55-8f08-ee45eed03316",
        "cursor": {
          "ref": "f9bca303-0428-495b-bc14-1e2f107ff3f8",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "2f0002b2-25ed-436e-8b3a-0488a1264603"
        },
        "item": {
          "id": "a372d039-d13f-4b55-8f08-ee45eed03316",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "6c89108f-1a39-4d1b-bd7e-2db35cbe2a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80191eec-efa6-42fb-bfea-3c99febe6d5d",
        "cursor": {
          "ref": "b0b235a4-314a-40a4-bff1-2ce2097e9f29",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "e5651673-c024-4fbb-af65-1f2892f249cf"
        },
        "item": {
          "id": "80191eec-efa6-42fb-bfea-3c99febe6d5d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "bdd72d98-965e-4a5d-b924-c25bce9f58fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb27978-0f6a-4ab2-b705-fc72e0cf2505",
        "cursor": {
          "ref": "b5c8cc09-9920-478a-afde-cf88049f467d",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "c55cc975-034f-47d9-95b0-af1762122055"
        },
        "item": {
          "id": "3cb27978-0f6a-4ab2-b705-fc72e0cf2505",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "73e39c13-b449-4de8-b039-14b3e0a50eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dba8eec-064d-4c9b-91bf-bffbfdaa6cdb",
        "cursor": {
          "ref": "963e3899-dfac-4ff5-9248-013a89c65da2",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "8fe35619-522c-4423-b25d-ae1cecb6b43e"
        },
        "item": {
          "id": "9dba8eec-064d-4c9b-91bf-bffbfdaa6cdb",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "be3474f5-5dc5-49f1-b65f-444c2c0d3b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9d4aeb-0b11-42af-ade3-27f00a55a6a9",
        "cursor": {
          "ref": "a6406196-22bb-4048-884d-090a57f89b8a",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a597a340-e571-4cf9-a969-6f42ae422675"
        },
        "item": {
          "id": "0f9d4aeb-0b11-42af-ade3-27f00a55a6a9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "39908f39-f9bd-47d7-9eb9-909e5e3fed0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de913b1d-0149-4764-b560-dc502b87addb",
        "cursor": {
          "ref": "5a6ba235-c7bb-48c9-9f13-d810bd3f7be6",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "2a2a6cb9-efb6-4f52-86c7-fcaef7e4b548"
        },
        "item": {
          "id": "de913b1d-0149-4764-b560-dc502b87addb",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b769ef6d-7702-4d2d-aa0c-cac7af3f899b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731761f6-1c01-4e2a-abf9-6ee5430cc27a",
        "cursor": {
          "ref": "5073f7f9-a054-4ea2-875a-9ba913b944a9",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "36055f47-066f-426f-b8af-4d91a2ffcd1d"
        },
        "item": {
          "id": "731761f6-1c01-4e2a-abf9-6ee5430cc27a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8a2f2f47-0665-4455-b7c7-611f39ca139b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d194c4e-71c9-47de-a693-82f79a016a4b",
        "cursor": {
          "ref": "0b104f64-3a8e-4461-8d40-159c4ffa222c",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "42428af5-5069-48a8-81b2-ea35be7f6e6c"
        },
        "item": {
          "id": "8d194c4e-71c9-47de-a693-82f79a016a4b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3c1e266b-f5b4-4b1b-993b-e2ee82d2a7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fffb5066-b175-4e35-a15d-da5eef257b22",
        "cursor": {
          "ref": "5840052f-452e-4b2f-87f1-5333077dbbef",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "f39a3d06-0787-4340-a5f9-d3ea2ec239cb"
        },
        "item": {
          "id": "fffb5066-b175-4e35-a15d-da5eef257b22",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6442c549-25c3-4976-83e1-0a68001c1a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15ae549-158e-4b9c-9eb2-73a434330ee2",
        "cursor": {
          "ref": "5faa0172-5e01-4765-bfa5-379fbe946577",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "be8f36ec-95aa-49cb-8098-02c5e90954d9"
        },
        "item": {
          "id": "c15ae549-158e-4b9c-9eb2-73a434330ee2",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5254eab3-a9ce-4bc6-9d9a-ffa4aaddde5b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46c36f7-c6a6-4be1-ac87-44bdd8d41c97",
        "cursor": {
          "ref": "c9664cd0-86bc-4313-80ff-5b4e5a39b4fb",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "d5c89e65-77cf-4252-b6b1-7ce2dcf2ce43"
        },
        "item": {
          "id": "d46c36f7-c6a6-4be1-ac87-44bdd8d41c97",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "467d725c-742d-4cb3-a486-3524eb6c9b3a",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d658b7-546a-4847-bec8-56a2c1c1621a",
        "cursor": {
          "ref": "51b076fd-73e9-4611-a771-297a11ae42bf",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "54cc1b2a-1330-4dc0-bf98-cb617c557acf"
        },
        "item": {
          "id": "00d658b7-546a-4847-bec8-56a2c1c1621a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "fdfbb109-f18f-460f-b5d8-95386b805acd",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8827804-28c5-4244-a888-5c7bcf4a0320",
        "cursor": {
          "ref": "52ab93e4-de02-41a0-a655-76713e006559",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "9cb607c0-e64b-4648-85c7-383f9fa22316"
        },
        "item": {
          "id": "b8827804-28c5-4244-a888-5c7bcf4a0320",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ccfd8229-d92c-45d1-bcf8-3c1531fe4acb",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "908914e4-9aae-402e-ac7b-134fdcb97567",
        "cursor": {
          "ref": "d6bdd44a-bddb-4894-95e7-7a9333aa6da8",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f19a1974-bf0f-4c52-8449-99ff9965157c"
        },
        "item": {
          "id": "908914e4-9aae-402e-ac7b-134fdcb97567",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "199c27ff-6ac6-4874-b575-03570ec9bcd7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908914e4-9aae-402e-ac7b-134fdcb97567",
        "cursor": {
          "ref": "d6bdd44a-bddb-4894-95e7-7a9333aa6da8",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f19a1974-bf0f-4c52-8449-99ff9965157c"
        },
        "item": {
          "id": "908914e4-9aae-402e-ac7b-134fdcb97567",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "199c27ff-6ac6-4874-b575-03570ec9bcd7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8630ae-df47-47e9-8abb-1411ee90f2e7",
        "cursor": {
          "ref": "9043a126-3188-4220-8712-fe3bebf40f60",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "f52bdac0-9da2-4e10-9fbe-4c2e8124cf6b"
        },
        "item": {
          "id": "2d8630ae-df47-47e9-8abb-1411ee90f2e7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "616e63d5-0529-469a-8e93-16e955d09c16",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03239460-b696-4a10-baa0-d7e1a18557e6",
        "cursor": {
          "ref": "e5f5a94e-963e-46c1-8445-2bb439ce9097",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "6a1b8df6-cbc8-4e9b-b622-d485c6f1bbc9"
        },
        "item": {
          "id": "03239460-b696-4a10-baa0-d7e1a18557e6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "cb73e9f9-94b9-435b-8d76-5ed87f80da8a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}